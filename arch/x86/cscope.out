cscope 15 $HOME/m2s/multi2sim-4.2/src/arch/x86               0000812374
	@asm/asm.c

21 
	~<lib/mh™dÀ/mh™dÀ.h
>

22 
	~<lib/utû/ñf-f‹m©.h
>

23 
	~<lib/utû/li°.h
>

24 
	~<lib/utû/misc.h
>

25 
	~<lib/utû/°rög.h
>

27 
	~"asm.h
"

28 
	~"ö°.h
"

36 
X86Asm
 *
	gx86_asm
;

42 
	#SKIP
 0x0100

	)

45 
	#REG
 0x0200

	)

46 
	#MEM
 0x0400

	)

49 
	#INDEX
 0x1000

	)

52 
	#IB
 0x2000

	)

53 
	#IW
 0x4000

	)

54 
	#ID
 0x8000

	)

58 
	gx86_asm_¥efixes
[] =

74 
	$x86_asm_ö°_öfo_ö£π_©
(
x86_ö°_öfo_ñem_t
 **
èbÀ
,

75 
x86_ö°_öfo_ñem_t
 *
ñem
, 
©
)

77 
x86_ö°_öfo_ñem_t
 *
¥ev
;

80 i‡(!
èbÀ
[
©
]) {

81 
èbÀ
[
©
] = 
ñem
;

86 
¥ev
 = 
èbÀ
[
©
];

87 
¥ev
->
√xt
)

88 
¥ev
 =Öªv->
√xt
;

89 
¥ev
->
√xt
 = 
ñem
;

90 
	}
}

93 
	$x86_asm_ö°_öfo_ö£π
(
X86Asm
 *
as
,

94 
x86_ö°_öfo_t
 *
öfo
)

96 
x86_ö°_öfo_ñem_t
 *
ñem
;

97 
x86_ö°_öfo_ñem_t
 **
èbÀ
;

99 
ödex
;

100 
cou¡
;

101 
i
;

105 i‡((
öfo
->
›1
 & 0xff) == 0x0f)

107 
èbÀ
 = 
as
->
ö°_öfo_èbÀ_0f
;

108 
ödex
 = 
öfo
->
›2
 & 0xff;

109 
cou¡
 = 
öfo
->
›2
 & 
INDEX
 ? 8 : 1;

113 
èbÀ
 = 
as
->
ö°_öfo_èbÀ
;

114 
ödex
 = 
öfo
->
›1
 & 0xff;

115 
cou¡
 = 
öfo
->
›1
 & 
INDEX
 ? 8 : 1;

119 
i
 = 0; i < 
cou¡
; i++)

121 
ñem
 = 
	`xˇŒoc
(1, (
x86_ö°_öfo_ñem_t
));

122 
ñem
->
öfo
 = info;

123 
	`x86_asm_ö°_öfo_ö£π_©
(
èbÀ
, 
ñem
, 
ödex
 + 
i
);

125 
	}
}

128 
	$x86_asm_ö°_öfo_ñem_‰ì_li°
(
x86_ö°_öfo_ñem_t
 *
ñem
)

130 
x86_ö°_öfo_ñem_t
 *
√xt
;

132 
ñem
)

134 
√xt
 = 
ñem
->next;

135 
	`‰ì
(
ñem
);

136 
ñem
 = 
√xt
;

138 
	}
}

148 
CLASS_IMPLEMENTATION
(
X86Asm
);

151 
	$X86AsmCª©e
(
X86Asm
 *
£lf
)

153 
x86_ö°_öfo_t
 *
öfo
;

155 
›
;

156 
i
;

159 
	`AsmCª©e
(
	`asAsm
(
£lf
));

162 
£lf
->
ö°_öfo_li°
 = 
	`xˇŒoc
(
x86_ö°_›code_cou¡
, (
x86_ö°_öfo_t
));

163 
£lf
->
ö°_öfo_li°
[
x86_ö°_›code_övÆid
].
fmt
 = "";

164 
	#DEFINST
(
__«me
, 
__›1
, 
__›2
, 
__›3
, 
__modrm
, 
__imm
, 
__¥efixes
) \

165 
öfo
 = &
£lf
->
ö°_öfo_li°
[
x86_ö°_
##
__«me
]; \

166 
öfo
->
›code
 = 
x86_ö°_
##
__«me
; \

167 
öfo
->
›1
 = 
__›1
; \

168 
öfo
->
›2
 = 
__›2
; \

169 
öfo
->
›3
 = 
__›3
; \

170 
öfo
->
modrm
 = 
__modrm
; \

171 
öfo
->
imm
 = 
__imm
; \

172 
öfo
->
¥efixes
 = 
__¥efixes
; \

173 
öfo
->
fmt
 = #__«me;

	)

174 
	~"asm.d©
"

175 #unde‡
DEFINST


178 
i
 = 0; i < (
x86_asm_¥efixes
); i++)

179 
£lf
->
is_¥efix
[
x86_asm_¥efixes
[
i
]] = 1;

184 
›
 = 1; o∞< 
x86_ö°_›code_cou¡
; op++)

187 
öfo
 = &
£lf
->
ö°_öfo_li°
[
›
];

188 
	`x86_asm_ö°_öfo_ö£π
(
£lf
, 
öfo
);

192 i‡(!(
öfo
->
modrm
 & 
SKIP
))

194 
öfo
->
modrm_size
 = 1;

198 i‡(!(
öfo
->
modrm
 & 
REG
))

200 
öfo
->
m©ch_mask
 = 0x38;

201 
öfo
->
m©ch_ªsu…
 = (öfo->
modrm
 & 0x7) << 3;

206 i‡(
öfo
->
modrm
 & 
MEM
)

208 
öfo
->
nom©ch_mask
 = 0xc0;

209 
öfo
->
nom©ch_ªsu…
 = 0xc0;

214 i‡(!(
öfo
->
›3
 & 
SKIP
))

216 
öfo
->
›code_size
++;

217 
öfo
->
m©ch_mask
 <<= 8;

218 
öfo
->
m©ch_ªsu…
 <<= 8;

219 
öfo
->
nom©ch_mask
 <<= 8;

220 
öfo
->
nom©ch_ªsu…
 <<= 8;

221 
öfo
->
m©ch_mask
 |= 0xff;

222 
öfo
->
m©ch_ªsu…
 |öfo->
›3
 & 0xff;

223 
	`as£π
(!(
öfo
->
›3
 & 
INDEX
));

227 i‡(!(
öfo
->
›2
 & 
SKIP
))

229 
öfo
->
›code_size
++;

230 
öfo
->
m©ch_mask
 <<= 8;

231 
öfo
->
m©ch_ªsu…
 <<= 8;

232 
öfo
->
nom©ch_mask
 <<= 8;

233 
öfo
->
nom©ch_ªsu…
 <<= 8;

234 
öfo
->
m©ch_mask
 |= 0xff;

235 
öfo
->
m©ch_ªsu…
 |öfo->
›2
 & 0xff;

238 i‡(
öfo
->
›2
 & 
INDEX
) {

239 
öfo
->
m©ch_mask
 &= 0xfffffff8;

240 
öfo
->
›ödex_shi·
 = 8;

245 
öfo
->
›code_size
++;

246 
öfo
->
m©ch_mask
 <<= 8;

247 
öfo
->
m©ch_ªsu…
 <<= 8;

248 
öfo
->
nom©ch_mask
 <<= 8;

249 
öfo
->
nom©ch_ªsu…
 <<= 8;

250 
öfo
->
m©ch_mask
 |= 0xff;

251 
öfo
->
m©ch_ªsu…
 |öfo->
›1
 & 0xff;

252 i‡(
öfo
->
›1
 & 
INDEX
)

254 
öfo
->
m©ch_mask
 &= 0xfffffff8;

255 
öfo
->
›ödex_shi·
 = 0;

259 i‡(
öfo
->
imm
 & 
IB
)

260 
öfo
->
imm_size
 = 1;

261 i‡(
öfo
->
imm
 & 
IW
)

262 
öfo
->
imm_size
 = 2;

263 i‡(
öfo
->
imm
 & 
ID
)

264 
öfo
->
imm_size
 = 4;

266 
	}
}

269 
	$X86AsmDe°roy
(
X86Asm
 *
£lf
)

271 
i
;

274 
i
 = 0; i < 0x100; i++)

276 
	`x86_asm_ö°_öfo_ñem_‰ì_li°
(
£lf
->
ö°_öfo_èbÀ
[
i
]);

277 
	`x86_asm_ö°_öfo_ñem_‰ì_li°
(
£lf
->
ö°_öfo_èbÀ_0f
[
i
]);

281 
	`‰ì
(
£lf
->
ö°_öfo_li°
);

282 
	}
}

292 
	$x86_asm_öô
()

295 
	`M2S_HOST_GUEST_MATCH
((
x86_ö°_xmm_ªg_t
), 16);

298 
	`CLASS_REGISTER
(
X86Asm
);

301 
	`as£π
(!
x86_asm
);

302 
x86_asm
 = 
	`√w
(
X86Asm
);

303 
	}
}

306 
	$x86_asm_d⁄e
()

308 
	`dñëe
(
x86_asm
);

309 
	}
}

312 
	$x86_asm_dißs£mbÀ_bö¨y
(*
∑th
)

314 
ñf_fûe_t
 *
ñf_fûe
;

315 
ñf_£˘i⁄_t
 *
£˘i⁄
;

316 
ñf_buf„r_t
 *
buf„r
;

317 
ñf_symbﬁ_t
 *
symbﬁ
;

319 
x86_ö°_t
 
ö°
;

320 
cuº_sym
;

321 
ödex
;

323 
i
;

326 
	`x86_asm_öô
();

327 
ñf_fûe
 = 
	`ñf_fûe_¸óã_‰om_∑th
(
∑th
);

330 
	`LIST_FOR_EACH
(
ñf_fûe
->
£˘i⁄_li°
, 
ödex
)

333 
£˘i⁄
 = 
	`li°_gë
(
ñf_fûe
->
£˘i⁄_li°
, 
ödex
);

334 i‡(!(
£˘i⁄
->
hódî
->
sh_Êags
 & 
SHF_EXECINSTR
))

336 
buf„r
 = &
£˘i⁄
->buffer;

339 
	`¥ötf
("Dißs£mbly o‡£˘i⁄ %s:\n", 
£˘i⁄
->
«me
);

342 
cuº_sym
 = 0;

343 
symbﬁ
 = 
	`li°_gë
(
ñf_fûe
->
symbﬁ_èbÀ
, 
cuº_sym
);

344 
buf„r
->
pos
 < buf„r->
size
)

346 
eù
;

348 
°r
[
MAX_STRING_SIZE
];

349 *
±r
;

352 
eù
 = 
£˘i⁄
->
hódî
->
sh_addr
 + 
buf„r
->
pos
;

353 
±r
 = 
	`ñf_buf„r_ãŒ
(
buf„r
);

354 
	`x86_ö°_decode
(&
ö°
, 
eù
, 
±r
);

355 i‡(
ö°
.
size
)

357 
	`ñf_buf„r_ªad
(
buf„r
, 
NULL
, 
ö°
.
size
);

358 
	`x86_ö°_dump_buf
(&
ö°
, 
°r
, 
MAX_STRING_SIZE
);

362 
	`ñf_buf„r_ªad
(
buf„r
, 
NULL
, 1);

363 
	`¢¥ötf
(
°r
,  str, "???");

367 
symbﬁ
 && symbﬁ->
vÆue
 < 
eù
)

369 
cuº_sym
++;

370 
symbﬁ
 = 
	`li°_gë
(
ñf_fûe
->
symbﬁ_èbÀ
, 
cuº_sym
);

372 i‡(
symbﬁ
 && symbﬁ->
vÆue
 =
eù
)

373 
	`¥ötf
("\n%08x <%s>:\n", 
eù
, 
symbﬁ
->
«me
);

376 
	`¥ötf
("%8x:\t", 
eù
);

379 
i
 = 0; i < 7; i++)

381 i‡(
i
 < 
ö°
.
size
)

382 
	`¥ötf
("%02x ", 
±r
[
i
]);

384 
	`¥ötf
(" ");

388 
	`¥ötf
("\t%s\n", 
°r
);

391 i‡(
ö°
.
size
 > 7)

393 
	`¥ötf
("%8x:\t", 
eù
 + 7);

394 
i
 = 7; i < 14 && i < 
ö°
.
size
; i++)

395 
	`¥ötf
("%02x ", 
±r
[
i
]);

396 
	`¥ötf
("\n");

401 
	`¥ötf
("\n");

405 
	`ñf_fûe_‰ì
(
ñf_fûe
);

406 
	`x86_asm_d⁄e
();

409 
	`mh™dÀ_d⁄e
();

410 
	`exô
(0);

411 
	}
}

	@asm/asm.h

20 #i‚de‡
X86_ASM_H


21 
	#X86_ASM_H


	)

23 
	~<¨ch/comm⁄/asm.h
>

24 
	~<lib/utû/˛ass.h
>

26 
	gx86_ö°_t
;

33 
	$CLASS_BEGIN
(
X86Asm
, 
Asm
)

38 
x86_ö°_öfo_t
 *
ö°_öfo_li°
;

43 
x86_ö°_öfo_ñem_t
 *
ö°_öfo_èbÀ
[0x100];

44 
x86_ö°_öfo_ñem_t
 *
ö°_öfo_èbÀ_0f
[0x100];

47 
is_¥efix
[0x100];

49 
	$CLASS_END
(
X86Asm
)

52 
	`X86AsmCª©e
(
X86Asm
 *
£lf
);

53 
	`X86AsmDe°roy
(
X86Asm
 *
£lf
);

63 
X86Asm
 *
x86_asm
;

65 
	`x86_asm_öô
();

66 
	`x86_asm_d⁄e
();

68 
	`x86_asm_dißs£mbÀ_bö¨y
(*
∑th
);

	@asm/inst.c

20 
	~<˘y≥.h
>

22 
	~<lib/mh™dÀ/mh™dÀ.h
>

23 
	~<lib/utû/debug.h
>

24 
	~<lib/utû/misc.h
>

25 
	~<lib/utû/°rög.h
>

27 
	~"asm.h
"

28 
	~"ö°.h
"

36 
°r_m≠_t
 
	gx86_ö°_ªg_m≠
 =

39 { "óx", 
x86_ö°_ªg_óx
 },

40 { "ecx", 
x86_ö°_ªg_ecx
 },

41 { "edx", 
x86_ö°_ªg_edx
 },

42 { "ebx", 
x86_ö°_ªg_ebx
 },

43 { "e•", 
x86_ö°_ªg_e•
 },

44 { "ebp", 
x86_ö°_ªg_ebp
 },

45 { "esi", 
x86_ö°_ªg_esi
 },

46 { "edi", 
x86_ö°_ªg_edi
 },

47 { "ax", 
x86_ö°_ªg_ax
 },

48 { "cx", 
x86_ö°_ªg_cx
 },

49 { "dx", 
x86_ö°_ªg_dx
 },

50 { "bx", 
x86_ö°_ªg_bx
 },

51 { "•", 
x86_ö°_ªg_•
 },

52 { "bp", 
x86_ö°_ªg_bp
 },

53 { "si", 
x86_ö°_ªg_si
 },

54 { "di", 
x86_ö°_ªg_di
 },

55 { "Æ", 
x86_ö°_ªg_Æ
 },

56 { "˛", 
x86_ö°_ªg_˛
 },

57 { "dl", 
x86_ö°_ªg_dl
 },

58 { "bl", 
x86_ö°_ªg_bl
 },

59 { "ah", 
x86_ö°_ªg_ah
 },

60 { "ch", 
x86_ö°_ªg_ch
 },

61 { "dh", 
x86_ö°_ªg_dh
 },

62 { "bh", 
x86_ö°_ªg_bh
 },

63 { "es", 
x86_ö°_ªg_es
 },

64 { "cs", 
x86_ö°_ªg_cs
 },

65 { "ss", 
x86_ö°_ªg_ss
 },

66 { "ds", 
x86_ö°_ªg_ds
 },

67 { "fs", 
x86_ö°_ªg_fs
 },

68 { "gs", 
x86_ö°_ªg_gs
 }

76 
	sx86_ö°_modrm_èbÀ_íåy_t


78 
x86_ö°_ªg_t
 
	mó_ba£
;

79 
	mdi•_size
;

80 
	msib_size
;

84 
x86_ö°_modrm_èbÀ_íåy_t
 
	gx86_ö°_modrm_èbÀ
[32] =

86 {
x86_ö°_ªg_óx
, 0, 0},

87 {
x86_ö°_ªg_ecx
, 0, 0},

88 {
x86_ö°_ªg_edx
, 0, 0},

89 {
x86_ö°_ªg_ebx
, 0, 0},

90 {
x86_ö°_ªg_n⁄e
, 0, 1},

91 {
x86_ö°_ªg_n⁄e
, 4, 0},

92 {
x86_ö°_ªg_esi
, 0, 0},

93 {
x86_ö°_ªg_edi
, 0, 0},

95 {
x86_ö°_ªg_óx
, 1, 0},

96 {
x86_ö°_ªg_ecx
, 1, 0},

97 {
x86_ö°_ªg_edx
, 1, 0},

98 {
x86_ö°_ªg_ebx
, 1, 0},

99 {
x86_ö°_ªg_n⁄e
, 1, 1},

100 {
x86_ö°_ªg_ebp
, 1, 0},

101 {
x86_ö°_ªg_esi
, 1, 0},

102 {
x86_ö°_ªg_edi
, 1, 0},

104 {
x86_ö°_ªg_óx
, 4, 0},

105 {
x86_ö°_ªg_ecx
, 4, 0},

106 {
x86_ö°_ªg_edx
, 4, 0},

107 {
x86_ö°_ªg_ebx
, 4, 0},

108 {
x86_ö°_ªg_n⁄e
, 4, 1},

109 {
x86_ö°_ªg_ebp
, 4, 0},

110 {
x86_ö°_ªg_esi
, 4, 0},

111 {
x86_ö°_ªg_edi
, 4, 0},

113 {
x86_ö°_ªg_n⁄e
, 0, 0},

114 {
x86_ö°_ªg_n⁄e
, 0, 0},

115 {
x86_ö°_ªg_n⁄e
, 0, 0},

116 {
x86_ö°_ªg_n⁄e
, 0, 0},

117 {
x86_ö°_ªg_n⁄e
, 0, 0},

118 {
x86_ö°_ªg_n⁄e
, 0, 0},

119 {
x86_ö°_ªg_n⁄e
, 0, 0},

120 {
x86_ö°_ªg_n⁄e
, 0, 0}

125 
	gx86_ö°_ó_sˇÀ_èbÀ
[4] = { 1, 2, 4, 8 };

135 
	$x86_ö°_moffs_addr_dump_buf
(
x86_ö°_t
 *
ö°
, **
pbuf
, *
psize
)

137 
x86_ö°_ªg_t
 
ªg
;

139 
ªg
 = 
ö°
->
£gmít
 ? in°->£gmíà: 
x86_ö°_ªg_ds
;

140 
	`°r_¥ötf
(
pbuf
, 
psize
, "%s:0x%x", 
	`°r_m≠_vÆue
(&
x86_ö°_ªg_m≠
, 
ªg
), 
ö°
->
imm
.
d
);

141 
	}
}

144 
	$x86_ö°_addr_dump_buf
(
x86_ö°_t
 *
ö°
, **
pbuf
, *
psize
)

146 
putsign
 = 0;

147 
£g
[20];

148 
	`as£π
(
ö°
->
modrm_mod
 != 0x03);

151 
£g
[0] = 0;

152 i‡(
ö°
->
£gmít
) {

153 
	`as£π
(
ö°
->
£gmít
 >0 && in°->£gmíà< 
x86_ö°_ªg_cou¡
);

154 
	`°r˝y
(
£g
, 
	`°r_m≠_vÆue
(&
x86_ö°_ªg_m≠
, 
ö°
->
£gmít
));

155 
	`°rˇt
(
£g
, ":");

159 i‡(!
ö°
->
ó_ba£
 && !ö°->
ó_ödex
) {

160 i‡(!
£g
[0])

161 
	`°r˝y
(
£g
, "ds:");

162 
	`°r_¥ötf
(
pbuf
, 
psize
, "%s0x%x", 
£g
, 
ö°
->
di•
);

166 
	`°r_¥ötf
(
pbuf
, 
psize
, "%s[", 
£g
);

167 i‡(
ö°
->
ó_ba£
) {

168 
	`°r_¥ötf
(
pbuf
, 
psize
, "%s", 
	`°r_m≠_vÆue
(&
x86_ö°_ªg_m≠
, 
ö°
->
ó_ba£
));

169 
putsign
 = 1;

171 i‡(
ö°
->
ó_ödex
) {

172 
	`°r_¥ötf
(
pbuf
, 
psize
, "%s%s", 
putsign
 ? "+" : "",

173 
	`°r_m≠_vÆue
(&
x86_ö°_ªg_m≠
, 
ö°
->
ó_ödex
));

174 i‡(
ö°
->
ó_sˇÀ
 > 1)

175 
	`°r_¥ötf
(
pbuf
, 
psize
, "*%d", 
ö°
->
ó_sˇÀ
);

176 
putsign
 = 1;

178 i‡(
ö°
->
di•
 > 0)

179 
	`°r_¥ötf
(
pbuf
, 
psize
, "%s0x%x", 
putsign
 ? "+" : "", 
ö°
->
di•
);

180 i‡(
ö°
->
di•
 < 0)

181 
	`°r_¥ötf
(
pbuf
, 
psize
, "-0x%x", -
ö°
->
di•
);

182 
	`°r_¥ötf
(
pbuf
, 
psize
, "]");

183 
	}
}

192 
x86_ö°_t
 *
	$x86_ö°_¸óã
()

194 
x86_ö°_t
 *
ö°
;

197 
ö°
 = 
	`xˇŒoc
(1, (
x86_ö°_t
));

200  
ö°
;

201 
	}
}

204 
	$x86_ö°_‰ì
(
x86_ö°_t
 *
ö°
)

206 
	`‰ì
(
ö°
);

207 
	}
}

210 
	$x86_ö°_dump
(
x86_ö°_t
 *
ö°
, 
FILE
 *
f
)

212 
buf
[
MAX_LONG_STRING_SIZE
];

214 
	`x86_ö°_dump_buf
(
ö°
, 
buf
,  buf);

215 
	`Ârötf
(
f
, "%s", 
buf
);

216 
	}
}

219 
	$x86_ö°_dump_buf
(
x86_ö°_t
 *
ö°
, *
buf
, 
size
)

221 
x86_ö°_öfo_t
 *
öfo
;

223 
Àngth
;

224 
«me_¥öãd
;

225 
«me_Àngth
;

226 
i
;

228 *
fmt
;

229 *
fmt_fú°_¨g
;

233 
	`as£π
(
x86_asm
);

234 
	`as£π
(
	`IN_RANGE
(
ö°
->
›code
, 0, 
x86_ö°_›code_cou¡
 - 1));

235 
öfo
 = &
x86_asm
->
ö°_öfo_li°
[
ö°
->
›code
];

238 i‡(
size
)

239 *
buf
 = '\0';

242 
«me_¥öãd
 = 0;

243 
fmt
 = 
öfo
->fmt;

244 
fmt_fú°_¨g
 = 
	`ödex
(
fmt
, '_');

245 
«me_Àngth
 = 
fmt_fú°_¨g
 ? fmt_fú°_¨g - 
fmt
 : 
	`°æí
(fmt);

248 *
fmt
)

251 
Àngth
 = 0;

254 i‡(
	`asm_is_tokí
(
fmt
, "r8", &
Àngth
))

256 
	`°r_¥ötf
(&
buf
, &
size
, "%s", 
	`°r_m≠_vÆue
(&
x86_ö°_ªg_m≠
,

257 
ö°
->
modrm_ªg
 + 
x86_ö°_ªg_Æ
));

259 i‡(
	`asm_is_tokí
(
fmt
, "r16", &
Àngth
))

261 
	`°r_¥ötf
(&
buf
, &
size
, "%s", 
	`°r_m≠_vÆue
(&
x86_ö°_ªg_m≠
,

262 
ö°
->
modrm_ªg
 + 
x86_ö°_ªg_ax
));

264 i‡(
	`asm_is_tokí
(
fmt
, "r32", &
Àngth
))

266 
	`°r_¥ötf
(&
buf
, &
size
, "%s", 
	`°r_m≠_vÆue
(&
x86_ö°_ªg_m≠
,

267 
ö°
->
modrm_ªg
 + 
x86_ö°_ªg_óx
));

269 i‡(
	`asm_is_tokí
(
fmt
, "rm8", &
Àngth
))

271 i‡(
ö°
->
modrm_mod
 == 0x03)

272 
	`°r_¥ötf
(&
buf
, &
size
, "%s",

273 
	`°r_m≠_vÆue
(&
x86_ö°_ªg_m≠
,

274 
ö°
->
modrm_rm
 + 
x86_ö°_ªg_Æ
));

277 
	`°r_¥ötf
(&
buf
, &
size
, "BYTE PTR ");

278 
	`x86_ö°_addr_dump_buf
(
ö°
, &
buf
, &
size
);

281 i‡(
	`asm_is_tokí
(
fmt
, "rm16", &
Àngth
))

283 i‡(
ö°
->
modrm_mod
 == 0x03)

284 
	`°r_¥ötf
(&
buf
, &
size
, "%s",

285 
	`°r_m≠_vÆue
(&
x86_ö°_ªg_m≠
,

286 
ö°
->
modrm_rm
 + 
x86_ö°_ªg_ax
));

289 
	`°r_¥ötf
(&
buf
, &
size
, "WORD PTR ");

290 
	`x86_ö°_addr_dump_buf
(
ö°
, &
buf
, &
size
);

293 i‡(
	`asm_is_tokí
(
fmt
, "rm32", &
Àngth
))

295 i‡(
ö°
->
modrm_mod
 == 0x03)

296 
	`°r_¥ötf
(&
buf
, &
size
, "%s",

297 
	`°r_m≠_vÆue
(&
x86_ö°_ªg_m≠
,

298 
ö°
->
modrm_rm
 + 
x86_ö°_ªg_óx
));

301 
	`°r_¥ötf
(&
buf
, &
size
, "DWORD PTR ");

302 
	`x86_ö°_addr_dump_buf
(
ö°
, &
buf
, &
size
);

305 i‡(
	`asm_is_tokí
(
fmt
, "r32m8", &
Àngth
))

307 i‡(
ö°
->
modrm_mod
 == 3)

308 
	`°r_¥ötf
(&
buf
, &
size
, "%s", 
	`°r_m≠_vÆue
(&
x86_ö°_ªg_m≠
,

309 
ö°
->
modrm_rm
 + 
x86_ö°_ªg_óx
));

312 
	`°r_¥ötf
(&
buf
, &
size
, "BYTE PTR ");

313 
	`x86_ö°_addr_dump_buf
(
ö°
, &
buf
, &
size
);

316 i‡(
	`asm_is_tokí
(
fmt
, "r32m16", &
Àngth
))

318 i‡(
ö°
->
modrm_mod
 == 3)

319 
	`°r_¥ötf
(&
buf
, &
size
, "%s", 
	`°r_m≠_vÆue
(&
x86_ö°_ªg_m≠
,

320 
ö°
->
modrm_rm
 + 
x86_ö°_ªg_óx
));

323 
	`°r_¥ötf
(&
buf
, &
size
, "WORD PTR ");

324 
	`x86_ö°_addr_dump_buf
(
ö°
, &
buf
, &
size
);

327 i‡(
	`asm_is_tokí
(
fmt
, "m", &
Àngth
))

329 
	`x86_ö°_addr_dump_buf
(
ö°
, &
buf
, &
size
);

331 i‡(
	`asm_is_tokí
(
fmt
, "imm8", &
Àngth
))

333 
	`°r_¥ötf
(&
buf
, &
size
, "0x%x", 
ö°
->
imm
.
b
);

335 i‡(
	`asm_is_tokí
(
fmt
, "imm16", &
Àngth
))

337 
	`°r_¥ötf
(&
buf
, &
size
, "0x%x", 
ö°
->
imm
.
w
);

339 i‡(
	`asm_is_tokí
(
fmt
, "imm32", &
Àngth
))

341 
	`°r_¥ötf
(&
buf
, &
size
, "0x%x", 
ö°
->
imm
.
d
);

343 i‡(
	`asm_is_tokí
(
fmt
, "ªl8", &
Àngth
))

345 
	`°r_¥ötf
(&
buf
, &
size
, "%x", (
öt8_t
Ë
ö°
->
imm
.
b
 + in°->
eù
 + inst->size);

347 i‡(
	`asm_is_tokí
(
fmt
, "ªl16", &
Àngth
))

349 
	`°r_¥ötf
(&
buf
, &
size
, "%x", (
öt16_t
Ë
ö°
->
imm
.
w
 + in°->
eù
 + inst->size);

351 i‡(
	`asm_is_tokí
(
fmt
, "ªl32", &
Àngth
))

353 
	`°r_¥ötf
(&
buf
, &
size
, "%x", 
ö°
->
imm
.
d
 + in°->
eù
 + inst->size);

355 i‡(
	`asm_is_tokí
(
fmt
, "moffs8", &
Àngth
))

357 
	`x86_ö°_moffs_addr_dump_buf
(
ö°
, &
buf
, &
size
);

359 i‡(
	`asm_is_tokí
(
fmt
, "moffs16", &
Àngth
))

361 
	`x86_ö°_moffs_addr_dump_buf
(
ö°
, &
buf
, &
size
);

363 i‡(
	`asm_is_tokí
(
fmt
, "moffs32", &
Àngth
))

365 
	`x86_ö°_moffs_addr_dump_buf
(
ö°
, &
buf
, &
size
);

367 i‡(
	`asm_is_tokí
(
fmt
, "m8", &
Àngth
))

369 
	`°r_¥ötf
(&
buf
, &
size
, "BYTE PTR ");

370 
	`x86_ö°_addr_dump_buf
(
ö°
, &
buf
, &
size
);

372 i‡(
	`asm_is_tokí
(
fmt
, "m16", &
Àngth
))

374 
	`°r_¥ötf
(&
buf
, &
size
, "WORD PTR ");

375 
	`x86_ö°_addr_dump_buf
(
ö°
, &
buf
, &
size
);

377 i‡(
	`asm_is_tokí
(
fmt
, "m32", &
Àngth
))

379 
	`°r_¥ötf
(&
buf
, &
size
, "DWORD PTR ");

380 
	`x86_ö°_addr_dump_buf
(
ö°
, &
buf
, &
size
);

382 i‡(
	`asm_is_tokí
(
fmt
, "m64", &
Àngth
))

384 
	`°r_¥ötf
(&
buf
, &
size
, "QWORD PTR ");

385 
	`x86_ö°_addr_dump_buf
(
ö°
, &
buf
, &
size
);

387 i‡(
	`asm_is_tokí
(
fmt
, "m80", &
Àngth
))

389 
	`°r_¥ötf
(&
buf
, &
size
, "TBYTE PTR ");

390 
	`x86_ö°_addr_dump_buf
(
ö°
, &
buf
, &
size
);

392 i‡(
	`asm_is_tokí
(
fmt
, "m128", &
Àngth
))

394 
	`°r_¥ötf
(&
buf
, &
size
, "XMMWORD PTR ");

395 
	`x86_ö°_addr_dump_buf
(
ö°
, &
buf
, &
size
);

397 i‡(
	`asm_is_tokí
(
fmt
, "°0", &
Àngth
))

399 
	`°r_¥ötf
(&
buf
, &
size
, "st");

401 i‡(
	`asm_is_tokí
(
fmt
, "°i", &
Àngth
))

403 
	`°r_¥ötf
(&
buf
, &
size
, "°(%d)", 
ö°
->
›ödex
);

405 i‡(
	`asm_is_tokí
(
fmt
, "ú8", &
Àngth
))

407 
	`°r_¥ötf
(&
buf
, &
size
, "%s", 
	`°r_m≠_vÆue
(&
x86_ö°_ªg_m≠
,

408 
ö°
->
›ödex
 + 
x86_ö°_ªg_Æ
));

410 i‡(
	`asm_is_tokí
(
fmt
, "ú16", &
Àngth
))

412 
	`°r_¥ötf
(&
buf
, &
size
, "%s", 
	`°r_m≠_vÆue
(&
x86_ö°_ªg_m≠
,

413 
ö°
->
›ödex
 + 
x86_ö°_ªg_ax
));

415 i‡(
	`asm_is_tokí
(
fmt
, "ú32", &
Àngth
))

417 
	`°r_¥ötf
(&
buf
, &
size
, "%s", 
	`°r_m≠_vÆue
(&
x86_ö°_ªg_m≠
,

418 
ö°
->
›ödex
 + 
x86_ö°_ªg_óx
));

420 i‡(
	`asm_is_tokí
(
fmt
, "§eg", &
Àngth
))

422 
	`°r_¥ötf
(&
buf
, &
size
, "%s", 
	`°r_m≠_vÆue
(&
x86_ö°_ªg_m≠
,

423 
ö°
->
ªg
 + 
x86_ö°_ªg_es
));

425 i‡(
	`asm_is_tokí
(
fmt
, "xmmm32", &
Àngth
))

427 i‡(
ö°
->
modrm_mod
 == 3)

428 
	`°r_¥ötf
(&
buf
, &
size
, "xmm%d", 
ö°
->
modrm_rm
);

431 
	`°r_¥ötf
(&
buf
, &
size
, "DWORD PTR ");

432 
	`x86_ö°_addr_dump_buf
(
ö°
, &
buf
, &
size
);

435 i‡(
	`asm_is_tokí
(
fmt
, "xmmm64", &
Àngth
))

437 i‡(
ö°
->
modrm_mod
 == 0x03)

438 
	`°r_¥ötf
(&
buf
, &
size
, "xmm%d", 
ö°
->
modrm_rm
);

441 
	`°r_¥ötf
(&
buf
, &
size
, "QWORD PTR ");

442 
	`x86_ö°_addr_dump_buf
(
ö°
, &
buf
, &
size
);

445 i‡(
	`asm_is_tokí
(
fmt
, "xmmm128", &
Àngth
))

447 i‡(
ö°
->
modrm_mod
 == 0x03)

448 
	`°r_¥ötf
(&
buf
, &
size
, "xmm%d", 
ö°
->
modrm_rm
);

451 
	`°r_¥ötf
(&
buf
, &
size
, "XMMWORD PTR ");

452 
	`x86_ö°_addr_dump_buf
(
ö°
, &
buf
, &
size
);

455 i‡(
	`asm_is_tokí
(
fmt
, "xmm", &
Àngth
))

457 
	`°r_¥ötf
(&
buf
, &
size
, "xmm%d", 
ö°
->
modrm_ªg
);

461 i‡(
Àngth
)

463 
fmt
 +
Àngth
;

468 *
fmt
 && 
	`iß um
(*fmt))

469 
	`°r_¥ötf
(&
buf
, &
size
, "%c", *
fmt
++);

472 *
fmt
 && !
	`iß um
(*fmt))

474 i‡(*
fmt
 == '_')

476 i‡(
«me_¥öãd
)

478 
	`°r_¥ötf
(&
buf
, &
size
, ",");

482 
«me_¥öãd
 = 1;

483 
i
 = 0; i < 7 - 
«me_Àngth
; i++)

484 
	`°r_¥ötf
(&
buf
, &
size
, " ");

489 
	`°r_¥ötf
(&
buf
, &
size
, "%c", *
fmt
);

491 
fmt
++;

494 
	}
}

497 *
	$x86_ö°_gë_«me
(
x86_ö°_›code_t
 
›code
)

499 
	`as£π
(
x86_asm
);

500 i‡(!
	`IN_RANGE
(
›code
, 1, 
x86_ö°_›code_cou¡
 - 1))

502  
x86_asm
->
ö°_öfo_li°
[
›code
].
fmt
;

503 
	}
}

506 
	$x86_ö°_decode
(
x86_ö°_t
 *
ö°
, 
eù
, *
buf
)

508 
x86_ö°_öfo_ñem_t
 **
èbÀ
;

509 
x86_ö°_öfo_ñem_t
 *
ñem
;

510 
x86_ö°_öfo_t
 *
öfo
;

511 
x86_ö°_modrm_èbÀ_íåy_t
 *
modrm_èbÀ_íåy
;

513 
ödex
;

515 
buf8
;

516 
buf32
;

519 
	`as£π
(
x86_asm
);

524 
ö°
->
eù
 =Éip;

525 
ö°
->
size
 = 0;

526 
ö°
->
›code
 = 0;

527 
ö°
->
f‹m©
 = 
NULL
;

529 
ö°
->
¥efix_size
 = 0;

530 
ö°
->
›code_size
 = 0;

531 
ö°
->
modrm_size
 = 0;

532 
ö°
->
sib_size
 = 0;

533 
ö°
->
di•_size
 = 0;

534 
ö°
->
imm_size
 = 0;

536 
ö°
->
›ödex
 = 0;

537 
ö°
->
£gmít
 = 0;

538 
ö°
->
¥efixes
 = 0;

540 
ö°
->
›_size
 = 4;

541 
ö°
->
addr_size
 = 4;

543 
ö°
->
modrm
 = 0;

544 
ö°
->
modrm_mod
 = 0;

545 
ö°
->
modrm_ªg
 = 0;

546 
ö°
->
modrm_rm
 = 0;

548 
ö°
->
sib
 = 0;

549 
ö°
->
sib_sˇÀ
 = 0;

550 
ö°
->
sib_ödex
 = 0;

551 
ö°
->
sib_ba£
 = 0;

553 
ö°
->
di•
 = 0;

554 
ö°
->
imm
.
d
 = 0;

556 
ö°
->
ó_ba£
 = 0;

557 
ö°
->
ó_ödex
 = 0;

558 
ö°
->
ó_sˇÀ
 = 0;

560 
ö°
->
ªg
 = 0;

564 
x86_asm
->
is_¥efix
[* (*Ë
buf
])

566 * (*Ë
buf
)

574 
ö°
->
¥efixes
 |
x86_ö°_¥efix_ª≤z
;

578 
ö°
->
¥efixes
 |
x86_ö°_¥efix_ªp
;

582 
ö°
->
¥efixes
 |
x86_ö°_¥efix_›
;

583 
ö°
->
›_size
 = 2;

587 
ö°
->
¥efixes
 |
x86_ö°_¥efix_addr
;

588 
ö°
->
addr_size
 = 2;

592 
ö°
->
£gmít
 = 
x86_ö°_ªg_cs
;

596 
ö°
->
£gmít
 = 
x86_ö°_ªg_ss
;

600 
ö°
->
£gmít
 = 
x86_ö°_ªg_ds
;

604 
ö°
->
£gmít
 = 
x86_ö°_ªg_es
;

608 
ö°
->
£gmít
 = 
x86_ö°_ªg_fs
;

612 
ö°
->
£gmít
 = 
x86_ö°_ªg_gs
;

616 
	`∑nic
("%s: invÆidÖªfix", 
__FUNCTION__
);

621 
buf
++;

622 
ö°
->
¥efix_size
++;

626 
buf8
 = * (*Ë
buf
;

627 
buf32
 = * (*Ë
buf
;

628 
ö°
->
›code
 = 
x86_ö°_›code_övÆid
;

629 i‡(
buf8
 == 0x0f)

631 
èbÀ
 = 
x86_asm
->
ö°_öfo_èbÀ_0f
;

632 
ödex
 = * (*Ë(
buf
 + 1);

636 
èbÀ
 = 
x86_asm
->
ö°_öfo_èbÀ
;

637 
ödex
 = 
buf8
;

641 
ñem
 = 
èbÀ
[
ödex
];ÉÀm;ÉÀm =ÉÀm->
√xt
)

643 
öfo
 = 
ñem
->info;

644 i‡(
öfo
->
nom©ch_mask
 && (
buf32
 & info->nomatch_mask) ==

645 
öfo
->
nom©ch_ªsu…
)

647 i‡((
buf32
 & 
öfo
->
m©ch_mask
Ë=öfo->
m©ch_ªsu…


648 && 
öfo
->
¥efixes
 =
ö°
->prefixes)

653 i‡(!
ñem
)

657 
ö°
->
f‹m©
 = 
öfo
->
fmt
;

658 
ö°
->
›code
 = 
öfo
->opcode;

659 
ö°
->
›code_size
 = 
öfo
->opcode_size;

660 
ö°
->
modrm_size
 = 
öfo
->modrm_size;

661 
ö°
->
›ödex
 = (
buf32
 >> 
öfo
->
›ödex_shi·
) & 0x7;

662 
buf
 +
ö°
->
›code_size
;

665 i‡(
ö°
->
modrm_size
)

668 
ö°
->
modrm
 = * (*Ë
buf
;

669 
ö°
->
modrm_mod
 = (ö°->
modrm
 & 0xc0) >> 6;

670 
ö°
->
modrm_ªg
 = (ö°->
modrm
 & 0x38) >> 3;

671 
ö°
->
modrm_rm
 = in°->
modrm
 & 0x07;

672 
ö°
->
ªg
 = in°->
modrm_ªg
;

675 
modrm_èbÀ_íåy
 = &
x86_ö°_modrm_èbÀ
[(
ö°
->
modrm_mod
 << 3)

676 | 
ö°
->
modrm_rm
];

677 
ö°
->
sib_size
 = 
modrm_èbÀ_íåy
->sib_size;

678 
ö°
->
di•_size
 = 
modrm_èbÀ_íåy
->disp_size;

679 
ö°
->
ó_ba£
 = 
modrm_èbÀ_íåy
->ea_base;

680 
buf
 +
ö°
->
modrm_size
;

683 i‡(
ö°
->
sib_size
)

685 
ö°
->
sib
 = * (*Ë
buf
;

686 
ö°
->
sib_sˇÀ
 = (ö°->
sib
 & 0xc0) >> 6;

687 
ö°
->
sib_ödex
 = (ö°->
sib
 & 0x38) >> 3;

688 
ö°
->
sib_ba£
 = in°->
sib
 & 0x07;

689 
ö°
->
ó_sˇÀ
 = 
x86_ö°_ó_sˇÀ_èbÀ
[ö°->
sib_sˇÀ
];

690 
ö°
->
ó_ödex
 = in°->
sib_ödex
 =0x04 ? 
x86_ö°_ªg_n⁄e
 :

691 
ö°
->
sib_ödex
 + 
x86_ö°_ªg_óx
;

692 
ö°
->
ó_ba£
 = in°->
sib_ba£
 + 
x86_ö°_ªg_óx
;

693 i‡(
ö°
->
sib_ba£
 =0x05 && in°->
modrm_mod
 == 0x00)

695 
ö°
->
ó_ba£
 = 
x86_ö°_ªg_n⁄e
;

696 
ö°
->
di•_size
 = 4;

698 
buf
 +
ö°
->
sib_size
;

702 
ö°
->
di•_size
)

705 
ö°
->
di•
 = * (
öt8_t
 *Ë
buf
;

709 
ö°
->
di•
 = * (
öt16_t
 *Ë
buf
;

713 
ö°
->
di•
 = * (
öt32_t
 *Ë
buf
;

716 
buf
 +
ö°
->
di•_size
;

720 
ö°
->
imm_size
 = 
öfo
->imm_size;

721 
ö°
->
imm_size
)

724 
ö°
->
imm
.
b
 = * (*Ë
buf
;

728 
ö°
->
imm
.
w
 = * (*Ë
buf
;

732 
ö°
->
imm
.
d
 = * (*Ë
buf
;

735 
buf
 +
ö°
->
imm_size
;

738 
ö°
->
size
 = in°->
¥efix_size
 + in°->
›code_size
 + in°->
modrm_size
 +

739 
ö°
->
sib_size
 + in°->
di•_size
 + in°->
imm_size
;

740 
	}
}

	@asm/inst.h

20 #i‚de‡
X86_INST_H


21 
	#X86_INST_H


	)

23 
	~<°dio.h
>

27 
	ex86_ö°_›code_t


29 
	mx86_ö°_›code_övÆid
 = 0,

31 
	#DEFINST
(
«me
, 
›1
, 
›2
, 
›3
, 
modrm
, 
imm
, 
¥efixes
) \

32 
x86_ö°_
##
«me
,

	)

33 
	~"asm.d©
"

34 #unde‡
DEFINST


36 
	mx86_ö°_›code_cou¡


41 
	ex86_ö°_¥efix_t


43 
	mx86_ö°_¥efix_n⁄e
 = 0x00,

44 
	mx86_ö°_¥efix_ªp
 = 0x01,

45 
	mx86_ö°_¥efix_ªpz
 = 0x01,

46 
	mx86_ö°_¥efix_ª≤z
 = 0x02,

47 
	mx86_ö°_¥efix_lock
 = 0x04,

48 
	mx86_ö°_¥efix_addr
 = 0x08,

49 
	mx86_ö°_¥efix_›
 = 0x10

54 
°r_m≠_t
 
x86_ö°_ªg_m≠
;

55 
	ex86_ö°_ªg_t


57 
	mx86_ö°_ªg_n⁄e
 = 0,

59 
	mx86_ö°_ªg_óx
,

60 
	mx86_ö°_ªg_ecx
,

61 
	mx86_ö°_ªg_edx
,

62 
	mx86_ö°_ªg_ebx
,

63 
	mx86_ö°_ªg_e•
,

64 
	mx86_ö°_ªg_ebp
,

65 
	mx86_ö°_ªg_esi
,

66 
	mx86_ö°_ªg_edi
,

68 
	mx86_ö°_ªg_ax
,

69 
	mx86_ö°_ªg_cx
,

70 
	mx86_ö°_ªg_dx
,

71 
	mx86_ö°_ªg_bx
,

72 
	mx86_ö°_ªg_•
,

73 
	mx86_ö°_ªg_bp
,

74 
	mx86_ö°_ªg_si
,

75 
	mx86_ö°_ªg_di
,

77 
	mx86_ö°_ªg_Æ
,

78 
	mx86_ö°_ªg_˛
,

79 
	mx86_ö°_ªg_dl
,

80 
	mx86_ö°_ªg_bl
,

81 
	mx86_ö°_ªg_ah
,

82 
	mx86_ö°_ªg_ch
,

83 
	mx86_ö°_ªg_dh
,

84 
	mx86_ö°_ªg_bh
,

86 
	mx86_ö°_ªg_es
,

87 
	mx86_ö°_ªg_cs
,

88 
	mx86_ö°_ªg_ss
,

89 
	mx86_ö°_ªg_ds
,

90 
	mx86_ö°_ªg_fs
,

91 
	mx86_ö°_ªg_gs
,

93 
	mx86_ö°_ªg_cou¡


98 
	ex86_ö°_Êag_t


100 
	mx86_ö°_Êag_cf
 = 0,

101 
	mx86_ö°_Êag_pf
 = 2,

102 
	mx86_ö°_Êag_af
 = 4,

103 
	mx86_ö°_Êag_zf
 = 6,

104 
	mx86_ö°_Êag_sf
 = 7,

105 
	mx86_ö°_Êag_df
 = 10,

106 
	mx86_ö°_Êag_of
 = 11

111 
	ux86_ö°_xmm_ªg_t


113 
	mas_uch¨
[16];

114 sig√d 
	mas_ch¨
[16];

116 
	mas_ush‹t
[8];

117 sig√d 
	mas_sh‹t
[8];

119 
	mas_uöt
[4];

120 sig√d 
	mas_öt
[4];

122 
	mas_uöt64
[2];

123 sig√d 
	mas_öt64
[2];

125 
	mas_Êﬂt
[4];

126 
	mas_doubÀ
[2];

131 
	sx86_ö°_öfo_t


133 
x86_ö°_›code_t
 
	m›code
;

135 
	m›1
;

136 
	m›2
;

137 
	m›3
;

138 
	mmodrm
;

139 
	mimm
;

142 
	m¥efixes
;

145 *
	mfmt
;

148 
	mm©ch_mask
;

149 
	mm©ch_ªsu…
;

151 
	mnom©ch_mask
;

152 
	mnom©ch_ªsu…
;

154 
	m›ödex_shi·
;

155 
	mim∂_ªg
;

156 
	m›code_size
;

157 
	mmodrm_size
;

158 
	mimm_size
;

164 
	sx86_ö°_öfo_ñem_t


166 
x86_ö°_öfo_t
 *
	möfo
;

167 
x86_ö°_öfo_ñem_t
 *
	m√xt
;

172 
	sx86_ö°_t


174 
	meù
;

175 
	msize
;

176 
x86_ö°_›code_t
 
	m›code
;

177 *
	mf‹m©
;

180 
	m¥efix_size
;

181 
	m›code_size
;

182 
	mmodrm_size
;

183 
	msib_size
;

184 
	mdi•_size
;

185 
	mimm_size
;

189 
	m›ödex
;

192 
x86_ö°_ªg_t
 
	m£gmít
;

193 
	m¥efixes
;

194 
	m›_size
;

195 
	maddr_size
;

198 
	mmodrm
;

199 
	mmodrm_mod
;

200 
	mmodrm_ªg
;

201 
	mmodrm_rm
;

204 
	msib
;

205 
	msib_sˇÀ
;

206 
	msib_ödex
;

207 
	msib_ba£
;

210 
	mdi•
;

212 
	mb
;

213 
	mw
;

214 
	md
;

215 } 
	mimm
;

218 
x86_ö°_ªg_t
 
	mó_ba£
;

219 
x86_ö°_ªg_t
 
	mó_ödex
;

220 
	mó_sˇÀ
;

223 
	mªg
;

227 
x86_ö°_t
 *
x86_ö°_¸óã
();

228 
x86_ö°_‰ì
(
x86_ö°_t
 *
ö°
);

230 
x86_ö°_dump
(
x86_ö°_t
 *
ö°
, 
FILE
 *
f
);

231 
x86_ö°_dump_buf
(
x86_ö°_t
 *
ö°
, *
buf
, 
size
);

235 *
x86_ö°_gë_«me
(
x86_ö°_›code_t
 
›code
);

240 
x86_ö°_decode
(
x86_ö°_t
 *
ö°
, 
eù
, *
buf
);

	@emu/checkpoint.c

20 
	~<f˙é.h
>

21 
	~<°d¨g.h
>

22 
	~<zlib.h
>

24 
	~<lib/mh™dÀ/mh™dÀ.h
>

25 
	~<lib/utû/bö-c⁄fig.h
>

26 
	~<lib/utû/debug.h
>

27 
	~<lib/utû/löked-li°.h
>

28 
	~<lib/utû/li°.h
>

29 
	~<lib/utû/misc.h
>

30 
	~<lib/utû/°rög.h
>

31 
	~<mem-sy°em/mem‹y.h
>

33 
	~"checkpoöt.h
"

34 
	~"c⁄ãxt.h
"

35 
	~"emu.h
"

36 
	~"fûe-desc.h
"

37 
	~"lﬂdî.h
"

38 
	~"ªgs.h
"

41 
X86EmuLﬂdCheckpoöt
(
X86Emu
 *
£lf
, *
fûe_«me
);

42 
X86EmuSaveCheckpoöt
(
X86Emu
 *
£lf
, *
fûe_«me
);

46 
lﬂd_¥o˚s£s
(
X86Emu
 *
emu
);

47 
ßve_¥o˚s£s
(
X86Emu
 *
emu
);

48 
lﬂd_¥o˚ss
(
X86Emu
 *
emu
);

49 
ßve_¥o˚ss
(
X86C⁄ãxt
 *
˘x
);

50 
ßve_¥o˚ss_misc
(
X86C⁄ãxt
 *
˘x
);

51 
lﬂd_mem‹y
(
mem_t
 *
mem
);

52 
ßve_mem‹y
(
mem_t
 *
mem
);

53 
lﬂd_mem‹y_d©a
(
mem_t
 *
mem
);

54 
ßve_mem‹y_d©a
(
mem_t
 *
mem
);

55 
lﬂd_mem‹y_ønge
(
mem_t
 *
mem
);

56 
ßve_mem‹y_∑ge
(
mem_∑ge_t
 *
∑ge
);

57 
lﬂd_fds
(
x86_fûe_desc_èbÀ_t
 *
fdt
);

58 
lﬂd_fd
(
x86_fûe_desc_èbÀ_t
 *
fdt
);

59 
ßve_fds
(
x86_fûe_desc_èbÀ_t
 *
fdt
);

60 
lﬂd_thªads
(
X86C⁄ãxt
 *
˘x
);

61 
ßve_thªads
(
X86C⁄ãxt
 *
˘x
);

62 
ßve_thªad
(
X86C⁄ãxt
 *
˘x
);

63 
lﬂd_ªgs
(
x86_ªgs_t
 *
ªgs
);

64 
ßve_ªgs
(
x86_ªgs_t
 *
ªgs
);

68 
cfg_öô
();

69 
cfg_d⁄e
();

70 
cfg_push
(*
fmt
, ...);

71 
cfg_push_unique
();

72 
cfg_p›
();

73 
cfg_des˚nd
(*
key
);

74 
cfg_åy_des˚nd
(*
key
);

75 
cfg_√xt_chûd
();

76 
cfg_°ack_ñem_t
 *
cfg_t›
();

77 *
cfg_∑th
();

81 
key_exi°s
(*
key
);

83 
lﬂd_vÆue
(*
key
, **
vÆue
, 
size
);

84 
öt16_t
 
lﬂd_öt16
(*
key
);

85 
öt32_t
 
lﬂd_öt32
(*
key
);

86 * 
lﬂd_°r
(*
key
);

87 * 
lﬂd_°r_‹_dÊt
(*
key
, *
dÊt
);

88 
löked_li°_t
 *
lﬂd_°r_li°
(*
key
);

90 
ßve_vÆue
(*
key
, *
vÆue
, 
size
);

91 
ßve_vÆue_no_dup
(*
key
, *
vÆue
, 
size
);

92 
ßve_öt16
(*
key
, 
öt16_t
 
vÆue
);

93 
ßve_öt32
(*
key
, 
öt32_t
 
vÆue
);

94 
ßve_°r
(*
key
, *
°r
);

95 
ßve_°r_li°
(*
key
, 
löked_li°_t
 *
li°
);

97 
ßve_øw_°r
(*
v¨
);

99 
check
();

100 
ödex_of
(*
¨øy
, 
vÆue
, 
n
);

103 
bö_c⁄fig_t
 *
	gckp
;

106 
	scfg_°ack_ñem_t


108 
bö_c⁄fig_ñem_t
 *
	mñem
;

109 *
	mkey
;

110 
	mchûd_idx
;

113 
cfg_°ack_ñem_t
 *
cfg_°ack_ñem_¸óã
(

114 
bö_c⁄fig_ñem_t
 *
ñem
,

115 *
key
);

116 
cfg_°ack_ñem_‰ì
(
cfg_°ack_ñem_t
 *
ñem
);

118 
li°_t
 *
	gcfg_°ack
;

119 
	gcfg_unique_num
;

121 
	$X86EmuLﬂdCheckpoöt
(
X86Emu
 *
£lf
, *
fûe_«me
)

123 
ckp
 = 
	`bö_c⁄fig_¸óã
(
fûe_«me
);

124 
	`bö_c⁄fig_lﬂd
(
ckp
);

125 
	`check
();

126 
	`cfg_öô
();

128 
	`lﬂd_¥o˚s£s
(
£lf
);

130 
	`cfg_d⁄e
();

131 
	`bö_c⁄fig_‰ì
(
ckp
);

132 
ckp
 = 
NULL
;

133 
	}
}

135 
	$X86EmuSaveCheckpoöt
(
X86Emu
 *
£lf
, *
fûe_«me
)

137 
ckp
 = 
	`bö_c⁄fig_¸óã
(
fûe_«me
);

138 
	`cfg_öô
();

140 
	`ßve_¥o˚s£s
(
£lf
);

142 
	`bö_c⁄fig_ßve
(
ckp
);

143 
	`check
();

144 
	`cfg_d⁄e
();

145 
	`bö_c⁄fig_‰ì
(
ckp
);

146 
ckp
 = 
NULL
;

147 
	}
}

149 
	$lﬂd_¥o˚s£s
(
X86Emu
 *
emu
)

151 
	`cfg_des˚nd
("processes");

153 
	`cfg_√xt_chûd
())

155 
	`lﬂd_¥o˚ss
(
emu
);

156 
	`cfg_p›
();

159 
	`cfg_p›
();

160 
	}
}

162 
	$ßve_¥o˚s£s
(
X86Emu
 *
emu
)

164 c⁄° 
MAX_NUM_PIDS
 = 1024;

165 
pids
[
MAX_NUM_PIDS
];

166 
X86C⁄ãxt
 *
˘x
;

167 
num_pids
;

169 
	`cfg_push
("processes");

171 
num_pids
 = 0;

175 
˘x
 = 
emu
->
c⁄ãxt_li°_hód
; ctx; ctx = ctx->
c⁄ãxt_li°_√xt
)

177 i‡(
	`ödex_of
(
pids
, 
˘x
->
pid
, 
num_pids
) == -1)

179 
	`ßve_¥o˚ss
(
˘x
);

180 
pids
[
num_pids
] = 
˘x
->
pid
;

181 
num_pids
++;

182 
	`as£π
(
num_pids
 < 
MAX_NUM_PIDS
);

186 
	`cfg_p›
();

187 
	}
}

190 
	$lﬂd_¥o˚ss
(
X86Emu
 *
emu
)

192 
X86C⁄ãxt
 *
˘x
;

193 
x86_lﬂdî_t
 *
ld
;

195 
˘x
 = 
	`√w
(
X86C⁄ãxt
, 
emu
);

196 
˘x
->
glibc_£gmít_ba£
 = 
	`lﬂd_öt32
("glibc_base");

197 
˘x
->
glibc_£gmít_limô
 = 
	`lﬂd_öt32
("glibc_limit");

199 
ld
 = 
˘x
->
lﬂdî
;

201 
ld
->
öãΩ
 = 
	`lﬂd_°r_‹_dÊt
("interpreter", 0);

202 
ld
->
exe
 = 
	`lﬂd_°r_‹_dÊt
("executable", 0);

203 
ld
->
cwd
 = 
	`lﬂd_°r
("cwd");

204 
ld
->
°dö_fûe
 = 
	`lﬂd_°r_‹_dÊt
("stdin_file", 0);

205 
ld
->
°dout_fûe
 = 
	`lﬂd_°r_‹_dÊt
("stdout_file", 0);

208 
	`as£π
(
	`löked_li°_cou¡
(
ld
->
¨gs
) == 0);

209 
	`löked_li°_‰ì
(
ld
->
¨gs
);

210 
	`as£π
(
	`löked_li°_cou¡
(
ld
->
ív
) == 0);

211 
	`löked_li°_‰ì
(
ld
->
ív
);

212 
ld
->
¨gs
 = 
	`lﬂd_°r_li°
("args");

213 
ld
->
ív
 = 
	`lﬂd_°r_li°
("env");

215 
	`lﬂd_mem‹y
(
˘x
->
mem
);

216 
	`lﬂd_fds
(
˘x
->
fûe_desc_èbÀ
);

217 
	`lﬂd_thªads
(
˘x
);

218 
	}
}

220 
	$ßve_¥o˚ss
(
X86C⁄ãxt
 *
˘x
)

222 
	`cfg_push
("%d", 
˘x
->
pid
);

224 
	`ßve_¥o˚ss_misc
(
˘x
);

225 
	`ßve_mem‹y
(
˘x
->
mem
);

226 
	`ßve_fds
(
˘x
->
fûe_desc_èbÀ
);

227 
	`ßve_thªads
(
˘x
);

229 
	`cfg_p›
();

230 
	}
}

232 
	$ßve_¥o˚ss_misc
(
X86C⁄ãxt
 *
˘x
)

234 
x86_lﬂdî_t
 *
ld
;

236 
	`ßve_öt32
("pid", 
˘x
->
pid
);

237 
	`ßve_öt32
("glibc_ba£", 
˘x
->
glibc_£gmít_ba£
);

238 
	`ßve_öt32
("glibc_limô", 
˘x
->
glibc_£gmít_limô
);

240 
ld
 = 
˘x
->
lﬂdî
;

241 
	`ßve_°r
("öãΩªãr", 
ld
->
öãΩ
);

242 
	`ßve_°r
("execuèbÀ", 
ld
->
exe
);

243 
	`ßve_°r
("cwd", 
ld
->
cwd
);

244 
	`ßve_°r
("°dö_fûe" , 
ld
->
°dö_fûe
);

245 
	`ßve_°r
("°dout_fûe", 
ld
->
°dout_fûe
);

246 
	`ßve_°r_li°
("¨gs", 
ld
->
¨gs
);

247 
	`ßve_°r_li°
("ív", 
ld
->
ív
);

248 
	}
}

250 
	$lﬂd_mem‹y
(
mem_t
 *
mem
)

252 
	`cfg_des˚nd
("memory");

254 
mem
->
hóp_bªak
 = 
	`lﬂd_öt32
("brk");

255 
	`lﬂd_mem‹y_d©a
(
mem
);

257 
	`cfg_p›
();

258 
	}
}

260 
	$ßve_mem‹y
(
mem_t
 *
mem
)

262 
	`cfg_push
("memory");

264 
	`ßve_öt32
("brk", 
mem
->
hóp_bªak
);

265 
	`ßve_mem‹y_d©a
(
mem
);

267 
	`cfg_p›
();

268 
	}
}

270 
	$lﬂd_mem‹y_d©a
(
mem_t
 *
mem
)

272 
ﬁd_mem_ß„
;

274 
	`cfg_des˚nd
("ranges");

277 
ﬁd_mem_ß„
 = 
mem
->
ß„
;

278 
mem
->
ß„
 = 0;

280 
	`cfg_√xt_chûd
()) {

281 
	`lﬂd_mem‹y_ønge
(
mem
);

282 
	`cfg_p›
();

285 
mem
->
ß„
 = 
ﬁd_mem_ß„
;

287 
	`cfg_p›
();

288 
	}
}

290 
	$ßve_mem‹y_d©a
(
mem_t
 *
mem
)

292 
ﬁd_mem_ß„
;

293 
i
;

295 
	`cfg_push
("ranges");

298 
ﬁd_mem_ß„
 = 
mem
->
ß„
;

299 
mem
->
ß„
 = 0;

302 
i
 = 0; i < 
MEM_PAGE_COUNT
; i++)

304 
mem_∑ge_t
 *
∑ge
;

306 
∑ge
 = 
mem
->
∑ges
[
i
];Öage;Öagê∑ge->
√xt
)

307 
	`ßve_mem‹y_∑ge
(
∑ge
);

310 
mem
->
ß„
 = 
ﬁd_mem_ß„
;

312 
	`cfg_p›
();

313 
	}
}

315 
	$lﬂd_mem‹y_ønge
(
mem_t
 *
mem
)

317 *
d©a
;

318 
have_d©a
;

319 
addr
, 
size
, 
≥rm
, 
off£t
;

321 
addr
 = 
	`lﬂd_öt32
("addr");

322 
size
 = 
	`lﬂd_öt32
("size");

323 
≥rm
 = 
	`lﬂd_öt32
("perm");

324 
have_d©a
 = 
	`key_exi°s
("data");

325 i‡(
have_d©a
)

326 
	`lﬂd_vÆue
("d©a", (**)&
d©a
, 
size
);

328 i‡(
addr
 % 
MEM_PAGE_SIZE
 || 
size
 % MEM_PAGE_SIZE)

329 
	`Áèl
("MemoryÑange %s (addr: 0x%x, size: %d)"

331 
	`cfg_∑th
(), 
addr
, 
size
, 
MEM_PAGE_SIZE
);

334 
off£t
 = 0; off£à< 
size
; off£à+
MEM_PAGE_SIZE
) {

335 i‡(
	`mem_∑ge_gë
(
mem
, 
addr
 + 
off£t
))

336 
	`Áèl
("CheckpointÉlement %s duplicates "

338 
	`cfg_∑th
(), 
addr
 + 
off£t
);

341 
	`mem_m≠
(
mem
, 
addr
, 
size
, 
≥rm
);

343 i‡(
have_d©a
) {

344 
	`mem_wrôe
(
mem
, 
addr
, 
size
, 
d©a
);

348 
d©a
 = 
NULL
;

349 
	`bö_c⁄fig_ªmove
(
ckp
, 
	`cfg_t›
()->
ñem
, "data");

350 
	`check
();

352 
	}
}

354 
	$ßve_mem‹y_∑ge
(
mem_∑ge_t
 *
∑ge
)

356 
	`cfg_push_unique
();

358 
	`ßve_öt32
("addr", 
∑ge
->
èg
);

359 
	`ßve_öt32
("size", 
MEM_PAGE_SIZE
);

360 
	`ßve_öt32
("≥rm", 
∑ge
->
≥rm
);

361 i‡(
∑ge
->
d©a
)

362 
	`ßve_vÆue_no_dup
("d©a", 
∑ge
->
d©a
, 
MEM_PAGE_SIZE
);

364 
	`cfg_p›
();

365 
	}
}

367 
	$lﬂd_fds
(
x86_fûe_desc_èbÀ_t
 *
fdt
)

369 
	`cfg_des˚nd
("file_descriptors");

371 
	`cfg_√xt_chûd
()) {

372 
	`lﬂd_fd
(
fdt
);

373 
	`cfg_p›
();

376 
	`cfg_p›
();

377 
	}
}

379 
	$lﬂd_fd
(
x86_fûe_desc_èbÀ_t
 *
fdt
)

381 
köd
, 
off£t
;

382 
Êags
, 
√w_Êags
;

383 
gue°_fd
, 
ho°_fd
;

384 *
∑th
;

386 
köd
 = 
	`lﬂd_öt32
("kind");

387 
gue°_fd
 = 
	`lﬂd_öt32
("index");

388 i‡(
köd
 !
fûe_desc_ªguœr
)

390 
	`w¨nög
("Ign‹ög %†“⁄-ªguœ∏fûe)", 
	`cfg_∑th
());

393 
Êags
 = 
	`lﬂd_öt32
("flags");

394 
∑th
 = 
	`lﬂd_°r
 ("path");

395 
off£t
 = 
	`lﬂd_öt32
("offset");

397 
√w_Êags
 =

398 
Êags
 & ~
O_CREAT
 & ~
O_EXCL
 & ~
O_NOCTTY
 & ~
O_TRUNC
;

400 
ho°_fd
 = 
	`›í
(
∑th
, 
√w_Êags
);

401 i‡(
ho°_fd
 < 0)

403 
	`w¨nög
("Ignoring %s: couldÇot open %s",

404 
	`cfg_∑th
(), 
∑th
);

408 i‡(
√w_Êags
 !
Êags
)

410 
	`w¨nög
("Flags for %s changed from %xÅo %x",

411 
	`cfg_∑th
(), 
Êags
, 
√w_Êags
);

414 i‡(
off£t
 > 0)

416 
ªt_off£t
 = 
	`l£ek
(
ho°_fd
, 
off£t
, 
SEEK_SET
);

417 if(
ªt_off£t
 !
off£t
)

418 
	`Áèl
("WhileÜoading %s, "

420 
	`cfg_∑th
(), 
off£t
, 
∑th
);

423 
	`x86_fûe_desc_èbÀ_íåy_√w_gue°_fd
(
fdt
, 
fûe_desc_ªguœr
,

424 
gue°_fd
, 
ho°_fd
, (*)
∑th
, 
Êags
);

426 
	`‰ì
(
∑th
);

427 
	}
}

429 
	$ßve_fds
(
x86_fûe_desc_èbÀ_t
 *
fdt
)

431 
i
;

433 
	`cfg_push
("file_descriptors");

435 
i
 = 0; i < 
	`li°_cou¡
(
fdt
->
fûe_desc_li°
); i++)

437 
x86_fûe_desc_t
 *
fd
;

439 
fd
 = 
	`li°_gë
(
fdt
->
fûe_desc_li°
, 
i
);

440 i‡(!
fd
) ;

442 
	`cfg_push
("%d", 
fd
->
gue°_fd
);

444 
	`ßve_öt32
("ödex", 
fd
->
gue°_fd
);

445 
	`ßve_°r
("∑th", 
fd
->
∑th
);

446 
	`ßve_öt32
("Êags", 
fd
->
Êags
);

447 
	`ßve_öt32
("köd", 
fd
->
köd
);

448 i‡(
fd
->
köd
 =
fûe_desc_ªguœr
)

450 
	`ßve_öt32
("offset",

451 
	`l£ek
(
fd
->
ho°_fd
, 0, 
SEEK_CUR
));

454 
	`cfg_p›
();

457 
	`cfg_p›
();

458 
	}
}

460 
	$lﬂd_thªads
(
X86C⁄ãxt
 *
¥o˚ss_˘x
)

462 
fú°
;

464 
	`cfg_des˚nd
("threads");

466 
fú°
 = 1;

468 
	`cfg_√xt_chûd
())

470 
X86C⁄ãxt
 *
thªad_˘x
;

471 i‡(
fú°
)

473 
thªad_˘x
 = 
¥o˚ss_˘x
;

474 
fú°
 = 0;

478 
thªad_˘x
 = 
	`√w_˘‹
(
X86C⁄ãxt
, 
Cª©eAndCl⁄e
,

479 
¥o˚ss_˘x
);

482 
	`lﬂd_ªgs
(
thªad_˘x
->
ªgs
);

484 
	`cfg_p›
();

487 
	`cfg_p›
();

488 
	}
}

490 
	$ßve_thªads
(
X86C⁄ãxt
 *
¥o˚ss_˘x
)

492 
X86Emu
 *
emu
 = 
¥o˚ss_˘x
->emu;

493 
X86C⁄ãxt
 *
thªad_˘x
;

495 
	`cfg_push
("threads");

498 
thªad_˘x
 = 
emu
->
c⁄ãxt_li°_hód
;

499 
thªad_˘x
;

500 
thªad_˘x
 =Åhªad_˘x->
c⁄ãxt_li°_√xt
)

502 i‡(
thªad_˘x
->
pid
 =
¥o˚ss_˘x
->pid)

504 
	`ßve_thªad
(
thªad_˘x
);

508 
	`cfg_p›
();

509 
	}
}

511 
	$ßve_thªad
(
X86C⁄ãxt
 *
˘x
)

513 
	`cfg_push_unique
();

515 i‡(
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
))

517 
	`ßve_ªgs
(
˘x
->
backup_ªgs
);

521 
	`ßve_ªgs
(
˘x
->
ªgs
);

524 
	`cfg_p›
();

525 
	}
}

527 
	$lﬂd_ªgs
(
x86_ªgs_t
 *
ªgs
)

529 
	`cfg_des˚nd
("registers");

533 
ªgs
->
óx
 = 
	`lﬂd_öt32
("eax");

534 
ªgs
->
ecx
 = 
	`lﬂd_öt32
("ecx");

535 
ªgs
->
edx
 = 
	`lﬂd_öt32
("edx");

536 
ªgs
->
ebx
 = 
	`lﬂd_öt32
("ebx");

537 
ªgs
->
e•
 = 
	`lﬂd_öt32
("esp");

538 
ªgs
->
ebp
 = 
	`lﬂd_öt32
("ebp");

539 
ªgs
->
esi
 = 
	`lﬂd_öt32
("esi");

540 
ªgs
->
edi
 = 
	`lﬂd_öt32
("edi");

541 
ªgs
->
eù
 = 
	`lﬂd_öt32
("eip");

542 
ªgs
->
eÊags
 = 
	`lﬂd_öt32
("eflags");

547 
ªgs
->
es
 = 
	`lﬂd_öt16
("es");

548 
ªgs
->
cs
 = 
	`lﬂd_öt16
("cs");

549 
ªgs
->
ss
 = 
	`lﬂd_öt16
("ss");

550 
ªgs
->
ds
 = 
	`lﬂd_öt16
("ds");

551 
ªgs
->
fs
 = 
	`lﬂd_öt16
("fs");

552 
ªgs
->
gs
 = 
	`lﬂd_öt16
("gs");

557 
Âsw
;

558 
·w
;

559 
buf
[10];

560 
ªl_idx
;

562 
Âsw
 = 
	`lﬂd_öt32
("fpsw");

563 
ªgs
->
Âu_t›
 = 
	`BITS32
(
Âsw
, 13, 11);

564 
ªgs
->
Âu_code
 = 
	`SETBITVALUE32
‘egs->Âu_code, 3, 
	`GETBIT32
(
Âsw
, 14));

565 
ªgs
->
Âu_code
 = 
	`SETBITVALUE32
‘egs->Âu_code, 2, 
	`GETBIT32
(
Âsw
, 10));

566 
ªgs
->
Âu_code
 = 
	`SETBITVALUE32
‘egs->Âu_code, 1, 
	`GETBIT32
(
Âsw
, 9));

567 
ªgs
->
Âu_code
 = 
	`SETBITVALUE32
‘egs->Âu_code, 0, 
	`GETBIT32
(
Âsw
, 8));

568 
ªgs
->
Âu_˘æ
 = 
	`lﬂd_öt16
("fpcw");

570 
·w
 = 
	`lﬂd_öt16
("ftw");

571 
ªl_idx
 = 0;Ñel_idx < 8;Ñel_idx++) {

572 
abs_idx
;

574 
	`•rötf
(
buf
, "°%d", 
ªl_idx
);

575 
abs_idx
 = (
ªgs
->
Âu_t›
 + 
ªl_idx
) % 8;

576 
	`lﬂd_vÆue
(
buf
, (*)
ªgs
->
Âu_°ack
[
abs_idx
].
vÆue
, 10);

577 
ªgs
->
Âu_°ack
[
abs_idx
].
vÆid
 = 
	`GETBIT32
(
·w
,ábs_idx);

583 
xmm_idx
;

584 
buf
[10];

586 
xmm_idx
 = 0; xmm_idx < 8; xmm_idx++) {

587 
	`•rötf
(
buf
, "xmm%d", 
xmm_idx
);

588 
	`lﬂd_vÆue
(
buf
, (*)&
ªgs
->
xmm
[
xmm_idx
], 16);

592 
	`cfg_p›
();

593 
	}
}

595 
	$ßve_ªgs
(
x86_ªgs_t
 *
ªgs
)

597 
	`cfg_push
("registers");

601 
	`ßve_öt32
("óx", 
ªgs
->
óx
);

602 
	`ßve_öt32
("ecx", 
ªgs
->
ecx
);

603 
	`ßve_öt32
("edx", 
ªgs
->
edx
);

604 
	`ßve_öt32
("ebx", 
ªgs
->
ebx
);

605 
	`ßve_öt32
("e•", 
ªgs
->
e•
);

606 
	`ßve_öt32
("ebp", 
ªgs
->
ebp
);

607 
	`ßve_öt32
("esi", 
ªgs
->
esi
);

608 
	`ßve_öt32
("edi", 
ªgs
->
edi
);

609 
	`ßve_öt32
("eù", 
ªgs
->
eù
);

610 
	`ßve_öt32
("eÊags", 
ªgs
->
eÊags
);

615 
	`ßve_öt16
("es", 
ªgs
->
es
);

616 
	`ßve_öt16
("cs", 
ªgs
->
cs
);

617 
	`ßve_öt16
("ss", 
ªgs
->
ss
);

618 
	`ßve_öt16
("ds", 
ªgs
->
ds
);

619 
	`ßve_öt16
("fs", 
ªgs
->
fs
);

620 
	`ßve_öt16
("gs", 
ªgs
->
gs
);

625 
Âsw
;

626 
·w
;

627 
ªl_idx
;

628 
buf
[10];

630 
Âsw
 = (
	`BITS32
(
ªgs
->
Âu_t›
, 2, 0) << 11) |

631 (
	`GETBIT32
(
ªgs
->
Âu_code
, 3) << 14) |

632 (
	`GETBIT32
(
ªgs
->
Âu_code
, 2) << 10) |

633 (
	`GETBIT32
(
ªgs
->
Âu_code
, 1) << 9) |

634 (
	`GETBIT32
(
ªgs
->
Âu_code
, 0) << 8);

636 
	`ßve_öt32
("Âsw", 
Âsw
);

637 
	`ßve_öt16
("Âcw", 
ªgs
->
Âu_˘æ
);

639 
ªl_idx
 = 0;Ñel_idx < 8;Ñel_idx++) {

640 
abs_idx
;

642 
	`•rötf
(
buf
, "°%d", 
ªl_idx
);

643 
abs_idx
 = (
ªgs
->
Âu_t›
 + 
ªl_idx
) % 8;

644 
	`ßve_vÆue
(
buf
, 
ªgs
->
Âu_°ack
[
abs_idx
].
vÆue
, 10);

645 
·w
 = 
	`SETBITVALUE32
(·w, 
abs_idx
,

646 
ªgs
->
Âu_°ack
[
abs_idx
].
vÆid
);

648 
	`ßve_öt16
("·w", 
·w
);

653 
xmm_idx
;

654 
buf
[10];

656 
xmm_idx
 = 0; xmm_idx < 8; xmm_idx++) {

657 
	`•rötf
(
buf
, "xmm%d", 
xmm_idx
);

658 
	`ßve_vÆue
(
buf
, &
ªgs
->
xmm
[
xmm_idx
], 16);

662 
	`cfg_p›
();

663 
	}
}

665 
	$check
()

667 
ckp
->
îr‹_code
) {

668 
BIN_CONFIG_ERR_OK
:

671 
BIN_CONFIG_ERR_PARENT
:

672 
	`Áèl
("Checkpoötög %s:Éº‹ i¿checkpoöàcode", 
	`cfg_∑th
());

674 
BIN_CONFIG_ERR_IO
:

675 
	`Áèl
("CheckpoötögÅÿ%s: I/OÉº‹", 
ckp
->
fûe_«me
);

678 
	`Áèl
("Checkpoötög %s: f‹m©Éº‹", 
	`cfg_∑th
());

681 
	}
}

683 
	$ödex_of
(*
¨øy
, 
vÆue
, 
n
)

685 
i
;

687 
i
 = 0; i < 
n
; i++)

689 i‡(
¨øy
[
i
] =
vÆue
)

690  
i
;

693 
	}
}

695 
	$cfg_öô
()

697 
cfg_°ack
 = 
	`li°_¸óã
();

699 
	`li°_push
(
cfg_°ack
, 
	`cfg_°ack_ñem_¸óã
(0, ""));

700 
cfg_unique_num
 = 0;

701 
	}
}

703 
	$cfg_d⁄e
()

705 
	`cfg_p›
();

706 
	`li°_‰ì
(
cfg_°ack
);

707 
	}
}

709 
	$cfg_push
(*
fmt
, ...)

711 
bö_c⁄fig_ñem_t
 *
cfg
;

712 
buf
[
MAX_STRING_SIZE
];

713 
va_li°
 
vl
;

715 
	`va_°¨t
(
vl
, 
fmt
);

716 
	`v•rötf
(
buf
, 
fmt
, 
vl
);

717 
	`va_íd
(
vl
);

719 
cfg
 = 
	`bö_c⁄fig_add
(
ckp
, 
	`cfg_t›
()->
ñem
, 
buf
, 
NULL
, 0);

720 
	`li°_push
(
cfg_°ack
, 
	`cfg_°ack_ñem_¸óã
(
cfg
, 
buf
));

721 
	}
}

723 
	$cfg_push_unique
()

725 
bö_c⁄fig_ñem_t
 *
cfg
;

726 
buf
[
MAX_STRING_SIZE
];

728 
	`•rötf
(
buf
, "%d", 
cfg_unique_num
);

729 
cfg
 = 
	`bö_c⁄fig_add
(
ckp
, 
	`cfg_t›
()->
ñem
, 
buf
, 
NULL
, 0);

730 
cfg_unique_num
++;

731 
	`li°_push
(
cfg_°ack
, 
	`cfg_°ack_ñem_¸óã
(
cfg
, 
buf
));

732 
	}
}

734 
	$ßve_øw_°r
(*
°r
)

736 
buf
[
MAX_STRING_SIZE
];

738 
	`•rötf
(
buf
, "%d", 
cfg_unique_num
);

739 
	`bö_c⁄fig_add
(
ckp
, 
	`cfg_t›
()->
ñem
, 
buf
, 
°r
, 
	`°æí
(str) + 1);

740 
cfg_unique_num
++;

741 
	}
}

743 
	$cfg_p›
()

745 
	`cfg_°ack_ñem_‰ì
(
	`cfg_t›
());

746 
	`li°_p›
(
cfg_°ack
);

747 
	}
}

749 
	$cfg_åy_des˚nd
(*
key
)

751 
bö_c⁄fig_ñem_t
 *
cfg
;

753 
cfg
 = 
	`bö_c⁄fig_gë
(
ckp
, 
	`cfg_t›
()->
ñem
, 
key
, 0, 0);

754 i‡(
ckp
->
îr‹_code
 =
BIN_CONFIG_ERR_NOT_FOUND
)

756 
	`check
();

757 
	`li°_push
(
cfg_°ack
, 
	`cfg_°ack_ñem_¸óã
(
cfg
, 
key
));

760 
	}
}

762 
	$cfg_des˚nd
(*
key
)

764 i‡(!
	`cfg_åy_des˚nd
(
key
))

765 
	`Áèl
("Loading checkpoint from %s: couldÇot find %s/%s",

766 
ckp
->
fûe_«me
, 
	`cfg_∑th
(), 
key
);

767 
	}
}

769 
	$cfg_√xt_chûd
()

771 
bö_c⁄fig_ñem_t
 *
chûd
;

772 *
key
;

774 i‡(
	`cfg_t›
()->
chûd_idx
 < 0) {

776 
chûd
 = 
	`bö_c⁄fig_föd_fú°
(
ckp
, 
	`cfg_t›
()->
ñem
, &
key
, 0, 0);

778 
chûd
 = 
	`bö_c⁄fig_föd_√xt
(
ckp
, 
	`cfg_t›
()->
ñem
, &
key
, 0, 0);

780 
	`cfg_t›
()->
chûd_idx
++;

782 i‡(!
chûd
 && 
ckp
->
îr‹_code
 =
BIN_CONFIG_ERR_NOT_FOUND
)

784 
	`check
();

786 
	`li°_push
(
cfg_°ack
, 
	`cfg_°ack_ñem_¸óã
(
chûd
, 
key
));

789 
	}
}

791 
cfg_°ack_ñem_t
 *
	$cfg_t›
()

793  (
cfg_°ack_ñem_t
 *)
	`li°_t›
(
cfg_°ack
);

794 
	}
}

796 *
	$cfg_∑th
()

798 
buf
[
MAX_STRING_SIZE
];

799 
i
;

800 
Àn
 = 0;

803 
i
 = 1; i < 
cfg_°ack
->
cou¡
; i++) {

804 
Àn
 +
	`¢¥ötf
(
buf
 +Üí, 
MAX_STRING_SIZE
 -Üen, "/%s",

805 ((
cfg_°ack_ñem_t
 *)

806 
	`li°_gë
(
cfg_°ack
, 
i
))->
key
);

809  
buf
;

810 
	}
}

812 
	$key_exi°s
(*
key
)

814 i‡(!
	`bö_c⁄fig_gë
(
ckp
, 
	`cfg_t›
()->
ñem
, 
key
, 0, 0) &&

815 
ckp
->
îr‹_code
 =
BIN_CONFIG_ERR_NOT_FOUND
) {

819 
	`check
();

822 
	}
}

824 
	$lﬂd_vÆue
(*
key
, **
vÆue
, 
size
)

826 
ckp_size
;

828 
	`bö_c⁄fig_gë
(
ckp
, 
	`cfg_t›
()->
ñem
, 
key
, 
vÆue
, &
ckp_size
);

829 
	`check
();

830 i‡(
size
 !
ckp_size
)

831 
	`Áèl
("CheckpointÉlement data size mismatch (element: %s/%s, "

833 
	`cfg_∑th
(), 
key
, 
size
, 
ckp_size
);

834 
	}
}

836 
	$ßve_vÆue
(*
key
, *
vÆue
, 
size
)

838 
	`bö_c⁄fig_add
(
ckp
, 
	`cfg_t›
()->
ñem
, 
key
, 
vÆue
, 
size
);

839 
	`check
();

840 
	}
}

842 
	$ßve_vÆue_no_dup
(*
key
, *
vÆue
, 
size
)

844 
	`bö_c⁄fig_add_no_dup
(
ckp
, 
	`cfg_t›
()->
ñem
, 
key
, 
vÆue
, 
size
);

845 
	`check
();

846 
	}
}

848 
	#DEF_LOAD_TYPE
(
ty≥
) \

849 
ty≥
##
_t
 
lﬂd_
##
	`ty≥
(*
key
) \

851 
ty≥
##
_t
 *
vÆue
; \

852 
	`lﬂd_vÆue
(
key
, (**)&
vÆue
, (
ty≥
##
_t
)); \

853  *
vÆue
; \

855 

	)

856 
	$DEF_LOAD_TYPE
(
öt16
)

857 
	$DEF_LOAD_TYPE
(
öt32
)

859 #unde‡
DEF_LOAD_TYPE


861 
	#DEF_SAVE_TYPE
(
ty≥
) \

862 
ßve_
##
	`ty≥
(*
key
, 
ty≥
##
_t
 
vÆue
) \

864 
	`bö_c⁄fig_add
(
ckp
, 
	`cfg_t›
()->
ñem
, 
key
, &
vÆue
, (value)); \

865 
	`check
(); \

866 
	}
} \

867 

	)

868 
	$DEF_SAVE_TYPE
(
öt16
)

869 
	$DEF_SAVE_TYPE
(
öt32
)

871 #unde‡
DEF_SAVE_TYPE


873 *
	$lﬂd_°r
(*
key
)

875 *
vÆue
;

876 *
dup
;

877 
size
;

879 
	`bö_c⁄fig_gë
(
ckp
, 
	`cfg_t›
()->
ñem
, 
key
, (**)&
vÆue
, &
size
);

881 i‡(!
	`memchr
(
vÆue
, 0, 
size
))

882 
	`Áèl
("NullÅerminatorÇot found in string (element: %s/%s)",

883 
	`cfg_∑th
(), 
key
);

885 
dup
 = 
	`x°rdup
(
vÆue
);

887  
dup
;

888 
	}
}

890 *
	$lﬂd_°r_‹_dÊt
(*
key
, *
dÊt
)

892 if(
	`key_exi°s
(
key
))

893  
	`lﬂd_°r
(
key
);

895  
dÊt
;

896 
	}
}

898 
	$ßve_°r
(*
key
, *
°r
)

900 i‡(
°r
) {

902 
	`ßve_vÆue
(
key
, 
°r
, 
	`°æí
(str) + 1);

904 
	`w¨nög
("%s/%†nŸávaûabÀ", 
	`cfg_∑th
(), 
key
);

906 
	}
}

908 
löked_li°_t
 *
	$lﬂd_°r_li°
(*
key
)

910 
löked_li°_t
 *
Œ
 = 
	`löked_li°_¸óã
();

911 
	`cfg_des˚nd
(
key
);

912 
	`cfg_√xt_chûd
()) {

913 *
dup
;

915 
dup
 = 
	`x°rdup
(
	`cfg_t›
()->
key
);

917 
	`löked_li°_add
(
Œ
, 
dup
);

918 
	`cfg_p›
();

920 
	`cfg_p›
();

921  
Œ
;

922 
	}
}

924 
	$ßve_°r_li°
(*
key
, 
löked_li°_t
 *
li°
)

926 
	`cfg_push
(
key
);

928 
	`löked_li°_hód
(
li°
);

929 !
	`löked_li°_is_íd
(
li°
)) {

930 
	`ßve_øw_°r
(
	`löked_li°_gë
(
li°
));

931 
	`löked_li°_√xt
(
li°
);

934 
	`cfg_p›
();

935 
	}
}

937 
cfg_°ack_ñem_t
 *
	$cfg_°ack_ñem_¸óã
(

938 
bö_c⁄fig_ñem_t
 *
ñem
,

939 *
key
)

941 
cfg_°ack_ñem_t
 *
ªt
;

943 
ªt
 = 
	`xmÆloc
((
cfg_°ack_ñem_t
));

944 
ªt
->
ñem
 =Élem;

945 
ªt
->
key
 = 
	`x°rdup
(key);

946 
ªt
->
chûd_idx
 = -1;

948  
ªt
;

949 
	}
}

951 
	$cfg_°ack_ñem_‰ì
(
cfg_°ack_ñem_t
 *
ñem
)

953 
	`‰ì
(
ñem
->
key
);

954 
	`‰ì
(
ñem
);

955 
	}
}

	@emu/checkpoint.h

20 #i‚de‡
ARCH_X86_EMU_CHECKPOINT_H


21 
	#ARCH_X86_EMU_CHECKPOINT_H


	)

23 
	~<lib/utû/˛ass.h
>

32 
X86EmuLﬂdCheckpoöt
(
X86Emu
 *
£lf
, *
fûe_«me
);

33 
X86EmuSaveCheckpoöt
(
X86Emu
 *
£lf
, *
fûe_«me
);

	@emu/context.c

20 
	~<pﬁl.h
>

21 
	~<uni°d.h
>

23 
	~<¨ch/x86/timög/˝u.h
>

24 
	~<lib/esim/esim.h
>

25 
	~<lib/mh™dÀ/mh™dÀ.h
>

26 
	~<lib/utû/bô-m≠.h
>

27 
	~<lib/utû/debug.h
>

28 
	~<lib/utû/misc.h
>

29 
	~<lib/utû/°rög.h
>

30 
	~<lib/utû/timî.h
>

31 
	~<mem-sy°em/mem‹y.h
>

32 
	~<mem-sy°em/mmu.h
>

33 
	~<mem-sy°em/•ec-mem.h
>

35 
	~"c⁄ãxt.h
"

36 
	~"emu.h
"

37 
	~"fûe-desc.h
"

38 
	~"iß.h
"

39 
	~"lﬂdî.h
"

40 
	~"ªgs.h
"

41 
	~"sig«l.h
"

42 
	~"sysˇŒ.h
"

49 
CLASS_IMPLEMENTATION
(
X86C⁄ãxt
);

51 
	$X86C⁄ãxtDoCª©e
(
X86C⁄ãxt
 *
£lf
, 
X86Emu
 *
emu
)

53 
num_nodes
;

54 
i
;

57 
£lf
->
emu
 =Ému;

58 
£lf
->
pid
 = 
emu
->
cuºít_pid
++;

63 
	`X86C⁄ãxtSëSèã
(
£lf
, 
X86C⁄ãxtRu¬ög
);

64 
	`DOUBLE_LINKED_LIST_INSERT_HEAD
(
emu
, 
c⁄ãxt
, 
£lf
);

67 
£lf
->
ªgs
 = 
	`x86_ªgs_¸óã
();

68 
£lf
->
backup_ªgs
 = 
	`x86_ªgs_¸óã
();

69 
£lf
->
sig«l_mask_èbÀ
 = 
	`x86_sig«l_mask_èbÀ_¸óã
();

73 
num_nodes
 = 
x86_˝u_num_c‹es
 * 
x86_˝u_num_thªads
;

74 
£lf
->
afföôy
 = 
	`bô_m≠_¸óã
(
num_nodes
);

75 
i
 = 0; i < 
num_nodes
; i++)

76 
	`bô_m≠_£t
(
£lf
->
afföôy
, 
i
, 1, 1);

79 
	`asObje˘
(
£lf
)->
Dump
 = 
X86C⁄ãxtDump
;

80 
	}
}

83 
	$X86C⁄ãxtCª©e
(
X86C⁄ãxt
 *
£lf
, 
X86Emu
 *
emu
)

86 
	`X86C⁄ãxtDoCª©e
(
£lf
, 
emu
);

89 
£lf
->
lﬂdî
 = 
	`x86_lﬂdî_¸óã
();

92 
£lf
->
addªss_•a˚_ödex
 = 
	`mmu_addªss_•a˚_√w
();

93 
£lf
->
mem
 = 
	`mem_¸óã
();

94 
£lf
->
•ec_mem
 = 
	`•ec_mem_¸óã
(£lf->
mem
);

97 
£lf
->
sig«l_h™dÀr_èbÀ
 = 
	`x86_sig«l_h™dÀr_èbÀ_¸óã
();

98 
£lf
->
fûe_desc_èbÀ
 = 
	`x86_fûe_desc_èbÀ_¸óã
();

99 
	}
}

102 
	$X86C⁄ãxtCª©eAndCl⁄e
(
X86C⁄ãxt
 *
£lf
, X86C⁄ãxà*
˛⁄ed
)

105 
	`X86C⁄ãxtDoCª©e
(
£lf
, 
˛⁄ed
->
emu
);

108 
	`x86_ªgs_c›y
(
£lf
->
ªgs
, 
˛⁄ed
->regs);

114 
£lf
->
addªss_•a˚_ödex
 = 
˛⁄ed
->address_space_index;

115 
£lf
->
mem
 = 
	`mem_lök
(
˛⁄ed
->mem);

116 
£lf
->
•ec_mem
 = 
	`•ec_mem_¸óã
(£lf->
mem
);

119 
£lf
->
lﬂdî
 = 
	`x86_lﬂdî_lök
(
˛⁄ed
->loader);

122 
£lf
->
sig«l_h™dÀr_èbÀ
 = 
	`x86_sig«l_h™dÀr_èbÀ_lök
(
˛⁄ed
->signal_handler_table);

123 
£lf
->
fûe_desc_èbÀ
 = 
	`x86_fûe_desc_èbÀ_lök
(
˛⁄ed
->file_desc_table);

126 
£lf
->
glibc_£gmít_ba£
 = 
˛⁄ed
->glibc_segment_base;

127 
£lf
->
glibc_£gmít_limô
 = 
˛⁄ed
->glibc_segment_limit;

130 
£lf
->
∑ª¡
 = 
˛⁄ed
;

131 
	}
}

134 
	$X86C⁄ãxtCª©eAndF‹k
(
X86C⁄ãxt
 *
£lf
, X86C⁄ãxà*
f‹ked
)

137 
	`X86C⁄ãxtDoCª©e
(
£lf
, 
f‹ked
->
emu
);

140 
	`x86_ªgs_c›y
(
£lf
->
ªgs
, 
f‹ked
->regs);

143 
£lf
->
addªss_•a˚_ödex
 = 
	`mmu_addªss_•a˚_√w
();

144 
£lf
->
mem
 = 
	`mem_¸óã
();

145 
£lf
->
•ec_mem
 = 
	`•ec_mem_¸óã
(£lf->
mem
);

146 
	`mem_˛⁄e
(
£lf
->
mem
, 
f‹ked
->mem);

149 
£lf
->
lﬂdî
 = 
	`x86_lﬂdî_lök
(
f‹ked
->loader);

152 
£lf
->
sig«l_h™dÀr_èbÀ
 = 
	`x86_sig«l_h™dÀr_èbÀ_¸óã
();

153 
£lf
->
fûe_desc_èbÀ
 = 
	`x86_fûe_desc_èbÀ_¸óã
();

156 
£lf
->
glibc_£gmít_ba£
 = 
f‹ked
->glibc_segment_base;

157 
£lf
->
glibc_£gmít_limô
 = 
f‹ked
->glibc_segment_limit;

160 
£lf
->
∑ª¡
 = 
f‹ked
;

161 
	}
}

164 
	$X86C⁄ãxtDe°roy
(
X86C⁄ãxt
 *
£lf
)

166 
X86Emu
 *
emu
 = 
£lf
->emu;

170 i‡(!
	`X86C⁄ãxtGëSèã
(
£lf
, 
X86C⁄ãxtFöished
 | 
X86C⁄ãxtZombõ
))

171 
	`X86C⁄ãxtFöish
(
£lf
, 0);

175 
	`as£π
(!
	`DOUBLE_LINKED_LIST_MEMBER
(
emu
, 
ru¬ög
, 
£lf
));

176 
	`as£π
(!
	`DOUBLE_LINKED_LIST_MEMBER
(
emu
, 
su•íded
, 
£lf
));

177 
	`as£π
(!
	`DOUBLE_LINKED_LIST_MEMBER
(
emu
, 
zombõ
, 
£lf
));

178 
	`as£π
(
	`DOUBLE_LINKED_LIST_MEMBER
(
emu
, 
föished
, 
£lf
));

179 
	`DOUBLE_LINKED_LIST_REMOVE
(
emu
, 
föished
, 
£lf
);

182 
	`x86_ªgs_‰ì
(
£lf
->
ªgs
);

183 
	`x86_ªgs_‰ì
(
£lf
->
backup_ªgs
);

184 
	`x86_sig«l_mask_èbÀ_‰ì
(
£lf
->
sig«l_mask_èbÀ
);

185 
	`•ec_mem_‰ì
(
£lf
->
•ec_mem
);

186 
	`bô_m≠_‰ì
(
£lf
->
afföôy
);

189 
	`x86_lﬂdî_u∆ök
(
£lf
->
lﬂdî
);

190 
	`x86_sig«l_h™dÀr_èbÀ_u∆ök
(
£lf
->
sig«l_h™dÀr_èbÀ
);

191 
	`x86_fûe_desc_èbÀ_u∆ök
(
£lf
->
fûe_desc_èbÀ
);

192 
	`mem_u∆ök
(
£lf
->
mem
);

195 
	`DOUBLE_LINKED_LIST_REMOVE
(
emu
, 
c⁄ãxt
, 
£lf
);

196 
	`X86C⁄ãxtDebug
("inst %lld: context %d freed\n",

197 
	`asEmu
(
emu
)->
ö°ru˘i⁄s
, 
£lf
->
pid
);

198 
	}
}

201 
	$X86C⁄ãxtDump
(
Obje˘
 *
£lf
, 
FILE
 *
f
)

203 
X86C⁄ãxt
 *
c⁄ãxt
 = 
	`asX86C⁄ãxt
(
£lf
);

204 
°©e_°r
[
MAX_STRING_SIZE
];

207 
	`Ârötf
(
f
, "------------\n");

208 
	`Ârötf
(
f
, "C⁄ãxà%d\n", 
c⁄ãxt
->
pid
);

209 
	`Ârötf
(
f
, "------------\n\n");

211 
	`°r_m≠_Êags
(&
x86_c⁄ãxt_°©e_m≠
, 
c⁄ãxt
->
°©e
, 
°©e_°r
,  state_str);

212 
	`Ârötf
(
f
, "Sèã = %s\n", 
°©e_°r
);

213 i‡(!
c⁄ãxt
->
∑ª¡
)

214 
	`Ârötf
(
f
, "Parent = None\n");

216 
	`Ârötf
(
f
, "P¨íà%d\n", 
c⁄ãxt
->
∑ª¡
->
pid
);

217 
	`Ârötf
(
f
, "Hó∞bªak: 0x%x\n", 
c⁄ãxt
->
mem
->
hóp_bªak
);

220 
	`Ârötf
(
f
, "BlockedSig«lMask = 0x%Œx ", 
c⁄ãxt
->
sig«l_mask_èbÀ
->
blocked
);

221 
	`x86_sig£t_dump
(
c⁄ãxt
->
sig«l_mask_èbÀ
->
blocked
, 
f
);

222 
	`Ârötf
(
f
, "\nPídögSig«lMask = 0x%Œx ", 
c⁄ãxt
->
sig«l_mask_èbÀ
->
≥ndög
);

223 
	`x86_sig£t_dump
(
c⁄ãxt
->
sig«l_mask_èbÀ
->
≥ndög
, 
f
);

224 
	`Ârötf
(
f
, "\nAffinity = ");

225 
	`bô_m≠_dump
(
c⁄ãxt
->
afföôy
, 0, 
x86_˝u_num_c‹es
 * 
x86_˝u_num_thªads
, 
f
);

226 
	`Ârötf
(
f
, "\n");

229 
	`Ârötf
(
f
, "\n\n");

230 
	}
}

233 
	$X86C⁄ãxtExecuã
(
X86C⁄ãxt
 *
£lf
)

235 
X86Emu
 *
emu
 = 
£lf
->emu;

237 
x86_ªgs_t
 *
ªgs
 = 
£lf
->regs;

238 
mem_t
 *
mem
 = 
£lf
->mem;

240 
buf„r
[20];

241 *
buf„r_±r
;

243 
•ec_mode
;

247 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
£lf
, 
X86C⁄ãxtS≥cMode
);

248 
mem
->
ß„
 = 
•ec_mode
 ? 0 : 
mem_ß„_mode
;

252 
buf„r_±r
 = 
	`mem_gë_buf„r
(
mem
, 
ªgs
->
eù
, 20, 
mem_ac˚ss_exec
);

253 i‡(!
buf„r_±r
)

258 
mem
->
ß„
 = 0;

259 
buf„r_±r
 = 
buf„r
;

260 
	`mem_ac˚ss
(
mem
, 
ªgs
->
eù
, 20, 
buf„r_±r
, 
mem_ac˚ss_exec
);

262 
mem
->
ß„
 = 
mem_ß„_mode
;

265 
	`x86_ö°_decode
(&
£lf
->
ö°
, 
ªgs
->
eù
, 
buf„r_±r
);

266 i‡(
£lf
->
ö°
.
›code
 =
x86_ö°_›code_övÆid
 && !
•ec_mode
)

267 
	`Áèl
("0x%x:Çot supported x86 instruction (%02x %02x %02x %02x...)",

268 
ªgs
->
eù
, 
buf„r_±r
[0], buffer_ptr[1], buffer_ptr[2], buffer_ptr[3]);

272 i‡(
x86_emu_œ°_ö°_size
 &&

273 
x86_emu_œ°_ö°_size
 =
£lf
->
ö°
.
size
 &&

274 !
	`memcmp
(
x86_emu_œ°_ö°_byãs
, 
buf„r_±r
, 
x86_emu_œ°_ö°_size
))

275 
esim_föish
 = 
esim_föish_x86_œ°_ö°
;

278 
	`X86C⁄ãxtExecuãIn°
(
£lf
);

281 
	`asEmu
(
emu
)->
ö°ru˘i⁄s
++;

282 
	}
}

288 
	$X86C⁄ãxtSëEù
(
X86C⁄ãxt
 *
£lf
, 
eù
)

291 i‡(
£lf
->
ªgs
->
eù
 !eù && !
	`X86C⁄ãxtGëSèã
(£lf, 
X86C⁄ãxtS≥cMode
))

293 
	`X86C⁄ãxtSëSèã
(
£lf
, 
X86C⁄ãxtS≥cMode
);

294 
	`x86_ªgs_c›y
(
£lf
->
backup_ªgs
, sñf->
ªgs
);

295 
£lf
->
ªgs
->
Âu_˘æ
 |= 0x3f;

299 
£lf
->
ªgs
->
eù
 =Éip;

300 
	}
}

303 
	$X86C⁄ãxtRecovî
(
X86C⁄ãxt
 *
£lf
)

305 
	`as£π
(
	`X86C⁄ãxtGëSèã
(
£lf
, 
X86C⁄ãxtS≥cMode
));

306 
	`X86C⁄ãxtCÀ¨Sèã
(
£lf
, 
X86C⁄ãxtS≥cMode
);

307 
	`x86_ªgs_c›y
(
£lf
->
ªgs
, sñf->
backup_ªgs
);

308 
	`•ec_mem_˛ór
(
£lf
->
•ec_mem
);

309 
	}
}

312 
	$X86C⁄ãxtGëSèã
(
X86C⁄ãxt
 *
£lf
, 
X86C⁄ãxtSèã
 
°©e
)

314  (
£lf
->
°©e
 & state) > 0;

315 
	}
}

318 
	$X86C⁄ãxtUpd©eSèã
(
X86C⁄ãxt
 *
£lf
, 
X86C⁄ãxtSèã
 
°©e
)

320 
X86Emu
 *
emu
 = 
£lf
->emu;

322 
X86C⁄ãxtSèã
 
°©us_diff
;

323 
°©e_°r
[
MAX_STRING_SIZE
];

327 i‡(
	`DOUBLE_LINKED_LIST_MEMBER
(
emu
, 
ru¬ög
, 
£lf
))

328 
	`DOUBLE_LINKED_LIST_REMOVE
(
emu
, 
ru¬ög
, 
£lf
);

329 i‡(
	`DOUBLE_LINKED_LIST_MEMBER
(
emu
, 
su•íded
, 
£lf
))

330 
	`DOUBLE_LINKED_LIST_REMOVE
(
emu
, 
su•íded
, 
£lf
);

331 i‡(
	`DOUBLE_LINKED_LIST_MEMBER
(
emu
, 
zombõ
, 
£lf
))

332 
	`DOUBLE_LINKED_LIST_REMOVE
(
emu
, 
zombõ
, 
£lf
);

333 i‡(
	`DOUBLE_LINKED_LIST_MEMBER
(
emu
, 
föished
, 
£lf
))

334 
	`DOUBLE_LINKED_LIST_REMOVE
(
emu
, 
föished
, 
£lf
);

338 
°©us_diff
 = 
£lf
->
°©e
 ^ state;

339 i‡(
°©us_diff
 & ~
X86C⁄ãxtS≥cMode
)

340 
emu
->
scheduÀ_sig«l
 = 1;

343 
£lf
->
°©e
 = state;

344 i‡(
£lf
->
°©e
 & 
X86C⁄ãxtFöished
)

345 
£lf
->
°©e
 = 
X86C⁄ãxtFöished


346 | (
°©e
 & 
X86C⁄ãxtAŒoc
)

347 | (
°©e
 & 
X86C⁄ãxtM≠≥d
);

348 i‡(
£lf
->
°©e
 & 
X86C⁄ãxtZombõ
)

349 
£lf
->
°©e
 = 
X86C⁄ãxtZombõ


350 | (
°©e
 & 
X86C⁄ãxtAŒoc
)

351 | (
°©e
 & 
X86C⁄ãxtM≠≥d
);

352 i‡(!(
£lf
->
°©e
 & 
X86C⁄ãxtSu•íded
) &&

353 !(
£lf
->
°©e
 & 
X86C⁄ãxtFöished
) &&

354 !(
£lf
->
°©e
 & 
X86C⁄ãxtZombõ
) &&

355 !(
£lf
->
°©e
 & 
X86C⁄ãxtLocked
))

356 
£lf
->
°©e
 |
X86C⁄ãxtRu¬ög
;

358 
£lf
->
°©e
 &~
X86C⁄ãxtRu¬ög
;

361 i‡(
£lf
->
°©e
 & 
X86C⁄ãxtRu¬ög
)

362 
	`DOUBLE_LINKED_LIST_INSERT_HEAD
(
emu
, 
ru¬ög
, 
£lf
);

363 i‡(
£lf
->
°©e
 & 
X86C⁄ãxtZombõ
)

364 
	`DOUBLE_LINKED_LIST_INSERT_HEAD
(
emu
, 
zombõ
, 
£lf
);

365 i‡(
£lf
->
°©e
 & 
X86C⁄ãxtFöished
)

366 
	`DOUBLE_LINKED_LIST_INSERT_HEAD
(
emu
, 
föished
, 
£lf
);

367 i‡(
£lf
->
°©e
 & 
X86C⁄ãxtSu•íded
)

368 
	`DOUBLE_LINKED_LIST_INSERT_HEAD
(
emu
, 
su•íded
, 
£lf
);

371 i‡(
	`debug_°©us
(
x86_c⁄ãxt_debug_ˇãg‹y
Ë&& (
°©us_diff
 & ~
X86C⁄ãxtS≥cMode
))

373 
	`°r_m≠_Êags
(&
x86_c⁄ãxt_°©e_m≠
, 
£lf
->
°©e
, 
°©e_°r
,  state_str);

374 
	`X86C⁄ãxtDebug
("inst %lld: ctx %d changed stateÅo %s\n",

375 
	`asEmu
(
emu
)->
ö°ru˘i⁄s
, 
£lf
->
pid
, 
°©e_°r
);

380 i‡(
emu
->
ru¬ög_li°_cou¡
)

381 
	`m2s_timî_°¨t
(
	`asEmu
(
emu
)->
timî
);

383 
	`m2s_timî_°›
(
	`asEmu
(
emu
)->
timî
);

384 
	}
}

387 
	$X86C⁄ãxtSëSèã
(
X86C⁄ãxt
 *
£lf
, 
X86C⁄ãxtSèã
 
°©e
)

389 
	`X86C⁄ãxtUpd©eSèã
(
£lf
, sñf->
°©e
 | state);

390 
	}
}

393 
	$X86C⁄ãxtCÀ¨Sèã
(
X86C⁄ãxt
 *
£lf
, 
X86C⁄ãxtSèã
 
°©e
)

395 
	`X86C⁄ãxtUpd©eSèã
(
£lf
, sñf->
°©e
 & ~state);

396 
	}
}

402 
X86C⁄ãxt
 *
	$X86C⁄ãxtGëZombõ
(
X86C⁄ãxt
 *
£lf
, 
pid
)

404 
X86Emu
 *
emu
 = 
£lf
->emu;

405 
X86C⁄ãxt
 *
c⁄ãxt
;

407 
c⁄ãxt
 = 
emu
->
zombõ_li°_hód
; context;

408 
c⁄ãxt
 = c⁄ãxt->
zombõ_li°_√xt
)

410 i‡(
c⁄ãxt
->
∑ª¡
 !
£lf
)

412 i‡(
c⁄ãxt
->
pid
 ==Öid ||Öid == -1)

413  
c⁄ãxt
;

415  
NULL
;

416 
	}
}

421 
	$X86C⁄ãxtHo°ThªadSu•ídC™˚lUnß„
(
X86C⁄ãxt
 *
£lf
)

423 
X86Emu
 *
emu
 = 
£lf
->emu;

425 i‡(
£lf
->
ho°_thªad_su•íd_a˘ive
)

427 i‡(
	`±hªad_ˇn˚l
(
£lf
->
ho°_thªad_su•íd
))

428 
	`Áèl
("%s: context %d:Érror canceling hostÅhread",

429 
__FUNCTION__
, 
£lf
->
pid
);

430 
£lf
->
ho°_thªad_su•íd_a˘ive
 = 0;

431 
emu
->
¥o˚ss_evíts_f‹˚
 = 1;

433 
	}
}

436 
	$X86C⁄ãxtHo°ThªadSu•ídC™˚l
(
X86C⁄ãxt
 *
£lf
)

438 
X86Emu
 *
emu
 = 
£lf
->emu;

440 
	`±hªad_muãx_lock
(&
emu
->
¥o˚ss_evíts_muãx
);

441 
	`X86C⁄ãxtHo°ThªadSu•ídC™˚lUnß„
(
£lf
);

442 
	`±hªad_muãx_u∆ock
(&
emu
->
¥o˚ss_evíts_muãx
);

443 
	}
}

448 
	$X86C⁄ãxtHo°ThªadTimîC™˚lUnß„
(
X86C⁄ãxt
 *
£lf
)

450 
X86Emu
 *
emu
 = 
£lf
->emu;

452 i‡(
£lf
->
ho°_thªad_timî_a˘ive
)

454 i‡(
	`±hªad_ˇn˚l
(
£lf
->
ho°_thªad_timî
))

455 
	`Áèl
("%s: context %d:Érror canceling hostÅhread",

456 
__FUNCTION__
, 
£lf
->
pid
);

457 
£lf
->
ho°_thªad_timî_a˘ive
 = 0;

458 
emu
->
¥o˚ss_evíts_f‹˚
 = 1;

460 
	}
}

462 
	$X86C⁄ãxtHo°ThªadTimîC™˚l
(
X86C⁄ãxt
 *
£lf
)

464 
X86Emu
 *
emu
 = 
£lf
->emu;

466 
	`±hªad_muãx_lock
(&
emu
->
¥o˚ss_evíts_muãx
);

467 
	`X86C⁄ãxtHo°ThªadTimîC™˚lUnß„
(
£lf
);

468 
	`±hªad_muãx_u∆ock
(&
emu
->
¥o˚ss_evíts_muãx
);

469 
	}
}

475 
	$X86C⁄ãxtSu•íd
(
X86C⁄ãxt
 *
£lf
, 
X86C⁄ãxtC™WakeupFunc
 
ˇn_wakeup_ˇŒback_func
,

476 *
ˇn_wakeup_ˇŒback_d©a
, 
X86C⁄ãxtWakeupFunc
 
wakeup_ˇŒback_func
,

477 *
wakeup_ˇŒback_d©a
)

479 
X86Emu
 *
emu
 = 
£lf
->emu;

482 
	`as£π
(!
	`X86C⁄ãxtGëSèã
(
£lf
, 
X86C⁄ãxtSu•íded
));

483 
	`as£π
(!
£lf
->
ˇn_wakeup_ˇŒback_func
);

484 
	`as£π
(!
£lf
->
ˇn_wakeup_ˇŒback_d©a
);

487 
£lf
->
ˇn_wakeup_ˇŒback_func
 = can_wakeup_callback_func;

488 
£lf
->
ˇn_wakeup_ˇŒback_d©a
 = can_wakeup_callback_data;

489 
£lf
->
wakeup_ˇŒback_func
 = wakeup_callback_func;

490 
£lf
->
wakeup_ˇŒback_d©a
 = wakeup_callback_data;

491 
	`X86C⁄ãxtSëSèã
(
£lf
, 
X86C⁄ãxtSu•íded
 | 
X86C⁄ãxtCÆlback
);

492 
	`X86EmuPro˚ssEvítsScheduÀ
(
emu
);

493 
	}
}

498 
	$X86C⁄ãxtFöishGroup
(
X86C⁄ãxt
 *
£lf
, 
°©e
)

500 
X86Emu
 *
emu
 = 
£lf
->emu;

501 
X86C⁄ãxt
 *
aux
;

504 i‡(
£lf
->
group_∑ª¡
)

505 
£lf
 = sñf->
group_∑ª¡
;

506 
	`as£π
(!
£lf
->
group_∑ª¡
);

509 i‡(
	`X86C⁄ãxtGëSèã
(
£lf
, 
X86C⁄ãxtFöished
 | 
X86C⁄ãxtZombõ
))

513 
	`DOUBLE_LINKED_LIST_FOR_EACH
(
emu
, 
c⁄ãxt
, 
aux
)

515 i‡(
aux
->
group_∑ª¡
 !
£lf
 &&áux != self)

518 i‡(
	`X86C⁄ãxtGëSèã
(
aux
, 
X86C⁄ãxtZombõ
))

519 
	`X86C⁄ãxtSëSèã
(
aux
, 
X86C⁄ãxtFöished
);

520 i‡(
	`X86C⁄ãxtGëSèã
(
aux
, 
X86C⁄ãxtH™dÀr
))

521 
	`X86C⁄ãxtRëu∫FromSig«lH™dÀr
(
aux
);

522 
	`X86C⁄ãxtHo°ThªadSu•ídC™˚l
(
aux
);

523 
	`X86C⁄ãxtHo°ThªadTimîC™˚l
(
aux
);

527 i‡(
aux
 =
£lf
)

528 
	`X86C⁄ãxtSëSèã
(
aux
,áux->
∑ª¡
 ? 
X86C⁄ãxtZombõ
 : 
X86C⁄ãxtFöished
);

530 
	`X86C⁄ãxtSëSèã
(
aux
, 
X86C⁄ãxtFöished
);

531 
aux
->
exô_code
 = 
°©e
;

535 
	`X86EmuPro˚ssEvítsScheduÀ
(
emu
);

536 
	}
}

544 
	$X86C⁄ãxtFöish
(
X86C⁄ãxt
 *
£lf
, 
°©e
)

546 
X86Emu
 *
emu
 = 
£lf
->emu;

547 
X86C⁄ãxt
 *
aux
;

550 i‡(
	`X86C⁄ãxtGëSèã
(
£lf
, 
X86C⁄ãxtFöished
 | 
X86C⁄ãxtZombõ
))

554 
	`X86C⁄ãxtHo°ThªadSu•ídC™˚l
(
£lf
);

555 
	`X86C⁄ãxtHo°ThªadTimîC™˚l
(
£lf
);

560 
	`DOUBLE_LINKED_LIST_FOR_EACH
(
emu
, 
c⁄ãxt
, 
aux
)

562 i‡(
aux
->
∑ª¡
 =
£lf
)

564 
aux
->
∑ª¡
 = 
NULL
;

565 i‡(
	`X86C⁄ãxtGëSèã
(
aux
, 
X86C⁄ãxtZombõ
))

566 
	`X86C⁄ãxtSëSèã
(
aux
, 
X86C⁄ãxtFöished
);

571 i‡(
£lf
->
exô_sig«l
 && sñf->
∑ª¡
)

573 
	`x86_sys_debug
(" sending signal %dÅoÖid %d\n",

574 
£lf
->
exô_sig«l
, sñf->
∑ª¡
->
pid
);

575 
	`x86_sig£t_add
(&
£lf
->
∑ª¡
->
sig«l_mask_èbÀ
->
≥ndög
,

576 
£lf
->
exô_sig«l
);

577 
	`X86EmuPro˚ssEvítsScheduÀ
(
emu
);

582 i‡(
£lf
->
˛ór_chûd_tid
)

584 
zîo
 = 0;

585 
	`mem_wrôe
(
£lf
->
mem
, sñf->
˛ór_chûd_tid
, 4, &
zîo
);

586 
	`X86C⁄ãxtFuãxWake
(
£lf
, sñf->
˛ór_chûd_tid
, 1, -1);

588 
	`X86C⁄ãxtExôRobu°Li°
(
£lf
);

591 i‡(
	`X86C⁄ãxtGëSèã
(
£lf
, 
X86C⁄ãxtH™dÀr
))

592 
	`X86C⁄ãxtRëu∫FromSig«lH™dÀr
(
£lf
);

595 
	`X86C⁄ãxtSëSèã
(
£lf
, sñf->
∑ª¡
 ? 
X86C⁄ãxtZombõ
 : 
X86C⁄ãxtFöished
);

596 
£lf
->
exô_code
 = 
°©e
;

597 
	`X86EmuPro˚ssEvítsScheduÀ
(
emu
);

598 
	}
}

601 
	$X86C⁄ãxtFuãxWake
(
X86C⁄ãxt
 *
£lf
, 
fuãx
, 
cou¡
,

602 
bô£t
)

604 
X86Emu
 *
emu
 = 
£lf
->emu;

605 
X86C⁄ãxt
 *
wakeup_˘x
;

607 
wakeup_cou¡
 = 0;

610 
cou¡
)

612 
wakeup_˘x
 = 
NULL
;

613 
£lf
 = 
emu
->
su•íded_li°_hód
; sñf; sñ‡£lf->
su•íded_li°_√xt
)

615 i‡(!
	`X86C⁄ãxtGëSèã
(
£lf
, 
X86C⁄ãxtFuãx
Ë|| sñf->
wakeup_fuãx
 !
fuãx
)

617 i‡(!(
£lf
->
wakeup_fuãx_bô£t
 & 
bô£t
))

619 i‡(!
wakeup_˘x
 || 
£lf
->
wakeup_fuãx_¶ìp
 < wakeup_ctx->wakeup_futex_sleep)

620 
wakeup_˘x
 = 
£lf
;

623 i‡(
wakeup_˘x
)

626 
	`X86C⁄ãxtCÀ¨Sèã
(
wakeup_˘x
, 
X86C⁄ãxtSu•íded
 | 
X86C⁄ãxtFuãx
);

627 
	`x86_sys_debug
(" fuãx 0x%x:Åhªad %d wokí up\n", 
fuãx
, 
wakeup_˘x
->
pid
);

628 
wakeup_cou¡
++;

629 
cou¡
--;

632 
wakeup_˘x
->
ªgs
->
óx
 = 0;

639  
wakeup_cou¡
;

640 
	}
}

643 
	$X86C⁄ãxtExôRobu°Li°
(
X86C⁄ãxt
 *
£lf
)

645 
√xt
, 
lock_íåy
, 
off£t
, 
lock_w‹d
;

661 
lock_íåy
 = 
£lf
->
robu°_li°_hód
;

662 i‡(!
lock_íåy
)

665 
	`x86_sys_debug
("ctx %d:ÖrocessingÑobust futexÜist\n",

666 
£lf
->
pid
);

669 
	`mem_ªad
(
£lf
->
mem
, 
lock_íåy
, 4, &
√xt
);

670 
	`mem_ªad
(
£lf
->
mem
, 
lock_íåy
 + 4, 4, &
off£t
);

671 
	`mem_ªad
(
£lf
->
mem
, 
lock_íåy
 + 
off£t
, 4, &
lock_w‹d
);

673 
	`x86_sys_debug
("Üock_entry=0x%x: offset=%d,Üock_word=0x%x\n",

674 
lock_íåy
, 
off£t
, 
lock_w‹d
);

677 i‡(!
√xt
 ||Çexà=
£lf
->
robu°_li°_hód
)

679 
lock_íåy
 = 
√xt
;

681 
	}
}

685 
	$X86C⁄ãxtProcSñfM≠s
(
X86C⁄ãxt
 *
£lf
, *
∑th
, 
size
)

687 
°¨t
, 
íd
;

688 
mem_ac˚ss_t
 
≥rm
, 
∑ge_≥rm
;

689 
mem_∑ge_t
 *
∑ge
;

690 
mem_t
 *
mem
 = 
£lf
->mem;

691 
fd
;

692 
FILE
 *
f
 = 
NULL
;

695 
	`¢¥ötf
(
∑th
, 
size
, "/tmp/m2s.XXXXXX");

696 i‡((
fd
 = 
	`mk°emp
(
∑th
)Ë=-1 || (
f
 = 
	`fd›í
(fd, "wt")Ë=
NULL
)

697 
	`Áèl
("ctx_gen_proc_self_maps: cannot createÅemporary file");

700 
íd
 = 0;

704 
∑ge
 = 
	`mem_∑ge_gë_√xt
(
mem
, 
íd
);

705 i‡(!
∑ge
)

707 
°¨t
 = 
∑ge
->
èg
;

708 
íd
 = 
∑ge
->
èg
;

709 
≥rm
 = 
∑ge
->≥rm & (
mem_ac˚ss_ªad
 | 
mem_ac˚ss_wrôe
 | 
mem_ac˚ss_exec
);

714 
∑ge
 = 
	`mem_∑ge_gë
(
mem
, 
íd
 + 
MEM_PAGE_SIZE
);

715 i‡(!
∑ge
)

717 
∑ge_≥rm
 = 
∑ge
->
≥rm
 & (
mem_ac˚ss_ªad
 | 
mem_ac˚ss_wrôe
 | 
mem_ac˚ss_exec
);

718 i‡(
∑ge_≥rm
 !
≥rm
)

720 
íd
 +
MEM_PAGE_SIZE
;

721 
≥rm
 = 
∑ge_≥rm
;

725 
	`Ârötf
(
f
, "%08x-%08x %c%c%c%¯00000000 00:00", 
°¨t
, 
íd
 + 
MEM_PAGE_SIZE
,

726 
≥rm
 & 
mem_ac˚ss_ªad
 ? 'r' : '-',

727 
≥rm
 & 
mem_ac˚ss_wrôe
 ? 'w' : '-',

728 
≥rm
 & 
mem_ac˚ss_exec
 ? 'x' : '-',

730 
	`Ârötf
(
f
, "\n");

734 
	`f˛o£
(
f
);

735 
	}
}

739 
	$X86C⁄ãxtProcCPUInfo
(
X86C⁄ãxt
 *
£lf
, *
∑th
, 
size
)

741 
FILE
 *
f
 = 
NULL
;

743 
i
;

744 
j
;

745 
node
;

746 
fd
;

749 
	`¢¥ötf
(
∑th
, 
size
, "/tmp/m2s.XXXXXX");

750 i‡((
fd
 = 
	`mk°emp
(
∑th
)Ë=-1 || (
f
 = 
	`fd›í
(fd, "wt")Ë=
NULL
)

751 
	`Áèl
("ctx_gen_proc_self_maps: cannot createÅemporary file");

753 
i
 = 0; i < 
x86_˝u_num_c‹es
; i++)

755 
j
 = 0; j < 
x86_˝u_num_thªads
; j++)

757 
node
 = 
i
 * 
x86_˝u_num_thªads
 + 
j
;

758 
	`Ârötf
(
f
, "¥o˚ss‹ : %d\n", 
node
);

759 
	`Ârötf
(
f
, "vendor_id : Multi2Sim\n");

760 
	`Ârötf
(
f
, "cpu family : 6\n");

761 
	`Ârötf
(
f
, "model : 23\n");

762 
	`Ârötf
(
f
, "modelÇame : Multi2Sim\n");

763 
	`Ârötf
(
f
, "stepping : 6\n");

764 
	`Ârötf
(
f
, "microcode : 0x607\n");

765 
	`Ârötf
(
f
, "cpu MHz : 800.000\n");

766 
	`Ârötf
(
f
, "cache size : 3072 KB\n");

767 
	`Ârötf
(
f
, "physical id : 0\n");

768 
	`Ârötf
(
f
, "siblög†: %d\n", 
x86_˝u_num_c‹es
 * 
x86_˝u_num_thªads
);

769 
	`Ârötf
(
f
, "c‹êid : %d\n", 
i
);

770 
	`Ârötf
(
f
, "˝u c‹e†: %d\n", 
x86_˝u_num_c‹es
);

771 
	`Ârötf
(
f
, "≠icid : %d\n", 
node
);

772 
	`Ârötf
(
f
, "öôü»≠icid : %d\n", 
node
);

773 
	`Ârötf
(
f
, "fpu : yes\n");

774 
	`Ârötf
(
f
, "fpu_exception : yes\n");

775 
	`Ârötf
(
f
, "cpuidÜevel : 10\n");

776 
	`Ârötf
(
f
, "wp : yes\n");

777 
	`Ârötf
(
f
, "flags : fpu vme deÖseÅsc msrÖae mce cx8ápic sep mtrr "

783 
	`Ârötf
(
f
, "bogomips : 4189.40\n");

784 
	`Ârötf
(
f
, "clflush size : 32\n");

785 
	`Ârötf
(
f
, "cache_alignment : 32\n");

786 
	`Ârötf
(
f
, "address sizes : 32 bitsÖhysical, 32 bits virtual\n");

787 
	`Ârötf
(
f
, "power management :\n");

788 
	`Ârötf
(
f
, "\n");

793 
	`f˛o£
(
f
);

794 
	}
}

797 *
	$X86EmuHo°ThªadSu•íd
(*
¨g
)

799 
X86C⁄ãxt
 *
£lf
 = 
	`asX86C⁄ãxt
(
¨g
);

800 
X86Emu
 *
emu
 = 
£lf
->emu;

802 
now
 = 
	`esim_ªÆ_time
();

807 
	`±hªad_dëach
(
	`±hªad_£lf
());

810 i‡(
	`X86C⁄ãxtGëSèã
(
£lf
, 
X86C⁄ãxtN™o¶ìp
))

812 
timeout
;

815 
timeout
 = 
£lf
->
wakeup_time
 > 
now
 ? self->wakeup_time -Çow : 0;

816 
	`u¶ìp
(
timeout
);

819 i‡(
	`X86C⁄ãxtGëSèã
(
£lf
, 
X86C⁄ãxtPﬁl
))

821 
x86_fûe_desc_t
 *
fd
;

822 
pﬁlfd
 
ho°_fds
;

823 
îr
, 
timeout
;

826 
fd
 = 
	`x86_fûe_desc_èbÀ_íåy_gë
(
£lf
->
fûe_desc_èbÀ
, sñf->
wakeup_fd
);

827 i‡(!
fd
)

828 
	`Áèl
("syscall 'poll': invalid 'wakeup_fd'");

831 i‡(!
£lf
->
wakeup_time
)

832 
timeout
 = -1;

833 i‡(
£lf
->
wakeup_time
 < 
now
)

834 
timeout
 = 0;

836 
timeout
 = (
£lf
->
wakeup_time
 - 
now
) / 1000;

839 
ho°_fds
.
fd
 = fd->
ho°_fd
;

840 
ho°_fds
.
evíts
 = ((
£lf
->
wakeup_evíts
 & 4Ë? 
POLLOUT
 : 0Ë| ((£lf->wakeup_evít†& 1Ë? 
POLLIN
 : 0);

841 
îr
 = 
	`pﬁl
(&
ho°_fds
, 1, 
timeout
);

842 i‡(
îr
 < 0)

843 
	`Áèl
("syscall 'poll': unexpectedÉrror in host 'poll'");

845 i‡(
	`X86C⁄ãxtGëSèã
(
£lf
, 
X86C⁄ãxtRód
))

847 
x86_fûe_desc_t
 *
fd
;

848 
pﬁlfd
 
ho°_fds
;

849 
îr
;

852 
fd
 = 
	`x86_fûe_desc_èbÀ_íåy_gë
(
£lf
->
fûe_desc_èbÀ
, sñf->
wakeup_fd
);

853 i‡(!
fd
)

854 
	`Áèl
("syscall 'read': invalid 'wakeup_fd'");

857 
ho°_fds
.
fd
 = fd->
ho°_fd
;

858 
ho°_fds
.
evíts
 = 
POLLIN
;

859 
îr
 = 
	`pﬁl
(&
ho°_fds
, 1, -1);

860 i‡(
îr
 < 0)

861 
	`Áèl
("syscall 'read': unexpectedÉrror in host 'poll'");

863 i‡(
	`X86C⁄ãxtGëSèã
(
£lf
, 
X86C⁄ãxtWrôe
))

865 
x86_fûe_desc_t
 *
fd
;

866 
pﬁlfd
 
ho°_fds
;

867 
îr
;

870 
fd
 = 
	`x86_fûe_desc_èbÀ_íåy_gë
(
£lf
->
fûe_desc_èbÀ
, sñf->
wakeup_fd
);

871 i‡(!
fd
)

872 
	`Áèl
("syscall 'write': invalid 'wakeup_fd'");

875 
ho°_fds
.
fd
 = fd->
ho°_fd
;

876 
ho°_fds
.
evíts
 = 
POLLOUT
;

877 
îr
 = 
	`pﬁl
(&
ho°_fds
, 1, -1);

878 i‡(
îr
 < 0)

879 
	`Áèl
("syscall 'write': unexpectedÉrror in host 'write'");

884 
	`±hªad_muãx_lock
(&
emu
->
¥o˚ss_evíts_muãx
);

885 
emu
->
¥o˚ss_evíts_f‹˚
 = 1;

886 
£lf
->
ho°_thªad_su•íd_a˘ive
 = 0;

887 
	`±hªad_muãx_u∆ock
(&
emu
->
¥o˚ss_evíts_muãx
);

888  
NULL
;

889 
	}
}

892 *
	$X86C⁄ãxtHo°ThªadTimî
(*
¨g
)

894 
X86C⁄ãxt
 *
£lf
 = 
	`asX86C⁄ãxt
(
¨g
);

895 
X86Emu
 *
emu
 = 
£lf
->emu;

897 
now
 = 
	`esim_ªÆ_time
();

898 
time•ec
 
ts
;

899 
¶ìp_time
;

904 
	`±hªad_dëach
(
	`±hªad_£lf
());

907 i‡(
£lf
->
ho°_thªad_timî_wakeup
 > 
now
)

909 
¶ìp_time
 = 
£lf
->
ho°_thªad_timî_wakeup
 - 
now
;

910 
ts
.
tv_£c
 = 
¶ìp_time
 / 1000000;

911 
ts
.
tv_n£c
 = (
¶ìp_time
 % 1000000) * 1000;

912 
	`«no¶ìp
(&
ts
, 
NULL
);

916 
	`±hªad_muãx_lock
(&
emu
->
¥o˚ss_evíts_muãx
);

917 
emu
->
¥o˚ss_evíts_f‹˚
 = 1;

918 
£lf
->
ho°_thªad_timî_a˘ive
 = 0;

919 
	`±hªad_muãx_u∆ock
(&
emu
->
¥o˚ss_evíts_muãx
);

920  
NULL
;

921 
	}
}

930 
	gx86_c⁄ãxt_debug_ˇãg‹y
;

932 
°r_m≠_t
 
	gx86_c⁄ãxt_°©e_m≠
 =

935 { "ru¬ög", 
X86C⁄ãxtRu¬ög
 },

936 { "•ecmode", 
X86C⁄ãxtS≥cMode
 },

937 { "su•íded", 
X86C⁄ãxtSu•íded
 },

938 { "föished", 
X86C⁄ãxtFöished
 },

939 { "ex˛usive", 
X86C⁄ãxtEx˛usive
 },

940 { "locked", 
X86C⁄ãxtLocked
 },

941 { "h™dÀr", 
X86C⁄ãxtH™dÀr
 },

942 { "sigsu•íd", 
X86C⁄ãxtSigsu•íd
 },

943 { "«no¶ìp", 
X86C⁄ãxtN™o¶ìp
 },

944 { "pﬁl", 
X86C⁄ãxtPﬁl
 },

945 { "ªad", 
X86C⁄ãxtRód
 },

946 { "wrôe", 
X86C⁄ãxtWrôe
 },

947 { "waôpid", 
X86C⁄ãxtWaôpid
 },

948 { "zombõ", 
X86C⁄ãxtZombõ
 },

949 { "fuãx", 
X86C⁄ãxtFuãx
 },

950 { "Æloc", 
X86C⁄ãxtAŒoc
 },

951 { "ˇŒback", 
X86C⁄ãxtCÆlback
 },

952 { "m≠≥d", 
X86C⁄ãxtM≠≥d
 }

	@emu/context.h

20 #i‚de‡
ARCH_X86_EMU_CONTEXT_H


21 
	#ARCH_X86_EMU_CONTEXT_H


	)

23 
	~<±hªad.h
>

25 
	~<¨ch/x86/asm/asm.h
>

26 
	~<¨ch/x86/asm/ö°.h
>

27 
	~<lib/utû/˛ass.h
>

31 
	gbô_m≠_t
;

39 (*
	tX86C⁄ãxtC™WakeupFunc
)(
	tX86C⁄ãxt
 *
	t£lf
, *
	td©a
);

40 (*
	tX86C⁄ãxtWakeupFunc
)(
	tX86C⁄ãxt
 *
	t£lf
, *
	td©a
);

44 
X86C⁄ãxtRu¬ög
 = 0x00001,

45 
X86C⁄ãxtS≥cMode
 = 0x00002,

46 
X86C⁄ãxtSu•íded
 = 0x00004,

47 
X86C⁄ãxtFöished
 = 0x00008,

48 
X86C⁄ãxtEx˛usive
 = 0x00010,

49 
X86C⁄ãxtLocked
 = 0x00020,

50 
X86C⁄ãxtH™dÀr
 = 0x00040,

51 
X86C⁄ãxtSigsu•íd
 = 0x00080,

52 
X86C⁄ãxtN™o¶ìp
 = 0x00100,

53 
X86C⁄ãxtPﬁl
 = 0x00200,

54 
X86C⁄ãxtRód
 = 0x00400,

55 
X86C⁄ãxtWrôe
 = 0x00800,

56 
X86C⁄ãxtWaôpid
 = 0x01000,

57 
X86C⁄ãxtZombõ
 = 0x02000,

58 
X86C⁄ãxtFuãx
 = 0x04000,

59 
X86C⁄ãxtAŒoc
 = 0x08000,

60 
X86C⁄ãxtCÆlback
 = 0x10000,

61 
X86C⁄ãxtM≠≥d
 = 0x20000,

62 
X86C⁄ãxtN⁄e
 = 0x00000

63 } 
	tX86C⁄ãxtSèã
;

66 
	$CLASS_BEGIN
(
X86C⁄ãxt
, 
Obje˘
)

69 
X86Emu
 *
emu
;

72 
°©e
;

73 
pid
;

74 
addªss_•a˚_ödex
;

77 
X86C⁄ãxt
 *
∑ª¡
;

81 
X86C⁄ãxt
 *
group_∑ª¡
;

83 
exô_sig«l
;

84 
exô_code
;

86 
˛ór_chûd_tid
;

87 
robu°_li°_hód
;

90 
œ°_eù
;

91 
cuº_eù
;

92 
èrgë_eù
;

95 
x86_ö°_t
 
ö°
;

98 
ef„˘ive_addªss
;

101 
°r_›_esi
;

102 
°r_›_edi
;

103 
°r_›_dú
;

104 
°r_›_cou¡
;

114 
Æloc_cy˛e
;

115 
evi˘_cy˛e
;

120 
evi˘_sig«l
;

124 
c‹e_ödex
;

125 
thªad_ödex
;

130 
glibc_£gmít_ba£
;

131 
glibc_£gmít_limô
;

134 
fun˘i⁄_Àvñ
;

141 
±hªad_t
 
ho°_thªad_su•íd
;

142 
ho°_thªad_su•íd_a˘ive
;

145 
±hªad_t
 
ho°_thªad_timî
;

146 
ho°_thªad_timî_a˘ive
;

147 
ho°_thªad_timî_wakeup
;

150 
ôimî_vÆue
[3];

151 
ôimî_öãrvÆ
[3];

154 
wakeup_time
;

155 
wakeup_fd
;

156 
wakeup_evíts
;

157 
wakeup_pid
;

158 
wakeup_fuãx
;

159 
wakeup_fuãx_bô£t
;

160 
wakeup_fuãx_¶ìp
;

165 
X86C⁄ãxtC™WakeupFunc
 
ˇn_wakeup_ˇŒback_func
;

166 
X86C⁄ãxtWakeupFunc
 
wakeup_ˇŒback_func
;

167 *
ˇn_wakeup_ˇŒback_d©a
;

168 *
wakeup_ˇŒback_d©a
;

171 
X86C⁄ãxt
 *
c⁄ãxt_li°_√xt
, *
c⁄ãxt_li°_¥ev
;

172 
X86C⁄ãxt
 *
ru¬ög_li°_√xt
, *
ru¬ög_li°_¥ev
;

173 
X86C⁄ãxt
 *
su•íded_li°_√xt
, *
su•íded_li°_¥ev
;

174 
X86C⁄ãxt
 *
föished_li°_√xt
, *
föished_li°_¥ev
;

175 
X86C⁄ãxt
 *
zombõ_li°_√xt
, *
zombõ_li°_¥ev
;

179 
X86C⁄ãxt
 *
m≠≥d_li°_√xt
, *
m≠≥d_li°_¥ev
;

182 
x86_lﬂdî_t
 *
lﬂdî
;

183 
mem_t
 *
mem
;

184 
•ec_mem_t
 *
•ec_mem
;

185 
x86_ªgs_t
 *
ªgs
;

186 
x86_ªgs_t
 *
backup_ªgs
;

187 
x86_fûe_desc_èbÀ_t
 *
fûe_desc_èbÀ
;

188 
x86_sig«l_mask_èbÀ_t
 *
sig«l_mask_èbÀ
;

189 
x86_sig«l_h™dÀr_èbÀ_t
 *
sig«l_h™dÀr_èbÀ
;

192 
bô_m≠_t
 *
afföôy
;

199 
ö°_cou¡
;

201 
	$CLASS_END
(
X86C⁄ãxt
)

204 
	`X86C⁄ãxtCª©e
(
X86C⁄ãxt
 *
£lf
, 
X86Emu
 *
emu
);

205 
	`X86C⁄ãxtCª©eAndCl⁄e
(
X86C⁄ãxt
 *
£lf
, X86C⁄ãxà*
˛⁄ed
);

206 
	`X86C⁄ãxtCª©eAndF‹k
(
X86C⁄ãxt
 *
£lf
, X86C⁄ãxà*
f‹ked
);

208 
	`X86C⁄ãxtDe°roy
(
X86C⁄ãxt
 *
£lf
);

210 
	`X86C⁄ãxtDump
(
Obje˘
 *
£lf
, 
FILE
 *
f
);

213 
	`X86C⁄ãxtHo°ThªadSu•ídC™˚lUnß„
(
X86C⁄ãxt
 *
£lf
);

214 
	`X86C⁄ãxtHo°ThªadSu•ídC™˚l
(
X86C⁄ãxt
 *
£lf
);

215 
	`X86C⁄ãxtHo°ThªadTimîC™˚lUnß„
(
X86C⁄ãxt
 *
£lf
);

216 
	`X86C⁄ãxtHo°ThªadTimîC™˚l
(
X86C⁄ãxt
 *
£lf
);

218 
	`X86C⁄ãxtSu•íd
(
X86C⁄ãxt
 *
£lf
,

219 
X86C⁄ãxtC™WakeupFunc
 
ˇn_wakeup_ˇŒback_func
,

220 *
ˇn_wakeup_ˇŒback_d©a
, 
X86C⁄ãxtWakeupFunc
 
wakeup_ˇŒback_func
,

221 *
wakeup_ˇŒback_d©a
);

223 
	`X86C⁄ãxtFöish
(
X86C⁄ãxt
 *
£lf
, 
°©e
);

224 
	`X86C⁄ãxtFöishGroup
(
X86C⁄ãxt
 *
£lf
, 
°©e
);

225 
	`X86C⁄ãxtExecuã
(
X86C⁄ãxt
 *
£lf
);

227 
	`X86C⁄ãxtSëEù
(
X86C⁄ãxt
 *
£lf
, 
eù
);

228 
	`X86C⁄ãxtRecovî
(
X86C⁄ãxt
 *
£lf
);

230 
X86C⁄ãxt
 *
	`X86C⁄ãxtGëZombõ
(X86C⁄ãxà*
∑ª¡
, 
pid
);

232 
	`X86C⁄ãxtGëSèã
(
X86C⁄ãxt
 *
£lf
, 
X86C⁄ãxtSèã
 
°©e
);

233 
	`X86C⁄ãxtSëSèã
(
X86C⁄ãxt
 *
£lf
, 
X86C⁄ãxtSèã
 
°©e
);

234 
	`X86C⁄ãxtCÀ¨Sèã
(
X86C⁄ãxt
 *
£lf
, 
X86C⁄ãxtSèã
 
°©e
);

236 
	`X86C⁄ãxtFuãxWake
(
X86C⁄ãxt
 *
£lf
, 
fuãx
,

237 
cou¡
, 
bô£t
);

238 
	`X86C⁄ãxtExôRobu°Li°
(
X86C⁄ãxt
 *
£lf
);

240 
	`X86C⁄ãxtProcSñfM≠s
(
X86C⁄ãxt
 *
£lf
, *
∑th
, 
size
);

241 
	`X86C⁄ãxtProcCPUInfo
(
X86C⁄ãxt
 *
£lf
, *
∑th
, 
size
);

247 *
	`X86EmuHo°ThªadSu•íd
(*
£lf
);

251 *
	`X86C⁄ãxtHo°ThªadTimî
(*
£lf
);

260 
	#X86C⁄ãxtDebug
(...Ë
	`debug
(
x86_c⁄ãxt_debug_ˇãg‹y
, 
__VA_ARGS__
)

	)

261 
x86_c⁄ãxt_debug_ˇãg‹y
;

263 
°r_m≠_t
 
x86_c⁄ãxt_°©e_m≠
;

	@emu/emu.c

20 
	~<î∫o.h
>

21 
	~<pﬁl.h
>

22 
	~<uni°d.h
>

24 
	~<¨ch/x86/timög/˝u.h
>

25 
	~<drivî/gÀw/gÀw.h
>

26 
	~<drivî/glu/glu.h
>

27 
	~<drivî/glut/glut.h
>

28 
	~<drivî/›ígl/›ígl.h
>

29 
	~<lib/esim/esim.h
>

30 
	~<lib/mh™dÀ/mh™dÀ.h
>

31 
	~<lib/utû/c⁄fig.h
>

32 
	~<lib/utû/debug.h
>

33 
	~<lib/utû/löked-li°.h
>

34 
	~<lib/utû/misc.h
>

35 
	~<lib/utû/°rög.h
>

36 
	~<mem-sy°em/mem‹y.h
>

38 
	~"c⁄ãxt.h
"

39 
	~"emu.h
"

40 
	~"fûe-desc.h
"

41 
	~"lﬂdî.h
"

42 
	~"ªgs.h
"

43 
	~"sig«l.h
"

44 
	~"sysˇŒ.h
"

52 
	gx86_emu_max_ö°
 = 0;

53 
	gx86_emu_max_cy˛es
 = 0;

54 
	gx86_emu_œ°_ö°_byãs
[20];

55 
	gx86_emu_œ°_ö°_size
 = 0;

56 
	gx86_emu_¥o˚ss_¥e„tch_höts
 = 0;

58 
X86Emu
 *
	gx86_emu
;

67 
CLASS_IMPLEMENTATION
(
X86Emu
);

69 
	$X86EmuCª©e
(
X86Emu
 *
£lf
)

72 
	`EmuCª©e
(
	`asEmu
(
£lf
), "x86");

75 
£lf
->
cuºít_pid
 = 100;

76 
	`±hªad_muãx_öô
(&
£lf
->
¥o˚ss_evíts_muãx
, 
NULL
);

79 
	`asObje˘
(
£lf
)->
Dump
 = 
X86EmuDump
;

80 
	`asEmu
(
£lf
)->
DumpSumm¨y
 = 
X86EmuDumpSumm¨y
;

81 
	`asEmu
(
£lf
)->
Run
 = 
X86EmuRun
;

82 
	}
}

85 
	$X86EmuDe°roy
(
X86Emu
 *
£lf
)

87 
X86C⁄ãxt
 *
˘x
;

90 
˘x
 = 
£lf
->
c⁄ãxt_li°_hód
; ctx; ctx = ctx->
c⁄ãxt_li°_√xt
)

91 i‡(!
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtFöished
))

92 
	`X86C⁄ãxtFöish
(
˘x
, 0);

95 
£lf
->
c⁄ãxt_li°_hód
)

96 
	`dñëe
(
£lf
->
c⁄ãxt_li°_hód
);

98 
	}
}

101 
	$X86EmuDump
(
Obje˘
 *
£lf
, 
FILE
 *
f
)

103 
X86C⁄ãxt
 *
c⁄ãxt
;

104 
X86Emu
 *
emu
 = 
	`asX86Emu
(
£lf
);

107 
	`EmuDump
(
£lf
, 
f
);

110 
	`Ârötf
(
f
, "List of contexts (shows inány order)\n\n");

111 
	`DOUBLE_LINKED_LIST_FOR_EACH
(
emu
, 
c⁄ãxt
, context)

112 
	`X86C⁄ãxtDump
(
	`asObje˘
(
c⁄ãxt
), 
f
);

113 
	}
}

116 
	$X86EmuDumpSumm¨y
(
Emu
 *
£lf
, 
FILE
 *
f
)

118 
X86Emu
 *
emu
 = 
	`asX86Emu
(
£lf
);

121 
	`EmuDumpSumm¨y
(
£lf
, 
f
);

124 
	`Ârötf
(
f
, "C⁄ãxt†%d\n", 
emu
->
ru¬ög_li°_max
);

125 
	`Ârötf
(
f
, "Mem‹y = %lu\n", 
mem_max_m≠≥d_•a˚
);

126 
	}
}

130 
	$X86EmuPro˚ssEvítsScheduÀ
(
X86Emu
 *
£lf
)

132 
	`±hªad_muãx_lock
(&
£lf
->
¥o˚ss_evíts_muãx
);

133 
£lf
->
¥o˚ss_evíts_f‹˚
 = 1;

134 
	`±hªad_muãx_u∆ock
(&
£lf
->
¥o˚ss_evíts_muãx
);

135 
	}
}

141 
	$X86EmuPro˚ssEvíts
(
X86Emu
 *
£lf
)

143 
X86C⁄ãxt
 *
˘x
, *
√xt
;

144 
now
 = 
	`esim_ªÆ_time
();

147 
	`±hªad_muãx_lock
(&
£lf
->
¥o˚ss_evíts_muãx
);

148 i‡(!
£lf
->
¥o˚ss_evíts_f‹˚
)

150 
	`±hªad_muãx_u∆ock
(&
£lf
->
¥o˚ss_evíts_muãx
);

155 
£lf
->
¥o˚ss_evíts_f‹˚
 = 0;

162 
˘x
 = 
£lf
->
su•íded_li°_hód
; ctx; ctx = 
√xt
)

165 
√xt
 = 
˘x
->
su•íded_li°_√xt
;

168 i‡(
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtN™o¶ìp
))

170 
rmç
 = 
˘x
->
ªgs
->
ecx
;

171 
zîo
 = 0;

172 
£c
, 
u£c
;

173 
diff
;

176 i‡(
˘x
->
ho°_thªad_su•íd_a˘ive
)

180 i‡(
˘x
->
wakeup_time
 <
now
)

182 i‡(
rmç
)

183 
	`mem_wrôe
(
˘x
->
mem
, 
rmç
, 8, &
zîo
);

184 
	`x86_sys_debug
("sysˇŒ '«no¶ìp' - c⁄töuê’id %d)\n", 
˘x
->
pid
);

185 
	`x86_sys_debug
("Ñëu∫=0x%x\n", 
˘x
->
ªgs
->
óx
);

186 
	`X86C⁄ãxtCÀ¨Sèã
(
˘x
, 
X86C⁄ãxtSu•íded
 | 
X86C⁄ãxtN™o¶ìp
);

191 i‡(
˘x
->
sig«l_mask_èbÀ
->
≥ndög
 & ~˘x->sig«l_mask_èbÀ->
blocked
)

193 i‡(
rmç
)

195 
diff
 = 
˘x
->
wakeup_time
 - 
now
;

196 
£c
 = 
diff
 / 1000000;

197 
u£c
 = 
diff
 % 1000000;

198 
	`mem_wrôe
(
˘x
->
mem
, 
rmç
, 4, &
£c
);

199 
	`mem_wrôe
(
˘x
->
mem
, 
rmç
 + 4, 4, &
u£c
);

201 
˘x
->
ªgs
->
óx
 = -
EINTR
;

202 
	`x86_sys_debug
("sysˇŒ '«no¶ìp' - i¡îru±ed by sig«»’id %d)\n", 
˘x
->
pid
);

203 
	`X86C⁄ãxtCÀ¨Sèã
(
˘x
, 
X86C⁄ãxtSu•íded
 | 
X86C⁄ãxtN™o¶ìp
);

208 
˘x
->
ho°_thªad_su•íd_a˘ive
 = 1;

209 i‡(
	`±hªad_¸óã
(&
˘x
->
ho°_thªad_su•íd
, 
NULL
, 
X86EmuHo°ThªadSu•íd
, ctx))

210 
	`Áèl
("syscall 'poll': couldÇot create childÅhread");

215 i‡(
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtSigsu•íd
))

218 i‡(
˘x
->
sig«l_mask_èbÀ
->
≥ndög
 & ~˘x->sig«l_mask_èbÀ->
blocked
)

220 
	`X86C⁄ãxtCheckSig«lH™dÀrI¡r
(
˘x
);

221 
˘x
->
sig«l_mask_èbÀ
->
blocked
 = ctx->sig«l_mask_èbÀ->
backup
;

222 
	`x86_sys_debug
("sysˇŒ 'π_sigsu•íd' - i¡îru±ed by sig«»’id %d)\n", 
˘x
->
pid
);

223 
	`X86C⁄ãxtCÀ¨Sèã
(
˘x
, 
X86C⁄ãxtSu•íded
 | 
X86C⁄ãxtSigsu•íd
);

233 i‡(
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtPﬁl
))

235 
uöt32_t
 
¥evíts
 = 
˘x
->
ªgs
->
ebx
 + 6;

236 
uöt16_t
 
ªvíts
 = 0;

237 
x86_fûe_desc_t
 *
fd
;

238 
pﬁlfd
 
ho°_fds
;

239 
îr
;

242 i‡(
˘x
->
ho°_thªad_su•íd_a˘ive
)

246 
fd
 = 
	`x86_fûe_desc_èbÀ_íåy_gë
(
˘x
->
fûe_desc_èbÀ
, ctx->
wakeup_fd
);

247 i‡(!
fd
)

248 
	`Áèl
("syscall 'poll': invalid 'wakeup_fd'");

251 i‡(
˘x
->
sig«l_mask_èbÀ
->
≥ndög
 & ~˘x->sig«l_mask_èbÀ->
blocked
)

253 
	`X86C⁄ãxtCheckSig«lH™dÀrI¡r
(
˘x
);

254 
	`x86_sys_debug
("sysˇŒ 'pﬁl' - i¡îru±ed by sig«»’id %d)\n", 
˘x
->
pid
);

255 
	`X86C⁄ãxtCÀ¨Sèã
(
˘x
, 
X86C⁄ãxtSu•íded
 | 
X86C⁄ãxtPﬁl
);

260 
ho°_fds
.
fd
 = fd->
ho°_fd
;

261 
ho°_fds
.
evíts
 = ((
˘x
->
wakeup_evíts
 & 4Ë? 
POLLOUT
 : 0Ë| ((˘x->wakeup_evít†& 1Ë? 
POLLIN
 : 0);

262 
îr
 = 
	`pﬁl
(&
ho°_fds
, 1, 0);

263 i‡(
îr
 < 0)

264 
	`Áèl
("syscall 'poll': unexpectedÉrror in host 'poll'");

267 i‡(
˘x
->
wakeup_evíts
 & 
ho°_fds
.
ªvíts
 & 
POLLOUT
)

269 
ªvíts
 = 
POLLOUT
;

270 
	`mem_wrôe
(
˘x
->
mem
, 
¥evíts
, 2, &
ªvíts
);

271 
˘x
->
ªgs
->
óx
 = 1;

272 
	`x86_sys_debug
("sysˇŒÖﬁ»- c⁄töuê’id %dË- POLLOUT occuºed i¿fûe\n", 
˘x
->
pid
);

273 
	`x86_sys_debug
("ÑëvÆ=%d\n", 
˘x
->
ªgs
->
óx
);

274 
	`X86C⁄ãxtCÀ¨Sèã
(
˘x
, 
X86C⁄ãxtSu•íded
 | 
X86C⁄ãxtPﬁl
);

279 i‡(
˘x
->
wakeup_evíts
 & 
ho°_fds
.
ªvíts
 & 
POLLIN
)

281 
ªvíts
 = 
POLLIN
;

282 
	`mem_wrôe
(
˘x
->
mem
, 
¥evíts
, 2, &
ªvíts
);

283 
˘x
->
ªgs
->
óx
 = 1;

284 
	`x86_sys_debug
("sysˇŒÖﬁ»- c⁄töuê’id %dË- POLLIN occuºed i¿fûe\n", 
˘x
->
pid
);

285 
	`x86_sys_debug
("ÑëvÆ=%d\n", 
˘x
->
ªgs
->
óx
);

286 
	`X86C⁄ãxtCÀ¨Sèã
(
˘x
, 
X86C⁄ãxtSu•íded
 | 
X86C⁄ãxtPﬁl
);

291 i‡(
˘x
->
wakeup_time
 && ctx->wakeup_timê< 
now
)

293 
ªvíts
 = 0;

294 
	`mem_wrôe
(
˘x
->
mem
, 
¥evíts
, 2, &
ªvíts
);

295 
	`x86_sys_debug
("sysˇŒÖﬁ»- c⁄töuê’id %dË-Åimêout\n", 
˘x
->
pid
);

296 
	`x86_sys_debug
("Ñëu∫=0x%x\n", 
˘x
->
ªgs
->
óx
);

297 
	`X86C⁄ãxtCÀ¨Sèã
(
˘x
, 
X86C⁄ãxtSu•íded
 | 
X86C⁄ãxtPﬁl
);

302 
˘x
->
ho°_thªad_su•íd_a˘ive
 = 1;

303 i‡(
	`±hªad_¸óã
(&
˘x
->
ho°_thªad_su•íd
, 
NULL
, 
X86EmuHo°ThªadSu•íd
, ctx))

304 
	`Áèl
("syscall 'poll': couldÇot create childÅhread");

310 i‡(
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtWrôe
))

312 
x86_fûe_desc_t
 *
fd
;

313 
cou¡
, 
îr
;

314 
uöt32_t
 
pbuf
;

315 *
buf
;

316 
pﬁlfd
 
ho°_fds
;

319 i‡(
˘x
->
ho°_thªad_su•íd_a˘ive
)

323 i‡(
˘x
->
sig«l_mask_èbÀ
->
≥ndög
 & ~˘x->sig«l_mask_èbÀ->
blocked
)

325 
	`X86C⁄ãxtCheckSig«lH™dÀrI¡r
(
˘x
);

326 
	`x86_sys_debug
("sysˇŒ 'wrôe' - i¡îru±ed by sig«»’id %d)\n", 
˘x
->
pid
);

327 
	`X86C⁄ãxtCÀ¨Sèã
(
˘x
, 
X86C⁄ãxtSu•íded
 | 
X86C⁄ãxtWrôe
);

332 
fd
 = 
	`x86_fûe_desc_èbÀ_íåy_gë
(
˘x
->
fûe_desc_èbÀ
, ctx->
wakeup_fd
);

333 i‡(!
fd
)

334 
	`Áèl
("syscall 'write': invalid 'wakeup_fd'");

337 
ho°_fds
.
fd
 = fd->
ho°_fd
;

338 
ho°_fds
.
evíts
 = 
POLLOUT
;

339 
îr
 = 
	`pﬁl
(&
ho°_fds
, 1, 0);

340 i‡(
îr
 < 0)

341 
	`Áèl
("syscall 'write': unexpectedÉrror in host 'poll'");

344 i‡(
ho°_fds
.
ªvíts
) {

345 
pbuf
 = 
˘x
->
ªgs
->
ecx
;

346 
cou¡
 = 
˘x
->
ªgs
->
edx
;

347 
buf
 = 
	`xmÆloc
(
cou¡
);

348 
	`mem_ªad
(
˘x
->
mem
, 
pbuf
, 
cou¡
, 
buf
);

350 
cou¡
 = 
	`wrôe
(
fd
->
ho°_fd
, 
buf
, count);

351 i‡(
cou¡
 < 0)

352 
	`Áèl
("syscall 'write': unexpectedÉrror in host 'write'");

354 
˘x
->
ªgs
->
óx
 = 
cou¡
;

355 
	`‰ì
(
buf
);

357 
	`x86_sys_debug
("sysˇŒ wrôê- c⁄töuê’id %d)\n", 
˘x
->
pid
);

358 
	`x86_sys_debug
("Ñëu∫=0x%x\n", 
˘x
->
ªgs
->
óx
);

359 
	`X86C⁄ãxtCÀ¨Sèã
(
˘x
, 
X86C⁄ãxtSu•íded
 | 
X86C⁄ãxtWrôe
);

364 
˘x
->
ho°_thªad_su•íd_a˘ive
 = 1;

365 i‡(
	`±hªad_¸óã
(&
˘x
->
ho°_thªad_su•íd
, 
NULL
, 
X86EmuHo°ThªadSu•íd
, ctx))

366 
	`Áèl
("syscall 'write': couldÇot create childÅhread");

371 i‡(
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtRód
))

373 
x86_fûe_desc_t
 *
fd
;

374 
uöt32_t
 
pbuf
;

375 
cou¡
, 
îr
;

376 *
buf
;

377 
pﬁlfd
 
ho°_fds
;

380 i‡(
˘x
->
ho°_thªad_su•íd_a˘ive
)

384 i‡(
˘x
->
sig«l_mask_èbÀ
->
≥ndög
 & ~˘x->sig«l_mask_èbÀ->
blocked
)

386 
	`X86C⁄ãxtCheckSig«lH™dÀrI¡r
(
˘x
);

387 
	`x86_sys_debug
("sysˇŒ 'ªad' - i¡îru±ed by sig«»’id %d)\n", 
˘x
->
pid
);

388 
	`X86C⁄ãxtCÀ¨Sèã
(
˘x
, 
X86C⁄ãxtSu•íded
 | 
X86C⁄ãxtRód
);

393 
fd
 = 
	`x86_fûe_desc_èbÀ_íåy_gë
(
˘x
->
fûe_desc_èbÀ
, ctx->
wakeup_fd
);

394 i‡(!
fd
)

395 
	`Áèl
("syscall 'read': invalid 'wakeup_fd'");

398 
ho°_fds
.
fd
 = fd->
ho°_fd
;

399 
ho°_fds
.
evíts
 = 
POLLIN
;

400 
îr
 = 
	`pﬁl
(&
ho°_fds
, 1, 0);

401 i‡(
îr
 < 0)

402 
	`Áèl
("syscall 'read': unexpectedÉrror in host 'poll'");

405 i‡(
ho°_fds
.
ªvíts
)

407 
pbuf
 = 
˘x
->
ªgs
->
ecx
;

408 
cou¡
 = 
˘x
->
ªgs
->
edx
;

409 
buf
 = 
	`xmÆloc
(
cou¡
);

411 
cou¡
 = 
	`ªad
(
fd
->
ho°_fd
, 
buf
, count);

412 i‡(
cou¡
 < 0)

413 
	`Áèl
("syscall 'read': unexpectedÉrror in host 'read'");

415 
˘x
->
ªgs
->
óx
 = 
cou¡
;

416 
	`mem_wrôe
(
˘x
->
mem
, 
pbuf
, 
cou¡
, 
buf
);

417 
	`‰ì
(
buf
);

419 
	`x86_sys_debug
("sysˇŒ 'ªad' - c⁄töuê’id %d)\n", 
˘x
->
pid
);

420 
	`x86_sys_debug
("Ñëu∫=0x%x\n", 
˘x
->
ªgs
->
óx
);

421 
	`X86C⁄ãxtCÀ¨Sèã
(
˘x
, 
X86C⁄ãxtSu•íded
 | 
X86C⁄ãxtRód
);

426 
˘x
->
ho°_thªad_su•íd_a˘ive
 = 1;

427 i‡(
	`±hªad_¸óã
(&
˘x
->
ho°_thªad_su•íd
, 
NULL
, 
X86EmuHo°ThªadSu•íd
, ctx))

428 
	`Áèl
("syscall 'read': couldÇot create childÅhread");

433 i‡(
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtWaôpid
))

435 
X86C⁄ãxt
 *
chûd
;

436 
uöt32_t
 
p°©us
;

439 
chûd
 = 
	`X86C⁄ãxtGëZombõ
(
˘x
, ctx->
wakeup_pid
);

440 i‡(
chûd
)

443 
p°©us
 = 
˘x
->
ªgs
->
ecx
;

444 
˘x
->
ªgs
->
óx
 = 
chûd
->
pid
;

445 i‡(
p°©us
)

446 
	`mem_wrôe
(
˘x
->
mem
, 
p°©us
, 4, &
chûd
->
exô_code
);

447 
	`X86C⁄ãxtSëSèã
(
chûd
, 
X86C⁄ãxtFöished
);

449 
	`x86_sys_debug
("sysˇŒ waôpid - c⁄töuê’id %d)\n", 
˘x
->
pid
);

450 
	`x86_sys_debug
("Ñëu∫=0x%x\n", 
˘x
->
ªgs
->
óx
);

451 
	`X86C⁄ãxtCÀ¨Sèã
(
˘x
, 
X86C⁄ãxtSu•íded
 | 
X86C⁄ãxtWaôpid
);

465 i‡(
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtCÆlback
))

467 
	`as£π
(
˘x
->
ˇn_wakeup_ˇŒback_func
);

468 i‡(
˘x
->
	`ˇn_wakeup_ˇŒback_func
(˘x, ctx->
ˇn_wakeup_ˇŒback_d©a
))

471 
	`X86C⁄ãxtCÀ¨Sèã
(
˘x
, 
X86C⁄ãxtSu•íded
 | 
X86C⁄ãxtCÆlback
);

474 i‡(
˘x
->
wakeup_ˇŒback_func
)

475 
˘x
->
	`wakeup_ˇŒback_func
(˘x, ctx->
wakeup_ˇŒback_d©a
);

478 
˘x
->
wakeup_ˇŒback_func
 = 
NULL
;

479 
˘x
->
wakeup_ˇŒback_d©a
 = 
NULL
;

480 
˘x
->
ˇn_wakeup_ˇŒback_func
 = 
NULL
;

481 
˘x
->
ˇn_wakeup_ˇŒback_d©a
 = 
NULL
;

492 
˘x
 = 
£lf
->
c⁄ãxt_li°_hód
; ctx; ctx = ctx->
c⁄ãxt_li°_√xt
)

494 
sig
[3] = { 14, 26, 27 };

495 
i
;

498 i‡(
˘x
->
ho°_thªad_timî_a˘ive
)

504 
i
 = 0; i < 3; i++ )

507 i‡(!
˘x
->
ôimî_vÆue
[
i
] || ctx->ôimî_vÆue[i] > 
now
)

514 
	`X86C⁄ãxtHo°ThªadSu•ídC™˚lUnß„
(
˘x
);

515 
£lf
->
¥o˚ss_evíts_f‹˚
 = 1;

516 
	`x86_sig£t_add
(&
˘x
->
sig«l_mask_èbÀ
->
≥ndög
, 
sig
[
i
]);

519 
˘x
->
ôimî_vÆue
[
i
] = 0;

520 i‡(
˘x
->
ôimî_öãrvÆ
[
i
])

521 
˘x
->
ôimî_vÆue
[
i
] = 
now
 + ctx->
ôimî_öãrvÆ
[i];

525 
˘x
->
ho°_thªad_timî_wakeup
 = 0;

526 
i
 = 0; i < 3; i++)

528 i‡(!
˘x
->
ôimî_vÆue
[
i
])

530 
	`as£π
(
˘x
->
ôimî_vÆue
[
i
] >
now
);

531 i‡(!
˘x
->
ho°_thªad_timî_wakeup
 || ctx->
ôimî_vÆue
[
i
] < ctx->host_thread_timer_wakeup)

532 
˘x
->
ho°_thªad_timî_wakeup
 = ctx->
ôimî_vÆue
[
i
];

536 i‡(
˘x
->
ho°_thªad_timî_wakeup
)

538 
˘x
->
ho°_thªad_timî_a˘ive
 = 1;

539 i‡(
	`±hªad_¸óã
(&
˘x
->
ho°_thªad_timî
, 
NULL
, 
X86C⁄ãxtHo°ThªadTimî
, ctx))

540 
	`Áèl
("%s: couldÇŸ cª©êchûdÅhªad", 
__FUNCTION__
);

549 
˘x
 = 
£lf
->
ru¬ög_li°_hód
; ctx; ctx = ctx->
ru¬ög_li°_√xt
)

551 
	`X86C⁄ãxtCheckSig«lH™dÀr
(
˘x
);

556 
	`±hªad_muãx_u∆ock
(&
£lf
->
¥o˚ss_evíts_muãx
);

557 
	}
}

560 
	$X86EmuRun
(
Emu
 *
£lf
)

562 
X86Emu
 *
emu
 = 
	`asX86Emu
(
£lf
);

563 
X86C⁄ãxt
 *
˘x
;

566 i‡(
emu
->
föished_li°_cou¡
 >emu->
c⁄ãxt_li°_cou¡
)

567  
FALSE
;

570 i‡(
x86_emu_max_ö°
 && 
	`asEmu
(
£lf
)->
ö°ru˘i⁄s
 >= x86_emu_max_inst)

571 
esim_föish
 = 
esim_föish_x86_max_ö°
;

574 i‡(
esim_föish
)

575  
TRUE
;

578 
˘x
 = 
emu
->
ru¬ög_li°_hód
; ctx; ctx = ctx->
ru¬ög_li°_√xt
)

579 
	`X86C⁄ãxtExecuã
(
˘x
);

582 
emu
->
föished_li°_hód
)

583 
	`dñëe
(
emu
->
föished_li°_hód
);

586 
	`X86EmuPro˚ssEvíts
(
emu
);

589  
TRUE
;

590 
	}
}

594 
X86C⁄ãxt
 *
	$X86EmuGëC⁄ãxt
(
X86Emu
 *
£lf
, 
pid
)

596 
X86C⁄ãxt
 *
c⁄ãxt
;

598 
c⁄ãxt
 = 
£lf
->
c⁄ãxt_li°_hód
;

599 
c⁄ãxt
 && c⁄ãxt->
pid
 !=Öid)

600 
c⁄ãxt
 = c⁄ãxt->
c⁄ãxt_li°_√xt
;

601  
c⁄ãxt
;

602 
	}
}

605 
	$X86EmuLﬂdC⁄ãxtsFromC⁄fig
(
X86Emu
 *
£lf
, 
c⁄fig_t
 *
c⁄fig
, *
£˘i⁄
)

607 
X86C⁄ãxt
 *
˘x
;

608 
x86_lﬂdî_t
 *
lﬂdî
;

610 
buf
[
MAX_STRING_SIZE
];

612 *
exe
;

613 *
cwd
;

614 *
¨gs
;

615 *
ív
;

617 *
ö
;

618 *
out
;

620 *
c⁄fig_fûe_«me
;

623 
c⁄fig_fûe_«me
 = 
	`c⁄fig_gë_fûe_«me
(
c⁄fig
);

626 
˘x
 = 
	`√w
(
X86C⁄ãxt
, 
£lf
);

627 
lﬂdî
 = 
˘x
->loader;

630 
exe
 = 
	`c⁄fig_ªad_°rög
(
c⁄fig
, 
£˘i⁄
, "Exe", "");

631 
exe
 = 
	`°r_£t
(
NULL
,Éxe);

632 i‡(!*
exe
)

633 
	`Áèl
("%s: [%s]: invÆidÉxecuèbÀ", 
c⁄fig_fûe_«me
,

634 
£˘i⁄
);

637 
¨gs
 = 
	`c⁄fig_ªad_°rög
(
c⁄fig
, 
£˘i⁄
, "Args", "");

638 
	`löked_li°_add
(
lﬂdî
->
¨gs
, 
exe
);

639 
	`X86C⁄ãxtAddArgsSåög
(
˘x
, 
¨gs
);

642 
ív
 = 
	`c⁄fig_ªad_°rög
(
c⁄fig
, 
£˘i⁄
, "Env", "");

643 
	`X86C⁄ãxtAddEnv
(
˘x
, 
ív
);

646 
cwd
 = 
	`c⁄fig_ªad_°rög
(
c⁄fig
, 
£˘i⁄
, "Cwd", "");

647 i‡(*
cwd
)

648 
lﬂdî
->
cwd
 = 
	`°r_£t
(
NULL
, cwd);

652 
lﬂdî
->
cwd
 = 
	`gëcwd
(
buf
,  buf);

653 i‡(!
lﬂdî
->
cwd
)

654 
	`∑nic
("%s: buf„∏toÿsmÆl", 
__FUNCTION__
);

657 
lﬂdî
->
cwd
 = 
	`°r_£t
(
NULL
,Üoader->cwd);

661 
ö
 = 
	`c⁄fig_ªad_°rög
(
c⁄fig
, 
£˘i⁄
, "Stdin", "");

662 
lﬂdî
->
°dö_fûe
 = 
	`°r_£t
(
NULL
, 
ö
);

665 
out
 = 
	`c⁄fig_ªad_°rög
(
c⁄fig
, 
£˘i⁄
, "Stdout", "");

666 
lﬂdî
->
°dout_fûe
 = 
	`°r_£t
(
NULL
, 
out
);

669 
	`X86C⁄ãxtLﬂdExe
(
˘x
, 
exe
);

670 
	}
}

673 
	$X86EmuLﬂdC⁄ãxtFromComm™dLöe
(
X86Emu
 *
£lf
, 
¨gc
, **
¨gv
)

675 
X86C⁄ãxt
 *
˘x
;

676 
x86_lﬂdî_t
 *
lﬂdî
;

678 
buf
[
MAX_STRING_SIZE
];

681 
˘x
 = 
	`√w
(
X86C⁄ãxt
, 
£lf
);

682 
lﬂdî
 = 
˘x
->loader;

685 
	`X86C⁄ãxtAddArgsVe˘‹
(
˘x
, 
¨gc
, 
¨gv
);

686 
	`X86C⁄ãxtAddEnv
(
˘x
, "");

689 
lﬂdî
->
cwd
 = 
	`gëcwd
(
buf
,  buf);

690 i‡(!
lﬂdî
->
cwd
)

691 
	`∑nic
("%s: buf„∏toÿsmÆl", 
__FUNCTION__
);

692 
lﬂdî
->
cwd
 = 
	`°r_£t
(
NULL
,Üoader->cwd);

695 
lﬂdî
->
°dö_fûe
 = 
	`°r_£t
(
NULL
, "");

696 
lﬂdî
->
°dout_fûe
 = 
	`°r_£t
(
NULL
, "");

699 
	`X86C⁄ãxtLﬂdExe
(
˘x
, 
¨gv
[0]);

700 
	}
}

710 
	$x86_emu_öô
()

713 
	`CLASS_REGISTER
(
X86Emu
);

714 
	`CLASS_REGISTER
(
X86C⁄ãxt
);

719 
as_uöt
;

720 
as_uch¨
[4];

721 } 
ídün
;

722 
ídün
.
as_uöt
 = 0x33221100;

723 i‡(
ídün
.
as_uch¨
[0])

724 
	`Áèl
("%s: ho° machöêi†nŸÜôéêídün", 
__FUNCTION__
);

727 
	`M2S_HOST_GUEST_MATCH
((), 8);

728 
	`M2S_HOST_GUEST_MATCH
((), 4);

729 
	`M2S_HOST_GUEST_MATCH
((), 2);

732 
x86_emu
 = 
	`√w
(
X86Emu
);

735 
	`x86_asm_öô
();

736 
	`x86_uö°_öô
();

738 #ifde‡
HAVE_OPENGL


740 
	`glut_öô
();

742 
	`gÀw_öô
();

744 
	`glu_öô
();

748 
	`›ígl_öô
();

749 
	}
}

753 
	$x86_emu_d⁄e
()

756 #ifde‡
HAVE_OPENGL


757 
	`glut_d⁄e
();

758 
	`gÀw_d⁄e
();

759 
	`glu_d⁄e
();

763 
	`›ígl_d⁄e
();

766 
	`x86_uö°_d⁄e
();

767 
	`x86_asm_d⁄e
();

770 i‡(
	`debug_°©us
(
x86_sys_debug_ˇãg‹y
))

771 
	`x86_sys_dump_°©s
(
	`debug_fûe
(
x86_sys_debug_ˇãg‹y
));

774 
	`dñëe
(
x86_emu
);

775 
	}
}

	@emu/emu.h

20 #i‚de‡
ARCH_X86_EMU_EMU_H


21 
	#ARCH_X86_EMU_EMU_H


	)

23 
	~<±hªad.h
>

24 
	~<°dio.h
>

26 
	~<¨ch/comm⁄/emu.h
>

27 
	~<lib/utû/˛ass.h
>

30 
	gc⁄fig_t
;

38 
	$CLASS_BEGIN
(
X86Emu
, 
Emu
)

41 
cuºít_pid
;

46 
±hªad_muãx_t
 
¥o˚ss_evíts_muãx
;

47 
¥o˚ss_evíts_f‹˚
;

51 
fuãx_¶ìp_cou¡
;

58 
scheduÀ_sig«l
;

61 
X86C⁄ãxt
 *
c⁄ãxt_li°_hód
;

62 
X86C⁄ãxt
 *
c⁄ãxt_li°_èû
;

63 
c⁄ãxt_li°_cou¡
;

64 
c⁄ãxt_li°_max
;

67 
X86C⁄ãxt
 *
ru¬ög_li°_hód
;

68 
X86C⁄ãxt
 *
ru¬ög_li°_èû
;

69 
ru¬ög_li°_cou¡
;

70 
ru¬ög_li°_max
;

73 
X86C⁄ãxt
 *
su•íded_li°_hód
;

74 
X86C⁄ãxt
 *
su•íded_li°_èû
;

75 
su•íded_li°_cou¡
;

76 
su•íded_li°_max
;

79 
X86C⁄ãxt
 *
zombõ_li°_hód
;

80 
X86C⁄ãxt
 *
zombõ_li°_èû
;

81 
zombõ_li°_cou¡
;

82 
zombõ_li°_max
;

85 
X86C⁄ãxt
 *
föished_li°_hód
;

86 
X86C⁄ãxt
 *
föished_li°_èû
;

87 
föished_li°_cou¡
;

88 
föished_li°_max
;

90 
	$CLASS_END
(
X86Emu
)

93 
	`X86EmuCª©e
(
X86Emu
 *
£lf
);

94 
	`X86EmuDe°roy
(
X86Emu
 *
£lf
);

96 
	`X86EmuRun
(
Emu
 *
£lf
);

98 
	`X86EmuDump
(
Obje˘
 *
£lf
, 
FILE
 *
f
);

99 
	`X86EmuDumpSumm¨y
(
Emu
 *
£lf
, 
FILE
 *
f
);

101 
	`X86EmuPro˚ssEvíts
(
X86Emu
 *
£lf
);

102 
	`X86EmuPro˚ssEvítsScheduÀ
(
X86Emu
 *
£lf
);

104 
X86C⁄ãxt
 *
	`X86EmuGëC⁄ãxt
(
X86Emu
 *
£lf
, 
pid
);

106 
	`X86EmuLﬂdC⁄ãxtsFromC⁄fig
(
X86Emu
 *
£lf
, 
c⁄fig_t
 *
c⁄fig
, *
£˘i⁄
);

107 
	`X86EmuLﬂdC⁄ãxtFromComm™dLöe
(
X86Emu
 *
£lf
, 
¨gc
, **
¨gv
);

115 
X86Emu
 *
x86_emu
;

117 
x86_emu_max_cy˛es
;

118 
x86_emu_max_ö°
;

119 
x86_emu_œ°_ö°_byãs
[20];

120 
x86_emu_œ°_ö°_size
;

121 
x86_emu_¥o˚ss_¥e„tch_höts
;

123 
	`x86_emu_öô
();

124 
	`x86_emu_d⁄e
();

	@emu/file-desc.c

20 
	~<as£π.h
>

21 
	~<uni°d.h
>

23 
	~<lib/mh™dÀ/mh™dÀ.h
>

24 
	~<lib/utû/debug.h
>

25 
	~<lib/utû/li°.h
>

27 
	~"fûe-desc.h
"

34 
x86_fûe_desc_t
 *
	$x86_fûe_desc_¸óã
(
x86_fûe_desc_köd_t
 
köd
,

35 
gue°_fd
, 
ho°_fd
, 
Êags
, *
∑th
)

37 
x86_fûe_desc_t
 *
desc
;

40 
desc
 = 
	`xˇŒoc
(1, (
x86_fûe_desc_t
));

41 
desc
->
köd
 = kind;

42 
desc
->
gue°_fd
 = guest_fd;

43 
desc
->
ho°_fd
 = host_fd;

44 
desc
->
Êags
 = flags;

47 i‡(
∑th
)

48 
desc
->
∑th
 = 
	`x°rdup
(path);

51  
desc
;

52 
	}
}

55 
	$x86_fûe_desc_‰ì
(
x86_fûe_desc_t
 *
desc
)

57 i‡(
desc
->
∑th
)

58 
	`‰ì
(
desc
->
∑th
);

59 
	`‰ì
(
desc
);

60 
	}
}

69 
x86_fûe_desc_èbÀ_t
 *
	$x86_fûe_desc_èbÀ_¸óã
()

71 
x86_fûe_desc_èbÀ_t
 *
èbÀ
;

72 
x86_fûe_desc_t
 *
desc
;

75 
èbÀ
 = 
	`xˇŒoc
(1, (
x86_fûe_desc_èbÀ_t
));

76 
èbÀ
->
fûe_desc_li°
 = 
	`li°_¸óã
();

79 
desc
 = 
	`x86_fûe_desc_¸óã
(
fûe_desc_°d
, 0, 0, 0, 
NULL
);

80 
	`li°_add
(
èbÀ
->
fûe_desc_li°
, 
desc
);

83 
desc
 = 
	`x86_fûe_desc_¸óã
(
fûe_desc_°d
, 1, 1, 0, 
NULL
);

84 
	`li°_add
(
èbÀ
->
fûe_desc_li°
, 
desc
);

87 
desc
 = 
	`x86_fûe_desc_¸óã
(
fûe_desc_°d
, 2, 2, 0, 
NULL
);

88 
	`li°_add
(
èbÀ
->
fûe_desc_li°
, 
desc
);

91  
èbÀ
;

92 
	}
}

95 
	$x86_fûe_desc_èbÀ_‰ì
(
x86_fûe_desc_èbÀ_t
 *
èbÀ
)

97 
i
;

98 
x86_fûe_desc_t
 *
desc
;

101 
	`as£π
(!
èbÀ
->
num_löks
);

104 
i
 = 0; i < 
	`li°_cou¡
(
èbÀ
->
fûe_desc_li°
); i++)

106 
desc
 = 
	`li°_gë
(
èbÀ
->
fûe_desc_li°
, 
i
);

107 i‡(
desc
)

108 
	`x86_fûe_desc_‰ì
(
desc
);

112 
	`li°_‰ì
(
èbÀ
->
fûe_desc_li°
);

113 
	`‰ì
(
èbÀ
);

114 
	}
}

117 
x86_fûe_desc_èbÀ_t
 *
	$x86_fûe_desc_èbÀ_lök
(
x86_fûe_desc_èbÀ_t
 *
fdt
)

119 
fdt
->
num_löks
++;

120  
fdt
;

121 
	}
}

124 
	$x86_fûe_desc_èbÀ_u∆ök
(
x86_fûe_desc_èbÀ_t
 *
fdt
)

126 
	`as£π
(
fdt
->
num_löks
 >= 0);

127 i‡(
fdt
->
num_löks
)

128 
fdt
->
num_löks
--;

130 
	`x86_fûe_desc_èbÀ_‰ì
(
fdt
);

131 
	}
}

134 
	$x86_fûe_desc_èbÀ_dump
(
x86_fûe_desc_èbÀ_t
 *
èbÀ
, 
FILE
 *
f
)

136 
x86_fûe_desc_t
 *
desc
;

138 
i
;

139 
busy
 = 0;

141 
i
 = 0; i < 
	`li°_cou¡
(
èbÀ
->
fûe_desc_li°
); i++)

143 
	`x86_fûe_desc_èbÀ_íåy_dump
(
èbÀ
, 
i
, 
f
);

144 
desc
 = 
	`li°_gë
(
èbÀ
->
fûe_desc_li°
, 
i
);

145 i‡(
desc
)

146 
busy
++;

148 
	`Ârötf
(
f
, " %dÅabÀÉ¡rõs, %d busy\n", 
	`li°_cou¡
(
èbÀ
->
fûe_desc_li°
), 
busy
);

149 
	}
}

152 
	$x86_fûe_desc_èbÀ_gë_ho°_fd
(
x86_fûe_desc_èbÀ_t
 *
èbÀ
, 
gue°_fd
)

154 
x86_fûe_desc_t
 *
desc
;

156 
desc
 = 
	`li°_gë
(
èbÀ
->
fûe_desc_li°
, 
gue°_fd
);

157  
desc
 ? desc->
ho°_fd
 : -1;

158 
	}
}

161 
	$x86_fûe_desc_èbÀ_gë_gue°_fd
(
x86_fûe_desc_èbÀ_t
 *
èbÀ
, 
ho°_fd
)

163 
x86_fûe_desc_t
 *
desc
;

164 
i
;

166 
i
 = 0; i < 
	`li°_cou¡
(
èbÀ
->
fûe_desc_li°
); i++)

168 
desc
 = 
	`li°_gë
(
èbÀ
->
fûe_desc_li°
, 
i
);

169 i‡(
desc
->
ho°_fd
 == host_fd)

170  
i
;

175 
	}
}

178 
	$x86_fûe_desc_èbÀ_íåy_dump
(
x86_fûe_desc_èbÀ_t
 *
èbÀ
, 
ödex
, 
FILE
 *
f
)

180 
x86_fûe_desc_t
 *
desc
;

183 i‡(
ödex
 < 0 || index >
	`li°_cou¡
(
èbÀ
->
fûe_desc_li°
))

187 
desc
 = 
	`li°_gë
(
èbÀ
->
fûe_desc_li°
, 
ödex
);

188 i‡(
desc
)

190 
	`as£π
(
desc
->
gue°_fd
 =
ödex
);

191 
	`Ârötf
(
f
, " %2d host_fd=%-2d kind=%-2dÖath='%s'\n",

192 
desc
->
gue°_fd
, desc->
ho°_fd
, desc->
köd
, desc->
∑th
);

196 
	`Ârötf
(
f
, " %2dÉm±y\n", 
ödex
);

198 
	}
}

201 
x86_fûe_desc_t
 *
	$x86_fûe_desc_èbÀ_íåy_gë
(
x86_fûe_desc_èbÀ_t
 *
èbÀ
, 
ödex
)

203  
	`li°_gë
(
èbÀ
->
fûe_desc_li°
, 
ödex
);

204 
	}
}

206 
x86_fûe_desc_t
 *
	$x86_fûe_desc_èbÀ_íåy_√w
(
x86_fûe_desc_èbÀ_t
 *
èbÀ
,

207 
x86_fûe_desc_köd_t
 
köd
, 
ho°_fd
, *
∑th
, 
Êags
)

209  
	`x86_fûe_desc_èbÀ_íåy_√w_gue°_fd
(
èbÀ
, 
köd
, -1, 
ho°_fd
, 
∑th
, 
Êags
);

210 
	}
}

212 
x86_fûe_desc_t
 *
	$x86_fûe_desc_èbÀ_íåy_√w_gue°_fd
(
x86_fûe_desc_èbÀ_t
 *
èbÀ
,

213 
x86_fûe_desc_köd_t
 
köd
, 
gue°_fd
, 
ho°_fd
, *
∑th
, 
Êags
)

215 
x86_fûe_desc_t
 *
desc
;

217 
i
;

220 
i
 = 0; i < 
	`li°_cou¡
(
èbÀ
->
fûe_desc_li°
Ë&& 
gue°_fd
 < 0; i++)

221 i‡(!
	`li°_gë
(
èbÀ
->
fûe_desc_li°
, 
i
))

222 
gue°_fd
 = 
i
;

225 i‡(
gue°_fd
 < 0)

227 
gue°_fd
 = 
	`li°_cou¡
(
èbÀ
->
fûe_desc_li°
);

228 
	`li°_add
(
èbÀ
->
fûe_desc_li°
, 
NULL
);

232 
i
 = 
	`li°_cou¡
(
èbÀ
->
fûe_desc_li°
); i <
gue°_fd
; ++i) {

233 
	`li°_add
(
èbÀ
->
fûe_desc_li°
, 
NULL
);

237 
desc
 = 
	`x86_fûe_desc_¸óã
(
köd
, 
gue°_fd
, 
ho°_fd
, 
Êags
, 
∑th
);

238 
	`li°_£t
(
èbÀ
->
fûe_desc_li°
, 
gue°_fd
, 
desc
);

241  
desc
;

242 
	}
}

245 
	$x86_fûe_desc_èbÀ_íåy_‰ì
(
x86_fûe_desc_èbÀ_t
 *
èbÀ
, 
ödex
)

247 
x86_fûe_desc_t
 *
desc
;

250 
desc
 = 
	`li°_gë
(
èbÀ
->
fûe_desc_li°
, 
ödex
);

251 i‡(!
desc
)

255 i‡(
desc
->
köd
 =
fûe_desc_vútuÆ
)

257 i‡(
	`u∆ök
(
desc
->
∑th
))

258 
	`w¨nög
("%s:Åemporary host virtual file couldÇot be deleted",

259 
desc
->
∑th
);

263 
	`li°_£t
(
èbÀ
->
fûe_desc_li°
, 
ödex
, 
NULL
);

264 
	`x86_fûe_desc_‰ì
(
desc
);

265 
	}
}

	@emu/file-desc.h

20 #i‚de‡
ARCH_X86_EMU_FILE_DESC_H


21 
	#ARCH_X86_EMU_FILE_DESC_H


	)

23 
	~<°dio.h
>

26 
	ex86_fûe_desc_köd_t


28 
	mfûe_desc_övÆid
 = 0,

29 
	mfûe_desc_ªguœr
,

30 
	mfûe_desc_°d
,

31 
	mfûe_desc_pùe
,

32 
	mfûe_desc_vútuÆ
,

33 
	mfûe_desc_gpu
,

34 
	mfûe_desc_sockë


39 
	sx86_fûe_desc_t


41 
x86_fûe_desc_köd_t
 
	mköd
;

42 
	mgue°_fd
;

43 
	mho°_fd
;

44 
	mÊags
;

45 *
	m∑th
;

50 
	sx86_fûe_desc_èbÀ_t


53 
	mnum_löks
;

56 
li°_t
 *
	mfûe_desc_li°
;

60 
x86_fûe_desc_èbÀ_t
 *
x86_fûe_desc_èbÀ_¸óã
();

61 
x86_fûe_desc_èbÀ_‰ì
(
x86_fûe_desc_èbÀ_t
 *
èbÀ
);

63 
x86_fûe_desc_èbÀ_t
 *
x86_fûe_desc_èbÀ_lök
(x86_fûe_desc_èbÀ_à*
èbÀ
);

64 
x86_fûe_desc_èbÀ_u∆ök
(
x86_fûe_desc_èbÀ_t
 *
èbÀ
);

66 
x86_fûe_desc_èbÀ_dump
(
x86_fûe_desc_èbÀ_t
 *
èbÀ
, 
FILE
 *
f
);

68 
x86_fûe_desc_t
 *
x86_fûe_desc_èbÀ_íåy_gë
(
x86_fûe_desc_èbÀ_t
 *
èbÀ
, 
ödex
);

69 
x86_fûe_desc_t
 *
x86_fûe_desc_èbÀ_íåy_√w
(
x86_fûe_desc_èbÀ_t
 *
èbÀ
,

70 
x86_fûe_desc_köd_t
 
köd
, 
ho°_fd
, *
∑th
, 
Êags
);

71 
x86_fûe_desc_t
 *
x86_fûe_desc_èbÀ_íåy_√w_gue°_fd
(
x86_fûe_desc_èbÀ_t
 *
èbÀ
,

72 
x86_fûe_desc_köd_t
 
köd
, 
gue°_fd
, 
ho°_fd
, *
∑th
, 
Êags
);

73 
x86_fûe_desc_èbÀ_íåy_‰ì
(
x86_fûe_desc_èbÀ_t
 *
èbÀ
, 
ödex
);

74 
x86_fûe_desc_èbÀ_íåy_dump
(
x86_fûe_desc_èbÀ_t
 *
èbÀ
, 
ödex
, 
FILE
 *
f
);

76 
x86_fûe_desc_èbÀ_gë_ho°_fd
(
x86_fûe_desc_èbÀ_t
 *
èbÀ
, 
gue°_fd
);

77 
x86_fûe_desc_èbÀ_gë_gue°_fd
(
x86_fûe_desc_èbÀ_t
 *
èbÀ
, 
ho°_fd
);

	@emu/isa.c

20 
	~<°d¨g.h
>

21 
	~<°rög.h
>

23 
	~<lib/utû/misc.h
>

24 
	~<lib/utû/debug.h
>

25 
	~<lib/utû/ñf-f‹m©.h
>

26 
	~<lib/utû/°rög.h
>

27 
	~<mem-sy°em/mem‹y.h
>

28 
	~<mem-sy°em/•ec-mem.h
>

30 
	~"c⁄ãxt.h
"

31 
	~"emu.h
"

32 
	~"iß.h
"

33 
	~"lﬂdî.h
"

34 
	~"machöe.h
"

35 
	~"ªgs.h
"

36 
	~"uö°.h
"

47 (*
	tX86C⁄ãxtIn°Func
)(
	tX86C⁄ãxt
 *
	t˘x
);

48 
X86C⁄ãxtIn°Func
 
x86_c⁄ãxt_ö°_func
[
x86_ö°_›code_cou¡
] =

50 
NULL


51 
	#DEFINST
(
«me
, 
›1
, 
›2
, 
›3
, 
modrm
, 
imm
, 
pfx
Ë, 
x86_iß_
##«me##
_im∂


	)

52 
	~<¨ch/x86/asm/asm.d©
>

53 #unde‡
DEFINST


54 
	}
};

57 
	gx86_c⁄ãxt_ˇŒ_debug_ˇãg‹y
;

58 
	gx86_c⁄ãxt_iß_debug_ˇãg‹y
;

61 
	gx86_c⁄ãxt_ho°_Êags
;

62 
	gx86_c⁄ãxt_ho°_Âív
[28];

64 
	gx86_ö°_‰eq
[
x86_ö°_›code_cou¡
];

67 
	$x86_iß_ö°_°©_dump
(
FILE
 *
f
)

69 
i
;

70 
i
 = 1; i < 
x86_ö°_›code_cou¡
; i++)

72 i‡(!
x86_ö°_‰eq
[
i
])

74 
	`Ârötf
(
f
, "%† %Œd\n", 
	`x86_ö°_gë_«me
(
i
), 
x86_ö°_‰eq
[i]);

76 
	}
}

79 
	$x86_iß_ö°_°©_ª£t
()

81 
i
;

82 
i
 = 1; i < 
x86_ö°_›code_cou¡
; i++)

83 
x86_ö°_‰eq
[
i
] = 0;

84 
	}
}

87 
	$X86C⁄ãxtDoubÀToExãnded
(
f
, *
e
)

89 
asm
 volatile ("fldl %1; fstpt %0\n\t"

90 : "=m" (*
e
Ë: "m" (
f
));

91 
	}
}

94 
	$X86C⁄ãxtExãndedToDoubÀ
(*
e
)

96 
f
;

97 
asm
 volatile ("fldt %1; fstpl %0\n\t"

98 : "=m" (
f
Ë: "m" (*
e
));

99  
f
;

100 
	}
}

103 
	$X86C⁄ãxtFlﬂtToExãnded
(
f
, *
e
)

105 
asm
 volatile ("flds %1; fstpt %0\n\t"

106 : "=m" (*
e
Ë: "m" (
f
));

107 
	}
}

110 
	$X86C⁄ãxtExãndedToFlﬂt
(*
e
)

112 
f
;

113 
asm
 volatile ("fldt %1; fstps %0\n\t"

114 : "=m" (
f
Ë: "m" (*
e
));

115  
f
;

116 
	}
}

133 
	$X86C⁄ãxtMemRód
(
X86C⁄ãxt
 *
£lf
, 
addr
, 
size
, *
buf
)

136 i‡(
£lf
->
°©e
 & 
X86C⁄ãxtS≥cMode
)

138 
	`•ec_mem_ªad
(
£lf
->
•ec_mem
, 
addr
, 
size
, 
buf
);

143 
	`mem_ªad
(
£lf
->
mem
, 
addr
, 
size
, 
buf
);

144 
	}
}

147 
	$X86C⁄ãxtMemWrôe
(
X86C⁄ãxt
 *
£lf
, 
addr
, 
size
, *
buf
)

150 i‡(
£lf
->
°©e
 & 
X86C⁄ãxtS≥cMode
)

152 
	`•ec_mem_wrôe
(
£lf
->
•ec_mem
, 
addr
, 
size
, 
buf
);

157 
	`mem_wrôe
(
£lf
->
mem
, 
addr
, 
size
, 
buf
);

158 
	}
}

161 
	$X86C⁄ãxtEº‹
(
X86C⁄ãxt
 *
£lf
, *
fmt
, ...)

163 
X86Emu
 *
emu
 = 
£lf
->emu;

165 
va_li°
 
va
;

166 
	`va_°¨t
(
va
, 
fmt
);

169 i‡(
£lf
->
°©e
 & 
X86C⁄ãxtS≥cMode
)

173 
	`Ârötf
(
°dîr
, "fatal: x86 context %dát 0x%08x inst %lld: ",

174 
£lf
->
pid
, sñf->
cuº_eù
, 
	`asEmu
(
emu
)->
ö°ru˘i⁄s
);

175 
	`vÂrötf
(
°dîr
, 
fmt
, 
va
);

176 
	`Ârötf
(
°dîr
, "\n");

177 
	`exô
(1);

178 
	}
}

183 
	#mem_ac˚ss
 
__COMPILATION_ERROR__


	)

184 
	#mem_ªad
 
__COMPILATION_ERROR__


	)

185 
	#mem_wrôe
 
__COMPILATION_ERROR__


	)

186 
	#mem_zîo
 
__COMPILATION_ERROR__


	)

187 
	#mem_ªad_°rög
 
__COMPILATION_ERROR__


	)

188 
	#mem_wrôe_°rög
 
__COMPILATION_ERROR__


	)

189 
	#mem_gë_buf„r
 
__COMPILATION_ERROR__


	)

190 
	#Áèl
 
__COMPILATION_ERROR__


	)

191 
	#∑nic
 
__COMPILATION_ERROR__


	)

192 
	#w¨nög
 
__COMPILATION_ERROR__


	)

193 #ifde‡
as£π


194 #unde‡
as£π


196 
	#as£π
 
__COMPILATION_ERROR__


	)

199 
	$X86C⁄ãxtDebugCÆlIn°
(
X86C⁄ãxt
 *
£lf
)

201 
ñf_symbﬁ_t
 *
‰om
;

202 
ñf_symbﬁ_t
 *
to
;

204 
x86_lﬂdî_t
 *
lﬂdî
 = 
£lf
->loader;

205 
x86_ªgs_t
 *
ªgs
 = 
£lf
->regs;

207 *
a˘i⁄
;

208 
i
;

211 i‡(
£lf
->
°©e
 & 
X86C⁄ãxtS≥cMode
)

215 i‡(!
	`°∫cmp
(
£lf
->
ö°
.
f‹m©
, "call", 4))

216 
a˘i⁄
 = "call";

217 i‡(!
	`°∫cmp
(
£lf
->
ö°
.
f‹m©
, "ret", 3))

218 
a˘i⁄
 = "ret";

223 
i
 = 0; i < 
£lf
->
fun˘i⁄_Àvñ
; i++)

224 
	`X86C⁄ãxtDebugCÆl
("| ");

225 
‰om
 = 
	`ñf_symbﬁ_gë_by_addªss
(
lﬂdî
->
ñf_fûe
, 
£lf
->
cuº_eù
, 
NULL
);

226 
to
 = 
	`ñf_symbﬁ_gë_by_addªss
(
lﬂdî
->
ñf_fûe
, 
ªgs
->
eù
, 
NULL
);

227 i‡(
‰om
)

228 
	`X86C⁄ãxtDebugCÆl
("%s", 
‰om
->
«me
);

230 
	`X86C⁄ãxtDebugCÆl
("0x%x", 
£lf
->
cuº_eù
);

231 
	`X86C⁄ãxtDebugCÆl
(" - %†tÿ", 
a˘i⁄
);

232 i‡(
to
)

233 
	`X86C⁄ãxtDebugCÆl
("%s", 
to
->
«me
);

235 
	`X86C⁄ãxtDebugCÆl
("0x%x", 
ªgs
->
eù
);

236 
	`X86C⁄ãxtDebugCÆl
("\n");

239 i‡(
	`°∫cmp
(
£lf
->
ö°
.
f‹m©
, "call", 4))

240 
£lf
->
fun˘i⁄_Àvñ
--;

242 
£lf
->
fun˘i⁄_Àvñ
++;

243 
	}
}

250 
	mshi·
;

251 
	msize
;

252 } 
	gx86_c⁄ãxt_ªgs_öfo
[] =

288 
	$X86C⁄ãxtSëFœg
(
X86C⁄ãxt
 *
£lf
, 
x86_ö°_Êag_t
 
Êag
)

290 
x86_ªgs_t
 *
ªgs
 = 
£lf
->regs;

292 
ªgs
->
eÊags
 = 
	`SETBIT32
‘egs->eÊags, 
Êag
);

293 
	}
}

296 
	$X86C⁄ãxtCÀ¨Fœg
(
X86C⁄ãxt
 *
£lf
, 
x86_ö°_Êag_t
 
Êag
)

298 
x86_ªgs_t
 *
ªgs
 = 
£lf
->regs;

300 
ªgs
->
eÊags
 = 
	`CLEARBIT32
‘egs->eÊags, 
Êag
);

301 
	}
}

304 
	$X86C⁄ãxtGëFœg
(
X86C⁄ãxt
 *
£lf
, 
x86_ö°_Êag_t
 
Êag
)

306 
x86_ªgs_t
 *
ªgs
 = 
£lf
->regs;

308  
	`GETBIT32
(
ªgs
->
eÊags
, 
Êag
) > 0;

309 
	}
}

315 
	gx86_c⁄ãxt_bô_mask
[5] = { 0, 0xff, 0xffff, 0, 0xffffffff};

318 
	$X86C⁄ãxtLﬂdReg
(
X86C⁄ãxt
 *
£lf
, 
x86_ö°_ªg_t
 
ªg
)

320 
x86_ªgs_t
 *
ªgs
 = 
£lf
->regs;

322 
mask
;

323 *
ªg_±r
;

325 
mask
 = 
x86_c⁄ãxt_bô_mask
[
x86_c⁄ãxt_ªgs_öfo
[
ªg
].
size
];

326 
ªg_±r
 = (*Ë
ªgs
 + 
x86_c⁄ãxt_ªgs_öfo
[
ªg
].
shi·
;

327  *
ªg_±r
 & 
mask
;

328 
	}
}

331 
	$X86C⁄ãxtSt‹eReg
(
X86C⁄ãxt
 *
£lf
, 
x86_ö°_ªg_t
 
ªg
, 
vÆue
)

333 
x86_ªgs_t
 *
ªgs
 = 
£lf
->regs;

335 
mask
;

336 *
ªg_±r
;

338 
mask
 = 
x86_c⁄ãxt_bô_mask
[
x86_c⁄ãxt_ªgs_öfo
[
ªg
].
size
];

339 
ªg_±r
 = (*Ë
ªgs
 + 
x86_c⁄ãxt_ªgs_öfo
[
ªg
].
shi·
;

340 *
ªg_±r
 = (*ªg_±∏& ~
mask
Ë| (
vÆue
 & mask);

341 
	`X86C⁄ãxtDebugISA
(" %†<- 0x%x", 
	`°r_m≠_vÆue
(&
x86_ö°_ªg_m≠
, 
ªg
), 
vÆue
);

342 
	}
}

347 
	$X86C⁄ãxtLöórAddªss
(
X86C⁄ãxt
 *
£lf
, 
off£t
)

350 i‡(!
£lf
->
ö°
.
£gmít
)

351  
off£t
;

354 i‡(
£lf
->
ö°
.
£gmít
 !
x86_ö°_ªg_gs
)

356 
	`X86C⁄ãxtEº‹
(
£lf
, "segment overrideÇot supported");

361 i‡(
	`X86C⁄ãxtLﬂdReg
(
£lf
, 
x86_ö°_ªg_gs
) != 0x33)

363 
	`X86C⁄ãxtEº‹
(
£lf
, "isa_linear_address: gs = 0x%x",

364 
	`X86C⁄ãxtLﬂdReg
(
£lf
, 
x86_ö°_ªg_gs
));

368 i‡(!
£lf
->
glibc_£gmít_ba£
)

370 
	`X86C⁄ãxtEº‹
(
£lf
, "isa_linear_address: glibc segmentÇot set");

375  
£lf
->
glibc_£gmít_ba£
 + 
off£t
;

376 
	}
}

380 
	$X86C⁄ãxtEf„˘iveAddªss
(
X86C⁄ãxt
 *
£lf
)

382 
addr
;

385 i‡(
£lf
->
ö°
.
modrm_mod
 == 3)

387 
	`X86C⁄ãxtEº‹
(
£lf
, "%s: wr⁄g vÆuêf‹ 'modrm_mod'", 
__FUNCTION__
);

392 
addr
 = 
	`X86C⁄ãxtLﬂdReg
(
£lf
, sñf->
ö°
.
ó_ba£
) +

393 
	`X86C⁄ãxtLﬂdReg
(
£lf
, sñf->
ö°
.
ó_ödex
Ë* sñf->ö°.
ó_sˇÀ
 +

394 
£lf
->
ö°
.
di•
;

397 
addr
 = 
	`X86C⁄ãxtLöórAddªss
(
£lf
,áddr);

403 
£lf
->
ef„˘ive_addªss
 = 
addr
;

405  
addr
;

406 
	}
}

409 
	$X86C⁄ãxtMoffsAddªss
(
X86C⁄ãxt
 *
£lf
)

411 
addr
;

414 
addr
 = 
£lf
->
ö°
.
imm
.
d
;

417 
addr
 = 
	`X86C⁄ãxtLöórAddªss
(
£lf
,áddr);

419  
addr
;

420 
	}
}

423 
	$X86C⁄ãxtLﬂdRm8
(
X86C⁄ãxt
 *
£lf
)

425 
vÆue
;

427 i‡(
£lf
->
ö°
.
modrm_mod
 == 0x03)

428  
	`X86C⁄ãxtLﬂdReg
(
£lf
, sñf->
ö°
.
modrm_rm
 + 
x86_ö°_ªg_Æ
);

430 
	`X86C⁄ãxtMemRód
(
£lf
, 
	`X86C⁄ãxtEf„˘iveAddªss
(£lf), 1, &
vÆue
);

431 
	`X86C⁄ãxtDebugISA
(" [0x%x]=0x%x", 
	`X86C⁄ãxtEf„˘iveAddªss
(
£lf
), 
vÆue
);

432  
vÆue
;

433 
	}
}

436 
	$X86C⁄ãxtLﬂdRm16
(
X86C⁄ãxt
 *
£lf
)

438 
vÆue
;

440 i‡(
£lf
->
ö°
.
modrm_mod
 == 0x03)

441  
	`X86C⁄ãxtLﬂdReg
(
£lf
, sñf->
ö°
.
modrm_rm
 + 
x86_ö°_ªg_ax
);

443 
	`X86C⁄ãxtMemRód
(
£lf
, 
	`X86C⁄ãxtEf„˘iveAddªss
(£lf), 2, &
vÆue
);

444 
	`X86C⁄ãxtDebugISA
(" [0x%x]=0x%x", 
	`X86C⁄ãxtEf„˘iveAddªss
(
£lf
), 
vÆue
);

445  
vÆue
;

446 
	}
}

449 
	$X86C⁄ãxtLﬂdRm32
(
X86C⁄ãxt
 *
£lf
)

451 
vÆue
;

453 i‡(
£lf
->
ö°
.
modrm_mod
 == 0x03)

454  
	`X86C⁄ãxtLﬂdReg
(
£lf
, sñf->
ö°
.
modrm_rm
 + 
x86_ö°_ªg_óx
);

456 
	`X86C⁄ãxtMemRód
(
£lf
, 
	`X86C⁄ãxtEf„˘iveAddªss
(£lf), 4, &
vÆue
);

457 
	`X86C⁄ãxtDebugISA
(" [0x%x]=0x%x", 
	`X86C⁄ãxtEf„˘iveAddªss
(
£lf
), 
vÆue
);

458  
vÆue
;

459 
	}
}

462 
	$X86C⁄ãxtLﬂdR32M16
(
X86C⁄ãxt
 *
£lf
)

464 
vÆue
;

466 i‡(
£lf
->
ö°
.
modrm_mod
 == 0x03)

467  
	`X86C⁄ãxtLﬂdReg
(
£lf
, sñf->
ö°
.
modrm_rm
 + 
x86_ö°_ªg_óx
);

469 
	`X86C⁄ãxtMemRód
(
£lf
, 
	`X86C⁄ãxtEf„˘iveAddªss
(£lf), 2, &
vÆue
);

470 
	`X86C⁄ãxtDebugISA
(" [0x%x]=0x%x", 
	`X86C⁄ãxtEf„˘iveAddªss
(
£lf
), 
vÆue
);

471  
vÆue
;

472 
	}
}

475 
	$X86C⁄ãxtLﬂdM64
(
X86C⁄ãxt
 *
£lf
)

477 
vÆue
;

479 
	`X86C⁄ãxtMemRód
(
£lf
, 
	`X86C⁄ãxtEf„˘iveAddªss
(£lf), 8, &
vÆue
);

480 
	`X86C⁄ãxtDebugISA
(" [0x%x]=0x%Œx", 
	`X86C⁄ãxtEf„˘iveAddªss
(
£lf
), 
vÆue
);

481  
vÆue
;

482 
	}
}

485 
	$X86C⁄ãxtSt‹eRm8
(
X86C⁄ãxt
 *
£lf
, 
vÆue
)

487 i‡(
£lf
->
ö°
.
modrm_mod
 == 0x03)

489 
	`X86C⁄ãxtSt‹eReg
(
£lf
, sñf->
ö°
.
modrm_rm
 + 
x86_ö°_ªg_Æ
, 
vÆue
);

492 
	`X86C⁄ãxtMemWrôe
(
£lf
, 
	`X86C⁄ãxtEf„˘iveAddªss
(£lf), 1, &
vÆue
);

493 
	`X86C⁄ãxtDebugISA
(" [0x%x] <- 0x%x", 
	`X86C⁄ãxtEf„˘iveAddªss
(
£lf
), 
vÆue
);

494 
	}
}

497 
	$X86C⁄ãxtSt‹eRm16
(
X86C⁄ãxt
 *
£lf
, 
vÆue
)

499 i‡(
£lf
->
ö°
.
modrm_mod
 == 0x03)

501 
	`X86C⁄ãxtSt‹eReg
(
£lf
, sñf->
ö°
.
modrm_rm
 + 
x86_ö°_ªg_ax
, 
vÆue
);

504 
	`X86C⁄ãxtMemWrôe
(
£lf
, 
	`X86C⁄ãxtEf„˘iveAddªss
(£lf), 2, &
vÆue
);

505 
	`X86C⁄ãxtDebugISA
(" [0x%x] <- 0x%x", 
	`X86C⁄ãxtEf„˘iveAddªss
(
£lf
), 
vÆue
);

506 
	}
}

509 
	$X86C⁄ãxtSt‹eRm32
(
X86C⁄ãxt
 *
£lf
, 
vÆue
)

511 i‡(
£lf
->
ö°
.
modrm_mod
 == 0x03)

513 
	`X86C⁄ãxtSt‹eReg
(
£lf
, sñf->
ö°
.
modrm_rm
 + 
x86_ö°_ªg_óx
, 
vÆue
);

516 
	`X86C⁄ãxtMemWrôe
(
£lf
, 
	`X86C⁄ãxtEf„˘iveAddªss
(£lf), 4, &
vÆue
);

517 
	`X86C⁄ãxtDebugISA
(" [0x%x] <- 0x%x", 
	`X86C⁄ãxtEf„˘iveAddªss
(
£lf
), 
vÆue
);

518 
	}
}

521 
	$X86C⁄ãxtSt‹eM64
(
X86C⁄ãxt
 *
£lf
, 
vÆue
)

523 
	`X86C⁄ãxtMemWrôe
(
£lf
, 
	`X86C⁄ãxtEf„˘iveAddªss
(£lf), 8, &
vÆue
);

524 
	`X86C⁄ãxtDebugISA
(" [0x%x] <- 0x%Œx", 
	`X86C⁄ãxtEf„˘iveAddªss
(
£lf
), 
vÆue
);

525 
	}
}

528 
	$X86C⁄ãxtLﬂdFpu
(
X86C⁄ãxt
 *
£lf
, 
ödex
, *
vÆue
)

530 
x86_ªgs_t
 *
ªgs
 = 
£lf
->regs;

531 
eff_ödex
;

533 i‡(
ödex
 < 0 || index >= 8)

535 
	`X86C⁄ãxtEº‹
(
£lf
, "%s: invÆid vÆuêf‹ 'ödex'", 
__FUNCTION__
);

539 
eff_ödex
 = (
ªgs
->
Âu_t›
 + 
ödex
) % 8;

540 i‡(!
ªgs
->
Âu_°ack
[
eff_ödex
].
vÆid
)

542 
	`X86C⁄ãxtEº‹
(
£lf
, "%s: invÆid FPU sèckÉ¡ry", 
__FUNCTION__
);

546 
	`mem˝y
(
vÆue
, 
ªgs
->
Âu_°ack
[
eff_ödex
].value, 10);

547 i‡(
	`debug_°©us
(
x86_c⁄ãxt_iß_debug_ˇãg‹y
))

548 
	`X86C⁄ãxtDebugISA
(" st(%d)=%g", 
ödex
, 
	`X86C⁄ãxtExãndedToDoubÀ
(
vÆue
));

549 
	}
}

552 
	$X86C⁄ãxtSt‹eFpu
(
X86C⁄ãxt
 *
£lf
, 
ödex
, *
vÆue
)

554 
x86_ªgs_t
 *
ªgs
 = 
£lf
->regs;

557 i‡(
ödex
 < 0 || index >= 8)

559 
	`X86C⁄ãxtEº‹
(
£lf
, "%s: invÆid vÆuêf‹ 'ödex'", 
__FUNCTION__
);

564 
ödex
 = (
ªgs
->
Âu_t›
 + index) % 8;

565 i‡(!
ªgs
->
Âu_°ack
[
ödex
].
vÆid
)

567 
	`X86C⁄ãxtEº‹
(
£lf
, "%s: invÆid FPU sèckÉ¡ry", 
__FUNCTION__
);

572 
	`mem˝y
(
ªgs
->
Âu_°ack
[
ödex
].
vÆue
, value, 10);

573 i‡(
	`debug_°©us
(
x86_c⁄ãxt_iß_debug_ˇãg‹y
))

574 
	`X86C⁄ãxtDebugISA
(" st(%dË<- %g", 
ödex
, 
	`X86C⁄ãxtExãndedToDoubÀ
(
vÆue
));

575 
	}
}

578 
	$X86C⁄ãxtPushFpu
(
X86C⁄ãxt
 *
£lf
, *
vÆue
)

580 
x86_ªgs_t
 *
ªgs
 = 
£lf
->regs;

583 i‡(
	`debug_°©us
(
x86_c⁄ãxt_iß_debug_ˇãg‹y
))

584 
	`X86C⁄ãxtDebugISA
(" st(0Ë<- %g (pushed)", 
	`X86C⁄ãxtExãndedToDoubÀ
(
vÆue
));

587 
ªgs
->
Âu_t›
 = (regs->fpu_top + 7) % 8;

588 i‡(
ªgs
->
Âu_°ack
[ªgs->
Âu_t›
].
vÆid
)

590 
	`X86C⁄ãxtEº‹
(
£lf
, "%s: u√x≥˘ed vÆidÉ¡ry", 
__FUNCTION__
);

594 
ªgs
->
Âu_°ack
[ªgs->
Âu_t›
].
vÆid
 = 1;

595 
	`mem˝y
(
ªgs
->
Âu_°ack
[ªgs->
Âu_t›
].
vÆue
, value, 10);

596 
	}
}

599 
	$X86C⁄ãxtP›Fpu
(
X86C⁄ãxt
 *
£lf
, *
vÆue
)

601 
x86_ªgs_t
 *
ªgs
 = 
£lf
->regs;

604 i‡(!
ªgs
->
Âu_°ack
[ªgs->
Âu_t›
].
vÆid
)

606 
	`X86C⁄ãxtEº‹
(
£lf
, "%s: u√x≥˘ed invÆidÉ¡ry", 
__FUNCTION__
);

610 i‡(
vÆue
)

612 
	`mem˝y
(
vÆue
, 
ªgs
->
Âu_°ack
[ªgs->
Âu_t›
].value, 10);

613 i‡(
	`debug_°©us
(
x86_c⁄ãxt_iß_debug_ˇãg‹y
))

614 
	`X86C⁄ãxtDebugISA
(" st(0Ë-> %g (p›≥d)", 
	`X86C⁄ãxtExãndedToDoubÀ
(
vÆue
));

616 
ªgs
->
Âu_°ack
[ªgs->
Âu_t›
].
vÆid
 = 0;

617 
ªgs
->
Âu_t›
 = (regs->fpu_top + 1) % 8;

618 
	}
}

621 
	$X86C⁄ãxtLﬂdDoubÀ
(
X86C⁄ãxt
 *
£lf
)

623 
vÆue
;

625 
	`X86C⁄ãxtMemRód
(
£lf
, 
	`X86C⁄ãxtEf„˘iveAddªss
(£lf), 8, &
vÆue
);

626 
	`X86C⁄ãxtDebugISA
(" [0x%x]=%g", 
	`X86C⁄ãxtEf„˘iveAddªss
(
£lf
), 
vÆue
);

627  
vÆue
;

628 
	}
}

631 
	$X86C⁄ãxtLﬂdExãnded
(
X86C⁄ãxt
 *
£lf
, *
vÆue
)

633 
	`X86C⁄ãxtMemRód
(
£lf
, 
	`X86C⁄ãxtEf„˘iveAddªss
(£lf), 10, 
vÆue
);

634 
	}
}

637 
	$X86C⁄ãxtSt‹eExãnded
(
X86C⁄ãxt
 *
£lf
, *
vÆue
)

639 
	`X86C⁄ãxtMemWrôe
(
£lf
, 
	`X86C⁄ãxtEf„˘iveAddªss
(£lf), 10, 
vÆue
);

640 
	}
}

643 
	$X86C⁄ãxtSt‹eDoubÀ
(
X86C⁄ãxt
 *
£lf
, 
vÆue
)

645 
	`X86C⁄ãxtMemWrôe
(
£lf
, 
	`X86C⁄ãxtEf„˘iveAddªss
(£lf), 8, &
vÆue
);

646 
	`X86C⁄ãxtDebugISA
(" [0x%x] <- %g", 
	`X86C⁄ãxtEf„˘iveAddªss
(
£lf
), 
vÆue
);

647 
	}
}

650 
	$X86C⁄ãxtLﬂdFlﬂt
(
X86C⁄ãxt
 *
£lf
)

652 
vÆue
;

654 
	`X86C⁄ãxtMemRód
(
£lf
, 
	`X86C⁄ãxtEf„˘iveAddªss
(£lf), 4, &
vÆue
);

655 
	`X86C⁄ãxtDebugISA
(" [0x%x]=%g", 
	`X86C⁄ãxtEf„˘iveAddªss
(
£lf
), (Ë
vÆue
);

657  
vÆue
;

658 
	}
}

661 
	$X86C⁄ãxtSt‹eFlﬂt
(
X86C⁄ãxt
 *
£lf
, 
vÆue
)

663 
	`X86C⁄ãxtMemWrôe
(
£lf
, 
	`X86C⁄ãxtEf„˘iveAddªss
(£lf), 4, &
vÆue
);

664 
	`X86C⁄ãxtDebugISA
(" [0x%x] <- %g", 
	`X86C⁄ãxtEf„˘iveAddªss
(
£lf
), (Ë
vÆue
);

665 
	}
}

670 
	$X86C⁄ãxtSt‹eFpuCode
(
X86C⁄ãxt
 *
£lf
, 
°©us
)

672 
x86_ªgs_t
 *
ªgs
 = 
£lf
->regs;

674 
ªgs
->
Âu_code
 = 0;

675 i‡(
	`GETBIT32
(
°©us
, 14))

676 
ªgs
->
Âu_code
 |= 0x8;

678 
ªgs
->
Âu_code
 |(
°©us
 >> 8) & 0x7;

679 
	}
}

684 
	$X86C⁄ãxtLﬂdFpuSètus
(
X86C⁄ãxt
 *
£lf
)

686 
x86_ªgs_t
 *
ªgs
 = 
£lf
->regs;

687 
°©us
 = 0;

689 i‡(
ªgs
->
Âu_t›
 < 0 ||Ñegs->fpu_top >= 8)

691 
	`X86C⁄ãxtEº‹
(
£lf
, "%s: wr⁄g FPU sèckÅ›", 
__FUNCTION__
);

695 
°©us
 |
ªgs
->
Âu_t›
 << 11;

696 i‡(
	`GETBIT32
(
ªgs
->
Âu_code
, 3))

697 
°©us
 |= 0x4000;

698 
°©us
 |(
ªgs
->
Âu_code
 & 0x7) << 8;

699  
°©us
;

700 
	}
}

703 
	$X86C⁄ãxtDumpXMM
(
X86C⁄ãxt
 *
£lf
, *
vÆue
, 
FILE
 *
f
)

705 
x86_ö°_xmm_ªg_t
 *
xmm
;

706 *
comma
;

707 
i
;

709 
xmm
 = (
x86_ö°_xmm_ªg_t
 *Ë
vÆue
;

710 
i
 = 0; i < 16; i++)

711 
	`Ârötf
(
f
, "%02x ", 
xmm
->
as_uch¨
[
i
]);

713 
comma
 = "(";

714 
i
 = 0; i < 4; i++)

716 
	`Ârötf
(
f
, "%s%g", 
comma
, 
xmm
->
as_Êﬂt
[
i
]);

717 
comma
 = ", ";

719 
	`Ârötf
(
f
, ")");

720 
	}
}

723 
	$X86C⁄ãxtLﬂdXMM
(
X86C⁄ãxt
 *
£lf
, *
vÆue
)

725 
x86_ªgs_t
 *
ªgs
 = 
£lf
->regs;

727 
	`mem˝y
(
vÆue
, &
ªgs
->
xmm
[
£lf
->
ö°
.
modrm_ªg
], 16);

728 
	}
}

731 
	$X86C⁄ãxtSt‹eXMM
(
X86C⁄ãxt
 *
£lf
, *
vÆue
)

733 
x86_ªgs_t
 *
ªgs
 = 
£lf
->regs;

735 
	`mem˝y
(&
ªgs
->
xmm
[
£lf
->
ö°
.
modrm_ªg
], 
vÆue
, 16);

736 
	}
}

740 
	$X86C⁄ãxtLﬂdXMMM32
(
X86C⁄ãxt
 *
£lf
, *
vÆue
)

742 
x86_ªgs_t
 *
ªgs
 = 
£lf
->regs;

744 i‡(
£lf
->
ö°
.
modrm_mod
 == 3)

746 
	`mem˝y
(
vÆue
, 
ªgs
->
xmm
[
£lf
->
ö°
.
modrm_rm
], 4);

749 
	`X86C⁄ãxtMemRód
(
£lf
, 
	`X86C⁄ãxtEf„˘iveAddªss
(£lf), 4, 
vÆue
);

750 
	}
}

754 
	$X86C⁄ãxtSt‹eXMMM32
(
X86C⁄ãxt
 *
£lf
, *
vÆue
)

756 
x86_ªgs_t
 *
ªgs
 = 
£lf
->regs;

758 i‡(
£lf
->
ö°
.
modrm_mod
 == 3)

760 
	`mem˝y
(&
ªgs
->
xmm
[
£lf
->
ö°
.
modrm_rm
], 
vÆue
, 4);

763 
	`X86C⁄ãxtMemWrôe
(
£lf
, 
	`X86C⁄ãxtEf„˘iveAddªss
(£lf), 4, 
vÆue
);

764 
	}
}

769 
	$X86C⁄ãxtLﬂdXMMM64
(
X86C⁄ãxt
 *
£lf
, *
vÆue
)

771 
x86_ªgs_t
 *
ªgs
 = 
£lf
->regs;

773 i‡(
£lf
->
ö°
.
modrm_mod
 == 0x03)

775 
	`mem˝y
(
vÆue
, &
ªgs
->
xmm
[
£lf
->
ö°
.
modrm_rm
], 8);

778 
	`X86C⁄ãxtMemRód
(
£lf
, 
	`X86C⁄ãxtEf„˘iveAddªss
(£lf), 8, 
vÆue
);

779 
	}
}

783 
	$X86C⁄ãxtSt‹eXMMM64
(
X86C⁄ãxt
 *
£lf
, *
vÆue
)

785 
x86_ªgs_t
 *
ªgs
 = 
£lf
->regs;

787 i‡(
£lf
->
ö°
.
modrm_mod
 == 0x03)

789 
	`mem˝y
(&
ªgs
->
xmm
[
£lf
->
ö°
.
modrm_rm
], 
vÆue
, 8);

792 
	`X86C⁄ãxtMemWrôe
(
£lf
, 
	`X86C⁄ãxtEf„˘iveAddªss
(£lf), 8, 
vÆue
);

793 
	}
}

797 
	$X86C⁄ãxtLﬂdXMMM128
(
X86C⁄ãxt
 *
£lf
, *
vÆue
)

799 
x86_ªgs_t
 *
ªgs
 = 
£lf
->regs;

801 i‡(
£lf
->
ö°
.
modrm_mod
 == 3)

803 
	`mem˝y
(
vÆue
, 
ªgs
->
xmm
[
£lf
->
ö°
.
modrm_rm
], 16);

806 
	`X86C⁄ãxtMemRód
(
£lf
, 
	`X86C⁄ãxtEf„˘iveAddªss
(£lf), 16, 
vÆue
);

807 
	}
}

811 
	$X86C⁄ãxtSt‹eXMMM128
(
X86C⁄ãxt
 *
£lf
, *
vÆue
)

813 
x86_ªgs_t
 *
ªgs
 = 
£lf
->regs;

815 i‡(
£lf
->
ö°
.
modrm_mod
 == 3)

817 
	`mem˝y
(&
ªgs
->
xmm
[
£lf
->
ö°
.
modrm_rm
], 
vÆue
, 16);

820 
	`X86C⁄ãxtMemWrôe
(
£lf
, 
	`X86C⁄ãxtEf„˘iveAddªss
(£lf), 16, 
vÆue
);

821 
	}
}

824 
	$X86C⁄ãxtExecuãIn°
(
X86C⁄ãxt
 *
£lf
)

826 
X86Emu
 *
emu
 = 
£lf
->emu;

827 
x86_ªgs_t
 *
ªgs
 = 
£lf
->regs;

832 
	`x86_uö°_˛ór
();

835 
£lf
->
œ°_eù
 = sñf->
cuº_eù
;

836 
£lf
->
cuº_eù
 = 
ªgs
->
eù
;

837 
£lf
->
èrgë_eù
 = 0;

840 
£lf
->
ef„˘ive_addªss
 = 0;

843 i‡(
	`debug_°©us
(
x86_c⁄ãxt_iß_debug_ˇãg‹y
))

845 
	`X86C⁄ãxtDebugISA
("%d %8Œd %x: ", 
£lf
->
pid
,

846 
	`asEmu
(
emu
)->
ö°ru˘i⁄s
, 
£lf
->
cuº_eù
);

847 
	`x86_ö°_dump
(&
£lf
->
ö°
, 
	`debug_fûe
(
x86_c⁄ãxt_iß_debug_ˇãg‹y
));

848 
	`X86C⁄ãxtDebugISA
(" (%d byãs)", 
£lf
->
ö°
.
size
);

852 
ªgs
->
eù
 =Ñegs->eù + 
£lf
->
ö°
.
size
;

853 i‡(
£lf
->
ö°
.
›code
)

854 
x86_c⁄ãxt_ö°_func
[
£lf
->
ö°
.
›code
](self);

857 
x86_ö°_‰eq
[
£lf
->
ö°
.
›code
]++;

860 
	`X86C⁄ãxtDebugISA
("\n");

861 i‡(
	`debug_°©us
(
x86_c⁄ãxt_ˇŒ_debug_ˇãg‹y
))

862 
	`X86C⁄ãxtDebugCÆlIn°
(
£lf
);

863 
	}
}

	@emu/isa.h

20 #i‚de‡
ARCH_X86_EMU_ISA_H


21 
	#ARCH_X86_EMU_ISA_H


	)

23 
	~<°dio.h
>

25 
	~<¨ch/x86/asm/asm.h
>

26 
	~<¨ch/x86/asm/ö°.h
>

27 
	~<lib/utû/˛ass.h
>

36 
X86C⁄ãxtEº‹
(
X86C⁄ãxt
 *
˘x
, *
fmt
, ...);

38 
X86C⁄ãxtMemRód
(
X86C⁄ãxt
 *
˘x
, 
addr
, 
size
, *
buf
);

39 
X86C⁄ãxtMemWrôe
(
X86C⁄ãxt
 *
˘x
, 
addr
, 
size
, *
buf
);

41 
X86C⁄ãxtSëFœg
(
X86C⁄ãxt
 *
˘x
, 
x86_ö°_Êag_t
 
Êag
);

42 
X86C⁄ãxtCÀ¨Fœg
(
X86C⁄ãxt
 *
˘x
, 
x86_ö°_Êag_t
 
Êag
);

43 
X86C⁄ãxtGëFœg
(
X86C⁄ãxt
 *
˘x
, 
x86_ö°_Êag_t
 
Êag
);

45 
X86C⁄ãxtLﬂdReg
(
X86C⁄ãxt
 *
˘x
, 
x86_ö°_ªg_t
 
ªg
);

46 
X86C⁄ãxtSt‹eReg
(
X86C⁄ãxt
 *
˘x
, 
x86_ö°_ªg_t
 
ªg
, 
vÆue
);

48 
X86C⁄ãxtLﬂdRm8
(
X86C⁄ãxt
 *
˘x
);

49 
X86C⁄ãxtLﬂdRm16
(
X86C⁄ãxt
 *
˘x
);

50 
X86C⁄ãxtLﬂdRm32
(
X86C⁄ãxt
 *
˘x
);

51 
X86C⁄ãxtLﬂdR32M16
(
X86C⁄ãxt
 *
˘x
);

52 
X86C⁄ãxtLﬂdM64
(
X86C⁄ãxt
 *
˘x
);

53 
X86C⁄ãxtSt‹eRm8
(
X86C⁄ãxt
 *
˘x
, 
vÆue
);

54 
X86C⁄ãxtSt‹eRm16
(
X86C⁄ãxt
 *
˘x
, 
vÆue
);

55 
X86C⁄ãxtSt‹eRm32
(
X86C⁄ãxt
 *
˘x
, 
vÆue
);

56 
X86C⁄ãxtSt‹eM64
(
X86C⁄ãxt
 *
˘x
, 
vÆue
);

58 
	#X86C⁄ãxtLﬂdR8
(
˘x
Ë
	`X86C⁄ãxtLﬂdReg
(˘x, ctx->
ö°
.
ªg
 + 
x86_ö°_ªg_Æ
)

	)

59 
	#X86C⁄ãxtLﬂdR16
(
˘x
Ë
	`X86C⁄ãxtLﬂdReg
(˘x, ctx->
ö°
.
ªg
 + 
x86_ö°_ªg_ax
)

	)

60 
	#X86C⁄ãxtLﬂdR32
(
˘x
Ë
	`X86C⁄ãxtLﬂdReg
(˘x, ctx->
ö°
.
ªg
 + 
x86_ö°_ªg_óx
)

	)

61 
	#X86C⁄ãxtLﬂdSReg
(
˘x
Ë
	`X86C⁄ãxtLﬂdReg
(˘x, ctx->
ö°
.
ªg
 + 
x86_ö°_ªg_es
)

	)

62 
	#X86C⁄ãxtSt‹eR8
(
˘x
, 
vÆue
Ë
	`X86C⁄ãxtSt‹eReg
(˘x, ctx->
ö°
.
ªg
 + 
x86_ö°_ªg_Æ
, vÆue)

	)

63 
	#X86C⁄ãxtSt‹eR16
(
˘x
, 
vÆue
Ë
	`X86C⁄ãxtSt‹eReg
(˘x, ctx->
ö°
.
ªg
 + 
x86_ö°_ªg_ax
, vÆue)

	)

64 
	#X86C⁄ãxtSt‹eR32
(
˘x
, 
vÆue
Ë
	`X86C⁄ãxtSt‹eReg
(˘x, ctx->
ö°
.
ªg
 + 
x86_ö°_ªg_óx
, vÆue)

	)

65 
	#X86C⁄ãxtSt‹eSReg
(
˘x
, 
vÆue
Ë
	`X86C⁄ãxtSt‹eReg
(˘x, ctx->
ö°
.
ªg
 + 
x86_ö°_ªg_es
, vÆue)

	)

67 
	#X86C⁄ãxtLﬂdIR8
(
˘x
Ë
	`X86C⁄ãxtLﬂdReg
(˘x, ctx->
ö°
.
›ödex
 + 
x86_ö°_ªg_Æ
)

	)

68 
	#X86C⁄ãxtLﬂdIR16
(
˘x
Ë
	`X86C⁄ãxtLﬂdReg
(˘x, ctx->
ö°
.
›ödex
 + 
x86_ö°_ªg_ax
)

	)

69 
	#X86C⁄ãxtLﬂdIR32
(
˘x
Ë
	`X86C⁄ãxtLﬂdReg
(˘x, ctx->
ö°
.
›ödex
 + 
x86_ö°_ªg_óx
)

	)

70 
	#X86C⁄ãxtSt‹eIR8
(
˘x
, 
vÆue
Ë
	`X86C⁄ãxtSt‹eReg
(˘x, ctx->
ö°
.
›ödex
 + 
x86_ö°_ªg_Æ
, vÆue)

	)

71 
	#X86C⁄ãxtSt‹eIR16
(
˘x
, 
vÆue
Ë
	`X86C⁄ãxtSt‹eReg
(˘x, ctx->
ö°
.
›ödex
 + 
x86_ö°_ªg_ax
, vÆue)

	)

72 
	#X86C⁄ãxtSt‹eIR32
(
˘x
, 
vÆue
Ë
	`X86C⁄ãxtSt‹eReg
(˘x, ctx->
ö°
.
›ödex
 + 
x86_ö°_ªg_óx
, vÆue)

	)

74 
X86C⁄ãxtLﬂdFpu
(
X86C⁄ãxt
 *
˘x
, 
ödex
, *
vÆue
);

75 
X86C⁄ãxtSt‹eFpu
(
X86C⁄ãxt
 *
˘x
, 
ödex
, *
vÆue
);

76 
X86C⁄ãxtP›Fpu
(
X86C⁄ãxt
 *
˘x
, *
vÆue
);

77 
X86C⁄ãxtPushFpu
(
X86C⁄ãxt
 *
˘x
, *
vÆue
);

79 
X86C⁄ãxtLﬂdFlﬂt
(
X86C⁄ãxt
 *
˘x
);

80 
X86C⁄ãxtLﬂdDoubÀ
(
X86C⁄ãxt
 *
˘x
);

81 
X86C⁄ãxtLﬂdExãnded
(
X86C⁄ãxt
 *
˘x
, *
vÆue
);

82 
X86C⁄ãxtSt‹eFlﬂt
(
X86C⁄ãxt
 *
˘x
, 
vÆue
);

83 
X86C⁄ãxtSt‹eDoubÀ
(
X86C⁄ãxt
 *
˘x
, 
vÆue
);

84 
X86C⁄ãxtSt‹eExãnded
(
X86C⁄ãxt
 *
˘x
, *
vÆue
);

86 
X86C⁄ãxtDumpXMM
(
X86C⁄ãxt
 *
˘x
, *
vÆue
, 
FILE
 *
f
);

87 
X86C⁄ãxtLﬂdXMM
(
X86C⁄ãxt
 *
˘x
, *
vÆue
);

88 
X86C⁄ãxtSt‹eXMM
(
X86C⁄ãxt
 *
˘x
, *
vÆue
);

89 
X86C⁄ãxtLﬂdXMMM32
(
X86C⁄ãxt
 *
˘x
, *
vÆue
);

90 
X86C⁄ãxtSt‹eXMMM32
(
X86C⁄ãxt
 *
˘x
, *
vÆue
);

91 
X86C⁄ãxtLﬂdXMMM64
(
X86C⁄ãxt
 *
˘x
, *
vÆue
);

92 
X86C⁄ãxtSt‹eXMMM64
(
X86C⁄ãxt
 *
˘x
, *
vÆue
);

93 
X86C⁄ãxtLﬂdXMMM128
(
X86C⁄ãxt
 *
˘x
, *
vÆue
);

94 
X86C⁄ãxtSt‹eXMMM128
(
X86C⁄ãxt
 *
˘x
, *
vÆue
);

96 
X86C⁄ãxtSt‹eFpuCode
(
X86C⁄ãxt
 *
˘x
, 
°©us
);

97 
X86C⁄ãxtLﬂdFpuSètus
(
X86C⁄ãxt
 *
˘x
);

99 
X86C⁄ãxtEf„˘iveAddªss
(
X86C⁄ãxt
 *
˘x
);

100 
X86C⁄ãxtMoffsAddªss
(
X86C⁄ãxt
 *
˘x
);

102 
X86C⁄ãxtExecuãIn°
(
X86C⁄ãxt
 *
˘x
);

111 
	#X86C⁄ãxtDebugCÆl
(...Ë
	`debug
(
x86_c⁄ãxt_ˇŒ_debug_ˇãg‹y
, 
__VA_ARGS__
)

	)

112 
	#X86C⁄ãxtDebugISA
(...Ë
	`debug
(
x86_c⁄ãxt_iß_debug_ˇãg‹y
, 
__VA_ARGS__
)

	)

114 
x86_c⁄ãxt_ˇŒ_debug_ˇãg‹y
;

115 
x86_c⁄ãxt_iß_debug_ˇãg‹y
;

117 
x86_iß_åa˚_ˇŒ_öô
(*
fûíame
);

118 
x86_iß_åa˚_ˇŒ_d⁄e
();

120 
x86_iß_ö°_°©_dump
(
FILE
 *
f
);

121 
x86_iß_ö°_°©_ª£t
();

123 
X86C⁄ãxtDoubÀToExãnded
(
f
, *
e
);

124 
X86C⁄ãxtExãndedToDoubÀ
(*
e
);

125 
X86C⁄ãxtFlﬂtToExãnded
(
f
, *
e
);

126 
X86C⁄ãxtExãndedToFlﬂt
(*
e
);

	@emu/loader.c

20 
	~<f˙é.h
>

21 
	~<uni°d.h
>

23 
	~<lib/mh™dÀ/mh™dÀ.h
>

24 
	~<lib/utû/debug.h
>

25 
	~<lib/utû/ñf-f‹m©.h
>

26 
	~<lib/utû/löked-li°.h
>

27 
	~<lib/utû/li°.h
>

28 
	~<lib/utû/misc.h
>

29 
	~<lib/utû/°rög.h
>

30 
	~<mem-sy°em/mem‹y.h
>

32 
	~"c⁄ãxt.h
"

33 
	~"fûe-desc.h
"

34 
	~"lﬂdî.h
"

35 
	~"ªgs.h
"

38 
	gx86_lﬂdî_debug_ˇãg‹y
;

40 *
	gx86_lﬂdî_hñp
 =

90 
°r_m≠_t
 
	gñf_£˘i⁄_Êags_m≠
 =

100 
	$X86C⁄ãxtAddArgsVe˘‹
(
X86C⁄ãxt
 *
£lf
, 
¨gc
, **
¨gv
)

102 
x86_lﬂdî_t
 *
lﬂdî
 = 
£lf
->loader;

104 *
¨g
;

105 
i
;

107 
i
 = 0; i < 
¨gc
; i++)

109 
¨g
 = 
	`°r_£t
(
NULL
, 
¨gv
[
i
]);

110 
	`löked_li°_add
(
lﬂdî
->
¨gs
, 
¨g
);

112 
	}
}

115 
	$X86C⁄ãxtAddArgsSåög
(
X86C⁄ãxt
 *
£lf
, *
¨gs
)

117 
x86_lﬂdî_t
 *
lﬂdî
 = 
£lf
->loader;

119 *
dñim
 = " ";

120 *
¨g
;

123 
¨gs
 = 
	`°r_£t
(
NULL
,árgs);

126 
¨g
 = 
	`°πok
(
¨gs
, 
dñim
);árg;árg = såtok(
NULL
, delim))

128 
¨g
 = 
	`°r_£t
(
NULL
,árg);

129 
	`löked_li°_add
(
lﬂdî
->
¨gs
, 
¨g
);

133 
	`°r_‰ì
(
¨gs
);

134 
	}
}

139 
	$X86C⁄ãxtAddEnv
(
X86C⁄ãxt
 *
£lf
, *
ív
)

141 
x86_lﬂdî_t
 *
lﬂdî
 = 
£lf
->loader;

142 **
ívú⁄
;

144 *
√xt
;

145 *
°r
;

147 
i
;

150 
i
 = 0; 
ívú⁄
[i]; i++)

152 
°r
 = 
	`°r_£t
(
NULL
, 
ívú⁄
[
i
]);

153 
	`löked_li°_add
(
lﬂdî
->
ív
, 
°r
);

157 
ív
)

160 *
ív
 == ' ')

161 
ív
++;

162 i‡(!*
ív
)

166 *
ív
)

171 i‡(!(
√xt
 = 
	`°rchr
(
ív
 + 1, *env)))

172 
	`Áèl
("%s: wr⁄g f‹m©", 
__FUNCTION__
);

173 *
√xt
 = 0;

174 
°r
 = 
	`°r_£t
(
NULL
, 
ív
 + 1);

175 
	`löked_li°_add
(
lﬂdî
->
ív
, 
°r
);

176 
ív
 = 
√xt
 + 1;

180 
°r
 = 
	`°r_£t
(
NULL
, 
ív
);

181 
	`löked_li°_add
(
lﬂdî
->
ív
, 
°r
);

182 
ív
 = 
NULL
;

185 
	}
}

188 
	#X86_LOADER_STACK_BASE
 0xc0000000

	)

189 
	#X86_LOADER_MAX_ENVIRON
 0x10000

	)

190 
	#X86_LOADER_STACK_SIZE
 0x800000

	)

194 
	$X86C⁄ãxtLﬂdELFSe˘i⁄s
(
X86C⁄ãxt
 *
£lf
, 
ñf_fûe_t
 *
ñf_fûe
)

196 
mem_t
 *
mem
 = 
£lf
->mem;

197 
x86_lﬂdî_t
 *
lﬂdî
 = 
£lf
->loader;

199 
ñf_£˘i⁄_t
 *
£˘i⁄
;

200 
i
;

202 
mem_ac˚ss_t
 
≥rm
;

203 
Êags_°r
[200];

205 
	`x86_lﬂdî_debug
("\nLoading ELF sections\n");

206 
lﬂdî
->
bŸtom
 = 0xffffffff;

207 
i
 = 0; i < 
	`li°_cou¡
(
ñf_fûe
->
£˘i⁄_li°
); i++)

209 
£˘i⁄
 = 
	`li°_gë
(
ñf_fûe
->
£˘i⁄_li°
, 
i
);

211 
≥rm
 = 
mem_ac˚ss_öô
 | 
mem_ac˚ss_ªad
;

212 
	`°r_m≠_Êags
(&
ñf_£˘i⁄_Êags_m≠
, 
£˘i⁄
->
hódî
->
sh_Êags
,

213 
Êags_°r
, (flags_str));

214 
	`x86_lﬂdî_debug
(" section %d:Çame='%s', offset=0x%x, "

216 
i
, 
£˘i⁄
->
«me
, se˘i⁄->
hódî
->
sh_off£t
,

217 
£˘i⁄
->
hódî
->
sh_addr
, se˘i⁄->hódî->
sh_size
, 
Êags_°r
);

220 i‡(
£˘i⁄
->
hódî
->
sh_Êags
 & 
SHF_ALLOC
)

223 i‡(
£˘i⁄
->
hódî
->
sh_Êags
 & 
SHF_WRITE
)

224 
≥rm
 |
mem_ac˚ss_wrôe
;

225 i‡(
£˘i⁄
->
hódî
->
sh_Êags
 & 
SHF_EXECINSTR
)

226 
≥rm
 |
mem_ac˚ss_exec
;

229 
	`mem_m≠
(
mem
, 
£˘i⁄
->
hódî
->
sh_addr
, se˘i⁄->hódî->
sh_size
, 
≥rm
);

230 
mem
->
hóp_bªak
 = 
	`MAX
(mem->hóp_bªak, 
£˘i⁄
->
hódî
->
sh_addr


231 + 
£˘i⁄
->
hódî
->
sh_size
);

232 
lﬂdî
->
bŸtom
 = 
	`MIN
÷ﬂdî->bŸtom, 
£˘i⁄
->
hódî
->
sh_addr
);

236 i‡(
£˘i⁄
->
hódî
->
sh_ty≥
 == 8)

238 *
±r
;

240 
±r
 = 
	`xˇŒoc
(1, 
£˘i⁄
->
hódî
->
sh_size
);

241 
	`mem_ac˚ss
(
mem
, 
£˘i⁄
->
hódî
->
sh_addr
,

242 
£˘i⁄
->
hódî
->
sh_size
,

243 
±r
, 
mem_ac˚ss_öô
);

244 
	`‰ì
(
±r
);

246 
	`mem_ac˚ss
(
mem
, 
£˘i⁄
->
hódî
->
sh_addr
,

247 
£˘i⁄
->
hódî
->
sh_size
,

248 
£˘i⁄
->
buf„r
.
±r
, 
mem_ac˚ss_öô
);

252 
	}
}

255 
	$X86C⁄ãxtLﬂdI¡îp
(
X86C⁄ãxt
 *
£lf
)

257 
x86_lﬂdî_t
 *
lﬂdî
 = 
£lf
->loader;

258 
ñf_fûe_t
 *
ñf_fûe
;

261 
	`x86_lﬂdî_debug
("\nLﬂdögÖrogøm i¡î¥ëî '%s'\n", 
lﬂdî
->
öãΩ
);

262 
ñf_fûe
 = 
	`ñf_fûe_¸óã_‰om_∑th
(
lﬂdî
->
öãΩ
);

265 
	`X86C⁄ãxtLﬂdELFSe˘i⁄s
(
£lf
, 
ñf_fûe
);

268 
lﬂdî
->
öãΩ_¥og_íåy
 = 
ñf_fûe
->
hódî
->
e_íåy
;

269 
	`x86_lﬂdî_debug
("Örogøm i¡î¥ëîÉ¡ry: 0x%x\n\n", 
lﬂdî
->
öãΩ_¥og_íåy
);

270 
	`ñf_fûe_‰ì
(
ñf_fûe
);

271 
	}
}

274 
°r_m≠_t
 
	gñf_¥ogøm_hódî_ty≥_m≠
 = {

289 
	$X86C⁄ãxtLﬂdProgømHódîs
(
X86C⁄ãxt
 *
£lf
)

291 
x86_lﬂdî_t
 *
lﬂdî
 = 
£lf
->loader;

292 
mem_t
 *
mem
 = 
£lf
->mem;

294 
ñf_fûe_t
 *
ñf_fûe
 = 
lﬂdî
->elf_file;

295 
ñf_¥ogøm_hódî_t
 *
¥ogøm_hódî
;

297 
uöt32_t
 
phdt_ba£
;

298 
uöt32_t
 
phdt_size
;

299 
uöt32_t
 
phdr_cou¡
;

300 
uöt32_t
 
phdr_size
;

302 
°r
[
MAX_STRING_SIZE
];

303 
i
;

306 
	`x86_lﬂdî_debug
("\nLoadingÖrogram headers\n");

307 
phdr_cou¡
 = 
ñf_fûe
->
hódî
->
e_phnum
;

308 
phdr_size
 = 
ñf_fûe
->
hódî
->
e_phítsize
;

309 
phdt_size
 = 
phdr_cou¡
 * 
phdr_size
;

310 
	`as£π
(
phdr_cou¡
 =
	`li°_cou¡
(
ñf_fûe
->
¥ogøm_hódî_li°
));

315 
phdt_ba£
 = 
lﬂdî
->
bŸtom
 - 
phdt_size
;

316 
i
 = 0; i < 
	`li°_cou¡
(
ñf_fûe
->
¥ogøm_hódî_li°
); i++)

318 
¥ogøm_hódî
 = 
	`li°_gë
(
ñf_fûe
->
¥ogøm_hódî_li°
, 
i
);

319 i‡(
¥ogøm_hódî
->
hódî
->
p_ty≥
 =
PT_PHDR
)

320 
phdt_ba£
 = 
¥ogøm_hódî
->
hódî
->
p_vaddr
;

322 
	`x86_lﬂdî_debug
(" vútuÆáddªs†f‹Örogøm hódîÅabÀ: 0x%x\n", 
phdt_ba£
);

325 
	`mem_m≠
(
mem
, 
phdt_ba£
, 
phdt_size
, 
mem_ac˚ss_öô
 | 
mem_ac˚ss_ªad
);

326 
i
 = 0; i < 
	`li°_cou¡
(
ñf_fûe
->
¥ogøm_hódî_li°
); i++)

329 
¥ogøm_hódî
 = 
	`li°_gë
(
ñf_fûe
->
¥ogøm_hódî_li°
, 
i
);

330 
	`mem_ac˚ss
(
mem
, 
phdt_ba£
 + 
i
 * 
phdr_size
,Öhdr_size,

331 
¥ogøm_hódî
->
hódî
, 
mem_ac˚ss_öô
);

334 
	`°r_m≠_vÆue_buf
(&
ñf_¥ogøm_hódî_ty≥_m≠
, 
¥ogøm_hódî
->
hódî
->
p_ty≥
,

335 
°r
, (str));

336 
	`x86_lﬂdî_debug
(" hódîÜﬂdedáà0x%x\n", 
phdt_ba£
 + 
i
 * 
phdr_size
);

337 
	`x86_lﬂdî_debug
("Åype=%s, offset=0x%x, vaddr=0x%x,Öaddr=0x%x\n",

338 
°r
, 
¥ogøm_hódî
->
hódî
->
p_off£t
,

339 
¥ogøm_hódî
->
hódî
->
p_vaddr
,

340 
¥ogøm_hódî
->
hódî
->
p_∑ddr
);

341 
	`x86_lﬂdî_debug
(" filesz=%d, memsz=%d, flags=%d,álign=%d\n",

342 
¥ogøm_hódî
->
hódî
->
p_fûesz
,

343 
¥ogøm_hódî
->
hódî
->
p_memsz
,

344 
¥ogøm_hódî
->
hódî
->
p_Êags
,

345 
¥ogøm_hódî
->
hódî
->
p_Æign
);

348 i‡(
¥ogøm_hódî
->
hódî
->
p_ty≥
 == 3)

350 
	`mem_ªad_°rög
(
mem
, 
¥ogøm_hódî
->
hódî
->
p_vaddr
, (
°r
), str);

351 
lﬂdî
->
öãΩ
 = 
	`°r_£t
(
NULL
, 
°r
);

356 
lﬂdî
->
phdt_ba£
 =Öhdt_base;

357 
lﬂdî
->
phdr_cou¡
 =Öhdr_count;

358 
	}
}

363 
	#X86_LOADER_AV_ENTRY
(
t
, 
v
) \

365 
a_ty≥
 = 
t
; \

366 
a_vÆue
 = 
v
; \

367 
	`mem_wrôe
(
mem
, 
•
, 4, &
a_ty≥
); \

368 
	`mem_wrôe
(
mem
, 
•
 + 4, 4, &
a_vÆue
); \

369 
•
 += 8; \

370 }

	)

372 
	$X86C⁄ãxtLﬂdAV
(
X86C⁄ãxt
 *
£lf
, 
whîe
)

374 
x86_lﬂdî_t
 *
lﬂdî
 = 
£lf
->loader;

375 
mem_t
 *
mem
 = 
£lf
->mem;

376 
•
 = 
whîe
;

378 
	`x86_lﬂdî_debug
("Lﬂdögáuxûüry ve˘‹áà0x%x\n", 
whîe
);

381 
	`X86_LOADER_AV_ENTRY
(3, 
lﬂdî
->
phdt_ba£
);

382 
	`X86_LOADER_AV_ENTRY
(4, 32);

383 
	`X86_LOADER_AV_ENTRY
(5, 
lﬂdî
->
phdr_cou¡
);

386 
	`X86_LOADER_AV_ENTRY
(6, 
MEM_PAGE_SIZE
);

387 
	`X86_LOADER_AV_ENTRY
(7, 0);

388 
	`X86_LOADER_AV_ENTRY
(8, 0);

389 
	`X86_LOADER_AV_ENTRY
(9, 
lﬂdî
->
¥og_íåy
);

390 
	`X86_LOADER_AV_ENTRY
(11, 
	`gëuid
());

391 
	`X86_LOADER_AV_ENTRY
(12, 
	`gëeuid
());

392 
	`X86_LOADER_AV_ENTRY
(13, 
	`gëgid
());

393 
	`X86_LOADER_AV_ENTRY
(14, 
	`gëegid
());

394 
	`X86_LOADER_AV_ENTRY
(17, 0x64);

395 
	`X86_LOADER_AV_ENTRY
(23, 0);

398 
lﬂdî
->
©_øndom_addr_hﬁdî
 = 
•
 + 4;

399 
	`X86_LOADER_AV_ENTRY
(25, 0);

408 
	`X86_LOADER_AV_ENTRY
(0, 0);

409  
•
 - 
whîe
;

410 
	}
}

411 #unde‡
X86_LOADER_AV_ENTRY


443 
	$X86C⁄ãxtLﬂdSèck
(
X86C⁄ãxt
 *
£lf
)

445 
x86_lﬂdî_t
 *
lﬂdî
 = 
£lf
->loader;

446 
mem_t
 *
mem
 = 
£lf
->mem;

447 
•
, 
¨gc
, 
¨gvp
, 
ívp
;

448 
zîo
 = 0;

449 *
°r
;

450 
i
;

453 
lﬂdî
->
°ack_ba£
 = 
X86_LOADER_STACK_BASE
;

454 
lﬂdî
->
°ack_size
 = 
X86_LOADER_STACK_SIZE
;

455 
lﬂdî
->
°ack_t›
 = 
X86_LOADER_STACK_BASE
 - 
X86_LOADER_STACK_SIZE
;

456 
	`mem_m≠
(
mem
, 
lﬂdî
->
°ack_t›
,Üﬂdî->
°ack_size
, 
mem_ac˚ss_ªad
 | 
mem_ac˚ss_wrôe
);

457 
	`x86_lﬂdî_debug
("mappingÑegion for stack from 0x%xÅo 0x%x\n",

458 
lﬂdî
->
°ack_t›
,Üﬂdî->
°ack_ba£
 - 1);

461 
lﬂdî
->
ívú⁄_ba£
 = 
X86_LOADER_STACK_BASE
 - 
X86_LOADER_MAX_ENVIRON
;

462 
•
 = 
lﬂdî
->
ívú⁄_ba£
;

463 
¨gc
 = 
	`löked_li°_cou¡
(
lﬂdî
->
¨gs
);

464 
	`x86_lﬂdî_debug
(" saved '¨gc=%d'áà0x%x\n", 
¨gc
, 
•
);

465 
	`mem_wrôe
(
mem
, 
•
, 4, &
¨gc
);

466 
•
 += 4;

467 
¨gvp
 = 
•
;

468 
•
 = s∞+ (
¨gc
 + 1) * 4;

471 
ívp
 = 
•
;

472 
•
 +
	`löked_li°_cou¡
(
lﬂdî
->
ív
) * 4 + 4;

475 
•
 +
	`X86C⁄ãxtLﬂdAV
(
£lf
, sp);

478 
	`x86_lﬂdî_debug
("\nArguments:\n");

479 
i
 = 0; i < 
¨gc
; i++)

481 
	`löked_li°_gŸo
(
lﬂdî
->
¨gs
, 
i
);

482 
°r
 = 
	`löked_li°_gë
(
lﬂdî
->
¨gs
);

483 
	`mem_wrôe
(
mem
, 
¨gvp
 + 
i
 * 4, 4, &
•
);

484 
	`mem_wrôe_°rög
(
mem
, 
•
, 
°r
);

485 
	`x86_lﬂdî_debug
("árgumíà%dáà0x%x: '%s'\n", 
i
, 
•
, 
°r
);

486 
•
 +
	`°æí
(
°r
) + 1;

488 
	`mem_wrôe
(
mem
, 
¨gvp
 + 
i
 * 4, 4, &
zîo
);

491 
	`x86_lﬂdî_debug
("\nEnvironment variables:\n");

492 
i
 = 0; i < 
	`löked_li°_cou¡
(
lﬂdî
->
ív
); i++)

494 
	`löked_li°_gŸo
(
lﬂdî
->
ív
, 
i
);

495 
°r
 = 
	`löked_li°_gë
(
lﬂdî
->
ív
);

496 
	`mem_wrôe
(
mem
, 
ívp
 + 
i
 * 4, 4, &
•
);

497 
	`mem_wrôe_°rög
(
mem
, 
•
, 
°r
);

498 
	`x86_lﬂdî_debug
("Énv v¨ %dáà0x%x: '%s'\n", 
i
, 
•
, 
°r
);

499 
•
 +
	`°æí
(
°r
) + 1;

501 
	`mem_wrôe
(
mem
, 
ívp
 + 
i
 * 4, 4, &
zîo
);

504 
lﬂdî
->
©_øndom_addr
 = 
•
;

505 
i
 = 0; i < 16; i++)

507 
c
 = 
	`øndom
();

508 
	`mem_wrôe
(
mem
, 
•
, 1, &
c
);

509 
•
++;

511 
	`mem_wrôe
(
mem
, 
lﬂdî
->
©_øndom_addr_hﬁdî
, 4, &lﬂdî->
©_øndom_addr
);

514 i‡(
•
 > 
X86_LOADER_STACK_BASE
)

515 
	`Áèl
("%s: initial stack overflow, increment LD_MAX_ENVIRON",

516 
__FUNCTION__
);

517 
	}
}

520 
	$X86C⁄ãxtLﬂdExe
(
X86C⁄ãxt
 *
£lf
, *
exe
)

522 
x86_lﬂdî_t
 *
lﬂdî
 = 
£lf
->loader;

523 
mem_t
 *
mem
 = 
£lf
->mem;

524 
x86_fûe_desc_èbÀ_t
 *
fdt
 = 
£lf
->
fûe_desc_èbÀ
;

526 
°dö_fûe_fuŒ_∑th
[
MAX_STRING_SIZE
];

527 
°dout_fûe_fuŒ_∑th
[
MAX_STRING_SIZE
];

528 
exe_fuŒ_∑th
[
MAX_STRING_SIZE
];

531 
	`X86C⁄ãxtGëFuŒP©h
(
£lf
, 
lﬂdî
->
°dö_fûe
, 
°dö_fûe_fuŒ_∑th
, 
MAX_STRING_SIZE
);

532 i‡(*
°dö_fûe_fuŒ_∑th
)

534 
x86_fûe_desc_t
 *
fd
;

535 
fd
 = 
	`x86_fûe_desc_èbÀ_íåy_gë
(
fdt
, 0);

536 
	`as£π
(
fd
);

537 
fd
->
ho°_fd
 = 
	`›í
(
°dö_fûe_fuŒ_∑th
, 
O_RDONLY
);

538 i‡(
fd
->
ho°_fd
 < 0)

539 
	`Áèl
("%s: c™nŸ o≥¿°dö", 
lﬂdî
->
°dö_fûe
);

540 
	`x86_lﬂdî_debug
("%s: stdöÑedúe˘ed\n", 
°dö_fûe_fuŒ_∑th
);

544 
	`X86C⁄ãxtGëFuŒP©h
(
£lf
, 
lﬂdî
->
°dout_fûe
, 
°dout_fûe_fuŒ_∑th
, 
MAX_STRING_SIZE
);

545 i‡(*
°dout_fûe_fuŒ_∑th
)

547 
x86_fûe_desc_t
 *
fd1
, *
fd2
;

548 
fd1
 = 
	`x86_fûe_desc_èbÀ_íåy_gë
(
fdt
, 1);

549 
fd2
 = 
	`x86_fûe_desc_èbÀ_íåy_gë
(
fdt
, 2);

550 
	`as£π
(
fd1
 && 
fd2
);

551 
fd1
->
ho°_fd
 = 
fd2
->ho°_fd = 
	`›í
(
°dout_fûe_fuŒ_∑th
,

552 
O_CREAT
 | 
O_APPEND
 | 
O_TRUNC
 | 
O_WRONLY
, 0660);

553 i‡(
fd1
->
ho°_fd
 < 0)

554 
	`Áèl
("%s: c™nŸ o≥¿°dout/°dîr", 
lﬂdî
->
°dout_fûe
);

555 
	`x86_lﬂdî_debug
("%s: stdouàªdúe˘ed\n", 
°dout_fûe_fuŒ_∑th
);

560 
	`X86C⁄ãxtGëFuŒP©h
(
£lf
, 
exe
, 
exe_fuŒ_∑th
, 
MAX_STRING_SIZE
);

561 
lﬂdî
->
ñf_fûe
 = 
	`ñf_fûe_¸óã_‰om_∑th
(
exe_fuŒ_∑th
);

562 
lﬂdî
->
exe
 = 
	`°r_£t
(
NULL
, 
exe_fuŒ_∑th
);

565 
	`X86C⁄ãxtLﬂdELFSe˘i⁄s
(
£lf
, 
lﬂdî
->
ñf_fûe
);

566 
lﬂdî
->
¥og_íåy
 =Üﬂdî->
ñf_fûe
->
hódî
->
e_íåy
;

570 
mem
->
hóp_bªak
 = 
	`ROUND_UP
(mem->hóp_bªak, 
MEM_PAGE_SIZE
);

575 
	`X86C⁄ãxtLﬂdProgømHódîs
(
£lf
);

576 i‡(
lﬂdî
->
öãΩ
)

577 
	`X86C⁄ãxtLﬂdI¡îp
(
£lf
);

580 
	`X86C⁄ãxtLﬂdSèck
(
£lf
);

583 
£lf
->
ªgs
->
eù
 = 
lﬂdî
->
öãΩ
 ?Üﬂdî->
öãΩ_¥og_íåy
 :Üﬂdî->
¥og_íåy
;

584 
£lf
->
ªgs
->
e•
 = 
lﬂdî
->
ívú⁄_ba£
;

586 
	`x86_lﬂdî_debug
("ProgømÉ¡ry i†0x%x\n", 
£lf
->
ªgs
->
eù
);

587 
	`x86_lﬂdî_debug
("Inôü»°ackÖoöã∏i†0x%x\n", 
£lf
->
ªgs
->
e•
);

588 
	`x86_lﬂdî_debug
("Hó∞°¨à£àtÿ0x%x\n", 
mem
->
hóp_bªak
);

589 
	}
}

592 
	$X86C⁄ãxtGëFuŒP©h
(
X86C⁄ãxt
 *
˘x
, *
fûe_«me
, *
fuŒ_∑th
, 
size
)

594 
x86_lﬂdî_t
 *
lﬂdî
 = 
˘x
->loader;

597 
fûe_«me
 && !
	`°∫cmp
(file_name, "./", 2))

598 
fûe_«me
 += 2;

601 
	`as£π
(
fuŒ_∑th
);

602 i‡(!
fûe_«me
 || !*file_name)

604 
	`¢¥ötf
(
fuŒ_∑th
, 
size
, "%s", "");

609 i‡(*
fûe_«me
 == '/')

611 i‡(
size
 < 
	`°æí
(
fûe_«me
) + 1)

612 
	`Áèl
("%s: buf„∏toÿsmÆl", 
__FUNCTION__
);

613 
	`¢¥ötf
(
fuŒ_∑th
, 
size
, "%s", 
fûe_«me
);

618 i‡(
	`°æí
(
lﬂdî
->
cwd
Ë+ såÀn(
fûe_«me
Ë+ 2 > 
size
)

619 
	`Áèl
("%s: buf„∏toÿsmÆl", 
__FUNCTION__
);

620 
	`¢¥ötf
(
fuŒ_∑th
, 
size
, "%s/%s", 
lﬂdî
->
cwd
, 
fûe_«me
);

621 
	}
}

631 
x86_lﬂdî_t
 *
	$x86_lﬂdî_¸óã
()

633 
x86_lﬂdî_t
 *
lﬂdî
;

636 
lﬂdî
 = 
	`xˇŒoc
(1, (
x86_lﬂdî_t
));

637 
lﬂdî
->
¨gs
 = 
	`löked_li°_¸óã
();

638 
lﬂdî
->
ív
 = 
	`löked_li°_¸óã
();

641  
lﬂdî
;

642 
	}
}

645 
	$x86_lﬂdî_‰ì
(
x86_lﬂdî_t
 *
lﬂdî
)

648 
	`as£π
(!
lﬂdî
->
num_löks
);

651 i‡(
lﬂdî
->
ñf_fûe
)

652 
	`ñf_fûe_‰ì
(
lﬂdî
->
ñf_fûe
);

655 
	`LINKED_LIST_FOR_EACH
(
lﬂdî
->
¨gs
)

656 
	`°r_‰ì
(
	`löked_li°_gë
(
lﬂdî
->
¨gs
));

657 
	`löked_li°_‰ì
(
lﬂdî
->
¨gs
);

660 
	`LINKED_LIST_FOR_EACH
(
lﬂdî
->
ív
)

661 
	`°r_‰ì
(
	`löked_li°_gë
(
lﬂdî
->
ív
));

662 
	`löked_li°_‰ì
(
lﬂdî
->
ív
);

665 
	`°r_‰ì
(
lﬂdî
->
öãΩ
);

666 
	`°r_‰ì
(
lﬂdî
->
exe
);

667 
	`°r_‰ì
(
lﬂdî
->
cwd
);

668 
	`°r_‰ì
(
lﬂdî
->
°dö_fûe
);

669 
	`°r_‰ì
(
lﬂdî
->
°dout_fûe
);

670 
	`‰ì
(
lﬂdî
);

671 
	}
}

674 
x86_lﬂdî_t
 *
	$x86_lﬂdî_lök
(
x86_lﬂdî_t
 *
lﬂdî
)

676 
lﬂdî
->
num_löks
++;

677  
lﬂdî
;

678 
	}
}

681 
	$x86_lﬂdî_u∆ök
(
x86_lﬂdî_t
 *
lﬂdî
)

683 
	`as£π
(
lﬂdî
->
num_löks
 >= 0);

684 i‡(
lﬂdî
->
num_löks
)

685 
lﬂdî
->
num_löks
--;

687 
	`x86_lﬂdî_‰ì
(
lﬂdî
);

688 
	}
}

	@emu/loader.h

20 #i‚de‡
ARCH_X86_EMU_LOADER_H


21 
	#ARCH_X86_EMU_LOADER_H


	)

24 
	gc⁄fig_t
;

25 
	gñf_fûe_t
;

34 
X86C⁄ãxtAddArgsVe˘‹
(
X86C⁄ãxt
 *
£lf
, 
¨gc
, **
¨gv
);

35 
X86C⁄ãxtAddArgsSåög
(
X86C⁄ãxt
 *
£lf
, *
¨gs
);

36 
X86C⁄ãxtAddEnv
(
X86C⁄ãxt
 *
£lf
, *
ív
);

38 
X86C⁄ãxtLﬂdELFSe˘i⁄s
(
X86C⁄ãxt
 *
£lf
, 
ñf_fûe_t
 *
ñf_fûe
);

39 
X86C⁄ãxtLﬂdI¡îp
(
X86C⁄ãxt
 *
£lf
);

40 
X86C⁄ãxtLﬂdProgømHódîs
(
X86C⁄ãxt
 *
£lf
);

41 
X86C⁄ãxtLﬂdAV
(
X86C⁄ãxt
 *
£lf
, 
whîe
);

42 
X86C⁄ãxtLﬂdSèck
(
X86C⁄ãxt
 *
£lf
);

44 
X86C⁄ãxtLﬂdExe
(
X86C⁄ãxt
 *
£lf
, *
exe
);

45 
X86C⁄ãxtGëFuŒP©h
(
X86C⁄ãxt
 *
£lf
, *
fûe_«me
, *
fuŒ_∑th
, 
size
);

53 
	sx86_lﬂdî_t


56 
	mnum_löks
;

59 
ñf_fûe_t
 *
	mñf_fûe
;

60 
löked_li°_t
 *
	m¨gs
;

61 
löked_li°_t
 *
	mív
;

62 *
	möãΩ
;

63 *
	mexe
;

64 *
	mcwd
;

65 *
	m°dö_fûe
;

66 *
	m°dout_fûe
;

69 
	m°ack_ba£
;

70 
	m°ack_t›
;

71 
	m°ack_size
;

72 
	mívú⁄_ba£
;

75 
	mbŸtom
;

78 
	m¥og_íåy
;

79 
	möãΩ_¥og_íåy
;

82 
	mphdt_ba£
;

83 
	mphdr_cou¡
;

86 
	m©_øndom_addr
;

87 
	m©_øndom_addr_hﬁdî
;

91 
x86_lﬂdî_t
 *
x86_lﬂdî_¸óã
();

92 
x86_lﬂdî_‰ì
(
x86_lﬂdî_t
 *
lﬂdî
);

94 
x86_lﬂdî_t
 *
x86_lﬂdî_lök
(x86_lﬂdî_à*
lﬂdî
);

95 
x86_lﬂdî_u∆ök
(
x86_lﬂdî_t
 *
lﬂdî
);

104 
	#x86_lﬂdî_debug
(...Ë
	`debug
(
x86_lﬂdî_debug_ˇãg‹y
, 
__VA_ARGS__
)

	)

105 
x86_lﬂdî_debug_ˇãg‹y
;

107 *
x86_lﬂdî_hñp
;

	@emu/machine-ctrl.c

21 
	~"c⁄ãxt.h
"

22 
	~"iß.h
"

23 
	~"ªgs.h
"

24 
	~"uö°.h
"

28 
	#mem_ac˚ss
 
__COMPILATION_ERROR__


	)

29 
	#mem_ªad
 
__COMPILATION_ERROR__


	)

30 
	#mem_wrôe
 
__COMPILATION_ERROR__


	)

31 
	#mem_zîo
 
__COMPILATION_ERROR__


	)

32 
	#mem_ªad_°rög
 
__COMPILATION_ERROR__


	)

33 
	#mem_wrôe_°rög
 
__COMPILATION_ERROR__


	)

34 
	#mem_gë_buf„r
 
__COMPILATION_ERROR__


	)

35 
	#Áèl
 
__COMPILATION_ERROR__


	)

36 
	#∑nic
 
__COMPILATION_ERROR__


	)

37 
	#w¨nög
 
__COMPILATION_ERROR__


	)

38 #ifde‡
as£π


39 #unde‡
as£π


41 
	#as£π
 
__COMPILATION_ERROR__


	)

44 
	#CF
 
	`X86C⁄ãxtGëFœg
(
˘x
, 
x86_ö°_Êag_cf
)

	)

45 
	#ZF
 
	`X86C⁄ãxtGëFœg
(
˘x
, 
x86_ö°_Êag_zf
)

	)

46 
	#SF
 
	`X86C⁄ãxtGëFœg
(
˘x
, 
x86_ö°_Êag_sf
)

	)

47 
	#OF
 
	`X86C⁄ãxtGëFœg
(
˘x
, 
x86_ö°_Êag_of
)

	)

48 
	#PF
 
	`X86C⁄ãxtGëFœg
(
˘x
, 
x86_ö°_Êag_pf
)

	)

51 
	#cc_a
 (!
CF
 && !
ZF
)

	)

52 
	#cc_´
 (!
CF
)

	)

53 
	#cc_b
 (
CF
)

	)

54 
	#cc_be
 (
CF
 || 
ZF
)

	)

55 
	#cc_e
 (
ZF
)

	)

56 
	#cc_g
 (!
ZF
 && 
SF
 =
OF
)

	)

57 
	#cc_ge
 (
SF
 =
OF
)

	)

58 
	#cc_l
 (
SF
 !
OF
)

	)

59 
	#cc_À
 (
ZF
 || 
SF
 !
OF
)

	)

60 
	#cc_√
 (!
ZF
)

	)

61 
	#cc_no
 (!
OF
)

	)

62 
	#cc_≈
 (!
PF
)

	)

63 
	#cc_ns
 (!
SF
)

	)

64 
	#cc_o
 (
OF
)

	)

65 
	#cc_p
 (
PF
)

	)

66 
	#cc_s
 (
SF
)

	)

69 
	#›_£tcc
(
cc
, 
idï1
, 
idï2
) \

70 
x86_iß_£t
##
cc
##
	`_rm8_im∂
(
X86C⁄ãxt
 *
˘x
) \

72 i‡(
cc_
##
cc
) \

73 
	`X86C⁄ãxtSt‹eRm8
(
˘x
, 1); \

75 
	`X86C⁄ãxtSt‹eRm8
(
˘x
, 0); \

76 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 
idï1
, 
idï2
, 0, 
x86_dï_rm8
, 0, 0, 0); \

77 }

	)

80 
	#›_jcc_ªl8
(
cc
, 
idï1
, 
idï2
) \

81 
x86_iß_j
##
cc
##
	`_ªl8_im∂
(
X86C⁄ãxt
 *
˘x
) \

83 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs; \

84 
˘x
->
èrgë_eù
 = 
ªgs
->
eù
 + (Ë˘x->
ö°
.
imm
.
b
; \

85 i‡(
cc_
##
cc
) \

86 
ªgs
->
eù
 = 
˘x
->
èrgë_eù
; \

87 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_bønch
, 
idï1
, 
idï2
, 0, 0, 0, 0, 0); \

88 }

	)

91 
	#›_jcc_ªl32
(
cc
, 
idï1
, 
idï2
) \

92 
x86_iß_j
##
cc
##
	`_ªl32_im∂
(
X86C⁄ãxt
 *
˘x
) \

94 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs; \

95 
˘x
->
èrgë_eù
 = 
ªgs
->
eù
 + ctx->
ö°
.
imm
.
d
; \

96 i‡(
cc_
##
cc
) \

97 
ªgs
->
eù
 = 
˘x
->
èrgë_eù
; \

98 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_bønch
, 
idï1
, 
idï2
, 0, 0, 0, 0, 0); \

99 }

	)

102 
	#›_cmov_r16_rm16
(
cc
, 
idï1
, 
idï2
) \

103 
x86_iß_cmov
##
cc
##
	`_r16_rm16_im∂
(
X86C⁄ãxt
 *
˘x
) \

105 i‡(
cc_
##
cc
) \

106 
	`X86C⁄ãxtSt‹eR16
(
˘x
, 
	`X86C⁄ãxtLﬂdRm16
(ctx)); \

107 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 
idï1
, 
idï2
, 
x86_dï_rm16
, 
x86_dï_r16
, 0, 0, 0); \

108 }

	)

111 
	#›_cmov_r32_rm32
(
cc
, 
idï1
, 
idï2
) \

112 
x86_iß_cmov
##
cc
##
	`_r32_rm32_im∂
(
X86C⁄ãxt
 *
˘x
) \

114 i‡(
cc_
##
cc
) \

115 
	`X86C⁄ãxtSt‹eR32
(
˘x
, 
	`X86C⁄ãxtLﬂdRm32
(ctx)); \

116 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 
idï1
, 
idï2
, 
x86_dï_rm32
, 
x86_dï_r32
, 0, 0, 0); \

117 }

	)

120 
	#›_cc_Æl
(
cc›
) \

121 
›_
##
	`cc›
(
a
, 
x86_dï_cf
, 
x86_dï_zps
) \

122 
›_
##
	`cc›
(
´
, 
x86_dï_cf
, 0) \

123 
›_
##
	`cc›
(
b
, 
x86_dï_cf
, 0) \

124 
›_
##
	`cc›
(
be
, 
x86_dï_cf
, 
x86_dï_zps
) \

125 
›_
##
	`cc›
(
e
, 
x86_dï_zps
, 0) \

126 
›_
##
	`cc›
(
g
, 
x86_dï_zps
, 
x86_dï_of
) \

127 
›_
##
	`cc›
(
ge
, 
x86_dï_zps
, 
x86_dï_of
) \

128 
›_
##
	`cc›
(
l
, 
x86_dï_zps
, 
x86_dï_of
) \

129 
›_
##
	`cc›
(
À
, 
x86_dï_zps
, 
x86_dï_of
) \

130 
›_
##
	`cc›
(
√
, 
x86_dï_zps
, 0) \

131 
›_
##
	`cc›
(
no
, 
x86_dï_of
, 0) \

132 
›_
##
	`cc›
(
≈
, 
x86_dï_zps
, 0) \

133 
›_
##
	`cc›
(
ns
, 
x86_dï_zps
, 0) \

134 
›_
##
	`cc›
(
o
, 
x86_dï_of
, 0) \

135 
›_
##
	`cc›
(
p
, 
x86_dï_zps
, 0) \

136 
›_
##
	`cc›
(
s
, 
x86_dï_zps
, 0)

	)

139 
	$›_cc_Æl
(
£tcc
)

140 
	$›_cc_Æl
(
jcc_ªl8
)

141 
	$›_cc_Æl
(
jcc_ªl32
)

142 
	$›_cc_Æl
(
cmov_r16_rm16
)

143 
	$›_cc_Æl
(
cmov_r32_rm32
)

146 
	$x86_iß_jecxz_ªl8_im∂
(
X86C⁄ãxt
 *
˘x
)

148 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

150 
˘x
->
èrgë_eù
 = 
ªgs
->
eù
 + ctx->
ö°
.
imm
.
b
;

151 i‡(!
	`X86C⁄ãxtLﬂdReg
(
˘x
, 
x86_ö°_ªg_ecx
))

152 
ªgs
->
eù
 = 
˘x
->
èrgë_eù
;

153 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_bønch
, 
x86_dï_ecx
, 0, 0, 0, 0, 0, 0);

154 
	}
}

157 
	$x86_iß_jcxz_ªl8_im∂
(
X86C⁄ãxt
 *
˘x
)

159 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

161 
˘x
->
èrgë_eù
 = 
ªgs
->
eù
 + ctx->
ö°
.
imm
.
b
;

162 i‡(!
	`X86C⁄ãxtLﬂdReg
(
˘x
, 
x86_ö°_ªg_cx
))

163 
ªgs
->
eù
 = 
˘x
->
èrgë_eù
;

164 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_bønch
, 
x86_dï_ecx
, 0, 0, 0, 0, 0, 0);

165 
	}
}

	@emu/machine-fp.c

21 
	~"c⁄ãxt.h
"

22 
	~"iß.h
"

23 
	~"machöe.h
"

24 
	~"ªgs.h
"

25 
	~"uö°.h
"

29 
	#mem_ac˚ss
 
__COMPILATION_ERROR__


	)

30 
	#mem_ªad
 
__COMPILATION_ERROR__


	)

31 
	#mem_wrôe
 
__COMPILATION_ERROR__


	)

32 
	#mem_zîo
 
__COMPILATION_ERROR__


	)

33 
	#mem_ªad_°rög
 
__COMPILATION_ERROR__


	)

34 
	#mem_wrôe_°rög
 
__COMPILATION_ERROR__


	)

35 
	#mem_gë_buf„r
 
__COMPILATION_ERROR__


	)

36 
	#Áèl
 
__COMPILATION_ERROR__


	)

37 
	#∑nic
 
__COMPILATION_ERROR__


	)

38 
	#w¨nög
 
__COMPILATION_ERROR__


	)

39 #ifde‡
as£π


40 #unde‡
as£π


42 
	#as£π
 
__COMPILATION_ERROR__


	)

45 
	$x86_iß_f2xm1_im∂
(
X86C⁄ãxt
 *
˘x
)

47 
°0
[10];

48 
°©us
;

50 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

52 
__X86_ISA_FP_ASM_START__


53 
asm
 volatile (

59 : "=m" (*
°0
), "=g" (
°©us
)

60 : "m" (*
°0
)

63 
__X86_ISA_FP_ASM_END__


65 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°0
);

66 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

68 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_exp
, 
x86_dï_°0
, 0, 0, x86_dep_st0, 0, 0, 0);

69 
	}
}

72 
	$x86_iß_Ábs_im∂
(
X86C⁄ãxt
 *
˘x
)

74 
°0
[10];

75 
°©us
;

77 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

79 
__X86_ISA_FP_ASM_START__


80 
asm
 volatile (

86 : "=m" (*
°0
), "=g" (
°©us
)

87 : "m" (*
°0
)

90 
__X86_ISA_FP_ASM_END__


92 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°0
);

93 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

95 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_sign
, 
x86_dï_°0
, 0, 0, x86_dep_st0, 0, 0, 0);

96 
	}
}

99 
	$x86_iß_Ádd_m32_im∂
(
X86C⁄ãxt
 *
˘x
)

101 
°0
[10];

102 
m32
;

103 
°©us
;

105 
m32
 = 
	`X86C⁄ãxtLﬂdFlﬂt
(
˘x
);

106 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

108 
__X86_ISA_FP_ASM_START__


109 
asm
 volatile (

116 : "=m" (*
°0
), "=g" (
°©us
)

117 : "m" (*
°0
), "m" (
m32
)

120 
__X86_ISA_FP_ASM_END__


122 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°0
);

123 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

125 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_add
, 
x86_dï_°0
, 
x86_dï_mem32
, 0, x86_dep_st0, 0, 0, 0);

126 
	}
}

129 
	$x86_iß_Ádd_m64_im∂
(
X86C⁄ãxt
 *
˘x
)

131 
°0
[10];

132 
m64
;

133 
°©us
;

135 
m64
 = 
	`X86C⁄ãxtLﬂdDoubÀ
(
˘x
);

136 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

138 
__X86_ISA_FP_ASM_START__


139 
asm
 volatile (

146 : "=m" (*
°0
), "=g" (
°©us
)

147 : "m" (*
°0
), "m" (
m64
)

150 
__X86_ISA_FP_ASM_END__


152 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°0
);

153 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

155 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_add
, 
x86_dï_°0
, 
x86_dï_mem64
, 0, x86_dep_st0, 0, 0, 0);

156 
	}
}

159 
	$x86_iß_Ádd_°0_°i_im∂
(
X86C⁄ãxt
 *
˘x
)

161 
°0
[10], 
°i
[10];

162 
°©us
;

164 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

165 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

167 
__X86_ISA_FP_ASM_START__


168 
asm
 volatile (

175 : "=m" (*
°0
), "=g" (
°©us
)

176 : "m" (*
°0
), "m" (*
°i
)

179 
__X86_ISA_FP_ASM_END__


181 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°0
);

182 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

184 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_add
, 
x86_dï_°0
, 
x86_dï_°i
, 0, x86_dep_st0, 0, 0, 0);

185 
	}
}

188 
	$x86_iß_Ádd_°i_°0_im∂
(
X86C⁄ãxt
 *
˘x
)

190 
°0
[10], 
°i
[10];

191 
°©us
;

193 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

194 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

196 
__X86_ISA_FP_ASM_START__


197 
asm
 volatile (

204 : "=m" (*
°i
), "=g" (
°©us
)

205 : "m" (*
°i
), "m" (*
°0
)

208 
__X86_ISA_FP_ASM_END__


210 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

211 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

213 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_add
, 
x86_dï_°0
, 
x86_dï_°i
, 0, x86_dep_sti, 0, 0, 0);

214 
	}
}

217 
	$x86_iß_Áddp_°i_°0_im∂
(
X86C⁄ãxt
 *
˘x
)

219 
	`x86_iß_Ádd_°i_°0_im∂
(
˘x
);

220 
	`X86C⁄ãxtP›Fpu
(
˘x
, 
NULL
);

222 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_p›
, 0, 0, 0, 0, 0, 0, 0);

223 
	}
}

226 
	$x86_iß_fchs_im∂
(
X86C⁄ãxt
 *
˘x
)

228 
°0
[10];

229 
°©us
;

231 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

233 
__X86_ISA_FP_ASM_START__


234 
asm
 volatile (

240 : "=m" (*
°0
), "=g" (
°©us
)

241 : "m" (*
°0
)

244 
__X86_ISA_FP_ASM_END__


246 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°0
);

247 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

249 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_sign
, 
x86_dï_°0
, 0, 0, x86_dep_st0, 0, 0, 0);

250 
	}
}

253 
	$x86_iß_fcmovb_°0_°i_im∂
(
X86C⁄ãxt
 *
˘x
)

255 
°i
[10];

256 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

257 i‡(
	`X86C⁄ãxtGëFœg
(
˘x
, 
x86_ö°_Êag_cf
))

258 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°i
);

260 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 
x86_dï_°i
, 
x86_dï_cf
, 0, 
x86_dï_°0
, 0, 0, 0);

261 
	}
}

264 
	$x86_iß_fcmove_°0_°i_im∂
(
X86C⁄ãxt
 *
˘x
)

266 
°i
[10];

267 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

268 i‡(
	`X86C⁄ãxtGëFœg
(
˘x
, 
x86_ö°_Êag_zf
))

269 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°i
);

271 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 
x86_dï_°i
, 
x86_dï_zps
, 0, 
x86_dï_°0
, 0, 0, 0);

272 
	}
}

275 
	$x86_iß_fcmovbe_°0_°i_im∂
(
X86C⁄ãxt
 *
˘x
)

277 
°i
[10];

278 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

279 i‡(
	`X86C⁄ãxtGëFœg
(
˘x
, 
x86_ö°_Êag_cf
Ë|| X86C⁄ãxtGëFœg(˘x, 
x86_ö°_Êag_zf
))

280 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°i
);

282 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 
x86_dï_°i
, 
x86_dï_cf
, 
x86_dï_zps
, 
x86_dï_°0
, 0, 0, 0);

283 
	}
}

286 
	$x86_iß_fcmovu_°0_°i_im∂
(
X86C⁄ãxt
 *
˘x
)

288 
°i
[10];

289 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

290 i‡(
	`X86C⁄ãxtGëFœg
(
˘x
, 
x86_ö°_Êag_pf
))

291 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°i
);

293 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 
x86_dï_°i
, 
x86_dï_zps
, 0, 
x86_dï_°0
, 0, 0, 0);

294 
	}
}

297 
	$x86_iß_fcmovnb_°0_°i_im∂
(
X86C⁄ãxt
 *
˘x
)

299 
°i
[10];

300 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

301 i‡(!
	`X86C⁄ãxtGëFœg
(
˘x
, 
x86_ö°_Êag_cf
))

302 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°i
);

304 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 
x86_dï_°i
, 
x86_dï_cf
, 0, 
x86_dï_°0
, 0, 0, 0);

305 
	}
}

308 
	$x86_iß_fcmov√_°0_°i_im∂
(
X86C⁄ãxt
 *
˘x
)

310 
°i
[10];

311 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

312 i‡(!
	`X86C⁄ãxtGëFœg
(
˘x
, 
x86_ö°_Êag_zf
))

313 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°i
);

315 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 
x86_dï_°i
, 
x86_dï_zps
, 0, 
x86_dï_°0
, 0, 0, 0);

316 
	}
}

319 
	$x86_iß_fcmovnbe_°0_°i_im∂
(
X86C⁄ãxt
 *
˘x
)

321 
°i
[10];

322 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

323 i‡(!
	`X86C⁄ãxtGëFœg
(
˘x
, 
x86_ö°_Êag_cf
Ë&& !X86C⁄ãxtGëFœg(˘x, 
x86_ö°_Êag_zf
))

324 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°i
);

326 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 
x86_dï_°i
, 
x86_dï_cf
, 
x86_dï_zps
, 
x86_dï_°0
, 0, 0, 0);

327 
	}
}

330 
	$x86_iß_fcmovnu_°0_°i_im∂
(
X86C⁄ãxt
 *
˘x
)

332 
°i
[10];

333 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

334 i‡(!
	`X86C⁄ãxtGëFœg
(
˘x
, 
x86_ö°_Êag_pf
))

335 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°i
);

337 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 
x86_dï_°i
, 
x86_dï_zps
, 0, 
x86_dï_°0
, 0, 0, 0);

338 
	}
}

341 
	$x86_iß_fcom_m32_im∂
(
X86C⁄ãxt
 *
˘x
)

343 
°0
[10];

344 
m32
;

345 
°©us
;

347 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

348 
m32
 = 
	`X86C⁄ãxtLﬂdFlﬂt
(
˘x
);

350 
__X86_ISA_FP_ASM_START__


351 
asm
 volatile (

356 : "=g" (
°©us
)

357 : "m" (*
°0
), "m" (
m32
)

360 
__X86_ISA_FP_ASM_END__


362 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

364 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_comp
, 
x86_dï_°0
, 
x86_dï_mem32
, 0, 
x86_dï_Â°
, 0, 0, 0);

365 
	}
}

368 
	$x86_iß_fcom_m64_im∂
(
X86C⁄ãxt
 *
˘x
)

370 
°0
[10];

371 
m64
;

372 
°©us
;

374 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

375 
m64
 = 
	`X86C⁄ãxtLﬂdDoubÀ
(
˘x
);

377 
__X86_ISA_FP_ASM_START__


378 
asm
 volatile (

383 : "=g" (
°©us
)

384 : "m" (*
°0
), "m" (
m64
)

387 
__X86_ISA_FP_ASM_END__


389 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

391 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_comp
, 
x86_dï_°0
, 
x86_dï_mem64
, 0, 
x86_dï_Â°
, 0, 0, 0);

392 
	}
}

395 
	$x86_iß_fcom_°i_im∂
(
X86C⁄ãxt
 *
˘x
)

397 
°0
[10], 
°i
[10];

398 
°©us
;

400 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

401 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

403 
__X86_ISA_FP_ASM_START__


404 
asm
 volatile (

410 : "=g" (
°©us
)

411 : "m" (*
°0
), "m" (*
°i
)

414 
__X86_ISA_FP_ASM_END__


416 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

418 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_comp
, 
x86_dï_°0
, 
x86_dï_°i
, 0, 
x86_dï_Â°
, 0, 0, 0);

419 
	}
}

422 
	$x86_iß_fcomp_m32_im∂
(
X86C⁄ãxt
 *
˘x
)

424 
	`x86_iß_fcom_m32_im∂
(
˘x
);

425 
	`X86C⁄ãxtP›Fpu
(
˘x
, 
NULL
);

427 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_p›
, 0, 0, 0, 0, 0, 0, 0);

428 
	}
}

431 
	$x86_iß_fcomp_m64_im∂
(
X86C⁄ãxt
 *
˘x
)

433 
	`x86_iß_fcom_m64_im∂
(
˘x
);

434 
	`X86C⁄ãxtP›Fpu
(
˘x
, 
NULL
);

436 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_p›
, 0, 0, 0, 0, 0, 0, 0);

437 
	}
}

440 
	$x86_iß_fcomp_°i_im∂
(
X86C⁄ãxt
 *
˘x
)

442 
	`x86_iß_fcom_°i_im∂
(
˘x
);

443 
	`X86C⁄ãxtP›Fpu
(
˘x
, 
NULL
);

445 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_p›
, 0, 0, 0, 0, 0, 0, 0);

446 
	}
}

449 
	$x86_iß_fcomµ_im∂
(
X86C⁄ãxt
 *
˘x
)

451 
°0
[10], 
°1
[10];

452 
°©us
;

454 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

455 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 1, 
°1
);

457 
__X86_ISA_FP_ASM_START__


458 
asm
 volatile (

464 : "=g" (
°©us
)

465 : "m" (*
°0
), "m" (*
°1
)

468 
__X86_ISA_FP_ASM_END__


470 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

471 
	`X86C⁄ãxtP›Fpu
(
˘x
, 
NULL
);

472 
	`X86C⁄ãxtP›Fpu
(
˘x
, 
NULL
);

474 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_comp
, 
x86_dï_°0
, 
x86_dï_°1
, 0, 
x86_dï_Â°
, 0, 0, 0);

475 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_p›
, 0, 0, 0, 0, 0, 0, 0);

476 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_p›
, 0, 0, 0, 0, 0, 0, 0);

477 
	}
}

480 
	$x86_iß_fcomi_°0_°i_im∂
(
X86C⁄ãxt
 *
˘x
)

482 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

483 
°0
[10], 
°i
[10];

484 
Êags
 = 
ªgs
->
eÊags
;

486 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

487 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

489 
__X86_ISA_FP_ASM_START__


490 
asm
 volatile (

499 : "=g" (
Êags
)

500 : "m" (*
°0
), "m" (*
°i
), "g" (
Êags
)

502 
__X86_ISA_FP_ASM_END__


504 
ªgs
->
eÊags
 = 
Êags
;

506 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_comp
, 
x86_dï_°0
, 
x86_dï_°i
, 0, 
x86_dï_zps
, 
x86_dï_cf
, 0, 0);

507 
	}
}

510 
	$x86_iß_fcomù_°0_°i_im∂
(
X86C⁄ãxt
 *
˘x
)

512 
	`x86_iß_fcomi_°0_°i_im∂
(
˘x
);

513 
	`X86C⁄ãxtP›Fpu
(
˘x
, 
NULL
);

515 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_p›
, 0, 0, 0, 0, 0, 0, 0);

516 
	}
}

519 
	$x86_iß_fucomi_°0_°i_im∂
(
X86C⁄ãxt
 *
˘x
)

521 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

522 
°0
[10], 
°i
[10];

523 
Êags
 = 
ªgs
->
eÊags
;

525 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

526 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

528 
__X86_ISA_FP_ASM_START__


529 
asm
 volatile (

538 : "=g" (
Êags
)

539 : "m" (*
°0
), "m" (*
°i
), "g" (
Êags
)

541 
__X86_ISA_FP_ASM_END__


543 
ªgs
->
eÊags
 = 
Êags
;

545 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_comp
, 
x86_dï_°0
, 
x86_dï_°i
, 0, 
x86_dï_zps
, 
x86_dï_cf
, 0, 0);

546 
	}
}

549 
	$x86_iß_fucomù_°0_°i_im∂
(
X86C⁄ãxt
 *
˘x
)

551 
	`x86_iß_fucomi_°0_°i_im∂
(
˘x
);

552 
	`X86C⁄ãxtP›Fpu
(
˘x
, 
NULL
);

554 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_p›
, 0, 0, 0, 0, 0, 0, 0);

555 
	}
}

558 
	$x86_iß_fcos_im∂
(
X86C⁄ãxt
 *
˘x
)

560 
°0
[10];

561 
°©us
;

563 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

565 
__X86_ISA_FP_ASM_START__


566 
asm
 volatile (

572 : "=m" (*
°0
), "=g" (
°©us
)

573 : "m" (*
°0
)

576 
__X86_ISA_FP_ASM_END__


578 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°0
);

579 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

581 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_cos
, 
x86_dï_°0
, 0, 0, x86_dep_st0, 0, 0, 0);

582 
	}
}

585 
	$x86_iß_fdiv_m32_im∂
(
X86C⁄ãxt
 *
˘x
)

587 
°0
[10];

588 
m32
;

589 
°©us
;

591 
m32
 = 
	`X86C⁄ãxtLﬂdFlﬂt
(
˘x
);

592 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

594 
__X86_ISA_FP_ASM_START__


595 
asm
 volatile (

602 : "=m" (*
°0
), "=g" (
°©us
)

603 : "m" (*
°0
), "m" (
m32
)

606 
__X86_ISA_FP_ASM_END__


608 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°0
);

609 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

611 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_div
, 
x86_dï_°0
, 
x86_dï_mem32
, 0, x86_dep_st0, 0, 0, 0);

612 
	}
}

615 
	$x86_iß_fdiv_m64_im∂
(
X86C⁄ãxt
 *
˘x
)

617 
°0
[10];

618 
m64
;

619 
°©us
;

621 
m64
 = 
	`X86C⁄ãxtLﬂdDoubÀ
(
˘x
);

622 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

624 
__X86_ISA_FP_ASM_START__


625 
asm
 volatile (

632 : "=m" (*
°0
), "=g" (
°©us
)

633 : "m" (*
°0
), "m" (
m64
)

636 
__X86_ISA_FP_ASM_END__


638 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°0
);

639 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

641 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_div
, 
x86_dï_°0
, 
x86_dï_mem64
, 0, x86_dep_st0, 0, 0, 0);

642 
	}
}

645 
	$x86_iß_fdiv_°0_°i_im∂
(
X86C⁄ãxt
 *
˘x
)

647 
°0
[10], 
°i
[10];

648 
°©us
;

650 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

651 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

653 
__X86_ISA_FP_ASM_START__


654 
asm
 volatile (

661 : "=m" (*
°0
), "=g" (
°©us
)

662 : "m" (*
°0
), "m" (*
°i
)

665 
__X86_ISA_FP_ASM_END__


667 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°0
);

668 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

670 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_div
, 
x86_dï_°0
, 
x86_dï_°i
, 0, x86_dep_st0, 0, 0, 0);

671 
	}
}

674 
	$x86_iß_fdiv_°i_°0_im∂
(
X86C⁄ãxt
 *
˘x
)

676 
°0
[10], 
°i
[10];

677 
°©us
;

679 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

680 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

682 
__X86_ISA_FP_ASM_START__


683 
asm
 volatile (

690 : "=m" (*
°i
), "=g" (
°©us
)

691 : "m" (*
°i
), "m" (*
°0
)

694 
__X86_ISA_FP_ASM_END__


696 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

697 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

699 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_div
, 
x86_dï_°0
, 
x86_dï_°i
, 0, x86_dep_sti, 0, 0, 0);

700 
	}
}

703 
	$x86_iß_fdivp_°i_°0_im∂
(
X86C⁄ãxt
 *
˘x
)

705 
	`x86_iß_fdiv_°i_°0_im∂
(
˘x
);

706 
	`X86C⁄ãxtP›Fpu
(
˘x
, 
NULL
);

708 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_p›
, 0, 0, 0, 0, 0, 0, 0);

709 
	}
}

712 
	$x86_iß_fdivr_m32_im∂
(
X86C⁄ãxt
 *
˘x
)

714 
°0
[10];

715 
m32
;

716 
°©us
;

718 
m32
 = 
	`X86C⁄ãxtLﬂdFlﬂt
(
˘x
);

719 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

721 
__X86_ISA_FP_ASM_START__


722 
asm
 volatile (

729 : "=m" (*
°0
), "=g" (
°©us
)

730 : "m" (
m32
), "m" (*
°0
)

733 
__X86_ISA_FP_ASM_END__


735 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°0
);

736 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

738 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_div
, 
x86_dï_°0
, 
x86_dï_mem32
, 0, x86_dep_st0, 0, 0, 0);

739 
	}
}

742 
	$x86_iß_fdivr_m64_im∂
(
X86C⁄ãxt
 *
˘x
)

744 
°0
[10];

745 
m64
;

746 
°©us
;

748 
m64
 = 
	`X86C⁄ãxtLﬂdDoubÀ
(
˘x
);

749 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

751 
__X86_ISA_FP_ASM_START__


752 
asm
 volatile (

759 : "=m" (*
°0
), "=g" (
°©us
)

760 : "m" (
m64
), "m" (*
°0
)

763 
__X86_ISA_FP_ASM_END__


765 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°0
);

766 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

768 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_div
, 
x86_dï_°0
, 
x86_dï_mem64
, 0, x86_dep_st0, 0, 0, 0);

769 
	}
}

772 
	$x86_iß_fdivr_°0_°i_im∂
(
X86C⁄ãxt
 *
˘x
)

774 
°0
[10], 
°i
[10];

775 
°©us
;

777 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

778 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

780 
__X86_ISA_FP_ASM_START__


781 
asm
 volatile (

788 : "=m" (*
°0
), "=g" (
°©us
)

789 : "m" (*
°i
), "m" (*
°0
)

792 
__X86_ISA_FP_ASM_END__


794 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°0
);

795 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

797 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_div
, 
x86_dï_°0
, 
x86_dï_°i
, 0, x86_dep_st0, 0, 0, 0);

798 
	}
}

801 
	$x86_iß_fdivr_°i_°0_im∂
(
X86C⁄ãxt
 *
˘x
)

803 
°0
[10], 
°i
[10];

804 
°©us
;

806 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

807 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

809 
__X86_ISA_FP_ASM_START__


810 
asm
 volatile (

817 : "=m" (*
°i
), "=g" (
°©us
)

818 : "m" (*
°0
), "m" (*
°i
)

821 
__X86_ISA_FP_ASM_END__


823 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

824 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

826 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_div
, 
x86_dï_°0
, 
x86_dï_°i
, 0, x86_dep_sti, 0, 0, 0);

827 
	}
}

830 
	$x86_iß_fdivΩ_°i_°0_im∂
(
X86C⁄ãxt
 *
˘x
)

832 
	`x86_iß_fdivr_°i_°0_im∂
(
˘x
);

833 
	`X86C⁄ãxtP›Fpu
(
˘x
, 
NULL
);

835 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_p›
, 0, 0, 0, 0, 0, 0, 0);

836 
	}
}

839 
	$x86_iß_fûd_m16_im∂
(
X86C⁄ãxt
 *
˘x
)

841 
m16
;

842 
e
[10];

844 
	`X86C⁄ãxtMemRód
(
˘x
, 
	`X86C⁄ãxtEf„˘iveAddªss
(˘x), 2, &
m16
);

846 
__X86_ISA_FP_ASM_START__


847 
asm
 volatile (

850 : "=m" (*
e
)

851 : "m" (
m16
)

853 
__X86_ISA_FP_ASM_END__


855 
	`X86C⁄ãxtPushFpu
(
˘x
, 
e
);

857 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_push
, 0, 0, 0, 0, 0, 0, 0);

858 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 
x86_dï_mem16
, 0, 0, 
x86_dï_°0
, 0, 0, 0);

859 
	}
}

862 
	$x86_iß_fûd_m32_im∂
(
X86C⁄ãxt
 *
˘x
)

864 
m32
;

865 
e
[10];

867 
	`X86C⁄ãxtMemRód
(
˘x
, 
	`X86C⁄ãxtEf„˘iveAddªss
(˘x), 4, &
m32
);

869 
__X86_ISA_FP_ASM_START__


870 
asm
 volatile (

873 : "=m" (*
e
)

874 : "m" (
m32
)

876 
__X86_ISA_FP_ASM_END__


878 
	`X86C⁄ãxtPushFpu
(
˘x
, 
e
);

880 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_push
, 0, 0, 0, 0, 0, 0, 0);

881 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 
x86_dï_mem32
, 0, 0, 
x86_dï_°0
, 0, 0, 0);

882 
	}
}

885 
	$x86_iß_fûd_m64_im∂
(
X86C⁄ãxt
 *
˘x
)

887 
m64
;

888 
e
[10];

890 
	`X86C⁄ãxtMemRód
(
˘x
, 
	`X86C⁄ãxtEf„˘iveAddªss
(˘x), 8, &
m64
);

892 
__X86_ISA_FP_ASM_START__


893 
asm
 volatile (

896 : "=m" (*
e
)

897 : "m" (
m64
)

899 
__X86_ISA_FP_ASM_END__


901 
	`X86C⁄ãxtPushFpu
(
˘x
, 
e
);

903 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_push
, 0, 0, 0, 0, 0, 0, 0);

904 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 
x86_dï_mem64
, 0, 0, 
x86_dï_°0
, 0, 0, 0);

905 
	}
}

908 
	$x86_iß_fi°_m16_im∂
(
X86C⁄ãxt
 *
˘x
)

910 
m16
;

911 
e
[10];

913 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
e
);

915 
__X86_ISA_FP_ASM_START__


916 
asm
 volatile (

919 : "=m" (
m16
)

920 : "m" (*
e
)

922 
__X86_ISA_FP_ASM_END__


924 
	`X86C⁄ãxtMemWrôe
(
˘x
, 
	`X86C⁄ãxtEf„˘iveAddªss
(˘x), 2, &
m16
);

926 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 
x86_dï_°0
, 0, 0, 
x86_dï_mem16
, 0, 0, 0);

927 
	}
}

930 
	$x86_iß_fi°_m32_im∂
(
X86C⁄ãxt
 *
˘x
)

932 
m32
;

933 
e
[10];

935 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
e
);

937 
__X86_ISA_FP_ASM_START__


938 
asm
 volatile (

941 : "=m" (
m32
)

942 : "m" (*
e
)

944 
__X86_ISA_FP_ASM_END__


946 
	`X86C⁄ãxtMemWrôe
(
˘x
, 
	`X86C⁄ãxtEf„˘iveAddªss
(˘x), 4, &
m32
);

948 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 
x86_dï_°0
, 0, 0, 
x86_dï_mem32
, 0, 0, 0);

949 
	}
}

952 
	$x86_iß_fi°_m64_im∂
(
X86C⁄ãxt
 *
˘x
)

954 
m64
;

955 
e
[10];

957 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
e
);

959 
__X86_ISA_FP_ASM_START__


960 
asm
 volatile (

963 : "=m" (
m64
)

964 : "m" (*
e
)

966 
__X86_ISA_FP_ASM_END__


968 
	`X86C⁄ãxtMemWrôe
(
˘x
, 
	`X86C⁄ãxtEf„˘iveAddªss
(˘x), 8, &
m64
);

970 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 
x86_dï_°0
, 0, 0, 
x86_dï_mem64
, 0, 0, 0);

971 
	}
}

974 
	$x86_iß_fi°p_m16_im∂
(
X86C⁄ãxt
 *
˘x
)

976 
	`x86_iß_fi°_m16_im∂
(
˘x
);

977 
	`X86C⁄ãxtP›Fpu
(
˘x
, 
NULL
);

979 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_p›
, 0, 0, 0, 0, 0, 0, 0);

980 
	}
}

983 
	$x86_iß_fi°p_m32_im∂
(
X86C⁄ãxt
 *
˘x
)

985 
	`x86_iß_fi°_m32_im∂
(
˘x
);

986 
	`X86C⁄ãxtP›Fpu
(
˘x
, 
NULL
);

988 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_p›
, 0, 0, 0, 0, 0, 0, 0);

989 
	}
}

992 
	$x86_iß_fi°p_m64_im∂
(
X86C⁄ãxt
 *
˘x
)

994 
	`x86_iß_fi°_m64_im∂
(
˘x
);

995 
	`X86C⁄ãxtP›Fpu
(
˘x
, 
NULL
);

997 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_p›
, 0, 0, 0, 0, 0, 0, 0);

998 
	}
}

1001 
	$x86_iß_Êd1_im∂
(
X86C⁄ãxt
 *
˘x
)

1003 
v
[10];

1005 
__X86_ISA_FP_ASM_START__


1006 
asm
 volatile (

1009 : "=m" (*
v
)

1011 
__X86_ISA_FP_ASM_END__


1013 
	`X86C⁄ãxtPushFpu
(
˘x
, 
v
);

1015 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_push
, 0, 0, 0, 0, 0, 0, 0);

1016 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 0, 0, 0, 
x86_dï_°0
, 0, 0, 0);

1017 
	}
}

1020 
	$x86_iß_Êdl2e_im∂
(
X86C⁄ãxt
 *
˘x
)

1022 
v
[10];

1024 
__X86_ISA_FP_ASM_START__


1025 
asm
 volatile (

1028 : "=m" (*
v
)

1030 
__X86_ISA_FP_ASM_END__


1032 
	`X86C⁄ãxtPushFpu
(
˘x
, 
v
);

1034 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_push
, 0, 0, 0, 0, 0, 0, 0);

1035 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 0, 0, 0, 
x86_dï_°0
, 0, 0, 0);

1036 
	}
}

1039 
	$x86_iß_Êdl2t_im∂
(
X86C⁄ãxt
 *
˘x
)

1041 
v
[10];

1043 
__X86_ISA_FP_ASM_START__


1044 
asm
 volatile (

1047 : "=m" (*
v
)

1049 
__X86_ISA_FP_ASM_END__


1051 
	`X86C⁄ãxtPushFpu
(
˘x
, 
v
);

1053 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_push
, 0, 0, 0, 0, 0, 0, 0);

1054 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 0, 0, 0, 
x86_dï_°0
, 0, 0, 0);

1055 
	}
}

1058 
	$x86_iß_Êdpi_im∂
(
X86C⁄ãxt
 *
˘x
)

1060 
v
[10];

1062 
__X86_ISA_FP_ASM_START__


1063 
asm
 volatile (

1066 : "=m" (*
v
)

1068 
__X86_ISA_FP_ASM_END__


1070 
	`X86C⁄ãxtPushFpu
(
˘x
, 
v
);

1072 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_push
, 0, 0, 0, 0, 0, 0, 0);

1073 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 0, 0, 0, 
x86_dï_°0
, 0, 0, 0);

1074 
	}
}

1077 
	$x86_iß_Êdlg2_im∂
(
X86C⁄ãxt
 *
˘x
)

1079 
v
[10];

1081 
__X86_ISA_FP_ASM_START__


1082 
asm
 volatile (

1085 : "=m" (*
v
)

1087 
__X86_ISA_FP_ASM_END__


1089 
	`X86C⁄ãxtPushFpu
(
˘x
, 
v
);

1091 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_push
, 0, 0, 0, 0, 0, 0, 0);

1092 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 0, 0, 0, 
x86_dï_°0
, 0, 0, 0);

1093 
	}
}

1096 
	$x86_iß_Êd 2_im∂
(
X86C⁄ãxt
 *
˘x
)

1098 
v
[10];

1100 
__X86_ISA_FP_ASM_START__


1101 
asm
 volatile (

1104 : "=m" (*
v
)

1106 
__X86_ISA_FP_ASM_END__


1108 
	`X86C⁄ãxtPushFpu
(
˘x
, 
v
);

1110 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_push
, 0, 0, 0, 0, 0, 0, 0);

1111 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 0, 0, 0, 
x86_dï_°0
, 0, 0, 0);

1112 
	}
}

1115 
	$x86_iß_Êdz_im∂
(
X86C⁄ãxt
 *
˘x
)

1117 
v
[10];

1119 
__X86_ISA_FP_ASM_START__


1120 
asm
 volatile (

1123 : "=m" (*
v
)

1125 
__X86_ISA_FP_ASM_END__


1127 
	`X86C⁄ãxtPushFpu
(
˘x
, 
v
);

1129 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_push
, 0, 0, 0, 0, 0, 0, 0);

1130 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 0, 0, 0, 
x86_dï_°0
, 0, 0, 0);

1131 
	}
}

1134 
	$x86_iß_Êd_m32_im∂
(
X86C⁄ãxt
 *
˘x
)

1136 
e
[10];

1137 
m32
;

1139 
m32
 = 
	`X86C⁄ãxtLﬂdFlﬂt
(
˘x
);

1140 
	`X86C⁄ãxtFlﬂtToExãnded
(
m32
, 
e
);

1141 
	`X86C⁄ãxtPushFpu
(
˘x
, 
e
);

1143 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_push
, 0, 0, 0, 0, 0, 0, 0);

1144 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 
x86_dï_mem32
, 0, 0, 
x86_dï_°0
, 0, 0, 0);

1145 
	}
}

1148 
	$x86_iß_Êd_m64_im∂
(
X86C⁄ãxt
 *
˘x
)

1150 
e
[10];

1151 
m64
;

1153 
m64
 = 
	`X86C⁄ãxtLﬂdDoubÀ
(
˘x
);

1154 
	`X86C⁄ãxtDoubÀToExãnded
(
m64
, 
e
);

1155 
	`X86C⁄ãxtPushFpu
(
˘x
, 
e
);

1157 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_push
, 0, 0, 0, 0, 0, 0, 0);

1158 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 
x86_dï_mem64
, 0, 0, 
x86_dï_°0
, 0, 0, 0);

1159 
	}
}

1162 
	$x86_iß_Êd_m80_im∂
(
X86C⁄ãxt
 *
˘x
)

1164 
e
[10];

1166 
	`X86C⁄ãxtLﬂdExãnded
(
˘x
, 
e
);

1167 
	`X86C⁄ãxtPushFpu
(
˘x
, 
e
);

1169 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_push
, 0, 0, 0, 0, 0, 0, 0);

1170 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 
x86_dï_mem80
, 0, 0, 
x86_dï_°0
, 0, 0, 0);

1171 
	}
}

1174 
	$x86_iß_Êd_°i_im∂
(
X86C⁄ãxt
 *
˘x
)

1176 
°i
[10];

1177 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

1178 
	`X86C⁄ãxtPushFpu
(
˘x
, 
°i
);

1180 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 
x86_dï_°i
, 0, 0, 
x86_dï_Âaux
, 0, 0, 0);

1181 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_push
, 0, 0, 0, 0, 0, 0, 0);

1182 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 
x86_dï_Âaux
, 0, 0, 
x86_dï_°0
, 0, 0, 0);

1183 
	}
}

1186 
	$x86_iß_Êdcw_m16_im∂
(
X86C⁄ãxt
 *
˘x
)

1188 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1190 
addr
;

1191 
vÆue
;

1192 
•ec_mode
;

1194 
addr
 = 
	`X86C⁄ãxtEf„˘iveAddªss
(
˘x
);

1195 
	`X86C⁄ãxtMemRód
(
˘x
, 
addr
, 2, &
vÆue
);

1198 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

1199 i‡(
•ec_mode
)

1200 
vÆue
 |= 0x3f;

1203 
ªgs
->
Âu_˘æ
 = 
vÆue
;

1206 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 
x86_dï_mem16
, 0, 0, 
x86_dï_Âcw
, 0, 0, 0);

1207 
	}
}

1210 
	$x86_iß_fmul_m32_im∂
(
X86C⁄ãxt
 *
˘x
)

1212 
°0
[10];

1213 
m32
;

1214 
°©us
;

1216 
m32
 = 
	`X86C⁄ãxtLﬂdFlﬂt
(
˘x
);

1217 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

1219 
__X86_ISA_FP_ASM_START__


1220 
asm
 volatile (

1227 : "=m" (*
°0
), "=g" (
°©us
)

1228 : "m" (*
°0
), "m" (
m32
)

1231 
__X86_ISA_FP_ASM_END__


1233 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°0
);

1234 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

1236 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_mu…
, 
x86_dï_°0
, 
x86_dï_mem32
, 0, x86_dep_st0, 0, 0, 0);

1237 
	}
}

1240 
	$x86_iß_fmul_m64_im∂
(
X86C⁄ãxt
 *
˘x
)

1242 
°0
[10];

1243 
m64
;

1244 
°©us
;

1246 
m64
 = 
	`X86C⁄ãxtLﬂdDoubÀ
(
˘x
);

1247 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

1249 
__X86_ISA_FP_ASM_START__


1250 
asm
 volatile (

1257 : "=m" (*
°0
), "=g" (
°©us
)

1258 : "m" (*
°0
), "m" (
m64
)

1261 
__X86_ISA_FP_ASM_END__


1263 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°0
);

1264 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

1266 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_mu…
, 
x86_dï_°0
, 
x86_dï_mem64
, 0, x86_dep_st0, 0, 0, 0);

1267 
	}
}

1270 
	$x86_iß_fmul_°0_°i_im∂
(
X86C⁄ãxt
 *
˘x
)

1272 
°0
[10], 
°i
[10];

1273 
°©us
;

1275 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

1276 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

1278 
__X86_ISA_FP_ASM_START__


1279 
asm
 volatile (

1286 : "=m" (*
°0
), "=g" (
°©us
)

1287 : "m" (*
°0
), "m" (*
°i
)

1290 
__X86_ISA_FP_ASM_END__


1292 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°0
);

1293 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

1295 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_mu…
, 
x86_dï_°0
, 
x86_dï_°i
, 0, x86_dep_st0, 0, 0, 0);

1296 
	}
}

1299 
	$x86_iß_fmul_°i_°0_im∂
(
X86C⁄ãxt
 *
˘x
)

1301 
°0
[10], 
°i
[10];

1302 
°©us
;

1304 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

1305 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

1307 
__X86_ISA_FP_ASM_START__


1308 
asm
 volatile (

1315 : "=m" (*
°i
), "=g" (
°©us
)

1316 : "m" (*
°i
), "m" (*
°0
)

1319 
__X86_ISA_FP_ASM_END__


1321 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

1322 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

1324 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_mu…
, 
x86_dï_°0
, 
x86_dï_°i
, 0, x86_dep_sti, 0, 0, 0);

1325 
	}
}

1328 
	$x86_iß_fmuÕ_°i_°0_im∂
(
X86C⁄ãxt
 *
˘x
)

1330 
	`x86_iß_fmul_°i_°0_im∂
(
˘x
);

1331 
	`X86C⁄ãxtP›Fpu
(
˘x
, 
NULL
);

1333 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_p›
, 0, 0, 0, 0, 0, 0, 0);

1334 
	}
}

1337 
	$x86_iß_‚°cw_m16_im∂
(
X86C⁄ãxt
 *
˘x
)

1339 
	`x86_iß_f°cw_m16_im∂
(
˘x
);

1340 
	}
}

1343 
	$x86_iß_‚°sw_ax_im∂
(
X86C⁄ãxt
 *
˘x
)

1345 
°©us
 = 
	`X86C⁄ãxtLﬂdFpuSètus
(
˘x
);

1346 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_ax
, 
°©us
);

1348 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 
x86_dï_Â°
, 0, 0, 
x86_dï_óx
, 0, 0, 0);

1349 
	}
}

1352 
	$x86_iß_Â©™_im∂
(
X86C⁄ãxt
 *
˘x
)

1354 
°0
[10], 
°1
[10];

1355 
°©us
;

1357 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

1358 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 1, 
°1
);

1360 
__X86_ISA_FP_ASM_START__


1361 
asm
 volatile (

1368 : "=m" (*
°1
), "=g" (
°©us
)

1369 : "m" (*
°0
), "m" (*
°1
)

1372 
__X86_ISA_FP_ASM_END__


1374 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 1, 
°1
);

1375 
	`X86C⁄ãxtP›Fpu
(
˘x
, 
NULL
);

1376 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

1378 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_©™
, 
x86_dï_°0
, 
x86_dï_°1
, 0, x86_dep_st1, 0, 0, 0);

1379 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_p›
, 0, 0, 0, 0, 0, 0, 0);

1380 
	}
}

1383 
	$x86_iß_Âªm_im∂
(
X86C⁄ãxt
 *
˘x
)

1385 
°0
[10], 
°1
[10];

1386 
°©us
;

1388 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

1389 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 1, 
°1
);

1391 
__X86_ISA_FP_ASM_START__


1392 
asm
 volatile (

1400 : "=m" (*
°0
), "=g" (
°©us
)

1401 : "m" (*
°0
), "m" (*
°1
)

1404 
__X86_ISA_FP_ASM_END__


1406 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°0
);

1407 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

1409 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_div
, 
x86_dï_°0
, 
x86_dï_°1
, 0, x86_dep_st0, 0, 0, 0);

1410 
	}
}

1413 
	$x86_iß_Âªm1_im∂
(
X86C⁄ãxt
 *
˘x
)

1415 
°0
[10], 
°1
[10];

1416 
°©us
;

1418 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

1419 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 1, 
°1
);

1421 
__X86_ISA_FP_ASM_START__


1422 
asm
 volatile (

1430 : "=m" (*
°0
), "=g" (
°©us
)

1431 : "m" (*
°0
), "m" (*
°1
)

1434 
__X86_ISA_FP_ASM_END__


1436 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°0
);

1437 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

1439 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_div
, 
x86_dï_°0
, 
x86_dï_°1
, 0, x86_dep_st0, 0, 0, 0);

1440 
	}
}

1443 
	$x86_iß_Âèn_im∂
(
X86C⁄ãxt
 *
˘x
)

1445 
°0
[10];

1446 
°©us
;

1448 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

1450 
__X86_ISA_FP_ASM_START__


1451 
asm
 volatile (

1458 : "=m" (*
°0
), "=g" (
°©us
)

1459 : "m" (*
°0
)

1462 
__X86_ISA_FP_ASM_END__


1464 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°0
);

1466 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_èn
, 
x86_dï_°0
, 0, 0, x86_dï_°0, 
x86_dï_°1
, 0, 0);

1468 
	`x86_iß_Êd1_im∂
(
˘x
);

1469 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

1470 
	}
}

1473 
	$x86_iß_‰ndöt_im∂
(
X86C⁄ãxt
 *
˘x
)

1475 
°0
[10];

1476 
°©us
;

1478 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

1480 
__X86_ISA_FP_ASM_START__


1481 
asm
 volatile (

1487 : "=m" (*
°0
), "=g" (
°©us
)

1488 : "m" (*
°0
)

1491 
__X86_ISA_FP_ASM_END__


1493 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°0
);

1494 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

1496 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_round
, 
x86_dï_°0
, 0, 0, x86_dep_st0, 0, 0, 0);

1497 
	}
}

1500 
	$x86_iß_fsˇÀ_im∂
(
X86C⁄ãxt
 *
˘x
)

1502 
°0
[10], 
°1
[10];

1503 
°©us
;

1505 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

1506 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 1, 
°1
);

1508 
__X86_ISA_FP_ASM_START__


1509 
asm
 volatile (

1517 : "=m" (*
°0
), "=g" (
°©us
)

1518 : "m" (*
°0
), "m" (*
°1
)

1521 
__X86_ISA_FP_ASM_END__


1523 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°0
);

1524 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

1526 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_exp
, 
x86_dï_°0
, 
x86_dï_°1
, 0, x86_dep_st0, 0, 0, 0);

1527 
	}
}

1530 
	$x86_iß_fsö_im∂
(
X86C⁄ãxt
 *
˘x
)

1532 
°0
[10];

1533 
°©us
;

1535 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

1537 
__X86_ISA_FP_ASM_START__


1538 
asm
 volatile (

1544 : "=m" (*
°0
), "=g" (
°©us
)

1545 : "m" (*
°0
)

1548 
__X86_ISA_FP_ASM_END__


1550 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°0
);

1551 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

1553 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_sö
, 
x86_dï_°0
, 0, 0, x86_dep_st0, 0, 0, 0);

1554 
	}
}

1557 
	$x86_iß_fsöcos_im∂
(
X86C⁄ãxt
 *
˘x
)

1559 
°0
[10], 
vsö
[10], 
vcos
[10];

1560 
°©us
;

1562 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

1564 
__X86_ISA_FP_ASM_START__


1565 
asm
 volatile (

1574 : "=m" (*
vsö
), "=m" (*
vcos
), "=g" (
°©us
)

1575 : "m" (*
°0
)

1578 
__X86_ISA_FP_ASM_END__


1580 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
vsö
);

1581 
	`X86C⁄ãxtPushFpu
(
˘x
, 
vcos
);

1582 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

1584 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_push
, 0, 0, 0, 0, 0, 0, 0);

1585 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_söcos
, 
x86_dï_°1
, 0, 0, 
x86_dï_°0
, x86_dep_st1, 0, 0);

1586 
	}
}

1589 
	$x86_iß_fsqπ_im∂
(
X86C⁄ãxt
 *
˘x
)

1591 
°0
[10];

1592 
°©us
;

1594 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

1596 
__X86_ISA_FP_ASM_START__


1597 
asm
 volatile (

1603 : "=m" (*
°0
), "=g" (
°©us
)

1604 : "m" (*
°0
)

1607 
__X86_ISA_FP_ASM_END__


1609 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°0
);

1610 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

1612 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_sqπ
, 
x86_dï_°0
, 0, 0, x86_dep_st0, 0, 0, 0);

1613 
	}
}

1616 
	$x86_iß_f°_m32_im∂
(
X86C⁄ãxt
 *
˘x
)

1618 
°0
[10];

1619 
m32
;

1621 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

1622 
m32
 = 
	`X86C⁄ãxtExãndedToFlﬂt
(
°0
);

1623 
	`X86C⁄ãxtSt‹eFlﬂt
(
˘x
, 
m32
);

1625 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 
x86_dï_°0
, 0, 0, 
x86_dï_mem32
, 0, 0, 0);

1626 
	}
}

1629 
	$x86_iß_f°_m64_im∂
(
X86C⁄ãxt
 *
˘x
)

1631 
°0
[10];

1632 
m64
;

1634 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

1635 
m64
 = 
	`X86C⁄ãxtExãndedToDoubÀ
(
°0
);

1636 
	`X86C⁄ãxtSt‹eDoubÀ
(
˘x
, 
m64
);

1638 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 
x86_dï_°0
, 0, 0, 
x86_dï_mem64
, 0, 0, 0);

1639 
	}
}

1642 
	$x86_iß_f°_°i_im∂
(
X86C⁄ãxt
 *
˘x
)

1644 
°0
[10];

1646 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

1647 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°0
);

1649 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 
x86_dï_°0
, 0, 0, 
x86_dï_°i
, 0, 0, 0);

1650 
	}
}

1653 
	$x86_iß_f°p_m32_im∂
(
X86C⁄ãxt
 *
˘x
)

1655 
	`x86_iß_f°_m32_im∂
(
˘x
);

1656 
	`X86C⁄ãxtP›Fpu
(
˘x
, 
NULL
);

1658 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_p›
, 0, 0, 0, 0, 0, 0, 0);

1659 
	}
}

1662 
	$x86_iß_f°p_m64_im∂
(
X86C⁄ãxt
 *
˘x
)

1664 
	`x86_iß_f°_m64_im∂
(
˘x
);

1665 
	`X86C⁄ãxtP›Fpu
(
˘x
, 
NULL
);

1667 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_p›
, 0, 0, 0, 0, 0, 0, 0);

1668 
	}
}

1671 
	$x86_iß_f°p_m80_im∂
(
X86C⁄ãxt
 *
˘x
)

1673 
m80
[10];

1675 
	`X86C⁄ãxtP›Fpu
(
˘x
, 
m80
);

1676 
	`X86C⁄ãxtSt‹eExãnded
(
˘x
, 
m80
);

1678 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 
x86_dï_°0
, 0, 0, 
x86_dï_mem80
, 0, 0, 0);

1679 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_p›
, 0, 0, 0, 0, 0, 0, 0);

1680 
	}
}

1683 
	$x86_iß_f°p_°i_im∂
(
X86C⁄ãxt
 *
˘x
)

1685 
	`x86_iß_f°_°i_im∂
(
˘x
);

1686 
	`X86C⁄ãxtP›Fpu
(
˘x
, 
NULL
);

1688 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_p›
, 0, 0, 0, 0, 0, 0, 0);

1689 
	}
}

1692 
	$x86_iß_f°sw_ax_im∂
(
X86C⁄ãxt
 *
˘x
)

1694 
°©us
 = 
	`X86C⁄ãxtLﬂdFpuSètus
(
˘x
);

1695 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_ax
, 
°©us
);

1697 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 
x86_dï_Â°
, 0, 0, 
x86_dï_óx
, 0, 0, 0);

1698 
	}
}

1701 
	$x86_iß_fsub_m32_im∂
(
X86C⁄ãxt
 *
˘x
)

1703 
°0
[10];

1704 
m32
;

1705 
°©us
;

1707 
m32
 = 
	`X86C⁄ãxtLﬂdFlﬂt
(
˘x
);

1708 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

1710 
__X86_ISA_FP_ASM_START__


1711 
asm
 volatile (

1718 : "=m" (*
°0
), "=g" (
°©us
)

1719 : "m" (*
°0
), "m" (
m32
)

1722 
__X86_ISA_FP_ASM_END__


1724 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°0
);

1725 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

1727 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_sub
, 
x86_dï_°0
, 
x86_dï_mem32
, 0, x86_dep_st0, 0, 0, 0);

1728 
	}
}

1731 
	$x86_iß_fsub_m64_im∂
(
X86C⁄ãxt
 *
˘x
)

1733 
°0
[10];

1734 
m64
;

1735 
°©us
;

1737 
m64
 = 
	`X86C⁄ãxtLﬂdDoubÀ
(
˘x
);

1738 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

1740 
__X86_ISA_FP_ASM_START__


1741 
asm
 volatile (

1748 : "=m" (*
°0
), "=g" (
°©us
)

1749 : "m" (*
°0
), "m" (
m64
)

1752 
__X86_ISA_FP_ASM_END__


1754 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°0
);

1755 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

1757 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_sub
, 
x86_dï_°0
, 
x86_dï_mem64
, 0, x86_dep_st0, 0, 0, 0);

1758 
	}
}

1761 
	$x86_iß_fsub_°0_°i_im∂
(
X86C⁄ãxt
 *
˘x
)

1763 
°0
[10], 
°i
[10];

1764 
°©us
;

1766 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

1767 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

1769 
__X86_ISA_FP_ASM_START__


1770 
asm
 volatile (

1777 : "=m" (*
°0
), "=g" (
°©us
)

1778 : "m" (*
°0
), "m" (*
°i
)

1781 
__X86_ISA_FP_ASM_END__


1783 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°0
);

1784 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

1786 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_sub
, 
x86_dï_°0
, 
x86_dï_°i
, 0, x86_dep_st0, 0, 0, 0);

1787 
	}
}

1790 
	$x86_iß_fsub_°i_°0_im∂
(
X86C⁄ãxt
 *
˘x
)

1792 
°0
[10], 
°i
[10];

1793 
°©us
;

1795 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

1796 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

1798 
__X86_ISA_FP_ASM_START__


1799 
asm
 volatile (

1806 : "=m" (*
°i
), "=g" (
°©us
)

1807 : "m" (*
°i
), "m" (*
°0
)

1810 
__X86_ISA_FP_ASM_END__


1812 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

1813 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

1815 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_sub
, 
x86_dï_°0
, 
x86_dï_°i
, 0, x86_dep_sti, 0, 0, 0);

1816 
	}
}

1819 
	$x86_iß_fsubp_°i_°0_im∂
(
X86C⁄ãxt
 *
˘x
)

1821 
	`x86_iß_fsub_°i_°0_im∂
(
˘x
);

1822 
	`X86C⁄ãxtP›Fpu
(
˘x
, 
NULL
);

1824 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_p›
, 0, 0, 0, 0, 0, 0, 0);

1825 
	}
}

1828 
	$x86_iß_fsubr_m32_im∂
(
X86C⁄ãxt
 *
˘x
)

1830 
°0
[10];

1831 
m32
;

1832 
°©us
;

1834 
m32
 = 
	`X86C⁄ãxtLﬂdFlﬂt
(
˘x
);

1835 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

1837 
__X86_ISA_FP_ASM_START__


1838 
asm
 volatile (

1845 : "=m" (*
°0
), "=g" (
°©us
)

1846 : "m" (
m32
), "m" (*
°0
)

1849 
__X86_ISA_FP_ASM_END__


1851 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°0
);

1852 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

1854 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_sub
, 
x86_dï_°0
, 
x86_dï_mem32
, 0, x86_dep_st0, 0, 0, 0);

1855 
	}
}

1858 
	$x86_iß_fsubr_m64_im∂
(
X86C⁄ãxt
 *
˘x
)

1860 
°0
[10];

1861 
m64
;

1862 
°©us
;

1864 
m64
 = 
	`X86C⁄ãxtLﬂdDoubÀ
(
˘x
);

1865 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

1867 
__X86_ISA_FP_ASM_START__


1868 
asm
 volatile (

1875 : "=m" (*
°0
), "=g" (
°©us
)

1876 : "m" (
m64
), "m" (*
°0
)

1879 
__X86_ISA_FP_ASM_END__


1881 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°0
);

1882 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

1884 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_sub
, 
x86_dï_°0
, 
x86_dï_mem64
, 0, x86_dep_st0, 0, 0, 0);

1885 
	}
}

1888 
	$x86_iß_fsubr_°0_°i_im∂
(
X86C⁄ãxt
 *
˘x
)

1890 
°0
[10], 
°i
[10];

1891 
°©us
;

1893 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

1894 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

1896 
__X86_ISA_FP_ASM_START__


1897 
asm
 volatile (

1904 : "=m" (*
°0
), "=g" (
°©us
)

1905 : "m" (*
°i
), "m" (*
°0
)

1908 
__X86_ISA_FP_ASM_END__


1910 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°0
);

1911 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

1913 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_sub
, 
x86_dï_°0
, 
x86_dï_°i
, 0, x86_dep_st0, 0, 0, 0);

1914 
	}
}

1917 
	$x86_iß_fsubr_°i_°0_im∂
(
X86C⁄ãxt
 *
˘x
)

1919 
°0
[10], 
°i
[10];

1920 
°©us
;

1922 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

1923 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

1925 
__X86_ISA_FP_ASM_START__


1926 
asm
 volatile (

1933 : "=m" (*
°i
), "=g" (
°©us
)

1934 : "m" (*
°0
), "m" (*
°i
)

1937 
__X86_ISA_FP_ASM_END__


1939 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

1940 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

1942 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_sub
, 
x86_dï_°0
, 
x86_dï_°i
, 0, x86_dep_sti, 0, 0, 0);

1943 
	}
}

1946 
	$x86_iß_fsubΩ_°i_°0_im∂
(
X86C⁄ãxt
 *
˘x
)

1948 
	`x86_iß_fsubr_°i_°0_im∂
(
˘x
);

1949 
	`X86C⁄ãxtP›Fpu
(
˘x
, 
NULL
);

1951 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_p›
, 0, 0, 0, 0, 0, 0, 0);

1952 
	}
}

1955 
	$x86_iß_f°cw_m16_im∂
(
X86C⁄ãxt
 *
˘x
)

1957 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1958 
vÆue
 = 
ªgs
->
Âu_˘æ
;

1961 
	`X86C⁄ãxtMemWrôe
(
˘x
, 
	`X86C⁄ãxtEf„˘iveAddªss
(˘x), 2, &
vÆue
);

1964 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 
x86_dï_Âcw
, 0, 0, 
x86_dï_mem32
, 0, 0, 0);

1965 
	}
}

1968 
	$x86_iß_·°_im∂
(
X86C⁄ãxt
 *
˘x
)

1970 
°0
[10];

1971 
°©us
;

1973 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

1975 
__X86_ISA_FP_ASM_START__


1976 
asm
 volatile (

1982 : "=g" (
°©us
)

1983 : "m" (*
°0
)

1986 
__X86_ISA_FP_ASM_END__


1988 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

1990 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_comp
, 
x86_dï_°0
, 0, 0, 
x86_dï_Â°
, 0, 0, 0);

1991 
	}
}

1994 
	$x86_iß_fucom_°i_im∂
(
X86C⁄ãxt
 *
˘x
)

1996 
°0
[10], 
°i
[10];

1997 
°©us
;

1999 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

2000 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

2002 
__X86_ISA_FP_ASM_START__


2003 
asm
 volatile (

2009 : "=g" (
°©us
)

2010 : "m" (*
°0
), "m" (*
°i
)

2013 
__X86_ISA_FP_ASM_END__


2015 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

2017 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_comp
, 
x86_dï_°0
, 
x86_dï_°i
, 0, 
x86_dï_Â°
, 0, 0, 0);

2018 
	}
}

2021 
	$x86_iß_fucomp_°i_im∂
(
X86C⁄ãxt
 *
˘x
)

2023 
	`x86_iß_fucom_°i_im∂
(
˘x
);

2024 
	`X86C⁄ãxtP›Fpu
(
˘x
, 
NULL
);

2026 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_p›
, 0, 0, 0, 0, 0, 0, 0);

2027 
	}
}

2030 
	$x86_iß_fucomµ_im∂
(
X86C⁄ãxt
 *
˘x
)

2032 
°0
[10], 
°1
[10];

2033 
°©us
;

2035 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

2036 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 1, 
°1
);

2038 
__X86_ISA_FP_ASM_START__


2039 
asm
 volatile (

2045 : "=g" (
°©us
)

2046 : "m" (*
°0
), "m" (*
°1
)

2049 
__X86_ISA_FP_ASM_END__


2051 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

2052 
	`X86C⁄ãxtP›Fpu
(
˘x
, 
NULL
);

2053 
	`X86C⁄ãxtP›Fpu
(
˘x
, 
NULL
);

2055 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_comp
, 
x86_dï_°0
, 
x86_dï_°1
, 0, 
x86_dï_Â°
, 0, 0, 0);

2056 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_p›
, 0, 0, 0, 0, 0, 0, 0);

2057 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_p›
, 0, 0, 0, 0, 0, 0, 0);

2058 
	}
}

2061 
	$x86_iß_fxam_im∂
(
X86C⁄ãxt
 *
˘x
)

2063 
°0
[10];

2064 
°©us
;

2066 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

2068 
__X86_ISA_FP_ASM_START__


2069 
asm
 volatile (

2075 : "=g" (
°©us
)

2076 : "m" (*
°0
)

2079 
__X86_ISA_FP_ASM_END__


2081 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

2083 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_comp
, 
x86_dï_°0
, 0, 0, 
x86_dï_Â°
, 0, 0, 0);

2084 
	}
}

2087 
	$x86_iß_fxch_°i_im∂
(
X86C⁄ãxt
 *
˘x
)

2089 
°0
[10], 
°i
[10];

2090 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

2091 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°i
);

2092 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 0, 
°i
);

2093 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, ctx->
ö°
.
›ödex
, 
°0
);

2095 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_move
, 
x86_dï_°0
, 
x86_dï_°i
, 0, x86_dep_st0, x86_dep_sti, 0, 0);

2096 
	}
}

2099 
	$x86_iß_fyl2x_im∂
(
X86C⁄ãxt
 *
˘x
)

2101 
°0
[10], 
°1
[10];

2102 
°©us
;

2104 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

2105 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 1, 
°1
);

2107 
__X86_ISA_FP_ASM_START__


2108 
asm
 volatile (

2115 : "=m" (*
°1
), "=g" (
°©us
)

2116 : "m" (*
°0
), "m" (*
°1
)

2119 
__X86_ISA_FP_ASM_END__


2121 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 1, 
°1
);

2122 
	`X86C⁄ãxtP›Fpu
(
˘x
, 
NULL
);

2123 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

2125 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_log
, 
x86_dï_°0
, 
x86_dï_°1
, 0, x86_dep_st1, 0, 0, 0);

2126 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_p›
, 0, 0, 0, 0, 0, 0, 0);

2127 
	}
}

2130 
	$x86_iß_fyl2xp1_im∂
(
X86C⁄ãxt
 *
˘x
)

2132 
°0
[10], 
°1
[10];

2133 
°©us
;

2135 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 0, 
°0
);

2136 
	`X86C⁄ãxtLﬂdFpu
(
˘x
, 1, 
°1
);

2138 
__X86_ISA_FP_ASM_START__


2139 
asm
 volatile (

2146 : "=m" (*
°1
), "=g" (
°©us
)

2147 : "m" (*
°0
), "m" (*
°1
)

2150 
__X86_ISA_FP_ASM_END__


2152 
	`X86C⁄ãxtSt‹eFpu
(
˘x
, 1, 
°1
);

2153 
	`X86C⁄ãxtP›Fpu
(
˘x
, 
NULL
);

2154 
	`X86C⁄ãxtSt‹eFpuCode
(
˘x
, 
°©us
);

2156 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_log
, 
x86_dï_°0
, 
x86_dï_°1
, 0, x86_dep_st1, 0, 0, 0);

2157 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_Â_p›
, 0, 0, 0, 0, 0, 0, 0);

2158 
	}
}

	@emu/machine-rot.c

21 
	~"c⁄ãxt.h
"

22 
	~"iß.h
"

23 
	~"machöe.h
"

24 
	~"ªgs.h
"

25 
	~"uö°.h
"

29 
	#mem_ac˚ss
 
__COMPILATION_ERROR__


	)

30 
	#mem_ªad
 
__COMPILATION_ERROR__


	)

31 
	#mem_wrôe
 
__COMPILATION_ERROR__


	)

32 
	#mem_zîo
 
__COMPILATION_ERROR__


	)

33 
	#mem_ªad_°rög
 
__COMPILATION_ERROR__


	)

34 
	#mem_wrôe_°rög
 
__COMPILATION_ERROR__


	)

35 
	#mem_gë_buf„r
 
__COMPILATION_ERROR__


	)

36 
	#Áèl
 
__COMPILATION_ERROR__


	)

37 
	#∑nic
 
__COMPILATION_ERROR__


	)

38 
	#w¨nög
 
__COMPILATION_ERROR__


	)

39 #ifde‡
as£π


40 #unde‡
as£π


42 
	#as£π
 
__COMPILATION_ERROR__


	)

45 
	#›_xxx_rm8_1_im∂
(
xxx
, 
idï
) \

46 
x86_iß_
##
xxx
##
	`_rm8_1_im∂
(
X86C⁄ãxt
 *
˘x
) \

48 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs; \

49 
rm8
 = 
	`X86C⁄ãxtLﬂdRm8
(
˘x
); \

50 
cou¡
 = 1; \

51 
Êags
 = 
ªgs
->
eÊags
; \

52 
__X86_ISA_ASM_START__
 \

53 
asm
 volatile ( \

62 : "=g" (
Êags
), "=m" (
rm8
) \

63 : "m" (
rm8
), "m" (
cou¡
), "g" (
Êags
) \

66 
__X86_ISA_ASM_END__
 \

67 
	`X86C⁄ãxtSt‹eRm8
(
˘x
, 
rm8
); \

68 
ªgs
->
eÊags
 = 
Êags
; \

69 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_shi·
, 
idï
, 
x86_dï_rm8
, 0, x86_dï_rm8, 
x86_dï_cf
, 
x86_dï_of
, 0); \

70 }

	)

73 
	#›_xxx_rm8_˛_im∂
(
xxx
, 
idï
) \

74 
x86_iß_
##
xxx
##
	`_rm8_˛_im∂
(
X86C⁄ãxt
 *
˘x
) \

76 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs; \

77 
rm8
 = 
	`X86C⁄ãxtLﬂdRm8
(
˘x
); \

78 
cou¡
 = 
	`X86C⁄ãxtLﬂdReg
(
˘x
, 
x86_ö°_ªg_˛
); \

79 
Êags
 = 
ªgs
->
eÊags
; \

80 
__X86_ISA_ASM_START__
 \

81 
asm
 volatile ( \

90 : "=g" (
Êags
), "=m" (
rm8
) \

91 : "m" (
rm8
), "m" (
cou¡
), "g" (
Êags
) \

94 
__X86_ISA_ASM_END__
 \

95 
	`X86C⁄ãxtSt‹eRm8
(
˘x
, 
rm8
); \

96 
ªgs
->
eÊags
 = 
Êags
; \

97 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_shi·
, 
idï
, 
x86_dï_rm8
, 
x86_dï_ecx
, x86_dï_rm8, 
x86_dï_cf
, 
x86_dï_of
, 0); \

98 }

	)

101 
	#›_xxx_rm8_imm8_im∂
(
xxx
, 
idï
) \

102 
x86_iß_
##
xxx
##
	`_rm8_imm8_im∂
(
X86C⁄ãxt
 *
˘x
) \

104 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs; \

105 
rm8
 = 
	`X86C⁄ãxtLﬂdRm8
(
˘x
); \

106 
cou¡
 = 
˘x
->
ö°
.
imm
.
b
; \

107 
Êags
 = 
ªgs
->
eÊags
; \

108 
__X86_ISA_ASM_START__
 \

109 
asm
 volatile ( \

118 : "=g" (
Êags
), "=m" (
rm8
) \

119 : "m" (
rm8
), "m" (
cou¡
), "g" (
Êags
) \

122 
__X86_ISA_ASM_END__
 \

123 
	`X86C⁄ãxtSt‹eRm8
(
˘x
, 
rm8
); \

124 
ªgs
->
eÊags
 = 
Êags
; \

125 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_shi·
, 
idï
, 
x86_dï_rm8
, 0, x86_dï_rm8, 
x86_dï_cf
, 
x86_dï_of
, 0); \

126 }

	)

129 
	#›_xxx_rm16_1_im∂
(
xxx
, 
idï
) \

130 
x86_iß_
##
xxx
##
	`_rm16_1_im∂
(
X86C⁄ãxt
 *
˘x
) \

132 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs; \

133 
rm16
 = 
	`X86C⁄ãxtLﬂdRm16
(
˘x
); \

134 
cou¡
 = 1; \

135 
Êags
 = 
ªgs
->
eÊags
; \

136 
__X86_ISA_ASM_START__
 \

137 
asm
 volatile ( \

146 : "=g" (
Êags
), "=m" (
rm16
) \

147 : "m" (
rm16
), "m" (
cou¡
), "g" (
Êags
) \

150 
__X86_ISA_ASM_END__
 \

151 
	`X86C⁄ãxtSt‹eRm16
(
˘x
, 
rm16
); \

152 
ªgs
->
eÊags
 = 
Êags
; \

153 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_shi·
, 
idï
, 
x86_dï_rm16
, 0, x86_dï_rm16, 
x86_dï_cf
, 
x86_dï_of
, 0); \

154 }

	)

157 
	#›_xxx_rm16_˛_im∂
(
xxx
, 
idï
) \

158 
x86_iß_
##
xxx
##
	`_rm16_˛_im∂
(
X86C⁄ãxt
 *
˘x
) \

160 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs; \

161 
rm16
 = 
	`X86C⁄ãxtLﬂdRm16
(
˘x
); \

162 
cou¡
 = 
	`X86C⁄ãxtLﬂdReg
(
˘x
, 
x86_ö°_ªg_˛
); \

163 
Êags
 = 
ªgs
->
eÊags
; \

164 
__X86_ISA_ASM_START__
 \

165 
asm
 volatile ( \

174 : "=g" (
Êags
), "=m" (
rm16
) \

175 : "m" (
rm16
), "m" (
cou¡
), "g" (
Êags
) \

178 
__X86_ISA_ASM_END__
 \

179 
	`X86C⁄ãxtSt‹eRm16
(
˘x
, 
rm16
); \

180 
ªgs
->
eÊags
 = 
Êags
; \

181 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_shi·
, 
idï
, 
x86_dï_rm16
, 
x86_dï_ecx
, x86_dï_rm16, 
x86_dï_cf
, 
x86_dï_of
, 0); \

182 }

	)

185 
	#›_xxx_rm16_imm8_im∂
(
xxx
, 
idï
) \

186 
x86_iß_
##
xxx
##
	`_rm16_imm8_im∂
(
X86C⁄ãxt
 *
˘x
) \

188 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs; \

189 
rm16
 = 
	`X86C⁄ãxtLﬂdRm16
(
˘x
); \

190 
cou¡
 = 
˘x
->
ö°
.
imm
.
b
; \

191 
Êags
 = 
ªgs
->
eÊags
; \

192 
__X86_ISA_ASM_START__
 \

193 
asm
 volatile ( \

202 : "=g" (
Êags
), "=m" (
rm16
) \

203 : "m" (
rm16
), "m" (
cou¡
), "g" (
Êags
) \

206 
__X86_ISA_ASM_END__
 \

207 
	`X86C⁄ãxtSt‹eRm16
(
˘x
, 
rm16
); \

208 
ªgs
->
eÊags
 = 
Êags
; \

209 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_shi·
, 
idï
, 
x86_dï_rm16
, 0, x86_dï_rm16, 
x86_dï_cf
, 
x86_dï_of
, 0); \

210 }

	)

213 
	#›_xxx_rm32_1_im∂
(
xxx
, 
idï
) \

214 
x86_iß_
##
xxx
##
	`_rm32_1_im∂
(
X86C⁄ãxt
 *
˘x
) \

216 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs; \

217 
rm32
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
); \

218 
cou¡
 = 1; \

219 
Êags
 = 
ªgs
->
eÊags
; \

220 
__X86_ISA_ASM_START__
 \

221 
asm
 volatile ( \

230 : "=g" (
Êags
), "=m" (
rm32
) \

231 : "m" (
rm32
), "m" (
cou¡
), "g" (
Êags
) \

234 
__X86_ISA_ASM_END__
 \

235 
	`X86C⁄ãxtSt‹eRm32
(
˘x
, 
rm32
); \

236 
ªgs
->
eÊags
 = 
Êags
; \

237 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_shi·
, 
idï
, 
x86_dï_rm32
, 0, x86_dï_rm32, 
x86_dï_cf
, 
x86_dï_of
, 0); \

238 }

	)

241 
	#›_xxx_rm32_˛_im∂
(
xxx
, 
idï
) \

242 
x86_iß_
##
xxx
##
	`_rm32_˛_im∂
(
X86C⁄ãxt
 *
˘x
) \

244 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs; \

245 
rm32
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
); \

246 
cou¡
 = 
	`X86C⁄ãxtLﬂdReg
(
˘x
, 
x86_ö°_ªg_˛
); \

247 
Êags
 = 
ªgs
->
eÊags
; \

248 
__X86_ISA_ASM_START__
 \

249 
asm
 volatile ( \

258 : "=g" (
Êags
), "=m" (
rm32
) \

259 : "m" (
rm32
), "m" (
cou¡
), "g" (
Êags
) \

262 
__X86_ISA_ASM_END__
 \

263 
	`X86C⁄ãxtSt‹eRm32
(
˘x
, 
rm32
); \

264 
ªgs
->
eÊags
 = 
Êags
; \

265 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_shi·
, 
idï
, 
x86_dï_rm32
, 
x86_dï_ecx
, x86_dï_rm32, 
x86_dï_cf
, 
x86_dï_of
, 0); \

266 }

	)

269 
	#›_xxx_rm32_imm8_im∂
(
xxx
, 
idï
) \

270 
x86_iß_
##
xxx
##
	`_rm32_imm8_im∂
(
X86C⁄ãxt
 *
˘x
) \

272 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs; \

273 
rm32
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
); \

274 
cou¡
 = 
˘x
->
ö°
.
imm
.
b
; \

275 
Êags
 = 
ªgs
->
eÊags
; \

276 
__X86_ISA_ASM_START__
 \

277 
asm
 volatile ( \

286 : "=g" (
Êags
), "=m" (
rm32
) \

287 : "m" (
rm32
), "m" (
cou¡
), "g" (
Êags
) \

290 
__X86_ISA_ASM_END__
 \

291 
	`X86C⁄ãxtSt‹eRm32
(
˘x
, 
rm32
); \

292 
ªgs
->
eÊags
 = 
Êags
; \

293 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_shi·
, 
idï
, 
x86_dï_rm32
, 0, x86_dï_rm32, 
x86_dï_cf
, 
x86_dï_of
, 0); \

294 }

	)

299 
	#›_xxx_Æl
(
xxx
, 
idï
) \

300 
	`›_xxx_rm8_1_im∂
(
xxx
, 
idï
) \

301 
	`›_xxx_rm8_˛_im∂
(
xxx
, 
idï
) \

302 
	`›_xxx_rm8_imm8_im∂
(
xxx
, 
idï
) \

303 
	`›_xxx_rm16_1_im∂
(
xxx
, 
idï
) \

304 
	`›_xxx_rm16_˛_im∂
(
xxx
, 
idï
) \

305 
	`›_xxx_rm16_imm8_im∂
(
xxx
, 
idï
) \

306 
	`›_xxx_rm32_1_im∂
(
xxx
, 
idï
) \

307 
	`›_xxx_rm32_˛_im∂
(
xxx
, 
idï
) \

308 
	`›_xxx_rm32_imm8_im∂
(
xxx
, 
idï
)

	)

312 
	$›_xxx_Æl
(
r˛
, 
x86_dï_cf
)

313 
	$›_xxx_Æl
(
r¸
, 
x86_dï_cf
)

314 
	$›_xxx_Æl
(
rﬁ
, 0)

315 
	$›_xxx_Æl
(
r‹
, 0)

317 
	$›_xxx_Æl
(
ßr
, 0)

318 
	$›_xxx_Æl
(
shl
, 0)

319 
	`›_xxx_Æl
(
shr
, 0)

	@emu/machine-sse.c

20 
	~<°rög.h
>

23 
	~"c⁄ãxt.h
"

24 
	~"iß.h
"

25 
	~"machöe.h
"

26 
	~"ªgs.h
"

27 
	~"uö°.h
"

31 
	#mem_ac˚ss
 
__COMPILATION_ERROR__


	)

32 
	#mem_ªad
 
__COMPILATION_ERROR__


	)

33 
	#mem_wrôe
 
__COMPILATION_ERROR__


	)

34 
	#mem_zîo
 
__COMPILATION_ERROR__


	)

35 
	#mem_ªad_°rög
 
__COMPILATION_ERROR__


	)

36 
	#mem_wrôe_°rög
 
__COMPILATION_ERROR__


	)

37 
	#mem_gë_buf„r
 
__COMPILATION_ERROR__


	)

38 
	#Áèl
 
__COMPILATION_ERROR__


	)

39 
	#∑nic
 
__COMPILATION_ERROR__


	)

40 
	#w¨nög
 
__COMPILATION_ERROR__


	)

41 #ifde‡
as£π


42 #unde‡
as£π


44 
	#as£π
 
__COMPILATION_ERROR__


	)

47 
	$x86_iß_addps_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

49 
x86_ö°_xmm_ªg_t
 
de°
;

50 
x86_ö°_xmm_ªg_t
 
§c
;

52 
•ec_mode
;

54 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

55 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

59 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

60 i‡(!
•ec_mode
)

62 
__X86_ISA_ASM_START__


63 
asm
 volatile (

68 : "=m" (
de°
)

69 : "m" (
§c
)

72 
__X86_ISA_ASM_END__


75 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

77 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_add
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

78 
	}
}

81 
	$x86_iß_addss_xmm_xmmm32_im∂
(
X86C⁄ãxt
 *
˘x
)

83 
x86_ö°_xmm_ªg_t
 
de°
;

84 
x86_ö°_xmm_ªg_t
 
§c
;

86 
•ec_mode
;

88 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

89 
	`X86C⁄ãxtLﬂdXMMM32
(
˘x
, 
§c
.
as_uch¨
);

93 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

94 i‡(!
•ec_mode
)

96 
__X86_ISA_ASM_START__


97 
asm
 volatile (

102 : "=m" (
de°
)

103 : "m" (
§c
)

106 
__X86_ISA_ASM_END__


109 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

111 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_add
, 
x86_dï_xmmm32
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

112 
	}
}

115 
	$x86_iß_™dps_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

117 
x86_ö°_xmm_ªg_t
 
de°
;

118 
x86_ö°_xmm_ªg_t
 
§c
;

120 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

121 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

123 
__X86_ISA_ASM_START__


124 
asm
 volatile (

129 : "=m" (
de°
)

130 : "m" (
§c
)

133 
__X86_ISA_ASM_END__


135 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

137 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_™d
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

138 
	}
}

141 
	#X86_ISA_CMPP_ASM
(
__ö°
) \

142 
__X86_ISA_ASM_START__
 \

143 
asm
 volatile ( \

146 
__ö°
 " %%xmm0, %%xmm1\n\t" \

148 : "=m" (
de°
) \

149 : "m" (
§c
) \

152 
__X86_ISA_ASM_END__


	)

154 
	$x86_iß_cmµd_xmm_xmmm128_imm8_im∂
(
X86C⁄ãxt
 *
˘x
)

156 
x86_ö°_xmm_ªg_t
 
de°
;

157 
x86_ö°_xmm_ªg_t
 
§c
;

159 
•ec_mode
;

160 
imm8
 = 
˘x
->
ö°
.
imm
.
b
;

162 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

163 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

167 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

168 i‡(!
•ec_mode
)

170 
imm8
)

172 0: 
	`X86_ISA_CMPP_ASM
("cmpeqpd"); ;

173 1: 
	`X86_ISA_CMPP_ASM
("cmpltpd"); ;

174 2: 
	`X86_ISA_CMPP_ASM
("cmplepd"); ;

175 3: 
	`X86_ISA_CMPP_ASM
("cmpunordpd"); ;

176 4: 
	`X86_ISA_CMPP_ASM
("cmpneqpd"); ;

177 5: 
	`X86_ISA_CMPP_ASM
("cmpnltpd"); ;

178 6: 
	`X86_ISA_CMPP_ASM
("cmpnlepd"); ;

179 7: 
	`X86_ISA_CMPP_ASM
("cmpordpd"); ;

181 
	`X86C⁄ãxtEº‹
(
˘x
, "%s: invalid value for 'imm8'",

182 
__FUNCTION__
);

186 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

187 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_comp
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

188 
	}
}

191 
	$x86_iß_cmµs_xmm_xmmm128_imm8_im∂
(
X86C⁄ãxt
 *
˘x
)

193 
x86_ö°_xmm_ªg_t
 
de°
;

194 
x86_ö°_xmm_ªg_t
 
§c
;

196 
•ec_mode
;

197 
imm8
 = 
˘x
->
ö°
.
imm
.
b
;

199 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

200 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

204 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

205 i‡(!
•ec_mode
)

207 
imm8
)

209 0: 
	`X86_ISA_CMPP_ASM
("cmpeqps"); ;

210 1: 
	`X86_ISA_CMPP_ASM
("cmpltps"); ;

211 2: 
	`X86_ISA_CMPP_ASM
("cmpleps"); ;

212 3: 
	`X86_ISA_CMPP_ASM
("cmpunordps"); ;

213 4: 
	`X86_ISA_CMPP_ASM
("cmpneqps"); ;

214 5: 
	`X86_ISA_CMPP_ASM
("cmpnltps"); ;

215 6: 
	`X86_ISA_CMPP_ASM
("cmpnleps"); ;

216 7: 
	`X86_ISA_CMPP_ASM
("cmpordps"); ;

218 
	`X86C⁄ãxtEº‹
(
˘x
, "%s: invalid value for 'imm8'",

219 
__FUNCTION__
);

223 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

224 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_comp
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

225 
	}
}

228 
	$x86_iß_cvtsi2ss_xmm_rm32_im∂
(
X86C⁄ãxt
 *
˘x
)

230 
x86_ö°_xmm_ªg_t
 
de°
;

231 
§c
;

233 
•ec_mode
;

235 
§c
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
);

236 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

240 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

241 i‡(!
•ec_mode
)

243 
__X86_ISA_ASM_START__


244 
asm
 volatile (

249 : "=m" (
de°
)

250 : "m" (
§c
)

253 
__X86_ISA_ASM_END__


256 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

258 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_c⁄v
, 
x86_dï_xmm
, 
x86_dï_rm32
, 0, x86_dep_xmm, 0, 0, 0);

259 
	}
}

262 
	$x86_iß_cvâss2si_r32_xmmm32_im∂
(
X86C⁄ãxt
 *
˘x
)

264 
x86_ö°_xmm_ªg_t
 
xmm
;

265 
r32
;

267 
•ec_mode
;

269 
	`X86C⁄ãxtLﬂdXMMM32
(
˘x
, 
xmm
.
as_uch¨
);

273 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

274 i‡(!
•ec_mode
)

276 
__X86_ISA_ASM_START__


277 
asm
 volatile (

280 : "=m" (
r32
)

281 : "m" (
xmm
)

284 
__X86_ISA_ASM_END__


287 
	`X86C⁄ãxtSt‹eR32
(
˘x
, 
r32
);

289 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_c⁄v
, 
x86_dï_xmmm32
, 0, 0, 
x86_dï_r32
, 0, 0, 0);

290 
	}
}

293 
	$x86_iß_divps_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

295 
x86_ö°_xmm_ªg_t
 
de°
;

296 
x86_ö°_xmm_ªg_t
 
§c
;

298 
•ec_mode
;

300 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

301 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

305 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

306 i‡(!
•ec_mode
)

308 
__X86_ISA_ASM_START__


309 
asm
 volatile (

314 : "=m" (
de°
)

315 : "m" (
§c
)

318 
__X86_ISA_ASM_END__


321 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

323 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_div
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

324 
	}
}

327 
	$x86_iß_divss_xmm_xmmm32_im∂
(
X86C⁄ãxt
 *
˘x
)

329 
x86_ö°_xmm_ªg_t
 
de°
;

330 
x86_ö°_xmm_ªg_t
 
§c
;

332 
•ec_mode
;

334 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

335 
	`X86C⁄ãxtLﬂdXMMM32
(
˘x
, 
§c
.
as_uch¨
);

339 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

340 i‡(!
•ec_mode
)

342 
__X86_ISA_ASM_START__


343 
asm
 volatile (

348 : "=m" (
de°
)

349 : "m" (
§c
)

352 
__X86_ISA_ASM_END__


355 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

357 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_div
, 
x86_dï_xmmm32
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

358 
	}
}

361 
	$x86_iß_ldmxc§_m32_im∂
(
X86C⁄ãxt
 *
˘x
)

363 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ im∂emíãd", 
__FUNCTION__
);

364 
	}
}

367 
	$x86_iß_maxps_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

369 
x86_ö°_xmm_ªg_t
 
de°
;

370 
x86_ö°_xmm_ªg_t
 
§c
;

372 
•ec_mode
;

374 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

375 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

379 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

380 i‡(!
•ec_mode
)

382 
__X86_ISA_ASM_START__


383 
asm
 volatile (

388 : "=m" (
de°
)

389 : "m" (
§c
)

392 
__X86_ISA_ASM_END__


395 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

397 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_comp
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

398 
	}
}

401 
	$x86_iß_maxss_xmm_xmmm32_im∂
(
X86C⁄ãxt
 *
˘x
)

403 
x86_ö°_xmm_ªg_t
 
de°
;

404 
x86_ö°_xmm_ªg_t
 
§c
;

406 
•ec_mode
;

408 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

409 
	`X86C⁄ãxtLﬂdXMMM32
(
˘x
, 
§c
.
as_uch¨
);

413 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

414 i‡(!
•ec_mode
)

416 
__X86_ISA_ASM_START__


417 
asm
 volatile (

422 : "=m" (
de°
)

423 : "m" (
§c
)

426 
__X86_ISA_ASM_END__


429 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

431 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_comp
, 
x86_dï_xmmm32
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

432 
	}
}

435 
	$x86_iß_möps_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

437 
x86_ö°_xmm_ªg_t
 
de°
;

438 
x86_ö°_xmm_ªg_t
 
§c
;

440 
•ec_mode
;

442 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

443 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

447 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

448 i‡(!
•ec_mode
)

450 
__X86_ISA_ASM_START__


451 
asm
 volatile (

456 : "=m" (
de°
)

457 : "m" (
§c
)

460 
__X86_ISA_ASM_END__


463 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

465 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_comp
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

466 
	}
}

469 
	$x86_iß_möss_xmm_xmmm32_im∂
(
X86C⁄ãxt
 *
˘x
)

471 
x86_ö°_xmm_ªg_t
 
de°
;

472 
x86_ö°_xmm_ªg_t
 
§c
;

474 
•ec_mode
;

476 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

477 
	`X86C⁄ãxtLﬂdXMMM32
(
˘x
, 
§c
.
as_uch¨
);

481 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

482 i‡(!
•ec_mode
)

484 
__X86_ISA_ASM_START__


485 
asm
 volatile (

490 : "=m" (
de°
)

491 : "m" (
§c
)

494 
__X86_ISA_ASM_END__


497 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

499 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_comp
, 
x86_dï_xmmm32
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

500 
	}
}

503 
	$x86_iß_mov≠s_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

505 
x86_ö°_xmm_ªg_t
 
xmm
;

507 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
xmm
.
as_uch¨
);

508 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
xmm
.
as_uch¨
);

510 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_move
, 
x86_dï_xmmm128
, 0, 0, 
x86_dï_xmm
, 0, 0, 0);

511 
	}
}

514 
	$x86_iß_mov≠s_xmmm128_xmm_im∂
(
X86C⁄ãxt
 *
˘x
)

516 
x86_ö°_xmm_ªg_t
 
xmm
;

518 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
xmm
.
as_uch¨
);

519 
	`X86C⁄ãxtSt‹eXMMM128
(
˘x
, 
xmm
.
as_uch¨
);

521 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_move
, 
x86_dï_xmm
, 0, 0, 
x86_dï_xmmm128
, 0, 0, 0);

522 
	}
}

525 
	$x86_iß_movhÕs_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

527 
x86_ö°_xmm_ªg_t
 
xmm1
;

528 
x86_ö°_xmm_ªg_t
 
xmm2
;

530 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
xmm1
.
as_uch¨
);

531 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
xmm2
.
as_uch¨
);

532 
xmm1
.
as_uöt64
[0] = 
xmm2
.as_uint64[1];

533 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
xmm1
.
as_uch¨
);

535 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_move
, 
x86_dï_xmmm128
, 0, 0, 
x86_dï_xmm
, 0, 0, 0);

536 
	}
}

539 
	$x86_iß_movlhps_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

541 
x86_ö°_xmm_ªg_t
 
xmm1
;

542 
x86_ö°_xmm_ªg_t
 
xmm2
;

544 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
xmm1
.
as_uch¨
);

545 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
xmm2
.
as_uch¨
);

546 
xmm1
.
as_uöt64
[1] = 
xmm2
.as_uint64[0];

547 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
xmm1
.
as_uch¨
);

549 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_move
, 
x86_dï_xmmm128
, 0, 0, 
x86_dï_xmm
, 0, 0, 0);

550 
	}
}

553 
	$x86_iß_movss_xmm_xmmm32_im∂
(
X86C⁄ãxt
 *
˘x
)

555 
vÆue
[16];

559 i‡(
˘x
->
ö°
.
modrm_mod
 == 3)

560 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
vÆue
);

562 
	`mem£t
(
vÆue
, 0, 16);

563 
	`X86C⁄ãxtLﬂdXMMM32
(
˘x
, 
vÆue
);

564 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
vÆue
);

566 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_move
, 
x86_dï_xmmm32
, 0, 0, 
x86_dï_xmm
, 0, 0, 0);

567 
	}
}

570 
	$x86_iß_movss_xmmm32_xmm_im∂
(
X86C⁄ãxt
 *
˘x
)

572 
vÆue
[16];

576 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
vÆue
);

577 
	`X86C⁄ãxtSt‹eXMMM32
(
˘x
, 
vÆue
);

579 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_move
, 
x86_dï_xmm
, 0, 0, 
x86_dï_xmmm32
, 0, 0, 0);

580 
	}
}

583 
	$x86_iß_movups_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

585 
x86_ö°_xmm_ªg_t
 
xmm
;

587 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
xmm
.
as_uch¨
);

588 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
xmm
.
as_uch¨
);

590 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_move
, 
x86_dï_xmmm128
, 0, 0, 
x86_dï_xmm
, 0, 0, 0);

591 
	}
}

594 
	$x86_iß_movups_xmmm128_xmm_im∂
(
X86C⁄ãxt
 *
˘x
)

596 
x86_ö°_xmm_ªg_t
 
xmm
;

598 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
xmm
.
as_uch¨
);

599 
	`X86C⁄ãxtSt‹eXMMM128
(
˘x
, 
xmm
.
as_uch¨
);

601 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_move
, 
x86_dï_xmm
, 0, 0, 
x86_dï_xmmm128
, 0, 0, 0);

602 
	}
}

605 
	$x86_iß_muÕs_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

607 
x86_ö°_xmm_ªg_t
 
de°
;

608 
x86_ö°_xmm_ªg_t
 
§c
;

610 
•ec_mode
;

612 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

613 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

617 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

618 i‡(!
•ec_mode
)

620 
__X86_ISA_ASM_START__


621 
asm
 volatile (

626 : "=m" (
de°
)

627 : "m" (
§c
)

630 
__X86_ISA_ASM_END__


633 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

635 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_mu…
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

636 
	}
}

639 
	$x86_iß_mulss_xmm_xmmm32_im∂
(
X86C⁄ãxt
 *
˘x
)

641 
x86_ö°_xmm_ªg_t
 
de°
;

642 
x86_ö°_xmm_ªg_t
 
§c
;

644 
•ec_mode
;

646 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

647 
	`X86C⁄ãxtLﬂdXMMM32
(
˘x
, 
§c
.
as_uch¨
);

651 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

652 i‡(!
•ec_mode
)

654 
__X86_ISA_ASM_START__


655 
asm
 volatile (

660 : "=m" (
de°
)

661 : "m" (
§c
)

664 
__X86_ISA_ASM_END__


667 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

669 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_mu…
, 
x86_dï_xmmm32
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

670 
	}
}

673 
	$x86_iß_‹ps_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

675 
x86_ö°_xmm_ªg_t
 
de°
;

676 
x86_ö°_xmm_ªg_t
 
§c
;

678 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

679 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

681 
__X86_ISA_ASM_START__


682 
asm
 volatile (

687 : "=m" (
de°
)

688 : "m" (
§c
)

691 
__X86_ISA_ASM_END__


693 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

695 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_‹
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

696 
	}
}

699 
	$x86_iß_≥xåw_r32_xmmm128_imm8_im∂
(
X86C⁄ãxt
 *
˘x
)

701 
x86_ö°_xmm_ªg_t
 
xmm
;

702 
imm8
;

703 
ªsu…
;

706 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
xmm
.
as_uch¨
);

709 
imm8
 = 
˘x
->
ö°
.
imm
.
b
 & 0x7;

713 
ªsu…
 = 
xmm
.
as_ush‹t
[
imm8
];

714 
	`X86C⁄ãxtSt‹eR32
(
˘x
, 
ªsu…
);

716 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shi·
, 
x86_dï_xmmm128
, 0, 0, 
x86_dï_r32
, 0, 0, 0);

717 
	}
}

720 
	$x86_iß_pö§w_xmm_r32m16_imm8_im∂
(
X86C⁄ãxt
 *
˘x
)

722 
x86_ö°_xmm_ªg_t
 
xmm
;

723 
r32m16
;

724 
imm8
;

726 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
xmm
.
as_uch¨
);

727 
r32m16
 = 
	`X86C⁄ãxtLﬂdR32M16
(
˘x
);

728 
imm8
 = 
˘x
->
ö°
.
imm
.
b
 & 0x7;

731 
xmm
.
as_ush‹t
[
imm8
] = 
r32m16
;

732 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
xmm
.
as_uch¨
);

734 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shi·
, 
x86_dï_xmm
, 
x86_dï_rm32
, 0, x86_dep_xmm, 0, 0, 0);

735 
	}
}

738 
	$x86_iß_pmovmskb_r32_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

740 
x86_ö°_xmm_ªg_t
 
§c
;

741 
r32
;

743 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

745 
__X86_ISA_ASM_START__


746 
asm
 volatile (

750 : "=m" (
r32
)

751 : "m" (
§c
)

754 
__X86_ISA_ASM_END__


756 
	`X86C⁄ãxtSt‹eR32
(
˘x
, 
r32
);

758 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shi·
, 
x86_dï_xmmm128
, 0, 0, 
x86_dï_r32
, 0, 0, 0);

759 
	}
}

762 
	$x86_iß_shuÂs_xmm_xmmm128_imm8_im∂
(
X86C⁄ãxt
 *
˘x
)

764 
x86_ö°_xmm_ªg_t
 
de°
;

765 
x86_ö°_xmm_ªg_t
 
§c
;

766 
imm
;

768 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

769 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

770 
imm
 = 
˘x
->
ö°
.imm.
b
;

772 
de°
.
as_öt
[0] = de°.as_öt[
imm
 & 3];

773 
de°
.
as_öt
[1] = de°.as_öt[(
imm
 >> 2) & 3];

774 
de°
.
as_öt
[2] = 
§c
.as_öt[(
imm
 >> 4) & 3];

775 
de°
.
as_öt
[3] = 
§c
.as_öt[(
imm
 >> 6) & 3];

777 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

779 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shuf
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

780 
	}
}

783 
	$x86_iß_sqπps_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

785 
x86_ö°_xmm_ªg_t
 
de°
;

786 
x86_ö°_xmm_ªg_t
 
§c
;

788 
•ec_mode
;

790 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

791 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

795 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

796 i‡(!
•ec_mode
)

798 
__X86_ISA_ASM_START__


799 
asm
 volatile (

804 : "=m" (
de°
)

805 : "m" (
§c
)

808 
__X86_ISA_ASM_END__


811 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

813 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_sqπ
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

814 
	}
}

817 
	$x86_iß_sqπss_xmm_xmmm32_im∂
(
X86C⁄ãxt
 *
˘x
)

819 
x86_ö°_xmm_ªg_t
 
de°
;

820 
x86_ö°_xmm_ªg_t
 
§c
;

822 
•ec_mode
;

824 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

825 
	`X86C⁄ãxtLﬂdXMMM32
(
˘x
, 
§c
.
as_uch¨
);

829 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

830 i‡(!
•ec_mode
)

832 
__X86_ISA_ASM_START__


833 
asm
 volatile (

838 : "=m" (
de°
)

839 : "m" (
§c
)

842 
__X86_ISA_ASM_END__


845 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

847 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_sqπ
, 
x86_dï_xmmm32
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

848 
	}
}

851 
	$x86_iß_°mxc§_m32_im∂
(
X86C⁄ãxt
 *
˘x
)

853 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ im∂emíãd", 
__FUNCTION__
);

854 
	}
}

857 
	$x86_iß_subps_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

859 
x86_ö°_xmm_ªg_t
 
de°
;

860 
x86_ö°_xmm_ªg_t
 
§c
;

862 
•ec_mode
;

864 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

865 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

869 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

870 i‡(!
•ec_mode
)

872 
__X86_ISA_ASM_START__


873 
asm
 volatile (

878 : "=m" (
de°
)

879 : "m" (
§c
)

882 
__X86_ISA_ASM_END__


885 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

887 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_sub
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

888 
	}
}

891 
	$x86_iß_subss_xmm_xmmm32_im∂
(
X86C⁄ãxt
 *
˘x
)

893 
x86_ö°_xmm_ªg_t
 
de°
;

894 
x86_ö°_xmm_ªg_t
 
§c
;

896 
•ec_mode
;

898 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

899 
	`X86C⁄ãxtLﬂdXMMM32
(
˘x
, 
§c
.
as_uch¨
);

903 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

904 i‡(!
•ec_mode
)

906 
__X86_ISA_ASM_START__


907 
asm
 volatile (

912 : "=m" (
de°
)

913 : "m" (
§c
)

916 
__X86_ISA_ASM_END__


919 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

921 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_sub
, 
x86_dï_xmmm32
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

922 
	}
}

925 
	$x86_iß_ucomisd_xmm_xmmm64_im∂
(
X86C⁄ãxt
 *
˘x
)

927 
x86_ö°_xmm_ªg_t
 
de°
;

928 
x86_ö°_xmm_ªg_t
 
§c
;

930 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

931 
eÊags
 = 
ªgs
->eflags;

933 
•ec_mode
;

935 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

936 
	`X86C⁄ãxtLﬂdXMMM64
(
˘x
, 
§c
.
as_uch¨
);

940 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

941 i‡(!
•ec_mode
)

943 
__X86_ISA_ASM_START__


944 
asm
 volatile (

953 : "=m" (
de°
), "=g" (
eÊags
)

954 : "m" (
§c
), "g" (
eÊags
)

957 
__X86_ISA_ASM_END__


960 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

961 
ªgs
->
eÊags
 =Éflags;

963 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_comp
, 
x86_dï_xmmm64
, 
x86_dï_xmm
, 0, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
, 0);

964 
	}
}

967 
	$x86_iß_ucomiss_xmm_xmmm32_im∂
(
X86C⁄ãxt
 *
˘x
)

969 
x86_ö°_xmm_ªg_t
 
de°
;

970 
x86_ö°_xmm_ªg_t
 
§c
;

972 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

973 
eÊags
 = 
ªgs
->eflags;

975 
•ec_mode
;

977 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

978 
	`X86C⁄ãxtLﬂdXMMM32
(
˘x
, 
§c
.
as_uch¨
);

982 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

983 i‡(!
•ec_mode
)

985 
__X86_ISA_ASM_START__


986 
asm
 volatile (

995 : "=m" (
de°
), "=g" (
eÊags
)

996 : "m" (
§c
), "g" (
eÊags
)

999 
__X86_ISA_ASM_END__


1002 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1003 
ªgs
->
eÊags
 =Éflags;

1005 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_comp
, 
x86_dï_xmmm32
, 
x86_dï_xmm
, 0, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
, 0);

1006 
	}
}

1009 
	$x86_iß_u≈ckhps_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

1011 
x86_ö°_xmm_ªg_t
 
de°
;

1012 
x86_ö°_xmm_ªg_t
 
§c
;

1014 
•ec_mode
;

1016 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

1017 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1021 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

1022 i‡(!
•ec_mode
)

1024 
__X86_ISA_ASM_START__


1025 
asm
 volatile (

1030 : "=m" (
de°
)

1031 : "m" (
§c
)

1034 
__X86_ISA_ASM_END__


1037 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1039 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shuf
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

1040 
	}
}

1043 
	$x86_iß_u≈ckÕs_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

1045 
x86_ö°_xmm_ªg_t
 
de°
;

1046 
x86_ö°_xmm_ªg_t
 
§c
;

1048 
•ec_mode
;

1050 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

1051 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1055 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

1056 i‡(!
•ec_mode
)

1058 
__X86_ISA_ASM_START__


1059 
asm
 volatile (

1064 : "=m" (
de°
)

1065 : "m" (
§c
)

1068 
__X86_ISA_ASM_END__


1071 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1073 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shuf
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

1074 
	}
}

1077 
	$x86_iß_x‹ps_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

1079 
x86_ö°_xmm_ªg_t
 
de°
;

1080 
x86_ö°_xmm_ªg_t
 
§c
;

1082 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

1083 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1085 
__X86_ISA_ASM_START__


1086 
asm
 volatile (

1091 : "=m" (
de°
)

1092 : "m" (
§c
)

1095 
__X86_ISA_ASM_END__


1097 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1099 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_x‹
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

1100 
	}
}

	@emu/machine-sse2.c

20 
	~<°rög.h
>

23 
	~"c⁄ãxt.h
"

24 
	~"iß.h
"

25 
	~"machöe.h
"

26 
	~"ªgs.h
"

27 
	~"uö°.h
"

31 
	#mem_ac˚ss
 
__COMPILATION_ERROR__


	)

32 
	#mem_ªad
 
__COMPILATION_ERROR__


	)

33 
	#mem_wrôe
 
__COMPILATION_ERROR__


	)

34 
	#mem_zîo
 
__COMPILATION_ERROR__


	)

35 
	#mem_ªad_°rög
 
__COMPILATION_ERROR__


	)

36 
	#mem_wrôe_°rög
 
__COMPILATION_ERROR__


	)

37 
	#mem_gë_buf„r
 
__COMPILATION_ERROR__


	)

38 
	#Áèl
 
__COMPILATION_ERROR__


	)

39 
	#∑nic
 
__COMPILATION_ERROR__


	)

40 
	#w¨nög
 
__COMPILATION_ERROR__


	)

41 #ifde‡
as£π


42 #unde‡
as£π


44 
	#as£π
 
__COMPILATION_ERROR__


	)

47 
	$x86_iß_addpd_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

49 
x86_ö°_xmm_ªg_t
 
de°
;

50 
x86_ö°_xmm_ªg_t
 
§c
;

52 
•ec_mode
;

54 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

55 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

59 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

60 i‡(!
•ec_mode
)

62 
__X86_ISA_ASM_START__


63 
asm
 volatile (

68 : "=m" (
de°
)

69 : "m" (
§c
)

72 
__X86_ISA_ASM_END__


75 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

77 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_add
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

78 
	}
}

81 
	$x86_iß_addsd_xmm_xmmm64_im∂
(
X86C⁄ãxt
 *
˘x
)

83 
x86_ö°_xmm_ªg_t
 
de°
;

84 
x86_ö°_xmm_ªg_t
 
§c
;

86 
•ec_mode
;

88 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

89 
	`X86C⁄ãxtLﬂdXMMM64
(
˘x
, 
§c
.
as_uch¨
);

93 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

94 i‡(!
•ec_mode
)

96 
__X86_ISA_ASM_START__


97 
asm
 volatile (

102 : "=m" (
de°
)

103 : "m" (
§c
)

106 
__X86_ISA_ASM_END__


109 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

111 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_add
, 
x86_dï_xmmm64
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

112 
	}
}

115 
	$x86_iß_™dpd_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

117 
x86_ö°_xmm_ªg_t
 
de°
;

118 
x86_ö°_xmm_ªg_t
 
§c
;

120 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

121 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

123 
__X86_ISA_ASM_START__


124 
asm
 volatile (

129 : "=m" (
de°
)

130 : "m" (
§c
)

133 
__X86_ISA_ASM_END__


135 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

137 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_™d
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

138 
	}
}

141 
	$x86_iß_cvtdq2pd_xmm_xmmm64_im∂
(
X86C⁄ãxt
 *
˘x
)

143 
x86_ö°_xmm_ªg_t
 
de°
;

144 
x86_ö°_xmm_ªg_t
 
§c
;

146 
•ec_mode
;

148 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

149 
	`X86C⁄ãxtLﬂdXMMM64
(
˘x
, 
§c
.
as_uch¨
);

153 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

154 i‡(!
•ec_mode
)

156 
__X86_ISA_ASM_START__


157 
asm
 volatile (

162 : "=m" (
de°
)

163 : "m" (
§c
)

166 
__X86_ISA_ASM_END__


169 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

170 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_c⁄v
, 
x86_dï_xmmm64
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

171 
	}
}

174 
	$x86_iß_cvtdq2ps_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

176 
x86_ö°_xmm_ªg_t
 
de°
;

177 
x86_ö°_xmm_ªg_t
 
§c
;

179 
•ec_mode
;

181 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

182 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

186 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

187 i‡(!
•ec_mode
)

189 
__X86_ISA_ASM_START__


190 
asm
 volatile (

195 : "=m" (
de°
)

196 : "m" (
§c
)

199 
__X86_ISA_ASM_END__


202 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

204 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_c⁄v
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

205 
	}
}

208 
	$x86_iß_cvçs2pd_xmm_xmmm64_im∂
(
X86C⁄ãxt
 *
˘x
)

210 
x86_ö°_xmm_ªg_t
 
de°
;

211 
x86_ö°_xmm_ªg_t
 
§c
;

213 
•ec_mode
;

215 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

216 
	`X86C⁄ãxtLﬂdXMMM64
(
˘x
, 
§c
.
as_uch¨
);

220 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

221 i‡(!
•ec_mode
)

223 
__X86_ISA_ASM_START__


224 
asm
 volatile (

229 : "=m" (
de°
)

230 : "m" (
§c
)

233 
__X86_ISA_ASM_END__


236 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

237 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_c⁄v
, 
x86_dï_xmmm64
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

238 
	}
}

241 
	$x86_iß_cvtsi2sd_xmm_rm32_im∂
(
X86C⁄ãxt
 *
˘x
)

243 
x86_ö°_xmm_ªg_t
 
de°
;

244 
§c
;

246 
•ec_mode
;

248 
§c
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
);

249 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

253 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

254 i‡(!
•ec_mode
)

256 
__X86_ISA_ASM_START__


257 
asm
 volatile (

262 : "=m" (
de°
)

263 : "m" (
§c
)

266 
__X86_ISA_ASM_END__


269 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

271 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_c⁄v
, 
x86_dï_xmm
, 
x86_dï_rm32
, 0, x86_dep_xmm, 0, 0, 0);

272 
	}
}

275 
	$x86_iß_cvâsd2si_r32_xmmm64_im∂
(
X86C⁄ãxt
 *
˘x
)

277 
xmm
[16];

278 
r32
;

280 
	`X86C⁄ãxtLﬂdXMMM64
(
˘x
, 
xmm
);

282 
__X86_ISA_ASM_START__


283 
asm
 volatile (

286 : "=m" (
r32
)

287 : "m" (*
xmm
)

290 
__X86_ISA_ASM_END__


292 
	`X86C⁄ãxtSt‹eR32
(
˘x
, 
r32
);

294 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_c⁄v
, 
x86_dï_xmmm64
, 0, 0, 
x86_dï_r32
, 0, 0, 0);

295 
	}
}

298 
	$x86_iß_cvtsd2si_r32_xmmm64_im∂
(
X86C⁄ãxt
 *
˘x
)

300 
x86_ö°_xmm_ªg_t
 
§c
;

301 
r32
;

303 
•ec_mode
;

305 
	`X86C⁄ãxtLﬂdXMMM64
(
˘x
, 
§c
.
as_uch¨
);

309 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

310 i‡(!
•ec_mode
)

312 
__X86_ISA_ASM_START__


313 
asm
 volatile (

317 : "=m" (
r32
)

318 : "m" (
§c
)

321 
__X86_ISA_ASM_END__


324 
	`X86C⁄ãxtSt‹eR32
(
˘x
, 
r32
);

325 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shi·
, 
x86_dï_xmmm64
, 0, 0, 
x86_dï_r32
, 0, 0, 0);

326 
	}
}

329 
	$x86_iß_cvtsd2ss_xmm_xmmm64_im∂
(
X86C⁄ãxt
 *
˘x
)

331 
x86_ö°_xmm_ªg_t
 
de°
;

332 
x86_ö°_xmm_ªg_t
 
§c
;

334 
•ec_mode
;

336 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

337 
	`X86C⁄ãxtLﬂdXMMM64
(
˘x
, 
§c
.
as_uch¨
);

341 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

342 i‡(!
•ec_mode
)

344 
__X86_ISA_ASM_START__


345 
asm
 volatile (

350 : "=m" (
de°
)

351 : "m" (
§c
)

354 
__X86_ISA_ASM_END__


357 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

358 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_c⁄v
, 
x86_dï_xmmm64
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

359 
	}
}

362 
	$x86_iß_cvçd2ps_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

364 
x86_ö°_xmm_ªg_t
 
de°
;

365 
x86_ö°_xmm_ªg_t
 
§c
;

367 
•ec_mode
;

369 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

370 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

374 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

375 i‡(!
•ec_mode
)

377 
__X86_ISA_ASM_START__


378 
asm
 volatile (

383 : "=m" (
de°
)

384 : "m" (
§c
)

387 
__X86_ISA_ASM_END__


390 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

392 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_c⁄v
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

393 
	}
}

396 
	$x86_iß_cvtss2sd_xmm_xmmm32_im∂
(
X86C⁄ãxt
 *
˘x
)

398 
x86_ö°_xmm_ªg_t
 
de°
;

399 
x86_ö°_xmm_ªg_t
 
§c
;

401 
•ec_mode
;

403 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

404 
	`X86C⁄ãxtLﬂdXMMM32
(
˘x
, 
§c
.
as_uch¨
);

408 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

409 i‡(!
•ec_mode
)

411 
__X86_ISA_ASM_START__


412 
asm
 volatile (

417 : "=m" (
de°
)

418 : "m" (
§c
)

421 
__X86_ISA_ASM_END__


424 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

426 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_c⁄v
, 
x86_dï_xmmm32
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

427 
	}
}

430 
	$x86_iß_cvâpd2dq_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

432 
x86_ö°_xmm_ªg_t
 
de°
;

433 
x86_ö°_xmm_ªg_t
 
§c
;

435 
•ec_mode
;

437 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

438 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

442 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

443 i‡(!
•ec_mode
)

445 
__X86_ISA_ASM_START__


446 
asm
 volatile (

451 : "=m" (
de°
)

452 : "m" (
§c
)

455 
__X86_ISA_ASM_END__


458 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

460 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_c⁄v
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

461 
	}
}

464 
	$x86_iß_cvâps2dq_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

466 
x86_ö°_xmm_ªg_t
 
de°
;

467 
x86_ö°_xmm_ªg_t
 
§c
;

469 
•ec_mode
;

471 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

472 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

476 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

477 i‡(!
•ec_mode
)

479 
__X86_ISA_ASM_START__


480 
asm
 volatile (

485 : "=m" (
de°
)

486 : "m" (
§c
)

489 
__X86_ISA_ASM_END__


492 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

494 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_c⁄v
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

495 
	}
}

498 
	$x86_iß_divpd_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

500 
x86_ö°_xmm_ªg_t
 
de°
;

501 
x86_ö°_xmm_ªg_t
 
§c
;

503 
•ec_mode
;

505 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

506 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

510 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

511 i‡(!
•ec_mode
)

513 
__X86_ISA_ASM_START__


514 
asm
 volatile (

519 : "=m" (
de°
)

520 : "m" (
§c
)

523 
__X86_ISA_ASM_END__


526 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

528 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_div
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

529 
	}
}

532 
	$x86_iß_divsd_xmm_xmmm64_im∂
(
X86C⁄ãxt
 *
˘x
)

534 
x86_ö°_xmm_ªg_t
 
de°
;

535 
x86_ö°_xmm_ªg_t
 
§c
;

537 
•ec_mode
;

539 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

540 
	`X86C⁄ãxtLﬂdXMMM64
(
˘x
, 
§c
.
as_uch¨
);

544 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

545 i‡(!
•ec_mode
)

547 
__X86_ISA_ASM_START__


548 
asm
 volatile (

553 : "=m" (
de°
)

554 : "m" (
§c
)

557 
__X86_ISA_ASM_END__


560 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

562 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_div
, 
x86_dï_xmmm64
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

563 
	}
}

566 
	$x86_iß_maxpd_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

568 
x86_ö°_xmm_ªg_t
 
de°
;

569 
x86_ö°_xmm_ªg_t
 
§c
;

571 
•ec_mode
;

573 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

574 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

578 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

579 i‡(!
•ec_mode
)

581 
__X86_ISA_ASM_START__


582 
asm
 volatile (

587 : "=m" (
de°
)

588 : "m" (
§c
)

591 
__X86_ISA_ASM_END__


594 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

596 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_comp
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

597 
	}
}

600 
	$x86_iß_maxsd_xmm_xmmm64_im∂
(
X86C⁄ãxt
 *
˘x
)

602 
x86_ö°_xmm_ªg_t
 
de°
;

603 
x86_ö°_xmm_ªg_t
 
§c
;

605 
•ec_mode
;

607 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

608 
	`X86C⁄ãxtLﬂdXMMM64
(
˘x
, 
§c
.
as_uch¨
);

612 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

613 i‡(!
•ec_mode
)

615 
__X86_ISA_ASM_START__


616 
asm
 volatile (

621 : "=m" (
de°
)

622 : "m" (
§c
)

625 
__X86_ISA_ASM_END__


628 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

630 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_comp
, 
x86_dï_xmmm64
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

631 
	}
}

634 
	$x86_iß_möpd_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

636 
x86_ö°_xmm_ªg_t
 
de°
;

637 
x86_ö°_xmm_ªg_t
 
§c
;

639 
•ec_mode
;

641 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

642 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

646 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

647 i‡(!
•ec_mode
)

649 
__X86_ISA_ASM_START__


650 
asm
 volatile (

655 : "=m" (
de°
)

656 : "m" (
§c
)

659 
__X86_ISA_ASM_END__


662 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

664 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_comp
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

665 
	}
}

668 
	$x86_iß_mösd_xmm_xmmm64_im∂
(
X86C⁄ãxt
 *
˘x
)

670 
x86_ö°_xmm_ªg_t
 
de°
;

671 
x86_ö°_xmm_ªg_t
 
§c
;

673 
•ec_mode
;

675 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

676 
	`X86C⁄ãxtLﬂdXMMM64
(
˘x
, 
§c
.
as_uch¨
);

680 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

681 i‡(!
•ec_mode
)

683 
__X86_ISA_ASM_START__


684 
asm
 volatile (

689 : "=m" (
de°
)

690 : "m" (
§c
)

693 
__X86_ISA_ASM_END__


696 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

698 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_comp
, 
x86_dï_xmmm64
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

699 
	}
}

702 
	$x86_iß_mov≠d_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

704 
x86_ö°_xmm_ªg_t
 
xmm
;

706 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
xmm
.
as_uch¨
);

707 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
xmm
.
as_uch¨
);

709 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_move
, 
x86_dï_xmmm128
, 0, 0, 
x86_dï_xmm
, 0, 0, 0);

710 
	}
}

713 
	$x86_iß_mov≠d_xmmm128_xmm_im∂
(
X86C⁄ãxt
 *
˘x
)

715 
x86_ö°_xmm_ªg_t
 
xmm
;

717 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
xmm
.
as_uch¨
);

718 
	`X86C⁄ãxtSt‹eXMMM128
(
˘x
, 
xmm
.
as_uch¨
);

720 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_move
, 
x86_dï_xmm
, 0, 0, 
x86_dï_xmmm128
, 0, 0, 0);

721 
	}
}

724 
	$x86_iß_movd_xmm_rm32_im∂
(
X86C⁄ãxt
 *
˘x
)

726 
x86_ö°_xmm_ªg_t
 
xmm
;

728 
	`mem£t
(
xmm
.
as_uch¨
, 0,  xmm);

729 
xmm
.
as_uöt
[0] = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
);

731 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
xmm
.
as_uch¨
);

733 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_move
, 
x86_dï_rm32
, 0, 0, 
x86_dï_xmm
, 0, 0, 0);

734 
	}
}

737 
	$x86_iß_movd_rm32_xmm_im∂
(
X86C⁄ãxt
 *
˘x
)

739 
x86_ö°_xmm_ªg_t
 
xmm
;

741 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
xmm
.
as_uch¨
);

742 
	`X86C⁄ãxtSt‹eRm32
(
˘x
, 
xmm
.
as_uöt
[0]);

744 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_move
, 
x86_dï_xmm
, 0, 0, 
x86_dï_rm32
, 0, 0, 0);

745 
	}
}

748 
	$x86_iß_movdqa_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

750 
xmm
[16];

752 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
xmm
);

753 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
xmm
);

755 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_move
, 
x86_dï_xmmm128
, 0, 0, 
x86_dï_xmm
, 0, 0, 0);

756 
	}
}

759 
	$x86_iß_movdqa_xmmm128_xmm_im∂
(
X86C⁄ãxt
 *
˘x
)

761 
xmm
[16];

763 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
xmm
);

764 
	`X86C⁄ãxtSt‹eXMMM128
(
˘x
, 
xmm
);

766 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_move
, 
x86_dï_xmm
, 0, 0, 
x86_dï_xmmm128
, 0, 0, 0);

767 
	}
}

770 
	$x86_iß_movdqu_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

772 
xmm
[16];

774 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
xmm
);

775 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
xmm
);

777 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_move
, 
x86_dï_xmmm128
, 0, 0, 
x86_dï_xmm
, 0, 0, 0);

778 
	}
}

781 
	$x86_iß_movdqu_xmmm128_xmm_im∂
(
X86C⁄ãxt
 *
˘x
)

783 
xmm
[16];

785 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
xmm
);

786 
	`X86C⁄ãxtSt‹eXMMM128
(
˘x
, 
xmm
);

788 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_move
, 
x86_dï_xmm
, 0, 0, 
x86_dï_xmmm128
, 0, 0, 0);

789 
	}
}

792 
	$x86_iß_movhpd_xmm_m64_im∂
(
X86C⁄ãxt
 *
˘x
)

794 
x86_ö°_xmm_ªg_t
 
xmm
;

796 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
xmm
.
as_uch¨
);

797 
xmm
.
as_uöt64
[1] = 
	`X86C⁄ãxtLﬂdM64
(
˘x
);

798 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
xmm
.
as_uch¨
);

800 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_move
, 
x86_dï_xmmm64
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

801 
	}
}

804 
	$x86_iß_movhpd_m64_xmm_im∂
(
X86C⁄ãxt
 *
˘x
)

806 
x86_ö°_xmm_ªg_t
 
xmm
;

808 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
xmm
.
as_uch¨
);

809 
	`X86C⁄ãxtSt‹eM64
(
˘x
, 
xmm
.
as_uöt64
[1]);

811 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_move
, 
x86_dï_xmm
, 0, 0, 
x86_dï_xmmm64
, 0, 0, 0);

812 
	}
}

815 
	$x86_iß_movÕd_xmm_m64_im∂
(
X86C⁄ãxt
 *
˘x
)

817 
x86_ö°_xmm_ªg_t
 
xmm
;

819 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
xmm
.
as_uch¨
);

820 
xmm
.
as_uöt64
[0] = 
	`X86C⁄ãxtLﬂdM64
(
˘x
);

821 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
xmm
.
as_uch¨
);

823 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_move
, 
x86_dï_xmmm64
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

824 
	}
}

827 
	$x86_iß_movÕd_m64_xmm_im∂
(
X86C⁄ãxt
 *
˘x
)

829 
x86_ö°_xmm_ªg_t
 
xmm
;

831 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
xmm
.
as_uch¨
);

832 
	`X86C⁄ãxtSt‹eM64
(
˘x
, 
xmm
.
as_uöt64
[0]);

834 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_move
, 
x86_dï_xmm
, 0, 0, 
x86_dï_xmmm64
, 0, 0, 0);

835 
	}
}

838 
	$x86_iß_movmskpd_r32_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

840 
x86_ö°_xmm_ªg_t
 
§c
;

841 
r32
;

843 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

845 
__X86_ISA_ASM_START__


846 
asm
 volatile (

850 : "=m" (
r32
)

851 : "m" (
§c
)

854 
__X86_ISA_ASM_END__


856 
	`X86C⁄ãxtSt‹eR32
(
˘x
, 
r32
);

858 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shi·
, 
x86_dï_xmmm128
, 0, 0, 
x86_dï_r32
, 0, 0, 0);

859 
	}
}

862 
	$x86_iß_movmskps_r32_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

864 
x86_ö°_xmm_ªg_t
 
§c
;

865 
r32
;

867 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

869 
__X86_ISA_ASM_START__


870 
asm
 volatile (

874 : "=m" (
r32
)

875 : "m" (
§c
)

878 
__X86_ISA_ASM_END__


880 
	`X86C⁄ãxtSt‹eR32
(
˘x
, 
r32
);

882 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shi·
, 
x86_dï_xmmm128
, 0, 0, 
x86_dï_r32
, 0, 0, 0);

883 
	}
}

886 
	$x86_iß_mov¡dq_m128_xmm_im∂
(
X86C⁄ãxt
 *
˘x
)

888 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ im∂emíãd", 
__FUNCTION__
);

889 
	}
}

892 
	$x86_iß_movq_xmm_xmmm64_im∂
(
X86C⁄ãxt
 *
˘x
)

894 
vÆue
[16];

896 
	`mem£t
(
vÆue
, 0, 16);

897 
	`X86C⁄ãxtLﬂdXMMM64
(
˘x
, 
vÆue
);

898 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
vÆue
);

900 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_move
, 
x86_dï_xmmm64
, 0, 0, 
x86_dï_xmm
, 0, 0, 0);

901 
	}
}

904 
	$x86_iß_movq_xmmm64_xmm_im∂
(
X86C⁄ãxt
 *
˘x
)

906 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

907 
vÆue
[16];

909 
	`mem£t
(
vÆue
, 0, 16);

910 i‡(
˘x
->
ö°
.
modrm_mod
 == 3)

911 
	`mem˝y
(&
ªgs
->
xmm
[
˘x
->
ö°
.
modrm_rm
], 
vÆue
, 16);

912 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
vÆue
);

913 
	`X86C⁄ãxtSt‹eXMMM64
(
˘x
, 
vÆue
);

915 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_move
, 
x86_dï_xmm
, 0, 0, 
x86_dï_xmmm64
, 0, 0, 0);

916 
	}
}

919 
	$x86_iß_movsd_xmm_xmmm64_im∂
(
X86C⁄ãxt
 *
˘x
)

921 
vÆue
[16];

925 i‡(
˘x
->
ö°
.
modrm_mod
 == 3)

926 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
vÆue
);

928 
	`mem£t
(
vÆue
, 0, 16);

929 
	`X86C⁄ãxtLﬂdXMMM64
(
˘x
, 
vÆue
);

930 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
vÆue
);

932 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_move
, 
x86_dï_xmmm64
, 0, 0, 
x86_dï_xmm
, 0, 0, 0);

933 
	}
}

936 
	$x86_iß_movsd_xmmm64_xmm_im∂
(
X86C⁄ãxt
 *
˘x
)

938 
vÆue
[16];

942 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
vÆue
);

943 
	`X86C⁄ãxtSt‹eXMMM64
(
˘x
, 
vÆue
);

945 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_move
, 
x86_dï_xmm
, 0, 0, 
x86_dï_xmmm64
, 0, 0, 0);

946 
	}
}

949 
	$x86_iß_muÕd_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

951 
x86_ö°_xmm_ªg_t
 
de°
;

952 
x86_ö°_xmm_ªg_t
 
§c
;

954 
•ec_mode
;

956 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

957 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

961 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

962 i‡(!
•ec_mode
)

964 
__X86_ISA_ASM_START__


965 
asm
 volatile (

970 : "=m" (
de°
)

971 : "m" (
§c
)

974 
__X86_ISA_ASM_END__


977 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

979 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_mu…
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

980 
	}
}

983 
	$x86_iß_mulsd_xmm_xmmm64_im∂
(
X86C⁄ãxt
 *
˘x
)

985 
x86_ö°_xmm_ªg_t
 
de°
;

986 
x86_ö°_xmm_ªg_t
 
§c
;

988 
•ec_mode
;

990 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

991 
	`X86C⁄ãxtLﬂdXMMM64
(
˘x
, 
§c
.
as_uch¨
);

995 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

996 i‡(!
•ec_mode
)

998 
__X86_ISA_ASM_START__


999 
asm
 volatile (

1004 : "=m" (
de°
)

1005 : "m" (
§c
)

1008 
__X86_ISA_ASM_END__


1011 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1013 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_mu…
, 
x86_dï_xmmm64
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

1014 
	}
}

1017 
	$x86_iß_‹pd_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

1019 
x86_ö°_xmm_ªg_t
 
de°
;

1020 
x86_ö°_xmm_ªg_t
 
§c
;

1022 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

1023 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1025 
__X86_ISA_ASM_START__


1026 
asm
 volatile (

1031 : "=m" (
de°
)

1032 : "m" (
§c
)

1035 
__X86_ISA_ASM_END__


1037 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1039 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_‹
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

1040 
	}
}

1043 
	$x86_iß_∑ddb_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

1045 
x86_ö°_xmm_ªg_t
 
de°
;

1046 
x86_ö°_xmm_ªg_t
 
§c
;

1048 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

1049 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1051 
__X86_ISA_ASM_START__


1052 
asm
 volatile (

1057 : "=m" (
de°
)

1058 : "m" (
§c
)

1061 
__X86_ISA_ASM_END__


1063 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1065 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_add
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

1066 
	}
}

1069 
	$x86_iß_∑ddw_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

1071 
x86_ö°_xmm_ªg_t
 
de°
;

1072 
x86_ö°_xmm_ªg_t
 
§c
;

1074 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

1075 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1077 
__X86_ISA_ASM_START__


1078 
asm
 volatile (

1083 : "=m" (
de°
)

1084 : "m" (
§c
)

1087 
__X86_ISA_ASM_END__


1089 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1091 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_add
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

1092 
	}
}

1095 
	$x86_iß_∑ddd_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

1097 
x86_ö°_xmm_ªg_t
 
de°
;

1098 
x86_ö°_xmm_ªg_t
 
§c
;

1100 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

1101 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1103 
__X86_ISA_ASM_START__


1104 
asm
 volatile (

1109 : "=m" (
de°
)

1110 : "m" (
§c
)

1113 
__X86_ISA_ASM_END__


1115 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1117 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_add
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

1118 
	}
}

1121 
	$x86_iß_∑ddq_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

1123 
x86_ö°_xmm_ªg_t
 
de°
;

1124 
x86_ö°_xmm_ªg_t
 
§c
;

1126 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

1127 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1129 
__X86_ISA_ASM_START__


1130 
asm
 volatile (

1135 : "=m" (
de°
)

1136 : "m" (
§c
)

1139 
__X86_ISA_ASM_END__


1141 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1143 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_add
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

1144 
	}
}

1147 
	$x86_iß_∑nd_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

1149 
x86_ö°_xmm_ªg_t
 
de°
;

1150 
x86_ö°_xmm_ªg_t
 
§c
;

1152 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

1153 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1155 
__X86_ISA_ASM_START__


1156 
asm
 volatile (

1161 : "=m" (
de°
)

1162 : "m" (
§c
)

1165 
__X86_ISA_ASM_END__


1167 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1169 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_™d
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

1170 
	}
}

1173 
	$x86_iß_∑ndn_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

1175 
x86_ö°_xmm_ªg_t
 
de°
;

1176 
x86_ö°_xmm_ªg_t
 
§c
;

1178 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

1179 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1181 
__X86_ISA_ASM_START__


1182 
asm
 volatile (

1187 : "=m" (
de°
)

1188 : "m" (
§c
)

1191 
__X86_ISA_ASM_END__


1193 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1195 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_«nd
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

1196 
	}
}

1199 
	$x86_iß_pcm≥qb_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

1201 
x86_ö°_xmm_ªg_t
 
de°
;

1202 
x86_ö°_xmm_ªg_t
 
§c
;

1204 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

1205 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1207 
__X86_ISA_ASM_START__


1208 
asm
 volatile (

1213 : "=m" (
de°
)

1214 : "m" (
§c
)

1217 
__X86_ISA_ASM_END__


1219 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1221 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_comp
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

1222 
	}
}

1225 
	$x86_iß_pcm≥qw_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

1227 
x86_ö°_xmm_ªg_t
 
de°
;

1228 
x86_ö°_xmm_ªg_t
 
§c
;

1230 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

1231 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1233 
__X86_ISA_ASM_START__


1234 
asm
 volatile (

1239 : "=m" (
de°
)

1240 : "m" (
§c
)

1243 
__X86_ISA_ASM_END__


1245 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1247 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_comp
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

1248 
	}
}

1251 
	$x86_iß_pcm≥qd_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

1253 
x86_ö°_xmm_ªg_t
 
de°
;

1254 
x86_ö°_xmm_ªg_t
 
§c
;

1256 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

1257 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1259 
__X86_ISA_ASM_START__


1260 
asm
 volatile (

1265 : "=m" (
de°
)

1266 : "m" (
§c
)

1269 
__X86_ISA_ASM_END__


1271 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1273 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_comp
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

1274 
	}
}

1277 
	$x86_iß_pcmpgtb_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

1279 
x86_ö°_xmm_ªg_t
 
de°
;

1280 
x86_ö°_xmm_ªg_t
 
§c
;

1282 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

1283 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1285 
__X86_ISA_ASM_START__


1286 
asm
 volatile (

1291 : "=m" (
de°
)

1292 : "m" (
§c
)

1295 
__X86_ISA_ASM_END__


1297 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1299 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_comp
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

1300 
	}
}

1303 
	$x86_iß_pcmpgtw_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

1305 
x86_ö°_xmm_ªg_t
 
de°
;

1306 
x86_ö°_xmm_ªg_t
 
§c
;

1308 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

1309 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1311 
__X86_ISA_ASM_START__


1312 
asm
 volatile (

1317 : "=m" (
de°
)

1318 : "m" (
§c
)

1321 
__X86_ISA_ASM_END__


1323 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1325 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_comp
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

1326 
	}
}

1329 
	$x86_iß_pcmpgtd_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

1331 
x86_ö°_xmm_ªg_t
 
de°
;

1332 
x86_ö°_xmm_ªg_t
 
§c
;

1334 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

1335 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1337 
__X86_ISA_ASM_START__


1338 
asm
 volatile (

1343 : "=m" (
de°
)

1344 : "m" (
§c
)

1347 
__X86_ISA_ASM_END__


1349 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1351 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_comp
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

1352 
	}
}

1355 
	$x86_iß_p‹_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

1357 
x86_ö°_xmm_ªg_t
 
de°
;

1358 
x86_ö°_xmm_ªg_t
 
§c
;

1360 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

1361 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1363 
__X86_ISA_ASM_START__


1364 
asm
 volatile (

1369 : "=m" (
de°
)

1370 : "m" (
§c
)

1373 
__X86_ISA_ASM_END__


1375 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1377 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_‹
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

1378 
	}
}

1381 
	$x86_iß_pshufd_xmm_xmmm128_imm8_im∂
(
X86C⁄ãxt
 *
˘x
)

1383 
§c
[4], 
d°
[4];

1384 
imm
 = 
˘x
->
ö°
.imm.
b
;

1386 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, (*Ë
§c
);

1387 
d°
[0] = 
§c
[
imm
 & 3];

1388 
d°
[1] = 
§c
[(
imm
 >> 2) & 3];

1389 
d°
[2] = 
§c
[(
imm
 >> 4) & 3];

1390 
d°
[3] = 
§c
[(
imm
 >> 6) & 3];

1391 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, (*Ë
d°
);

1393 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shuf
, 
x86_dï_xmmm128
, 0, 0, 
x86_dï_xmm
, 0, 0, 0);

1394 
	}
}

1397 
	$x86_iß_p¶ldq_xmmm128_imm8_im∂
(
X86C⁄ãxt
 *
˘x
)

1399 
x86_ö°_xmm_ªg_t
 
de°
;

1400 
x86_ö°_xmm_ªg_t
 
§c
;

1402 
cou¡
;

1403 
i
;

1405 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1406 
cou¡
 = 
˘x
->
ö°
.
imm
.
b
;

1407 i‡(
cou¡
 > 16)

1408 
cou¡
 = 16;

1410 
	`mem£t
(
de°
.
as_uch¨
, 0,  dest);

1411 
i
 = 0; i < 16 - 
cou¡
; i++)

1412 
de°
.
as_uch¨
[
i
 + 
cou¡
] = 
§c
.as_uchar[i];

1415 
	`X86C⁄ãxtSt‹eXMMM128
(
˘x
, 
de°
.
as_uch¨
);

1416 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shi·
, 
x86_dï_xmmm128
, 0, 0, x86_dep_xmmm128, 0, 0, 0);

1417 
	}
}

1420 
	$x86_iß_p¶ld_xmmm128_imm8_im∂
(
X86C⁄ãxt
 *
˘x
)

1422 
x86_ö°_xmm_ªg_t
 
de°
;

1423 
x86_ö°_xmm_ªg_t
 
§c
;

1425 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
de°
.
as_uch¨
);

1426 
	`mem£t
(
§c
.
as_uch¨
, 0,  src);

1427 
§c
.
as_uch¨
[0] = 
˘x
->
ö°
.
imm
.
b
;

1429 
__X86_ISA_ASM_START__


1430 
asm
 volatile (

1435 : "=m" (
de°
)

1436 : "m" (
§c
)

1439 
__X86_ISA_ASM_END__


1441 
	`X86C⁄ãxtSt‹eXMMM128
(
˘x
, 
de°
.
as_uch¨
);

1443 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shi·
, 
x86_dï_xmmm128
, 0, 0, x86_dep_xmmm128, 0, 0, 0);

1444 
	}
}

1447 
	$x86_iß_p¶ld_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

1449 
x86_ö°_xmm_ªg_t
 
de°
;

1450 
x86_ö°_xmm_ªg_t
 
§c
;

1452 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

1453 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1455 
__X86_ISA_ASM_START__


1456 
asm
 volatile (

1461 : "=m" (
de°
)

1462 : "m" (
§c
)

1465 
__X86_ISA_ASM_END__


1467 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1469 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shi·
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

1470 
	}
}

1473 
	$x86_iß_p¶lw_xmmm128_imm8_im∂
(
X86C⁄ãxt
 *
˘x
)

1475 
x86_ö°_xmm_ªg_t
 
de°
;

1476 
x86_ö°_xmm_ªg_t
 
§c
;

1478 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
de°
.
as_uch¨
);

1479 
	`mem£t
(
§c
.
as_uch¨
, 0,  src);

1480 
§c
.
as_uch¨
[0] = 
˘x
->
ö°
.
imm
.
b
;

1482 
__X86_ISA_ASM_START__


1483 
asm
 volatile (

1488 : "=m" (
de°
)

1489 : "m" (
§c
)

1492 
__X86_ISA_ASM_END__


1494 
	`X86C⁄ãxtSt‹eXMMM128
(
˘x
, 
de°
.
as_uch¨
);

1496 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shi·
, 
x86_dï_xmmm128
, 0, 0, x86_dep_xmmm128, 0, 0, 0);

1497 
	}
}

1500 
	$x86_iß_p¶lw_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

1502 
x86_ö°_xmm_ªg_t
 
de°
;

1503 
x86_ö°_xmm_ªg_t
 
§c
;

1505 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

1506 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1508 
__X86_ISA_ASM_START__


1509 
asm
 volatile (

1514 : "=m" (
de°
)

1515 : "m" (
§c
)

1518 
__X86_ISA_ASM_END__


1520 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1522 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shi·
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

1523 
	}
}

1526 
	$x86_iß_p¶lq_xmmm128_imm8_im∂
(
X86C⁄ãxt
 *
˘x
)

1528 
x86_ö°_xmm_ªg_t
 
de°
;

1529 
x86_ö°_xmm_ªg_t
 
§c
;

1531 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
de°
.
as_uch¨
);

1532 
	`mem£t
(
§c
.
as_uch¨
, 0,  src);

1533 
§c
.
as_uch¨
[0] = 
˘x
->
ö°
.
imm
.
b
;

1535 
__X86_ISA_ASM_START__


1536 
asm
 volatile (

1541 : "=m" (
de°
)

1542 : "m" (
§c
)

1545 
__X86_ISA_ASM_END__


1547 
	`X86C⁄ãxtSt‹eXMMM128
(
˘x
, 
de°
.
as_uch¨
);

1549 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shi·
, 
x86_dï_xmmm128
, 0, 0, x86_dep_xmmm128, 0, 0, 0);

1550 
	}
}

1553 
	$x86_iß_p¶lq_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

1555 
x86_ö°_xmm_ªg_t
 
de°
;

1556 
x86_ö°_xmm_ªg_t
 
§c
;

1558 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

1559 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1561 
__X86_ISA_ASM_START__


1562 
asm
 volatile (

1567 : "=m" (
de°
)

1568 : "m" (
§c
)

1571 
__X86_ISA_ASM_END__


1573 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1575 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shi·
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

1576 
	}
}

1579 
	$x86_iß_p§aw_xmmm128_imm8_im∂
(
X86C⁄ãxt
 *
˘x
)

1581 
x86_ö°_xmm_ªg_t
 
de°
;

1582 
x86_ö°_xmm_ªg_t
 
§c
;

1584 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
de°
.
as_uch¨
);

1585 
	`mem£t
(
§c
.
as_uch¨
, 0,  src);

1586 
§c
.
as_uch¨
[0] = 
˘x
->
ö°
.
imm
.
b
;

1588 
__X86_ISA_ASM_START__


1589 
asm
 volatile (

1594 : "=m" (
de°
)

1595 : "m" (
§c
)

1598 
__X86_ISA_ASM_END__


1600 
	`X86C⁄ãxtSt‹eXMMM128
(
˘x
, 
de°
.
as_uch¨
);

1602 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shi·
, 
x86_dï_xmmm128
, 0, 0, x86_dep_xmmm128, 0, 0, 0);

1603 
	}
}

1606 
	$x86_iß_p§aw_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

1608 
x86_ö°_xmm_ªg_t
 
de°
;

1609 
x86_ö°_xmm_ªg_t
 
§c
;

1611 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

1612 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1614 
__X86_ISA_ASM_START__


1615 
asm
 volatile (

1620 : "=m" (
de°
)

1621 : "m" (
§c
)

1624 
__X86_ISA_ASM_END__


1626 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1628 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shi·
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

1629 
	}
}

1632 
	$x86_iß_p§lw_xmmm128_imm8_im∂
(
X86C⁄ãxt
 *
˘x
)

1634 
x86_ö°_xmm_ªg_t
 
de°
;

1635 
x86_ö°_xmm_ªg_t
 
§c
;

1637 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
de°
.
as_uch¨
);

1638 
	`mem£t
(
§c
.
as_uch¨
, 0,  src);

1639 
§c
.
as_uch¨
[0] = 
˘x
->
ö°
.
imm
.
b
;

1641 
__X86_ISA_ASM_START__


1642 
asm
 volatile (

1647 : "=m" (
de°
)

1648 : "m" (
§c
)

1651 
__X86_ISA_ASM_END__


1653 
	`X86C⁄ãxtSt‹eXMMM128
(
˘x
, 
de°
.
as_uch¨
);

1655 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shi·
, 
x86_dï_xmmm128
, 0, 0, x86_dep_xmmm128, 0, 0, 0);

1656 
	}
}

1659 
	$x86_iß_p§ad_xmmm128_imm8_im∂
(
X86C⁄ãxt
 *
˘x
)

1661 
x86_ö°_xmm_ªg_t
 
de°
;

1662 
x86_ö°_xmm_ªg_t
 
§c
;

1664 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
de°
.
as_uch¨
);

1665 
	`mem£t
(
§c
.
as_uch¨
, 0,  src);

1666 
§c
.
as_uch¨
[0] = 
˘x
->
ö°
.
imm
.
b
;

1668 
__X86_ISA_ASM_START__


1669 
asm
 volatile (

1674 : "=m" (
de°
)

1675 : "m" (
§c
)

1678 
__X86_ISA_ASM_END__


1680 
	`X86C⁄ãxtSt‹eXMMM128
(
˘x
, 
de°
.
as_uch¨
);

1682 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shi·
, 
x86_dï_xmmm128
, 0, 0, x86_dep_xmmm128, 0, 0, 0);

1683 
	}
}

1686 
	$x86_iß_p§ad_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

1688 
x86_ö°_xmm_ªg_t
 
de°
;

1689 
x86_ö°_xmm_ªg_t
 
§c
;

1691 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

1692 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1694 
__X86_ISA_ASM_START__


1695 
asm
 volatile (

1700 : "=m" (
de°
)

1701 : "m" (
§c
)

1704 
__X86_ISA_ASM_END__


1706 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1708 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shi·
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

1709 
	}
}

1712 
	$x86_iß_p§lw_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

1714 
x86_ö°_xmm_ªg_t
 
de°
;

1715 
x86_ö°_xmm_ªg_t
 
§c
;

1717 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

1718 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1720 
__X86_ISA_ASM_START__


1721 
asm
 volatile (

1726 : "=m" (
de°
)

1727 : "m" (
§c
)

1730 
__X86_ISA_ASM_END__


1732 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1734 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shi·
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

1735 
	}
}

1738 
	$x86_iß_p§ld_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

1740 
x86_ö°_xmm_ªg_t
 
de°
;

1741 
x86_ö°_xmm_ªg_t
 
§c
;

1743 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

1744 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1746 
__X86_ISA_ASM_START__


1747 
asm
 volatile (

1752 : "=m" (
de°
)

1753 : "m" (
§c
)

1756 
__X86_ISA_ASM_END__


1758 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1760 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shi·
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

1761 
	}
}

1764 
	$x86_iß_p§ld_xmmm128_imm8_im∂
(
X86C⁄ãxt
 *
˘x
)

1766 
x86_ö°_xmm_ªg_t
 
de°
;

1767 
x86_ö°_xmm_ªg_t
 
§c
;

1769 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
de°
.
as_uch¨
);

1770 
	`mem£t
(
§c
.
as_uch¨
, 0,  src);

1771 
§c
.
as_uch¨
[0] = 
˘x
->
ö°
.
imm
.
b
;

1773 
__X86_ISA_ASM_START__


1774 
asm
 volatile (

1779 : "=m" (
de°
)

1780 : "m" (
§c
)

1783 
__X86_ISA_ASM_END__


1785 
	`X86C⁄ãxtSt‹eXMMM128
(
˘x
, 
de°
.
as_uch¨
);

1787 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shi·
, 
x86_dï_xmmm128
, 0, 0, x86_dep_xmmm128, 0, 0, 0);

1788 
	}
}

1791 
	$x86_iß_p§lq_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

1793 
x86_ö°_xmm_ªg_t
 
de°
;

1794 
x86_ö°_xmm_ªg_t
 
§c
;

1796 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

1797 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1799 
__X86_ISA_ASM_START__


1800 
asm
 volatile (

1805 : "=m" (
de°
)

1806 : "m" (
§c
)

1809 
__X86_ISA_ASM_END__


1811 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1813 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shi·
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

1814 
	}
}

1817 
	$x86_iß_p§lq_xmmm128_imm8_im∂
(
X86C⁄ãxt
 *
˘x
)

1819 
x86_ö°_xmm_ªg_t
 
de°
;

1820 
x86_ö°_xmm_ªg_t
 
§c
;

1822 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
de°
.
as_uch¨
);

1823 
	`mem£t
(
§c
.
as_uch¨
, 0,  src);

1824 
§c
.
as_uch¨
[0] = 
˘x
->
ö°
.
imm
.
b
;

1826 
__X86_ISA_ASM_START__


1827 
asm
 volatile (

1832 : "=m" (
de°
)

1833 : "m" (
§c
)

1836 
__X86_ISA_ASM_END__


1838 
	`X86C⁄ãxtSt‹eXMMM128
(
˘x
, 
de°
.
as_uch¨
);

1840 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shi·
, 
x86_dï_xmmm128
, 0, 0, x86_dep_xmmm128, 0, 0, 0);

1841 
	}
}

1844 
	$x86_iß_p§ldq_xmmm128_imm8_im∂
(
X86C⁄ãxt
 *
˘x
)

1846 
x86_ö°_xmm_ªg_t
 
de°
;

1847 
x86_ö°_xmm_ªg_t
 
§c
;

1849 
cou¡
;

1850 
i
;

1852 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1853 
cou¡
 = 
˘x
->
ö°
.
imm
.
b
;

1854 i‡(
cou¡
 > 16)

1855 
cou¡
 = 16;

1857 
	`mem£t
(
de°
.
as_uch¨
, 0,  dest);

1858 
i
 = 0; i < 16 - 
cou¡
; i++)

1859 
de°
.
as_uch¨
[
i
] = 
§c
.as_uch¨[ò+ 
cou¡
];

1862 
	`X86C⁄ãxtSt‹eXMMM128
(
˘x
, 
de°
.
as_uch¨
);

1863 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shi·
, 
x86_dï_xmmm128
, 0, 0, x86_dep_xmmm128, 0, 0, 0);

1864 
	}
}

1867 
	$x86_iß_psubb_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

1869 
x86_ö°_xmm_ªg_t
 
de°
;

1870 
x86_ö°_xmm_ªg_t
 
§c
;

1872 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

1873 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1875 
__X86_ISA_ASM_START__


1876 
asm
 volatile (

1881 : "=m" (
de°
)

1882 : "m" (
§c
)

1885 
__X86_ISA_ASM_END__


1887 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1889 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_sub
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

1890 
	}
}

1893 
	$x86_iß_psubw_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

1895 
x86_ö°_xmm_ªg_t
 
de°
;

1896 
x86_ö°_xmm_ªg_t
 
§c
;

1898 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

1899 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1901 
__X86_ISA_ASM_START__


1902 
asm
 volatile (

1907 : "=m" (
de°
)

1908 : "m" (
§c
)

1911 
__X86_ISA_ASM_END__


1913 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1915 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_sub
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

1916 
	}
}

1919 
	$x86_iß_psubd_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

1921 
x86_ö°_xmm_ªg_t
 
de°
;

1922 
x86_ö°_xmm_ªg_t
 
§c
;

1924 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

1925 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1927 
__X86_ISA_ASM_START__


1928 
asm
 volatile (

1933 : "=m" (
de°
)

1934 : "m" (
§c
)

1937 
__X86_ISA_ASM_END__


1939 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1940 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_sub
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

1941 
	}
}

1944 
	$x86_iß_psubq_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

1946 
x86_ö°_xmm_ªg_t
 
de°
;

1947 
x86_ö°_xmm_ªg_t
 
§c
;

1949 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

1950 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1952 
__X86_ISA_ASM_START__


1953 
asm
 volatile (

1958 : "=m" (
de°
)

1959 : "m" (
§c
)

1962 
__X86_ISA_ASM_END__


1964 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1965 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_sub
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

1966 
	}
}

1969 
	$x86_iß_pu≈cklbw_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

1971 
x86_ö°_xmm_ªg_t
 
de°
;

1972 
x86_ö°_xmm_ªg_t
 
§c
;

1974 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

1975 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

1977 
__X86_ISA_ASM_START__


1978 
asm
 volatile (

1983 : "=m" (
de°
)

1984 : "m" (
§c
)

1987 
__X86_ISA_ASM_END__


1989 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

1991 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shuf
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

1992 
	}
}

1995 
	$x86_iß_pu≈cklwd_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

1997 
x86_ö°_xmm_ªg_t
 
de°
;

1998 
x86_ö°_xmm_ªg_t
 
§c
;

2000 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

2001 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

2003 
__X86_ISA_ASM_START__


2004 
asm
 volatile (

2009 : "=m" (
de°
)

2010 : "m" (
§c
)

2013 
__X86_ISA_ASM_END__


2015 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

2017 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shuf
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

2018 
	}
}

2021 
	$x86_iß_pu≈ckldq_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

2023 
x86_ö°_xmm_ªg_t
 
de°
;

2024 
x86_ö°_xmm_ªg_t
 
§c
;

2026 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

2027 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

2029 
__X86_ISA_ASM_START__


2030 
asm
 volatile (

2035 : "=m" (
de°
)

2036 : "m" (
§c
)

2039 
__X86_ISA_ASM_END__


2041 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

2043 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shuf
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

2044 
	}
}

2047 
	$x86_iß_pu≈cklqdq_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

2049 
x86_ö°_xmm_ªg_t
 
de°
;

2050 
x86_ö°_xmm_ªg_t
 
§c
;

2052 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

2053 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

2055 
__X86_ISA_ASM_START__


2056 
asm
 volatile (

2061 : "=m" (
de°
)

2062 : "m" (
§c
)

2065 
__X86_ISA_ASM_END__


2067 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

2069 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shuf
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

2070 
	}
}

2073 
	$x86_iß_px‹_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

2075 
x86_ö°_xmm_ªg_t
 
de°
;

2076 
x86_ö°_xmm_ªg_t
 
§c
;

2078 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

2079 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

2081 
__X86_ISA_ASM_START__


2082 
asm
 volatile (

2087 : "=m" (
de°
)

2088 : "m" (
§c
)

2091 
__X86_ISA_ASM_END__


2093 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

2095 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_x‹
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

2096 
	}
}

2099 
	$x86_iß_sqπpd_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

2101 
x86_ö°_xmm_ªg_t
 
de°
;

2102 
x86_ö°_xmm_ªg_t
 
§c
;

2104 
•ec_mode
;

2106 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

2107 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

2111 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

2112 i‡(!
•ec_mode
)

2114 
__X86_ISA_ASM_START__


2115 
asm
 volatile (

2120 : "=m" (
de°
)

2121 : "m" (
§c
)

2124 
__X86_ISA_ASM_END__


2127 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

2129 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_sqπ
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

2130 
	}
}

2133 
	$x86_iß_sqπsd_xmm_xmmm64_im∂
(
X86C⁄ãxt
 *
˘x
)

2135 
x86_ö°_xmm_ªg_t
 
de°
;

2136 
x86_ö°_xmm_ªg_t
 
§c
;

2138 
•ec_mode
;

2140 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

2141 
	`X86C⁄ãxtLﬂdXMMM64
(
˘x
, 
§c
.
as_uch¨
);

2145 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

2146 i‡(!
•ec_mode
)

2148 
__X86_ISA_ASM_START__


2149 
asm
 volatile (

2154 : "=m" (
de°
)

2155 : "m" (
§c
)

2158 
__X86_ISA_ASM_END__


2161 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

2163 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_sqπ
, 
x86_dï_xmmm64
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

2164 
	}
}

2167 
	$x86_iß_subpd_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

2169 
x86_ö°_xmm_ªg_t
 
de°
;

2170 
x86_ö°_xmm_ªg_t
 
§c
;

2172 
•ec_mode
;

2174 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

2175 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

2179 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

2180 i‡(!
•ec_mode
)

2182 
__X86_ISA_ASM_START__


2183 
asm
 volatile (

2188 : "=m" (
de°
)

2189 : "m" (
§c
)

2192 
__X86_ISA_ASM_END__


2195 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

2197 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_sub
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

2198 
	}
}

2201 
	$x86_iß_subsd_xmm_xmmm64_im∂
(
X86C⁄ãxt
 *
˘x
)

2203 
x86_ö°_xmm_ªg_t
 
de°
;

2204 
x86_ö°_xmm_ªg_t
 
§c
;

2206 
•ec_mode
;

2208 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

2209 
	`X86C⁄ãxtLﬂdXMMM64
(
˘x
, 
§c
.
as_uch¨
);

2213 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

2214 i‡(!
•ec_mode
)

2216 
__X86_ISA_ASM_START__


2217 
asm
 volatile (

2222 : "=m" (
de°
)

2223 : "m" (
§c
)

2226 
__X86_ISA_ASM_END__


2229 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

2231 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_Â_sub
, 
x86_dï_xmmm64
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

2232 
	}
}

2235 
	$x86_iß_u≈ckhpd_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

2237 
x86_ö°_xmm_ªg_t
 
de°
;

2238 
x86_ö°_xmm_ªg_t
 
§c
;

2240 
•ec_mode
;

2242 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

2243 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

2247 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

2248 i‡(!
•ec_mode
)

2250 
__X86_ISA_ASM_START__


2251 
asm
 volatile (

2256 : "=m" (
de°
)

2257 : "m" (
§c
)

2260 
__X86_ISA_ASM_END__


2263 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

2265 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shuf
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

2266 
	}
}

2269 
	$x86_iß_u≈ckÕd_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

2271 
x86_ö°_xmm_ªg_t
 
de°
;

2272 
x86_ö°_xmm_ªg_t
 
§c
;

2274 
•ec_mode
;

2276 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

2277 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

2281 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

2282 i‡(!
•ec_mode
)

2284 
__X86_ISA_ASM_START__


2285 
asm
 volatile (

2290 : "=m" (
de°
)

2291 : "m" (
§c
)

2294 
__X86_ISA_ASM_END__


2297 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

2299 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_shuf
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

2300 
	}
}

2303 
	$x86_iß_x‹pd_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

2305 
x86_ö°_xmm_ªg_t
 
de°
;

2306 
x86_ö°_xmm_ªg_t
 
§c
;

2308 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

2309 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

2311 
__X86_ISA_ASM_START__


2312 
asm
 volatile (

2317 : "=m" (
de°
)

2318 : "m" (
§c
)

2321 
__X86_ISA_ASM_END__


2323 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

2325 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_x‹
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

2326 
	}
}

	@emu/machine-sse3.c

21 
	~"iß.h
"

25 
	#mem_ac˚ss
 
__COMPILATION_ERROR__


	)

26 
	#mem_ªad
 
__COMPILATION_ERROR__


	)

27 
	#mem_wrôe
 
__COMPILATION_ERROR__


	)

28 
	#mem_zîo
 
__COMPILATION_ERROR__


	)

29 
	#mem_ªad_°rög
 
__COMPILATION_ERROR__


	)

30 
	#mem_wrôe_°rög
 
__COMPILATION_ERROR__


	)

31 
	#mem_gë_buf„r
 
__COMPILATION_ERROR__


	)

32 
	#Áèl
 
__COMPILATION_ERROR__


	)

33 
	#∑nic
 
__COMPILATION_ERROR__


	)

34 
	#w¨nög
 
__COMPILATION_ERROR__


	)

35 #ifde‡
as£π


36 #unde‡
as£π


38 
	#as£π
 
__COMPILATION_ERROR__


	)

41 
	$x86_iß_∑ligƒ_xmm_xmmm128_imm8_im∂
(
X86C⁄ãxt
 *
˘x
)

43 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ im∂emíãd", 
__FUNCTION__
);

44 
	}
}

47 
	$x86_iß_pshufb_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

49 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ im∂emíãd", 
__FUNCTION__
);

50 
	}
}

	@emu/machine-sse4.c

21 
	~"iß.h
"

22 
	~"machöe.h
"

23 
	~"uö°.h
"

27 
	#mem_ac˚ss
 
__COMPILATION_ERROR__


	)

28 
	#mem_ªad
 
__COMPILATION_ERROR__


	)

29 
	#mem_wrôe
 
__COMPILATION_ERROR__


	)

30 
	#mem_zîo
 
__COMPILATION_ERROR__


	)

31 
	#mem_ªad_°rög
 
__COMPILATION_ERROR__


	)

32 
	#mem_wrôe_°rög
 
__COMPILATION_ERROR__


	)

33 
	#mem_gë_buf„r
 
__COMPILATION_ERROR__


	)

34 
	#Áèl
 
__COMPILATION_ERROR__


	)

35 
	#∑nic
 
__COMPILATION_ERROR__


	)

36 
	#w¨nög
 
__COMPILATION_ERROR__


	)

37 #ifde‡
as£π


38 #unde‡
as£π


40 
	#as£π
 
__COMPILATION_ERROR__


	)

43 #i‚de‡
HAVE_SSE4


44 *
	gx86_iß_îr_s£4
 =

52 
	$x86_iß_pcm≥qq_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

54 #ifde‡
HAVE_SSE4


55 
x86_ö°_xmm_ªg_t
 
de°
;

56 
x86_ö°_xmm_ªg_t
 
§c
;

58 
	`X86C⁄ãxtLﬂdXMM
(
˘x
, 
de°
.
as_uch¨
);

59 
	`X86C⁄ãxtLﬂdXMMM128
(
˘x
, 
§c
.
as_uch¨
);

61 
__X86_ISA_ASM_START__


62 
asm
 volatile (

67 : "=m" (
de°
)

68 : "m" (
§c
)

71 
__X86_ISA_ASM_END__


73 
	`X86C⁄ãxtSt‹eXMM
(
˘x
, 
de°
.
as_uch¨
);

75 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_xmm_comp
, 
x86_dï_xmmm128
, 
x86_dï_xmm
, 0, x86_dep_xmm, 0, 0, 0);

78 
	`X86C⁄ãxtEº‹
(
˘x
, "%s: SSE4 instructionÇot supported.\n%s",

79 
__FUNCTION__
, 
x86_iß_îr_s£4
);

81 
	}
}

84 
	$x86_iß_pcmpi°ri_xmm_xmmm128_imm8_im∂
(
X86C⁄ãxt
 *
˘x
)

86 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ im∂emíãd", 
__FUNCTION__
);

87 
	}
}

90 
	$x86_iß_pö§b_xmm_r32m8_imm8_im∂
(
X86C⁄ãxt
 *
˘x
)

92 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ im∂emíãd", 
__FUNCTION__
);

93 
	}
}

96 
	$x86_iß_pö§d_xmm_rm32_imm8_im∂
(
X86C⁄ãxt
 *
˘x
)

98 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ im∂emíãd", 
__FUNCTION__
);

99 
	}
}

102 
	$x86_iß_±e°_xmm_xmmm128_im∂
(
X86C⁄ãxt
 *
˘x
)

104 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ im∂emíãd", 
__FUNCTION__
);

105 
	}
}

	@emu/machine-std.c

21 
	~"c⁄ãxt.h
"

22 
	~"iß.h
"

23 
	~"machöe.h
"

24 
	~"ªgs.h
"

25 
	~"uö°.h
"

29 
	#mem_ac˚ss
 
__COMPILATION_ERROR__


	)

30 
	#mem_ªad
 
__COMPILATION_ERROR__


	)

31 
	#mem_wrôe
 
__COMPILATION_ERROR__


	)

32 
	#mem_zîo
 
__COMPILATION_ERROR__


	)

33 
	#mem_ªad_°rög
 
__COMPILATION_ERROR__


	)

34 
	#mem_wrôe_°rög
 
__COMPILATION_ERROR__


	)

35 
	#mem_gë_buf„r
 
__COMPILATION_ERROR__


	)

36 
	#Áèl
 
__COMPILATION_ERROR__


	)

37 
	#∑nic
 
__COMPILATION_ERROR__


	)

38 
	#w¨nög
 
__COMPILATION_ERROR__


	)

39 #ifde‡
as£π


40 #unde‡
as£π


42 
	#as£π
 
__COMPILATION_ERROR__


	)

45 
	#›_°d›_Æ_imm8
(
°d›
, 
wb
, 
cö
, 
uö°
) \

46 
x86_iß_
##
°d›
##
	`_Æ_imm8_im∂
(
X86C⁄ãxt
 *
˘x
) \

48 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs; \

49 
Æ
 = 
	`X86C⁄ãxtLﬂdReg
(
˘x
, 
x86_ö°_ªg_Æ
); \

50 
imm8
 = 
˘x
->
ö°
.
imm
.
b
; \

51 
Êags
 = 
ªgs
->
eÊags
; \

52 
x86_dï_t
 
cö_dï
 = 
cö
 ? 
x86_dï_cf
 : 0; \

53 
__X86_ISA_ASM_START__
 \

54 
asm
 volatile ( \

62 : "=g" (
Êags
), "=m" (
Æ
) \

63 : "m" (
Æ
), "m" (
imm8
), "g" (
Êags
) \

66 
__X86_ISA_ASM_END__
 \

67 i‡(
wb
) { \

68 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_Æ
, 
Æ
); \

69 
	`x86_uö°_√w
(
˘x
, 
uö°
, 
x86_dï_óx
, 
cö_dï
, 0, x86_dï_óx, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
); \

71 
	`x86_uö°_√w
(
˘x
, 
uö°
, 
x86_dï_óx
, 
cö_dï
, 0, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
, 0); \

73 
ªgs
->
eÊags
 = 
Êags
; \

74 }

	)

77 
	#›_°d›_ax_imm16
(
°d›
, 
wb
, 
cö
, 
uö°
) \

78 
x86_iß_
##
°d›
##
	`_ax_imm16_im∂
(
X86C⁄ãxt
 *
˘x
) \

80 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs; \

81 
ax
 = 
	`X86C⁄ãxtLﬂdReg
(
˘x
, 
x86_ö°_ªg_ax
); \

82 
imm16
 = 
˘x
->
ö°
.
imm
.
w
; \

83 
Êags
 = 
ªgs
->
eÊags
; \

84 
x86_dï_t
 
cö_dï
 = 
cö
 ? 
x86_dï_cf
 : 0; \

85 
__X86_ISA_ASM_START__
 \

86 
asm
 volatile ( \

94 : "=g" (
Êags
), "=m" (
ax
) \

95 : "m" (
ax
), "m" (
imm16
), "g" (
Êags
) \

98 
__X86_ISA_ASM_END__
 \

99 i‡(
wb
) { \

100 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_ax
, 
ax
); \

101 
	`x86_uö°_√w
(
˘x
, 
uö°
, 
x86_dï_óx
, 
cö_dï
, 0, x86_dï_óx, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
); \

103 
	`x86_uö°_√w
(
˘x
, 
uö°
, 
x86_dï_óx
, 
cö_dï
, 0, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
, 0); \

105 
ªgs
->
eÊags
 = 
Êags
; \

106 }

	)

109 
	#›_°d›_óx_imm32
(
°d›
, 
wb
, 
cö
, 
uö°
) \

110 
x86_iß_
##
°d›
##
	`_óx_imm32_im∂
(
X86C⁄ãxt
 *
˘x
) \

112 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs; \

113 
óx
 = 
	`X86C⁄ãxtLﬂdReg
(
˘x
, 
x86_ö°_ªg_óx
); \

114 
imm32
 = 
˘x
->
ö°
.
imm
.
d
; \

115 
Êags
 = 
ªgs
->
eÊags
; \

116 
x86_dï_t
 
cö_dï
 = 
cö
 ? 
x86_dï_cf
 : 0; \

117 
__X86_ISA_ASM_START__
 \

118 
asm
 volatile ( \

126 : "=g" (
Êags
), "=m" (
óx
) \

127 : "m" (
óx
), "m" (
imm32
), "g" (
Êags
) \

130 
__X86_ISA_ASM_END__
 \

131 i‡(
wb
) { \

132 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_óx
, 
óx
); \

133 
	`x86_uö°_√w
(
˘x
, 
uö°
, 
x86_dï_óx
, 
cö_dï
, 0, x86_dï_óx, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
); \

135 
	`x86_uö°_√w
(
˘x
, 
uö°
, 
x86_dï_óx
, 
cö_dï
, 0, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
, 0); \

137 
ªgs
->
eÊags
 = 
Êags
; \

138 }

	)

141 
	#›_°d›_rm8_imm8
(
°d›
, 
wb
, 
cö
, 
uö°
) \

142 
x86_iß_
##
°d›
##
	`_rm8_imm8_im∂
(
X86C⁄ãxt
 *
˘x
) \

144 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs; \

145 
rm8
 = 
	`X86C⁄ãxtLﬂdRm8
(
˘x
); \

146 
imm8
 = 
˘x
->
ö°
.
imm
.
b
; \

147 
Êags
 = 
ªgs
->
eÊags
; \

148 
x86_dï_t
 
cö_dï
 = 
cö
 ? 
x86_dï_cf
 : 0; \

149 
__X86_ISA_ASM_START__
 \

150 
asm
 volatile ( \

158 : "=g" (
Êags
), "=m" (
rm8
) \

159 : "m" (
rm8
), "m" (
imm8
), "g" (
Êags
) \

162 
__X86_ISA_ASM_END__
 \

163 i‡(
wb
) { \

164 
	`X86C⁄ãxtSt‹eRm8
(
˘x
, 
rm8
); \

165 
	`x86_uö°_√w
(
˘x
, 
uö°
, 
x86_dï_rm8
, 
cö_dï
, 0, x86_dï_rm8, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
); \

167 
	`x86_uö°_√w
(
˘x
, 
uö°
, 
x86_dï_rm8
, 
cö_dï
, 0, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
, 0); \

169 
ªgs
->
eÊags
 = 
Êags
; \

170 }

	)

173 
	#›_°d›_rm16_imm16
(
°d›
, 
wb
, 
cö
, 
uö°
) \

174 
x86_iß_
##
°d›
##
	`_rm16_imm16_im∂
(
X86C⁄ãxt
 *
˘x
) \

176 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs; \

177 
rm16
 = 
	`X86C⁄ãxtLﬂdRm16
(
˘x
); \

178 
imm16
 = 
˘x
->
ö°
.
imm
.
w
; \

179 
Êags
 = 
ªgs
->
eÊags
; \

180 
x86_dï_t
 
cö_dï
 = 
cö
 ? 
x86_dï_cf
 : 0; \

181 
__X86_ISA_ASM_START__
 \

182 
asm
 volatile ( \

190 : "=g" (
Êags
), "=m" (
rm16
) \

191 : "m" (
rm16
), "m" (
imm16
), "g" (
Êags
) \

194 
__X86_ISA_ASM_END__
 \

195 i‡(
wb
) { \

196 
	`X86C⁄ãxtSt‹eRm16
(
˘x
, 
rm16
); \

197 
	`x86_uö°_√w
(
˘x
, 
uö°
, 
x86_dï_rm16
, 
cö_dï
, 0, x86_dï_rm16, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
); \

199 
	`x86_uö°_√w
(
˘x
, 
uö°
, 
x86_dï_rm16
, 
cö_dï
, 0, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
, 0); \

201 
ªgs
->
eÊags
 = 
Êags
; \

202 }

	)

205 
	#›_°d›_rm32_imm32
(
°d›
, 
wb
, 
cö
, 
uö°
) \

206 
x86_iß_
##
°d›
##
	`_rm32_imm32_im∂
(
X86C⁄ãxt
 *
˘x
) \

208 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs; \

209 
rm32
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
); \

210 
imm32
 = 
˘x
->
ö°
.
imm
.
d
; \

211 
Êags
 = 
ªgs
->
eÊags
; \

212 
x86_dï_t
 
cö_dï
 = 
cö
 ? 
x86_dï_cf
 : 0; \

213 
__X86_ISA_ASM_START__
 \

214 
asm
 volatile ( \

222 : "=g" (
Êags
), "=m" (
rm32
) \

223 : "m" (
rm32
), "m" (
imm32
), "g" (
Êags
) \

226 
__X86_ISA_ASM_END__
 \

227 i‡(
wb
) { \

228 
	`X86C⁄ãxtSt‹eRm32
(
˘x
, 
rm32
); \

229 
	`x86_uö°_√w
(
˘x
, 
uö°
, 
x86_dï_rm32
, 
cö_dï
, 0, x86_dï_rm32, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
); \

231 
	`x86_uö°_√w
(
˘x
, 
uö°
, 
x86_dï_rm32
, 
cö_dï
, 0, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
, 0); \

233 
ªgs
->
eÊags
 = 
Êags
; \

234 }

	)

237 
	#›_°d›_rm16_imm8
(
°d›
, 
wb
, 
cö
, 
uö°
) \

238 
x86_iß_
##
°d›
##
	`_rm16_imm8_im∂
(
X86C⁄ãxt
 *
˘x
) \

240 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs; \

241 
rm16
 = 
	`X86C⁄ãxtLﬂdRm16
(
˘x
); \

242 
imm8
 = (Ë
˘x
->
ö°
.
imm
.
b
; \

243 
Êags
 = 
ªgs
->
eÊags
; \

244 
x86_dï_t
 
cö_dï
 = 
cö
 ? 
x86_dï_cf
 : 0; \

245 
__X86_ISA_ASM_START__
 \

246 
asm
 volatile ( \

254 : "=g" (
Êags
), "=m" (
rm16
) \

255 : "m" (
rm16
), "m" (
imm8
), "g" (
Êags
) \

258 
__X86_ISA_ASM_END__
 \

259 i‡(
wb
) { \

260 
	`X86C⁄ãxtSt‹eRm16
(
˘x
, 
rm16
); \

261 
	`x86_uö°_√w
(
˘x
, 
uö°
, 
x86_dï_rm16
, 
cö_dï
, 0, x86_dï_rm16, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
); \

263 
	`x86_uö°_√w
(
˘x
, 
uö°
, 
x86_dï_rm16
, 
cö_dï
, 0, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
, 0); \

265 
ªgs
->
eÊags
 = 
Êags
; \

266 }

	)

269 
	#›_°d›_rm32_imm8
(
°d›
, 
wb
, 
cö
, 
uö°
) \

270 
x86_iß_
##
°d›
##
	`_rm32_imm8_im∂
(
X86C⁄ãxt
 *
˘x
) \

272 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs; \

273 
rm32
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
); \

274 
imm8
 = (Ë
˘x
->
ö°
.
imm
.
b
; \

275 
Êags
 = 
ªgs
->
eÊags
; \

276 
x86_dï_t
 
cö_dï
 = 
cö
 ? 
x86_dï_cf
 : 0; \

277 
__X86_ISA_ASM_START__
 \

278 
asm
 volatile ( \

286 : "=g" (
Êags
), "=m" (
rm32
) \

287 : "m" (
rm32
), "m" (
imm8
), "g" (
Êags
) \

290 
__X86_ISA_ASM_END__
 \

291 i‡(
wb
) { \

292 
	`X86C⁄ãxtSt‹eRm32
(
˘x
, 
rm32
); \

293 
	`x86_uö°_√w
(
˘x
, 
uö°
, 
x86_dï_rm32
, 
cö_dï
, 0, x86_dï_rm32, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
); \

295 
	`x86_uö°_√w
(
˘x
, 
uö°
, 
x86_dï_rm32
, 
cö_dï
, 0, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
, 0); \

297 
ªgs
->
eÊags
 = 
Êags
; \

298 }

	)

301 
	#›_°d›_rm8_r8
(
°d›
, 
wb
, 
cö
, 
uö°
) \

302 
x86_iß_
##
°d›
##
	`_rm8_r8_im∂
(
X86C⁄ãxt
 *
˘x
) \

304 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs; \

305 
rm8
 = 
	`X86C⁄ãxtLﬂdRm8
(
˘x
); \

306 
r8
 = 
	`X86C⁄ãxtLﬂdR8
(
˘x
); \

307 
Êags
 = 
ªgs
->
eÊags
; \

308 
x86_dï_t
 
cö_dï
 = 
cö
 ? 
x86_dï_cf
 : 0; \

309 
__X86_ISA_ASM_START__
 \

310 
asm
 volatile ( \

318 : "=g" (
Êags
), "=m" (
rm8
) \

319 : "m" (
rm8
), "m" (
r8
), "g" (
Êags
) \

322 
__X86_ISA_ASM_END__
 \

323 i‡(
wb
) { \

324 
	`X86C⁄ãxtSt‹eRm8
(
˘x
, 
rm8
); \

325 
	`x86_uö°_√w
(
˘x
, 
uö°
, 
x86_dï_rm8
, 
x86_dï_r8
, 
cö_dï
, x86_dï_rm8, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
); \

327 
	`x86_uö°_√w
(
˘x
, 
uö°
, 
x86_dï_rm8
, 
x86_dï_r8
, 
cö_dï
, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
, 0); \

329 
ªgs
->
eÊags
 = 
Êags
; \

330 }

	)

333 
	#›_°d›_rm16_r16
(
°d›
, 
wb
, 
cö
, 
uö°
) \

334 
x86_iß_
##
°d›
##
	`_rm16_r16_im∂
(
X86C⁄ãxt
 *
˘x
) \

336 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs; \

337 
rm16
 = 
	`X86C⁄ãxtLﬂdRm16
(
˘x
); \

338 
r16
 = 
	`X86C⁄ãxtLﬂdR16
(
˘x
); \

339 
Êags
 = 
ªgs
->
eÊags
; \

340 
x86_dï_t
 
cö_dï
 = 
cö
 ? 
x86_dï_cf
 : 0; \

341 
__X86_ISA_ASM_START__
 \

342 
asm
 volatile ( \

350 : "=g" (
Êags
), "=m" (
rm16
) \

351 : "m" (
rm16
), "m" (
r16
), "g" (
Êags
) \

354 
__X86_ISA_ASM_END__
 \

355 i‡(
wb
) { \

356 
	`X86C⁄ãxtSt‹eRm16
(
˘x
, 
rm16
); \

357 
	`x86_uö°_√w
(
˘x
, 
uö°
, 
x86_dï_rm16
, 
x86_dï_r16
, 
cö_dï
, x86_dï_rm16, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
); \

359 
	`x86_uö°_√w
(
˘x
, 
uö°
, 
x86_dï_rm16
, 
x86_dï_r16
, 
cö_dï
, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
, 0); \

361 
ªgs
->
eÊags
 = 
Êags
; \

362 }

	)

365 
	#›_°d›_rm32_r32
(
°d›
, 
wb
, 
cö
, 
uö°
) \

366 
x86_iß_
##
°d›
##
	`_rm32_r32_im∂
(
X86C⁄ãxt
 *
˘x
) \

368 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs; \

369 
rm32
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
); \

370 
r32
 = 
	`X86C⁄ãxtLﬂdR32
(
˘x
); \

371 
Êags
 = 
ªgs
->
eÊags
; \

372 
x86_dï_t
 
cö_dï
 = 
cö
 ? 
x86_dï_cf
 : 0; \

373 
__X86_ISA_ASM_START__
 \

374 
asm
 volatile ( \

382 : "=g" (
Êags
), "=m" (
rm32
) \

383 : "m" (
rm32
), "m" (
r32
), "g" (
Êags
) \

386 
__X86_ISA_ASM_END__
 \

387 i‡(
wb
) { \

388 
	`X86C⁄ãxtSt‹eRm32
(
˘x
, 
rm32
); \

389 
	`x86_uö°_√w
(
˘x
, 
uö°
, 
x86_dï_rm32
, 
x86_dï_r32
, 
cö_dï
, x86_dï_rm32, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
); \

391 
	`x86_uö°_√w
(
˘x
, 
uö°
, 
x86_dï_rm32
, 
x86_dï_r32
, 
cö_dï
, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
, 0); \

393 
ªgs
->
eÊags
 = 
Êags
; \

394 }

	)

397 
	#›_°d›_r8_rm8
(
°d›
, 
wb
, 
cö
, 
uö°
) \

398 
x86_iß_
##
°d›
##
	`_r8_rm8_im∂
(
X86C⁄ãxt
 *
˘x
) \

400 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs; \

401 
r8
 = 
	`X86C⁄ãxtLﬂdR8
(
˘x
); \

402 
rm8
 = 
	`X86C⁄ãxtLﬂdRm8
(
˘x
); \

403 
Êags
 = 
ªgs
->
eÊags
; \

404 
x86_dï_t
 
cö_dï
 = 
cö
 ? 
x86_dï_cf
 : 0; \

405 
__X86_ISA_ASM_START__
 \

406 
asm
 volatile ( \

414 : "=g" (
Êags
), "=m" (
r8
) \

415 : "m" (
r8
), "m" (
rm8
), "g" (
Êags
) \

418 
__X86_ISA_ASM_END__
 \

419 i‡(
wb
) { \

420 
	`X86C⁄ãxtSt‹eR8
(
˘x
, 
r8
); \

421 
	`x86_uö°_√w
(
˘x
, 
uö°
, 
x86_dï_r8
, 
x86_dï_rm8
, 
cö_dï
, x86_dï_r8, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
); \

423 
	`x86_uö°_√w
(
˘x
, 
uö°
, 
x86_dï_r8
, 
x86_dï_rm8
, 
cö_dï
, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
, 0); \

425 
ªgs
->
eÊags
 = 
Êags
; \

426 }

	)

429 
	#›_°d›_r16_rm16
(
°d›
, 
wb
, 
cö
, 
uö°
) \

430 
x86_iß_
##
°d›
##
	`_r16_rm16_im∂
(
X86C⁄ãxt
 *
˘x
) \

432 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs; \

433 
r16
 = 
	`X86C⁄ãxtLﬂdR16
(
˘x
); \

434 
rm16
 = 
	`X86C⁄ãxtLﬂdRm16
(
˘x
); \

435 
Êags
 = 
ªgs
->
eÊags
; \

436 
x86_dï_t
 
cö_dï
 = 
cö
 ? 
x86_dï_cf
 : 0; \

437 
__X86_ISA_ASM_START__
 \

438 
asm
 volatile ( \

446 : "=g" (
Êags
), "=m" (
r16
) \

447 : "m" (
r16
), "m" (
rm16
), "g" (
Êags
) \

450 
__X86_ISA_ASM_END__
 \

451 i‡(
wb
) { \

452 
	`X86C⁄ãxtSt‹eR16
(
˘x
, 
r16
); \

453 
	`x86_uö°_√w
(
˘x
, 
uö°
, 
x86_dï_r16
, 
x86_dï_rm16
, 
cö_dï
, x86_dï_r16, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
); \

455 
	`x86_uö°_√w
(
˘x
, 
uö°
, 
x86_dï_r16
, 
x86_dï_rm16
, 
cö_dï
, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
, 0); \

457 
ªgs
->
eÊags
 = 
Êags
; \

458 }

	)

461 
	#›_°d›_r32_rm32
(
°d›
, 
wb
, 
cö
, 
uö°
) \

462 
x86_iß_
##
°d›
##
	`_r32_rm32_im∂
(
X86C⁄ãxt
 *
˘x
) \

464 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs; \

465 
r32
 = 
	`X86C⁄ãxtLﬂdR32
(
˘x
); \

466 
rm32
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
); \

467 
Êags
 = 
ªgs
->
eÊags
; \

468 
x86_dï_t
 
cö_dï
 = 
cö
 ? 
x86_dï_cf
 : 0; \

469 
__X86_ISA_ASM_START__
 \

470 
asm
 volatile ( \

478 : "=g" (
Êags
), "=m" (
r32
) \

479 : "m" (
r32
), "m" (
rm32
), "g" (
Êags
) \

482 
__X86_ISA_ASM_END__
 \

483 i‡(
wb
) { \

484 
	`X86C⁄ãxtSt‹eR32
(
˘x
, 
r32
); \

485 
	`x86_uö°_√w
(
˘x
, 
uö°
, 
x86_dï_r32
, 
x86_dï_rm32
, 
cö_dï
, x86_dï_r32, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
); \

487 
	`x86_uö°_√w
(
˘x
, 
uö°
, 
x86_dï_r32
, 
x86_dï_rm32
, 
cö_dï
, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
, 0); \

489 
ªgs
->
eÊags
 = 
Êags
; \

490 }

	)

502 
	#›_°d›_Æl
(
°d›
, 
wb
, 
cö
, 
uö°
) \

503 
	`›_°d›_Æ_imm8
(
°d›
, 
wb
, 
cö
, 
uö°
) \

504 
	`›_°d›_ax_imm16
(
°d›
, 
wb
, 
cö
, 
uö°
) \

505 
	`›_°d›_óx_imm32
(
°d›
, 
wb
, 
cö
, 
uö°
) \

506 
	`›_°d›_rm8_imm8
(
°d›
, 
wb
, 
cö
, 
uö°
) \

507 
	`›_°d›_rm16_imm16
(
°d›
, 
wb
, 
cö
, 
uö°
) \

508 
	`›_°d›_rm32_imm32
(
°d›
, 
wb
, 
cö
, 
uö°
) \

509 
	`›_°d›_rm16_imm8
(
°d›
, 
wb
, 
cö
, 
uö°
) \

510 
	`›_°d›_rm32_imm8
(
°d›
, 
wb
, 
cö
, 
uö°
) \

511 
	`›_°d›_rm8_r8
(
°d›
, 
wb
, 
cö
, 
uö°
) \

512 
	`›_°d›_rm16_r16
(
°d›
, 
wb
, 
cö
, 
uö°
) \

513 
	`›_°d›_rm32_r32
(
°d›
, 
wb
, 
cö
, 
uö°
) \

514 
	`›_°d›_r8_rm8
(
°d›
, 
wb
, 
cö
, 
uö°
) \

515 
	`›_°d›_r16_rm16
(
°d›
, 
wb
, 
cö
, 
uö°
) \

516 
	`›_°d›_r32_rm32
(
°d›
, 
wb
, 
cö
, 
uö°
)

	)

520 
	$›_°d›_Æl
(
adc
, 1, 1, 
x86_uö°_add
)

521 
	$›_°d›_Æl
(
add
, 1, 0, 
x86_uö°_add
)

522 
	$›_°d›_Æl
(
™d
, 1, 0, 
x86_uö°_™d
)

523 
	$›_°d›_Æl
(
cmp
, 0, 0, 
x86_uö°_sub
)

524 
	$›_°d›_Æl
(
‹
, 1, 0, 
x86_uö°_‹
)

525 
	$›_°d›_Æl
(
sbb
, 1, 1, 
x86_uö°_sub
)

526 
	$›_°d›_Æl
(
sub
, 1, 0, 
x86_uö°_sub
)

527 
	$›_°d›_Æl
(
ã°
, 0, 0, 
x86_uö°_™d
)

528 
	`›_°d›_Æl
(
x‹
, 1, 0, 
x86_uö°_x‹
)

	@emu/machine-str.c

21 
	~"c⁄ãxt.h
"

22 
	~"iß.h
"

23 
	~"machöe.h
"

24 
	~"ªgs.h
"

25 
	~"uö°.h
"

29 
	#mem_ac˚ss
 
__COMPILATION_ERROR__


	)

30 
	#mem_ªad
 
__COMPILATION_ERROR__


	)

31 
	#mem_wrôe
 
__COMPILATION_ERROR__


	)

32 
	#mem_zîo
 
__COMPILATION_ERROR__


	)

33 
	#mem_ªad_°rög
 
__COMPILATION_ERROR__


	)

34 
	#mem_wrôe_°rög
 
__COMPILATION_ERROR__


	)

35 
	#mem_gë_buf„r
 
__COMPILATION_ERROR__


	)

36 
	#Áèl
 
__COMPILATION_ERROR__


	)

37 
	#∑nic
 
__COMPILATION_ERROR__


	)

38 
	#w¨nög
 
__COMPILATION_ERROR__


	)

39 #ifde‡
as£π


40 #unde‡
as£π


42 
	#as£π
 
__COMPILATION_ERROR__


	)

46 
	$x86_iß_ªp_öô
(
X86C⁄ãxt
 *
˘x
)

48 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

50 i‡(
˘x
->
œ°_eù
 =˘x->
cuº_eù
)

52 
˘x
->
°r_›_cou¡
++;

56 
˘x
->
°r_›_cou¡
 = 0;

57 
˘x
->
°r_›_esi
 = 
ªgs
->
esi
;

58 
˘x
->
°r_›_edi
 = 
ªgs
->
edi
;

59 
˘x
->
°r_›_dú
 = 
ªgs
->
eÊags
 & (1 << 10) ? -1 : 1;

61 
	}
}

64 
	#OP_REP_IMPL
(
X
, 
SIZE
) \

65 
x86_iß_ªp_
##
X
##
	`_im∂
(
X86C⁄ãxt
 *
˘x
) \

67 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs; \

68 
	`x86_iß_ªp_öô
(
˘x
); \

70 i‡(
ªgs
->
ecx
) \

72 
x86_iß_
##
X
##
	`_run
(
˘x
); \

73 
ªgs
->
ecx
--; \

74 
ªgs
->
eù
 -
˘x
->
ö°
.
size
; \

77 
x86_iß_
##
X
##
	`_uö°
(
˘x
, \

78 
˘x
->
°r_›_esi
 + ctx->
°r_›_cou¡
 * (
SIZE
Ë* ctx->
°r_›_dú
, \

79 
˘x
->
°r_›_edi
 + ctx->
°r_›_cou¡
 * (
SIZE
Ë* ctx->
°r_›_dú
); \

80 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_sub
, 
x86_dï_ecx
, 0, 0, x86_dep_ecx, 0, 0, 0); \

81 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_ibønch
, 
x86_dï_ecx
, 0, 0, 0, 0, 0, 0); \

82 }

	)

85 
	#OP_REPZ_IMPL
(
X
, 
SIZE
) \

86 
x86_iß_ªpz_
##
X
##
	`_im∂
(
X86C⁄ãxt
 *
˘x
) \

88 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs; \

89 
	`x86_iß_ªp_öô
(
˘x
); \

91 i‡(
ªgs
->
ecx
) \

93 
x86_iß_
##
X
##
	`_run
(
˘x
); \

94 
ªgs
->
ecx
--; \

95 i‡(
	`X86C⁄ãxtGëFœg
(
˘x
, 
x86_ö°_Êag_zf
)) \

96 
ªgs
->
eù
 -
˘x
->
ö°
.
size
; \

99 
x86_iß_
##
X
##
	`_uö°
(
˘x
, \

100 
˘x
->
°r_›_esi
 + ctx->
°r_›_cou¡
 * (
SIZE
Ë* ctx->
°r_›_dú
, \

101 
˘x
->
°r_›_edi
 + ctx->
°r_›_cou¡
 * (
SIZE
Ë* ctx->
°r_›_dú
); \

102 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_sub
, 
x86_dï_ecx
, 0, 0, x86_dep_ecx, 0, 0, 0); \

103 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_ibønch
, 
x86_dï_ecx
, 
x86_dï_zps
, 0, 0, 0, 0, 0); \

104 }

	)

107 
	#OP_REPNZ_IMPL
(
X
, 
SIZE
) \

108 
x86_iß_ª≤z_
##
X
##
	`_im∂
(
X86C⁄ãxt
 *
˘x
) \

110 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs; \

111 
	`x86_iß_ªp_öô
(
˘x
); \

113 i‡(
ªgs
->
ecx
) \

115 
x86_iß_
##
X
##
	`_run
(
˘x
); \

116 
ªgs
->
ecx
--; \

117 i‡(!
	`X86C⁄ãxtGëFœg
(
˘x
, 
x86_ö°_Êag_zf
)) \

118 
ªgs
->
eù
 -
˘x
->
ö°
.
size
; \

121 
x86_iß_
##
X
##
	`_uö°
(
˘x
, \

122 
˘x
->
°r_›_esi
 + ctx->
°r_›_cou¡
 * (
SIZE
Ë* ctx->
°r_›_dú
, \

123 
˘x
->
°r_›_edi
 + ctx->
°r_›_cou¡
 * (
SIZE
Ë* ctx->
°r_›_dú
); \

124 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_sub
, 
x86_dï_ecx
, 0, 0, x86_dep_ecx, 0, 0, 0); \

125 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_ibønch
, 
x86_dï_ecx
, 
x86_dï_zps
, 0, 0, 0, 0, 0); \

126 }

	)

135 
	$x86_iß_cmpsb_uö°
(
X86C⁄ãxt
 *
˘x
, 
esi
, 
edi
)

137 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_lﬂd
, 
esi
, 1, 
x86_dï_esi
, 0, 0, 
x86_dï_aux
, 0, 0, 0);

138 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_lﬂd
, 
edi
, 1, 
x86_dï_edi
, 0, 0, 
x86_dï_aux2
, 0, 0, 0);

139 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_sub
, 
x86_dï_aux
, 
x86_dï_aux2
, 0, 
x86_dï_zps
, 
x86_dï_of
, 
x86_dï_cf
, 0);

141 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_add
, 
x86_dï_esi
, 
x86_dï_df
, 0, x86_dep_esi, 0, 0, 0);

142 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_add
, 
x86_dï_edi
, 
x86_dï_df
, 0, x86_dep_edi, 0, 0, 0);

143 
	}
}

146 
	$x86_iß_cmpsb_run
(
X86C⁄ãxt
 *
˘x
)

148 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

150 
›1
;

151 
›2
;

152 
Êags
;

154 
	`X86C⁄ãxtMemRód
(
˘x
, 
ªgs
->
esi
, 1, &
›1
);

155 
	`X86C⁄ãxtMemRód
(
˘x
, 
ªgs
->
edi
, 1, &
›2
);

156 
Êags
 = 
ªgs
->
eÊags
;

158 
__X86_ISA_ASM_START__


159 
asm
 volatile (

166 : "=g" (
Êags
)

167 : "g" (
Êags
), "m" (
›1
), "m" (
›2
)

170 
__X86_ISA_ASM_END__


172 
ªgs
->
eÊags
 = 
Êags
;

173 
ªgs
->
esi
 +
	`X86C⁄ãxtGëFœg
(
˘x
, 
x86_ö°_Êag_df
) ? -1 : 1;

174 
ªgs
->
edi
 +
	`X86C⁄ãxtGëFœg
(
˘x
, 
x86_ö°_Êag_df
) ? -1 : 1;

175 
	}
}

178 
	$x86_iß_cmpsb_im∂
(
X86C⁄ãxt
 *
˘x
)

180 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

182 
	`x86_iß_cmpsb_uö°
(
˘x
, 
ªgs
->
esi
,Ñegs->
edi
);

183 
	`x86_iß_cmpsb_run
(
˘x
);

184 
	}
}

193 
	$x86_iß_cmpsd_uö°
(
X86C⁄ãxt
 *
˘x
, 
esi
, 
edi
)

195 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_lﬂd
, 
esi
, 4, 
x86_dï_esi
, 0, 0, 
x86_dï_aux
, 0, 0, 0);

196 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_lﬂd
, 
edi
, 4, 
x86_dï_edi
, 0, 0, 
x86_dï_aux2
, 0, 0, 0);

197 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_sub
, 
x86_dï_aux
, 
x86_dï_aux2
, 0, 
x86_dï_zps
, 
x86_dï_of
, 
x86_dï_cf
, 0);

199 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_add
, 
x86_dï_esi
, 
x86_dï_df
, 0, x86_dep_esi, 0, 0, 0);

200 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_add
, 
x86_dï_edi
, 
x86_dï_df
, 0, x86_dep_edi, 0, 0, 0);

201 
	}
}

204 
	$x86_iß_cmpsd_run
(
X86C⁄ãxt
 *
˘x
)

206 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

208 
›1
;

209 
›2
;

210 
Êags
;

212 
	`X86C⁄ãxtMemRód
(
˘x
, 
ªgs
->
edi
, 4, &
›1
);

213 
	`X86C⁄ãxtMemRód
(
˘x
, 
ªgs
->
esi
, 4, &
›2
);

214 
Êags
 = 
ªgs
->
eÊags
;

216 
__X86_ISA_ASM_START__
 \

217 
asm
 volatile (

224 : "=g" (
Êags
)

225 : "g" (
Êags
), "m" (
›1
), "m" (
›2
)

228 
__X86_ISA_ASM_END__
 \

230 
ªgs
->
eÊags
 = 
Êags
;

231 
ªgs
->
esi
 +
	`X86C⁄ãxtGëFœg
(
˘x
, 
x86_ö°_Êag_df
) ? -4 : 4;

232 
ªgs
->
edi
 +
	`X86C⁄ãxtGëFœg
(
˘x
, 
x86_ö°_Êag_df
) ? -4 : 4;

233 
	}
}

236 
	$x86_iß_cmpsd_im∂
(
X86C⁄ãxt
 *
˘x
)

238 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

240 
	`x86_iß_cmpsd_uö°
(
˘x
, 
ªgs
->
esi
,Ñegs->
edi
);

241 
	`x86_iß_cmpsd_run
(
˘x
);

242 
	}
}

251 
	$x86_iß_ösb_run
(
X86C⁄ãxt
 *
˘x
)

254 
	}
}

257 
	$x86_iß_ösb_uö°
(
X86C⁄ãxt
 *
˘x
, 
esi
, 
edi
)

260 
	}
}

263 
	$x86_iß_ösb_im∂
(
X86C⁄ãxt
 *
˘x
)

265 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

267 
	`x86_iß_ösb_uö°
(
˘x
, 
ªgs
->
esi
,Ñegs->
edi
);

268 
	`x86_iß_ösb_run
(
˘x
);

269 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ im∂emíãd", 
__FUNCTION__
);

270 
	}
}

279 
	$x86_iß_ösd_run
(
X86C⁄ãxt
 *
˘x
)

282 
	}
}

285 
	$x86_iß_ösd_uö°
(
X86C⁄ãxt
 *
˘x
, 
esi
, 
edi
)

288 
	}
}

291 
	$x86_iß_ösd_im∂
(
X86C⁄ãxt
 *
˘x
)

293 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

295 
	`x86_iß_ösd_uö°
(
˘x
, 
ªgs
->
esi
,Ñegs->
edi
);

296 
	`x86_iß_ösd_run
(
˘x
);

297 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ im∂emíãd", 
__FUNCTION__
);

298 
	}
}

307 
	$x86_iß_lodsb_run
(
X86C⁄ãxt
 *
˘x
)

310 
	}
}

313 
	$x86_iß_lodsb_uö°
(
X86C⁄ãxt
 *
˘x
, 
esi
, 
edi
)

316 
	}
}

319 
	$x86_iß_lodsb_im∂
(
X86C⁄ãxt
 *
˘x
)

321 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

323 
	`x86_iß_lodsb_uö°
(
˘x
, 
ªgs
->
esi
,Ñegs->
edi
);

324 
	`x86_iß_lodsb_run
(
˘x
);

325 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ im∂emíãd", 
__FUNCTION__
);

326 
	}
}

335 
	$x86_iß_lodsd_run
(
X86C⁄ãxt
 *
˘x
)

338 
	}
}

341 
	$x86_iß_lodsd_uö°
(
X86C⁄ãxt
 *
˘x
, 
esi
, 
edi
)

344 
	}
}

347 
	$x86_iß_lodsd_im∂
(
X86C⁄ãxt
 *
˘x
)

349 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

351 
	`x86_iß_lodsd_uö°
(
˘x
, 
ªgs
->
esi
,Ñegs->
edi
);

352 
	`x86_iß_lodsd_run
(
˘x
);

353 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ im∂emíãd", 
__FUNCTION__
);

354 
	}
}

363 
	$x86_iß_movsb_run
(
X86C⁄ãxt
 *
˘x
)

365 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

366 
m8
;

368 
	`X86C⁄ãxtMemRód
(
˘x
, 
ªgs
->
esi
, 1, &
m8
);

369 
	`X86C⁄ãxtMemWrôe
(
˘x
, 
ªgs
->
edi
, 1, &
m8
);

371 
ªgs
->
edi
 +
	`X86C⁄ãxtGëFœg
(
˘x
, 
x86_ö°_Êag_df
) ? -1 : 1;

372 
ªgs
->
esi
 +
	`X86C⁄ãxtGëFœg
(
˘x
, 
x86_ö°_Êag_df
) ? -1 : 1;

373 
	}
}

376 
	$x86_iß_movsb_uö°
(
X86C⁄ãxt
 *
˘x
, 
esi
, 
edi
)

378 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_lﬂd
, 
esi
, 1, 
x86_dï_esi
, 0, 0, 
x86_dï_aux
, 0, 0, 0);

379 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_°‹e
, 
edi
, 1, 
x86_dï_edi
, 
x86_dï_aux
, 0, 0, 0, 0, 0);

381 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_add
, 
x86_dï_edi
, 
x86_dï_df
, 0, x86_dep_edi, 0, 0, 0);

382 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_add
, 
x86_dï_esi
, 
x86_dï_df
, 0, x86_dep_esi, 0, 0, 0);

383 
	}
}

386 
	$x86_iß_movsb_im∂
(
X86C⁄ãxt
 *
˘x
)

388 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

390 
	`x86_iß_movsb_uö°
(
˘x
, 
ªgs
->
esi
,Ñegs->
edi
);

391 
	`x86_iß_movsb_run
(
˘x
);

392 
	}
}

401 
	$x86_iß_movsw_run
(
X86C⁄ãxt
 *
˘x
)

403 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

404 
m16
;

406 
	`X86C⁄ãxtMemRód
(
˘x
, 
ªgs
->
esi
, 2, &
m16
);

407 
	`X86C⁄ãxtMemWrôe
(
˘x
, 
ªgs
->
edi
, 2, &
m16
);

409 
ªgs
->
edi
 +
	`X86C⁄ãxtGëFœg
(
˘x
, 
x86_ö°_Êag_df
) ? -2 : 2;

410 
ªgs
->
esi
 +
	`X86C⁄ãxtGëFœg
(
˘x
, 
x86_ö°_Êag_df
) ? -2 : 2;

412 
	}
}

415 
	$x86_iß_movsw_uö°
(
X86C⁄ãxt
 *
˘x
, 
esi
, 
edi
)

417 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_lﬂd
, 
esi
, 1, 
x86_dï_esi
, 0, 0, 
x86_dï_aux
, 0, 0, 0);

418 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_°‹e
, 
edi
, 1, 
x86_dï_edi
, 
x86_dï_aux
, 0, 0, 0, 0, 0);

420 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_add
, 
x86_dï_edi
, 
x86_dï_df
, 0, x86_dep_edi, 0, 0, 0);

421 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_add
, 
x86_dï_esi
, 
x86_dï_df
, 0, x86_dep_esi, 0, 0, 0);

422 
	}
}

425 
	$x86_iß_movsw_im∂
(
X86C⁄ãxt
 *
˘x
)

427 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

429 
	`x86_iß_movsw_uö°
(
˘x
, 
ªgs
->
esi
,Ñegs->
edi
);

430 
	`x86_iß_movsw_run
(
˘x
);

431 
	}
}

439 
	$x86_iß_movsd_run
(
X86C⁄ãxt
 *
˘x
)

441 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

442 
m32
;

444 
	`X86C⁄ãxtMemRód
(
˘x
, 
ªgs
->
esi
, 4, &
m32
);

445 
	`X86C⁄ãxtMemWrôe
(
˘x
, 
ªgs
->
edi
, 4, &
m32
);

447 
ªgs
->
edi
 +
	`X86C⁄ãxtGëFœg
(
˘x
, 
x86_ö°_Êag_df
) ? -4 : 4;

448 
ªgs
->
esi
 +
	`X86C⁄ãxtGëFœg
(
˘x
, 
x86_ö°_Êag_df
) ? -4 : 4;

450 
	}
}

453 
	$x86_iß_movsd_uö°
(
X86C⁄ãxt
 *
˘x
, 
esi
, 
edi
)

455 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_lﬂd
, 
esi
, 4, 
x86_dï_esi
, 0, 0, 
x86_dï_aux
, 0, 0, 0);

456 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_°‹e
, 
edi
, 4, 
x86_dï_edi
, 
x86_dï_aux
, 0, 0, 0, 0, 0);

458 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_add
, 
x86_dï_edi
, 
x86_dï_df
, 0, x86_dep_edi, 0, 0, 0);

459 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_add
, 
x86_dï_esi
, 
x86_dï_df
, 0, x86_dep_esi, 0, 0, 0);

460 
	}
}

463 
	$x86_iß_movsd_im∂
(
X86C⁄ãxt
 *
˘x
)

465 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

467 
	`x86_iß_movsd_uö°
(
˘x
, 
ªgs
->
esi
,Ñegs->
edi
);

468 
	`x86_iß_movsd_run
(
˘x
);

469 
	}
}

478 
	$x86_iß_outsb_run
(
X86C⁄ãxt
 *
˘x
)

481 
	}
}

484 
	$x86_iß_outsb_uö°
(
X86C⁄ãxt
 *
˘x
, 
esi
, 
edi
)

487 
	}
}

490 
	$x86_iß_outsb_im∂
(
X86C⁄ãxt
 *
˘x
)

492 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

494 
	`x86_iß_outsb_uö°
(
˘x
, 
ªgs
->
esi
,Ñegs->
edi
);

495 
	`x86_iß_outsb_run
(
˘x
);

496 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ im∂emíãd", 
__FUNCTION__
);

497 
	}
}

506 
	$x86_iß_outsd_run
(
X86C⁄ãxt
 *
˘x
)

509 
	}
}

512 
	$x86_iß_outsd_uö°
(
X86C⁄ãxt
 *
˘x
, 
esi
, 
edi
)

515 
	}
}

518 
	$x86_iß_outsd_im∂
(
X86C⁄ãxt
 *
˘x
)

520 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

522 
	`x86_iß_outsd_uö°
(
˘x
, 
ªgs
->
esi
,Ñegs->
edi
);

523 
	`x86_iß_outsd_run
(
˘x
);

524 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ im∂emíãd", 
__FUNCTION__
);

525 
	}
}

534 
	$x86_iß_sˇsb_run
(
X86C⁄ãxt
 *
˘x
)

536 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

538 
Æ
 = 
	`X86C⁄ãxtLﬂdReg
(
˘x
, 
x86_ö°_ªg_Æ
);

539 
m8
;

540 
Êags
 = 
ªgs
->
eÊags
;

542 
	`X86C⁄ãxtMemRód
(
˘x
, 
ªgs
->
edi
, 1, &
m8
);

544 
__X86_ISA_ASM_START__
 \

545 
asm
 volatile (

552 : "=g" (
Êags
)

553 : "m" (
Æ
), "m" (
m8
), "g" (
Êags
)

556 
__X86_ISA_ASM_END__
 \

558 
ªgs
->
eÊags
 = 
Êags
;

559 
ªgs
->
edi
 +
	`X86C⁄ãxtGëFœg
(
˘x
, 
x86_ö°_Êag_df
) ? -1 : 1;

561 
	}
}

564 
	$x86_iß_sˇsb_uö°
(
X86C⁄ãxt
 *
˘x
, 
esi
, 
edi
)

566 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_lﬂd
, 
edi
, 1, 
x86_dï_edi
, 0, 0, 
x86_dï_aux
, 0, 0, 0);

567 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_sub
, 
x86_dï_aux
, 
x86_dï_óx
, 0, 
x86_dï_zps
, 
x86_dï_of
, 
x86_dï_cf
, 0);

568 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_add
, 
x86_dï_edi
, 
x86_dï_df
, 0, x86_dep_edi, 0, 0, 0);

569 
	}
}

572 
	$x86_iß_sˇsb_im∂
(
X86C⁄ãxt
 *
˘x
)

574 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

576 
	`x86_iß_sˇsb_uö°
(
˘x
, 
ªgs
->
esi
,Ñegs->
edi
);

577 
	`x86_iß_sˇsb_run
(
˘x
);

578 
	}
}

586 
	$x86_iß_sˇsd_run
(
X86C⁄ãxt
 *
˘x
)

588 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

590 
óx
 = 
	`X86C⁄ãxtLﬂdReg
(
˘x
, 
x86_ö°_ªg_óx
);

591 
m32
;

592 
Êags
 = 
ªgs
->
eÊags
;

594 
	`X86C⁄ãxtMemRód
(
˘x
, 
ªgs
->
edi
, 4, &
m32
);

596 
__X86_ISA_ASM_START__
 \

597 
asm
 volatile (

604 : "=g" (
Êags
)

605 : "m" (
óx
), "m" (
m32
), "g" (
Êags
)

608 
__X86_ISA_ASM_END__
 \

610 
ªgs
->
eÊags
 = 
Êags
;

611 
ªgs
->
edi
 +
	`X86C⁄ãxtGëFœg
(
˘x
, 
x86_ö°_Êag_df
) ? -4 : 4;

613 
	}
}

616 
	$x86_iß_sˇsd_uö°
(
X86C⁄ãxt
 *
˘x
, 
esi
, 
edi
)

618 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_lﬂd
, 
edi
, 4, 
x86_dï_edi
, 0, 0, 
x86_dï_aux
, 0, 0, 0);

619 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_sub
, 
x86_dï_aux
, 
x86_dï_óx
, 0, 
x86_dï_zps
, 
x86_dï_of
, 
x86_dï_cf
, 0);

620 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_add
, 
x86_dï_edi
, 
x86_dï_df
, 0, x86_dep_edi, 0, 0, 0);

621 
	}
}

624 
	$x86_iß_sˇsd_im∂
(
X86C⁄ãxt
 *
˘x
)

626 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

628 
	`x86_iß_sˇsd_uö°
(
˘x
, 
ªgs
->
esi
,Ñegs->
edi
);

629 
	`x86_iß_sˇsd_run
(
˘x
);

630 
	}
}

638 
	$x86_iß_°osb_run
(
X86C⁄ãxt
 *
˘x
)

640 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

642 
m8
 = 
	`X86C⁄ãxtLﬂdReg
(
˘x
, 
x86_ö°_ªg_Æ
);

643 
addr
 = 
	`X86C⁄ãxtLﬂdReg
(
˘x
, 
x86_ö°_ªg_edi
);

645 
	`X86C⁄ãxtMemWrôe
(
˘x
, 
addr
, 1, &
m8
);

646 
ªgs
->
edi
 +
	`X86C⁄ãxtGëFœg
(
˘x
, 
x86_ö°_Êag_df
) ? -1 : 1;

647 
	}
}

650 
	$x86_iß_°osb_uö°
(
X86C⁄ãxt
 *
˘x
, 
esi
, 
edi
)

652 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_°‹e
, 
edi
, 1, 
x86_dï_edi
, 
x86_dï_óx
, 0, 0, 0, 0, 0);

653 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_add
, 
x86_dï_edi
, 
x86_dï_df
, 0, x86_dep_edi, 0, 0, 0);

654 
	}
}

657 
	$x86_iß_°osb_im∂
(
X86C⁄ãxt
 *
˘x
)

659 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

661 
	`x86_iß_°osb_uö°
(
˘x
, 
ªgs
->
esi
,Ñegs->
edi
);

662 
	`x86_iß_°osb_run
(
˘x
);

663 
	}
}

672 
	$x86_iß_°osd_run
(
X86C⁄ãxt
 *
˘x
)

674 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

676 
m32
 = 
	`X86C⁄ãxtLﬂdReg
(
˘x
, 
x86_ö°_ªg_óx
);

677 
addr
 = 
	`X86C⁄ãxtLﬂdReg
(
˘x
, 
x86_ö°_ªg_edi
);

679 
	`X86C⁄ãxtMemWrôe
(
˘x
, 
addr
, 4, &
m32
);

680 
ªgs
->
edi
 +
	`X86C⁄ãxtGëFœg
(
˘x
, 
x86_ö°_Êag_df
) ? -4 : 4;

681 
	}
}

684 
	$x86_iß_°osd_uö°
(
X86C⁄ãxt
 *
˘x
, 
esi
, 
edi
)

686 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_°‹e
, 
edi
, 4, 
x86_dï_edi
, 
x86_dï_óx
, 0, 0, 0, 0, 0);

687 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_add
, 
x86_dï_edi
, 
x86_dï_df
, 0, x86_dep_edi, 0, 0, 0);

688 
	}
}

691 
	$x86_iß_°osd_im∂
(
X86C⁄ãxt
 *
˘x
)

693 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

695 
	`x86_iß_°osd_uö°
(
˘x
, 
ªgs
->
esi
,Ñegs->
edi
);

696 
	`x86_iß_°osd_run
(
˘x
);

697 
	}
}

706 
	$OP_REP_IMPL
(
ösb
, 1)

707 
	$OP_REP_IMPL
(
ösd
, 4)

709 
	$OP_REP_IMPL
(
movsb
, 1)

710 
	$OP_REP_IMPL
(
movsw
, 2)

711 
	$OP_REP_IMPL
(
movsd
, 4)

713 
	$OP_REP_IMPL
(
outsb
, 1)

714 
	$OP_REP_IMPL
(
outsd
, 4)

716 
	$OP_REP_IMPL
(
lodsb
, 1)

717 
	$OP_REP_IMPL
(
lodsd
, 4)

719 
	$OP_REP_IMPL
(
°osb
, 1)

720 
	$OP_REP_IMPL
(
°osd
, 4)

722 
	$OP_REPZ_IMPL
(
cmpsb
, 1)

723 
	$OP_REPZ_IMPL
(
cmpsd
, 4)

725 
	$OP_REPZ_IMPL
(
sˇsb
, 1)

726 
	$OP_REPZ_IMPL
(
sˇsd
, 4)

728 
	$OP_REPNZ_IMPL
(
cmpsb
, 1)

729 
	$OP_REPNZ_IMPL
(
cmpsd
, 4)

731 
	$OP_REPNZ_IMPL
(
sˇsb
, 1)

732 
	`OP_REPNZ_IMPL
(
sˇsd
, 4)

	@emu/machine.c

20 
	~<¨ch/comm⁄/¨ch.h
>

21 
	~<lib/utû/misc.h
>

23 
	~"c⁄ãxt.h
"

24 
	~"emu.h
"

25 
	~"iß.h
"

26 
	~"machöe.h
"

27 
	~"ªgs.h
"

28 
	~"sysˇŒ.h
"

29 
	~"uö°.h
"

33 
	#mem_ac˚ss
 
__COMPILATION_ERROR__


	)

34 
	#mem_ªad
 
__COMPILATION_ERROR__


	)

35 
	#mem_wrôe
 
__COMPILATION_ERROR__


	)

36 
	#mem_zîo
 
__COMPILATION_ERROR__


	)

37 
	#mem_ªad_°rög
 
__COMPILATION_ERROR__


	)

38 
	#mem_wrôe_°rög
 
__COMPILATION_ERROR__


	)

39 
	#mem_gë_buf„r
 
__COMPILATION_ERROR__


	)

40 
	#Áèl
 
__COMPILATION_ERROR__


	)

41 
	#∑nic
 
__COMPILATION_ERROR__


	)

42 
	#w¨nög
 
__COMPILATION_ERROR__


	)

43 #ifde‡
as£π


44 #unde‡
as£π


46 
	#as£π
 
__COMPILATION_ERROR__


	)

49 
	$x86_iß_bound_r16_rm32_im∂
(
X86C⁄ãxt
 *
˘x
)

51 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ im∂emíãd", 
__FUNCTION__
);

52 
	}
}

55 
	$x86_iß_bound_r32_rm64_im∂
(
X86C⁄ãxt
 *
˘x
)

57 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ im∂emíãd", 
__FUNCTION__
);

58 
	}
}

61 
	$x86_iß_bsf_r32_rm32_im∂
(
X86C⁄ãxt
 *
˘x
)

63 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

65 
r32
 = 
	`X86C⁄ãxtLﬂdR32
(
˘x
);

66 
rm32
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
);

67 
Êags
 = 
ªgs
->
eÊags
;

69 
__X86_ISA_ASM_START__


70 
asm
 volatile (

78 : "=g" (
Êags
), "=g" (
r32
)

79 : "g" (
r32
), "g" (
rm32
), "g" (
Êags
)

82 
__X86_ISA_ASM_END__


84 
	`X86C⁄ãxtSt‹eR32
(
˘x
, 
r32
);

85 
ªgs
->
eÊags
 = 
Êags
;

87 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_shi·
, 
x86_dï_rm32
, 0, 0, 
x86_dï_r32
, 
x86_dï_zps
, 0, 0);

88 
	}
}

91 
	$x86_iß_b§_r32_rm32_im∂
(
X86C⁄ãxt
 *
˘x
)

93 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

95 
r32
 = 
	`X86C⁄ãxtLﬂdR32
(
˘x
);

96 
rm32
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
);

97 
Êags
 = 
ªgs
->
eÊags
;

99 
__X86_ISA_ASM_START__


100 
asm
 volatile (

108 : "=g" (
Êags
), "=m" (
r32
)

109 : "m" (
r32
), "m" (
rm32
), "g" (
Êags
)

112 
__X86_ISA_ASM_END__


114 
	`X86C⁄ãxtSt‹eR32
(
˘x
, 
r32
);

115 
ªgs
->
eÊags
 = 
Êags
;

117 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_shi·
, 
x86_dï_rm32
, 0, 0, 
x86_dï_r32
, 
x86_dï_zps
, 0, 0);

118 
	}
}

121 
	$x86_iß_bsw≠_ú32_im∂
(
X86C⁄ãxt
 *
˘x
)

123 
ú32
 = 
	`X86C⁄ãxtLﬂdIR32
(
˘x
);

125 
__X86_ISA_ASM_START__


126 
asm
 volatile (

130 : "=g" (
ú32
)

131 : "g" (
ú32
)

134 
__X86_ISA_ASM_END__


136 
	`X86C⁄ãxtSt‹eIR32
(
˘x
, 
ú32
);

138 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_shi·
, 
x86_dï_ú32
, 0, 0, x86_dep_ir32, 0, 0, 0);

139 
	}
}

142 
	$x86_iß_bt_rm32_r32_im∂
(
X86C⁄ãxt
 *
˘x
)

144 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

146 
rm32
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
);

147 
r32
 = 
	`X86C⁄ãxtLﬂdR32
(
˘x
);

148 
Êags
 = 
ªgs
->
eÊags
;

150 
__X86_ISA_ASM_START__


151 
asm
 volatile (

159 : "=g" (
Êags
)

160 : "m" (
rm32
), "m" (
r32
), "g" (
Êags
)

163 
__X86_ISA_ASM_END__


165 
ªgs
->
eÊags
 = 
Êags
;

167 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_shi·
, 
x86_dï_rm32
, 
x86_dï_r32
, 0, 
x86_dï_cf
, 0, 0, 0);

168 
	}
}

171 
	$x86_iß_bt_rm32_imm8_im∂
(
X86C⁄ãxt
 *
˘x
)

173 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

175 
rm32
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
);

176 
imm8
 = 
˘x
->
ö°
.
imm
.
b
;

177 
Êags
 = 
ªgs
->
eÊags
;

179 
__X86_ISA_ASM_START__


180 
asm
 volatile (

188 : "=g" (
Êags
)

189 : "m" (
rm32
), "m" (
imm8
), "g" (
Êags
)

192 
__X86_ISA_ASM_END__


194 
ªgs
->
eÊags
 = 
Êags
;

196 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_shi·
, 
x86_dï_rm32
, 0, 0, 
x86_dï_cf
, 0, 0, 0);

197 
	}
}

200 
	$x86_iß_bts_rm32_imm8_im∂
(
X86C⁄ãxt
 *
˘x
)

202 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

204 
rm32
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
);

205 
imm8
 = 
˘x
->
ö°
.
imm
.
b
;

206 
Êags
 = 
ªgs
->
eÊags
;

208 
__X86_ISA_ASM_START__


209 
asm
 volatile (

218 : "=g" (
Êags
), "=m" (
rm32
)

219 : "m" (
rm32
), "m" (
imm8
), "g" (
Êags
)

222 
__X86_ISA_ASM_END__


224 
	`X86C⁄ãxtSt‹eRm32
(
˘x
, 
rm32
);

225 
ªgs
->
eÊags
 = 
Êags
;

227 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_shi·
, 
x86_dï_rm32
, 0, 0, x86_dï_rm32, 
x86_dï_cf
, 0, 0);

228 
	}
}

231 
	$x86_iß_ˇŒ_ªl32_im∂
(
X86C⁄ãxt
 *
˘x
)

233 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

235 
ªgs
->
e•
 -= 4;

236 
	`X86C⁄ãxtMemWrôe
(
˘x
, 
ªgs
->
e•
, 4, &ªgs->
eù
);

237 
˘x
->
èrgë_eù
 = 
ªgs
->
eù
 + ctx->
ö°
.
imm
.
d
;

238 
ªgs
->
eù
 = 
˘x
->
èrgë_eù
;

240 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_sub
, 
x86_dï_e•
, 0, 0, x86_dep_esp, 0, 0, 0);

241 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_efÁddr
, 
x86_dï_e•
, 0, 0, 
x86_dï_aux
, 0, 0, 0);

242 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_°‹e
, 
ªgs
->
e•
, 4, 
x86_dï_aux
, 0, 0, 0, 0, 0, 0);

243 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_ˇŒ
, 0, 0, 0, 0, 0, 0, 0);

244 
	}
}

247 
	$x86_iß_ˇŒ_rm32_im∂
(
X86C⁄ãxt
 *
˘x
)

249 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

251 
˘x
->
èrgë_eù
 = 
	`X86C⁄ãxtLﬂdRm32
(ctx);

252 
ªgs
->
e•
 -= 4;

253 
	`X86C⁄ãxtMemWrôe
(
˘x
, 
ªgs
->
e•
, 4, &ªgs->
eù
);

254 
ªgs
->
eù
 = 
˘x
->
èrgë_eù
;

256 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_sub
, 
x86_dï_e•
, 0, 0, x86_dep_esp, 0, 0, 0);

257 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_efÁddr
, 
x86_dï_e•
, 0, 0, 
x86_dï_aux
, 0, 0, 0);

258 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_°‹e
, 
ªgs
->
e•
, 4, 
x86_dï_aux
, 0, 0, 0, 0, 0, 0);

259 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_ˇŒ
, 
x86_dï_rm32
, 0, 0, 0, 0, 0, 0);

260 
	}
}

263 
	$x86_iß_cbw_im∂
(
X86C⁄ãxt
 *
˘x
)

265 
ax
 = (Ë
	`X86C⁄ãxtLﬂdReg
(
˘x
, 
x86_ö°_ªg_Æ
);

266 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_ax
, 
ax
);

268 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_sign
, 
x86_dï_óx
, 0, 0, x86_dep_eax, 0, 0, 0);

269 
	}
}

272 
	$x86_iß_cdq_im∂
(
X86C⁄ãxt
 *
˘x
)

274 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

275 
sig√d_óx
 = 
ªgs
->
óx
;

277 
ªgs
->
edx
 = 
sig√d_óx
 < 0 ? -1 : 0;

279 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_sign
, 
x86_dï_óx
, 0, 0, 
x86_dï_edx
, 0, 0, 0);

280 
	}
}

283 
	$x86_iß_˛d_im∂
(
X86C⁄ãxt
 *
˘x
)

285 
	`X86C⁄ãxtCÀ¨Fœg
(
˘x
, 
x86_ö°_Êag_df
);

287 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 0, 0, 0, 0, 
x86_dï_df
, 0, 0);

288 
	}
}

291 
	$x86_iß_cmpxchg_rm32_r32_im∂
(
X86C⁄ãxt
 *
˘x
)

293 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

295 
óx
 = 
ªgs
->eax;

296 
Êags
 = 
ªgs
->
eÊags
;

297 
rm32
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
);

298 
r32
 = 
	`X86C⁄ãxtLﬂdR32
(
˘x
);

300 
__X86_ISA_ASM_START__


301 
asm
 volatile (

312 : "=g" (
Êags
), "=m" (
óx
), "=m" (
rm32
)

313 : "g" (
Êags
), "m" (
óx
), "m" (
rm32
), "m" (
r32
)

316 
__X86_ISA_ASM_END__


318 
ªgs
->
eÊags
 = 
Êags
;

319 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_óx
, 
óx
);

320 
	`X86C⁄ãxtSt‹eRm32
(
˘x
, 
rm32
);

322 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_sub
, 
x86_dï_óx
, 
x86_dï_rm32
, 0, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
, 0);

323 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 
x86_dï_zps
, 
x86_dï_r32
, 0, 
x86_dï_rm32
, 0, 0, 0);

324 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 
x86_dï_cf
, 
x86_dï_rm32
, 0, 
x86_dï_óx
, 0, 0, 0);

325 
	}
}

328 
	$x86_iß_cmpxchg8b_m64_im∂
(
X86C⁄ãxt
 *
˘x
)

330 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

332 
óx
, 
ebx
, 
ecx
, 
edx
;

333 
edx_óx
, 
m64
;

335 
óx
 = 
ªgs
->eax;

336 
ebx
 = 
ªgs
->ebx;

337 
ecx
 = 
ªgs
->ecx;

338 
edx
 = 
ªgs
->edx;

339 
edx_óx
 = ((Ë
edx
 << 32Ë| 
óx
;

340 
m64
 = 
	`X86C⁄ãxtLﬂdM64
(
˘x
);

342 i‡(
edx_óx
 =
m64
)

344 
	`X86C⁄ãxtSëFœg
(
˘x
, 
x86_ö°_Êag_zf
);

345 
m64
 = ((Ë
ecx
 << 32Ë| 
ebx
;

346 
	`X86C⁄ãxtSt‹eM64
(
˘x
, 
m64
);

350 
	`X86C⁄ãxtCÀ¨Fœg
(
˘x
, 
x86_ö°_Êag_zf
);

351 
ªgs
->
edx
 = 
m64
 >> 32;

352 
ªgs
->
óx
 = 
m64
;

355 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_lﬂd
, 
	`X86C⁄ãxtEf„˘iveAddªss
(ctx), 8, 0, 0, 0,

356 
x86_dï_aux
, 0, 0, 0);

357 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_sub
, 
x86_dï_edx
, 
x86_dï_óx
, 
x86_dï_aux
,

358 
x86_dï_zps
, 0, 0, 0);

359 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_°‹e
, 
	`X86C⁄ãxtEf„˘iveAddªss
(˘x), 8, 
x86_dï_zps
, 
x86_dï_ecx
, 
x86_dï_ebx
,

360 
x86_dï_mem64
, 0, 0, 0);

361 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 
x86_dï_zps
, 0, 0,

362 
x86_dï_edx
, 
x86_dï_óx
, 0, 0);

363 
	}
}

366 
	$x86_iß_˝uid_im∂
(
X86C⁄ãxt
 *
˘x
)

368 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

369 
öfo
 = 0;

371 
ªgs
->
óx
)

376 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_óx
, 0x2);

377 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_ebx
, 0x756e6547);

378 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_ecx
, 0x6c65746e);

379 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_edx
, 0x49656e69);

384 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_óx
, 0x00000f29);

385 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_ebx
, 0x0102080b);

386 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_ecx
, 0x00004400);

389 
öfo
 = 
	`SETBITVALUE32
(info, 31, 1);

390 
öfo
 = 
	`SETBITVALUE32
(info, 29, 1);

391 
öfo
 = 
	`SETBITVALUE32
(info, 28, 1);

392 
öfo
 = 
	`SETBITVALUE32
(info, 27, 1);

393 
öfo
 = 
	`SETBITVALUE32
(info, 26, 0);

394 
öfo
 = 
	`SETBITVALUE32
(info, 25, 0);

395 
öfo
 = 
	`SETBITVALUE32
(info, 24, 1);

396 
öfo
 = 
	`SETBITVALUE32
(info, 23, 0);

397 
öfo
 = 
	`SETBITVALUE32
(info, 22, 1);

398 
öfo
 = 
	`SETBITVALUE32
(info, 21, 1);

399 
öfo
 = 
	`SETBITVALUE32
(info, 19, 1);

400 
öfo
 = 
	`SETBITVALUE32
(info, 18, 0);

401 
öfo
 = 
	`SETBITVALUE32
(info, 17, 1);

402 
öfo
 = 
	`SETBITVALUE32
(info, 16, 1);

403 
öfo
 = 
	`SETBITVALUE32
(info, 15, 1);

404 
öfo
 = 
	`SETBITVALUE32
(info, 14, 1);

405 
öfo
 = 
	`SETBITVALUE32
(info, 13, 1);

406 
öfo
 = 
	`SETBITVALUE32
(info, 12, 1);

407 
öfo
 = 
	`SETBITVALUE32
(info, 11, 1);

408 
öfo
 = 
	`SETBITVALUE32
(info, 9, 1);

409 
öfo
 = 
	`SETBITVALUE32
(info, 8, 1);

410 
öfo
 = 
	`SETBITVALUE32
(info, 7, 1);

411 
öfo
 = 
	`SETBITVALUE32
(info, 6, 1);

412 
öfo
 = 
	`SETBITVALUE32
(info, 5, 1);

413 
öfo
 = 
	`SETBITVALUE32
(info, 4, 1);

414 
öfo
 = 
	`SETBITVALUE32
(info, 3, 1);

415 
öfo
 = 
	`SETBITVALUE32
(info, 2, 1);

416 
öfo
 = 
	`SETBITVALUE32
(info, 1, 1);

417 
öfo
 = 
	`SETBITVALUE32
(info, 0, 1);

419 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_edx
, 
öfo
);

424 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_óx
, 0);

425 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_ebx
, 0);

426 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_ecx
, 0);

427 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_edx
, 0);

432 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_óx
, 0x80000004);

433 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_ebx
, 0);

434 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_ecx
, 0);

435 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_edx
, 0);

440 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_óx
, 0);

441 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_ebx
, 0);

442 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_ecx
, 0);

443 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_edx
, 0);

448 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_óx
, 0x20202020);

449 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_ebx
, 0x20202020);

450 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_ecx
, 0x20202020);

451 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_edx
, 0x20202020);

456 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_óx
, 0x6e492020);

457 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_ebx
, 0x286c6574);

458 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_ecx
, 0x58202952);

459 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_edx
, 0x286e6f65);

464 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_óx
, 0x20294d54);

465 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_ebx
, 0x20555043);

466 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_ecx
, 0x30382e32);

467 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_edx
, 0x7a4847);

472 
	`X86C⁄ãxtEº‹
(
˘x
, "ö° '˝uid'ÇŸ im∂emíãd f‹Éax=0x%x", 
ªgs
->
óx
);

475 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 0, 0, 0, 
x86_dï_óx
, 0, 0, 0);

476 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 0, 0, 0, 
x86_dï_ebx
, 0, 0, 0);

477 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 0, 0, 0, 
x86_dï_ecx
, 0, 0, 0);

478 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 0, 0, 0, 
x86_dï_edx
, 0, 0, 0);

479 
	}
}

482 
	$x86_iß_cwde_im∂
(
X86C⁄ãxt
 *
˘x
)

484 
óx
 = (Ë
	`X86C⁄ãxtLﬂdReg
(
˘x
, 
x86_ö°_ªg_ax
);

485 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_óx
, 
óx
);

487 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_sign
, 
x86_dï_óx
, 0, 0, x86_dep_eax, 0, 0, 0);

488 
	}
}

491 
	$x86_iß_dec_rm8_im∂
(
X86C⁄ãxt
 *
˘x
)

493 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

495 
rm8
 = 
	`X86C⁄ãxtLﬂdRm8
(
˘x
);

496 
Êags
 = 
ªgs
->
eÊags
;

498 
__X86_ISA_ASM_START__


499 
asm
 volatile (

507 : "=g" (
Êags
), "=g" (
rm8
)

508 : "g" (
rm8
), "g" (
Êags
)

511 
__X86_ISA_ASM_END__


513 
	`X86C⁄ãxtSt‹eRm8
(
˘x
, 
rm8
);

514 
ªgs
->
eÊags
 = 
Êags
;

516 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_sub
, 
x86_dï_rm8
, 0, 0, x86_dï_rm8, 
x86_dï_zps
, 
x86_dï_of
, 0);

517 
	}
}

520 
	$x86_iß_dec_rm16_im∂
(
X86C⁄ãxt
 *
˘x
)

522 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

524 
rm16
 = 
	`X86C⁄ãxtLﬂdRm16
(
˘x
);

525 
Êags
 = 
ªgs
->
eÊags
;

527 
__X86_ISA_ASM_START__


528 
asm
 volatile (

536 : "=g" (
Êags
), "=g" (
rm16
)

537 : "g" (
rm16
), "g" (
Êags
)

540 
__X86_ISA_ASM_END__


542 
	`X86C⁄ãxtSt‹eRm16
(
˘x
, 
rm16
);

543 
ªgs
->
eÊags
 = 
Êags
;

545 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_sub
, 
x86_dï_rm16
, 0, 0, x86_dï_rm16, 
x86_dï_zps
, 
x86_dï_of
, 0);

546 
	}
}

549 
	$x86_iß_dec_rm32_im∂
(
X86C⁄ãxt
 *
˘x
)

551 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

553 
rm32
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
);

554 
Êags
 = 
ªgs
->
eÊags
;

556 
__X86_ISA_ASM_START__


557 
asm
 volatile (

565 : "=g" (
Êags
), "=g" (
rm32
)

566 : "g" (
rm32
), "g" (
Êags
)

569 
__X86_ISA_ASM_END__


571 
	`X86C⁄ãxtSt‹eRm32
(
˘x
, 
rm32
);

572 
ªgs
->
eÊags
 = 
Êags
;

574 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_sub
, 
x86_dï_rm32
, 0, 0, x86_dï_rm32, 
x86_dï_zps
, 
x86_dï_of
, 0);

575 
	}
}

578 
	$x86_iß_dec_ú16_im∂
(
X86C⁄ãxt
 *
˘x
)

580 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

582 
ú16
 = 
	`X86C⁄ãxtLﬂdIR16
(
˘x
);

583 
Êags
 = 
ªgs
->
eÊags
;

585 
__X86_ISA_ASM_START__


586 
asm
 volatile (

594 : "=g" (
Êags
), "=g" (
ú16
)

595 : "g" (
ú16
), "g" (
Êags
)

598 
__X86_ISA_ASM_END__


600 
	`X86C⁄ãxtSt‹eIR16
(
˘x
, 
ú16
);

601 
ªgs
->
eÊags
 = 
Êags
;

603 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_sub
, 
x86_dï_ú16
, 0, 0, x86_dï_ú16, 
x86_dï_zps
, 
x86_dï_of
, 0);

604 
	}
}

607 
	$x86_iß_dec_ú32_im∂
(
X86C⁄ãxt
 *
˘x
)

609 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

611 
ú32
 = 
	`X86C⁄ãxtLﬂdIR32
(
˘x
);

612 
Êags
 = 
ªgs
->
eÊags
;

614 
__X86_ISA_ASM_START__


615 
asm
 volatile (

623 : "=g" (
Êags
), "=g" (
ú32
)

624 : "g" (
ú32
), "g" (
Êags
)

627 
__X86_ISA_ASM_END__


629 
	`X86C⁄ãxtSt‹eIR32
(
˘x
, 
ú32
);

630 
ªgs
->
eÊags
 = 
Êags
;

632 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_sub
, 
x86_dï_ú32
, 0, 0, x86_dï_ú32, 
x86_dï_zps
, 
x86_dï_of
, 0);

633 
	}
}

636 
	$x86_iß_div_rm8_im∂
(
X86C⁄ãxt
 *
˘x
)

638 
skù_emuœti⁄
;

639 
•ec_mode
;

641 
ax
 = 
	`X86C⁄ãxtLﬂdReg
(
˘x
, 
x86_ö°_ªg_ax
);

642 
rm8
 = 
	`X86C⁄ãxtLﬂdRm8
(
˘x
);

644 i‡(!
rm8
) {

645 
	`X86C⁄ãxtEº‹
(
˘x
, "%s: divisi⁄ by 0", 
__FUNCTION__
);

651 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

652 
skù_emuœti⁄
 = 
•ec_mode
 && 
ax
 > 0xff;

655 i‡(!
skù_emuœti⁄
)

657 
__X86_ISA_ASM_START__


658 
asm
 volatile (

663 : "=m" (
ax
)

664 : "m" (
ax
), "m" (
rm8
)

667 
__X86_ISA_ASM_END__


670 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_ax
, 
ax
);

672 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_div
, 
x86_dï_óx
, 
x86_dï_rm8
, 0, x86_dep_eax, 0, 0, 0);

673 
	}
}

676 
	$x86_iß_div_rm32_im∂
(
X86C⁄ãxt
 *
˘x
)

678 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

680 
•ec_mode
;

681 
skù_emuœti⁄
;

683 
óx
 = 
ªgs
->eax;

684 
edx
 = 
ªgs
->edx;

685 
rm32
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
);

687 i‡(!
rm32
) {

688 
	`X86C⁄ãxtEº‹
(
˘x
, "%s: divisi⁄ by 0", 
__FUNCTION__
);

694 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

695 
skù_emuœti⁄
 = 
•ec_mode
 && 
edx
;

698 i‡(!
skù_emuœti⁄
)

700 
__X86_ISA_ASM_START__


701 
asm
 volatile (

708 : "=m" (
óx
), "=m" (
edx
)

709 : "m" (
óx
), "m" (
edx
), "m" (
rm32
)

712 
__X86_ISA_ASM_END__


715 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_óx
, 
óx
);

716 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_edx
, 
edx
);

718 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_div
, 
x86_dï_edx
, 
x86_dï_óx
, 
x86_dï_rm32
, x86_dep_eax, x86_dep_edx, 0, 0);

719 
	}
}

722 
	$x86_iß_h…_im∂
(
X86C⁄ãxt
 *
˘x
)

724 
	`X86C⁄ãxtEº‹
(
˘x
, "%s: 'h…' in°ru˘i⁄", 
__FUNCTION__
);

725 
	}
}

728 
	$x86_iß_idiv_rm32_im∂
(
X86C⁄ãxt
 *
˘x
)

730 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

732 
•ec_mode
;

733 
skù_emuœti⁄
;

735 
óx
 = 
ªgs
->eax;

736 
edx
 = 
ªgs
->edx;

737 
rm32
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
);

739 i‡(!
rm32
)

741 
	`X86C⁄ãxtEº‹
(
˘x
, "%s: divisi⁄ by 0", 
__FUNCTION__
);

746 
skù_emuœti⁄
 = 0;

747 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

748 i‡(
•ec_mode
)

750 
edx_óx
 = ((Ë
edx
 << 32Ë| 
óx
;

751 i‡(
edx_óx
 > 0x7fffffffll ||Édx_eax < 0xffffffff80000000ll)

752 
skù_emuœti⁄
 = 1;

755 i‡(!
skù_emuœti⁄
)

757 
__X86_ISA_ASM_START__


758 
asm
 volatile (

765 : "=m" (
óx
), "=m" (
edx
)

766 : "m" (
óx
), "m" (
edx
), "m" (
rm32
)

769 
__X86_ISA_ASM_END__


772 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_óx
, 
óx
);

773 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_edx
, 
edx
);

775 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_div
, 
x86_dï_rm32
, 
x86_dï_óx
, 0, x86_dï_óx, 
x86_dï_edx
, 0, 0);

776 
	}
}

779 
	$x86_iß_imul_rm32_im∂
(
X86C⁄ãxt
 *
˘x
)

781 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

783 
óx
 = 
	`X86C⁄ãxtLﬂdReg
(
˘x
, 
x86_ö°_ªg_óx
);

784 
rm32
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
);

785 
Êags
 = 
ªgs
->
eÊags
;

786 
edx
;

788 
__X86_ISA_ASM_START__


789 
asm
 volatile (

799 : "=g" (
Êags
), "=m" (
edx
), "=m" (
óx
)

800 : "m" (
óx
), "m" (
rm32
), "g" (
Êags
)

803 
__X86_ISA_ASM_END__


805 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_óx
, 
óx
);

806 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_edx
, 
edx
);

807 
ªgs
->
eÊags
 = 
Êags
;

809 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_mu…
, 
x86_dï_rm32
, 
x86_dï_óx
, 0, x86_dï_óx, 
x86_dï_edx
, 
x86_dï_cf
, 
x86_dï_of
);

810 
	}
}

813 
	$x86_iß_imul_r32_rm32_im∂
(
X86C⁄ãxt
 *
˘x
)

815 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

817 
r32
 = 
	`X86C⁄ãxtLﬂdR32
(
˘x
);

818 
rm32
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
);

819 
Êags
 = 
ªgs
->
eÊags
;

821 
__X86_ISA_ASM_START__


822 
asm
 volatile (

831 : "=g" (
Êags
), "=m" (
r32
)

832 : "m" (
r32
), "m" (
rm32
), "g" (
Êags
)

835 
__X86_ISA_ASM_END__


837 
	`X86C⁄ãxtSt‹eR32
(
˘x
, 
r32
);

838 
ªgs
->
eÊags
 = 
Êags
;

840 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_mu…
, 
x86_dï_r32
, 
x86_dï_rm32
, 0, x86_dï_r32, 0, 
x86_dï_cf
, 
x86_dï_of
);

841 
	}
}

844 
	$x86_iß_imul_r32_rm32_imm8_im∂
(
X86C⁄ãxt
 *
˘x
)

846 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

848 
r32
;

849 
rm32
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
);

850 
imm8
 = (Ë
˘x
->
ö°
.
imm
.
b
;

851 
Êags
 = 
ªgs
->
eÊags
;

853 
__X86_ISA_ASM_START__


854 
asm
 volatile (

863 : "=g" (
Êags
), "=m" (
r32
)

864 : "m" (
rm32
), "m" (
imm8
), "g" (
Êags
)

867 
__X86_ISA_ASM_END__


869 
	`X86C⁄ãxtSt‹eR32
(
˘x
, 
r32
);

870 
ªgs
->
eÊags
 = 
Êags
;

872 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_mu…
, 
x86_dï_rm32
, 0, 0, 
x86_dï_r32
, 0, 
x86_dï_cf
, 
x86_dï_of
);

873 
	}
}

876 
	$x86_iß_imul_r32_rm32_imm32_im∂
(
X86C⁄ãxt
 *
˘x
)

878 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

880 
r32
;

881 
rm32
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
);

882 
imm32
 = 
˘x
->
ö°
.
imm
.
d
;

883 
Êags
 = 
ªgs
->
eÊags
;

885 
__X86_ISA_ASM_START__


886 
asm
 volatile (

895 : "=g" (
Êags
), "=m" (
r32
)

896 : "m" (
rm32
), "m" (
imm32
), "g" (
Êags
)

899 
__X86_ISA_ASM_END__


901 
	`X86C⁄ãxtSt‹eR32
(
˘x
, 
r32
);

902 
ªgs
->
eÊags
 = 
Êags
;

904 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_mu…
, 
x86_dï_rm32
, 0, 0, 
x86_dï_r32
, 0, 
x86_dï_cf
, 
x86_dï_of
);

905 
	}
}

908 
	$x86_iß_öc_rm8_im∂
(
X86C⁄ãxt
 *
˘x
)

910 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

912 
rm8
 = 
	`X86C⁄ãxtLﬂdRm8
(
˘x
);

913 
Êags
 = 
ªgs
->
eÊags
;

915 
__X86_ISA_ASM_START__


916 
asm
 volatile (

924 : "=g" (
Êags
), "=g" (
rm8
)

925 : "g" (
rm8
), "g" (
Êags
)

928 
__X86_ISA_ASM_END__


930 
	`X86C⁄ãxtSt‹eRm8
(
˘x
, 
rm8
);

931 
ªgs
->
eÊags
 = 
Êags
;

933 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_add
, 
x86_dï_rm8
, 0, 0, x86_dï_rm8, 0, 
x86_dï_zps
, 
x86_dï_of
);

934 
	}
}

937 
	$x86_iß_öc_rm16_im∂
(
X86C⁄ãxt
 *
˘x
)

939 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

941 
rm16
 = 
	`X86C⁄ãxtLﬂdRm16
(
˘x
);

942 
Êags
 = 
ªgs
->
eÊags
;

944 
__X86_ISA_ASM_START__


945 
asm
 volatile (

953 : "=g" (
Êags
), "=g" (
rm16
)

954 : "g" (
rm16
), "g" (
Êags
)

957 
__X86_ISA_ASM_END__


959 
	`X86C⁄ãxtSt‹eRm16
(
˘x
, 
rm16
);

960 
ªgs
->
eÊags
 = 
Êags
;

962 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_add
, 
x86_dï_rm16
, 0, 0, x86_dï_rm16, 0, 
x86_dï_zps
, 
x86_dï_of
);

963 
	}
}

966 
	$x86_iß_öc_rm32_im∂
(
X86C⁄ãxt
 *
˘x
)

968 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

970 
rm32
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
);

971 
Êags
 = 
ªgs
->
eÊags
;

973 
__X86_ISA_ASM_START__


974 
asm
 volatile (

982 : "=g" (
Êags
), "=g" (
rm32
)

983 : "g" (
rm32
), "g" (
Êags
)

986 
__X86_ISA_ASM_END__


988 
	`X86C⁄ãxtSt‹eRm32
(
˘x
, 
rm32
);

989 
ªgs
->
eÊags
 = 
Êags
;

991 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_add
, 
x86_dï_rm32
, 0, 0, x86_dï_rm32, 0, 
x86_dï_zps
, 
x86_dï_of
);

992 
	}
}

995 
	$x86_iß_öc_ú16_im∂
(
X86C⁄ãxt
 *
˘x
)

997 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

999 
ú16
 = 
	`X86C⁄ãxtLﬂdIR16
(
˘x
);

1000 
Êags
 = 
ªgs
->
eÊags
;

1002 
__X86_ISA_ASM_START__


1003 
asm
 volatile (

1011 : "=g" (
Êags
), "=g" (
ú16
)

1012 : "g" (
ú16
), "g" (
Êags
)

1015 
__X86_ISA_ASM_END__


1017 
	`X86C⁄ãxtSt‹eIR16
(
˘x
, 
ú16
);

1018 
ªgs
->
eÊags
 = 
Êags
;

1020 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_add
, 
x86_dï_ú16
, 0, 0, x86_dï_ú16, 0, 
x86_dï_zps
, 
x86_dï_of
);

1021 
	}
}

1024 
	$x86_iß_öc_ú32_im∂
(
X86C⁄ãxt
 *
˘x
)

1026 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1028 
ú32
 = 
	`X86C⁄ãxtLﬂdIR32
(
˘x
);

1029 
Êags
 = 
ªgs
->
eÊags
;

1031 
__X86_ISA_ASM_START__


1032 
asm
 volatile (

1040 : "=g" (
Êags
), "=g" (
ú32
)

1041 : "g" (
ú32
), "g" (
Êags
)

1044 
__X86_ISA_ASM_END__


1046 
	`X86C⁄ãxtSt‹eIR32
(
˘x
, 
ú32
);

1047 
ªgs
->
eÊags
 = 
Êags
;

1049 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_add
, 
x86_dï_ú32
, 0, 0, x86_dï_ú32, 0, 
x86_dï_zps
, 
x86_dï_of
);

1050 
	}
}

1053 
	$x86_iß_öt_3_im∂
(
X86C⁄ãxt
 *
˘x
)

1055 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ im∂emíãd", 
__FUNCTION__
);

1056 
	}
}

1059 
	$x86_iß_öt_imm8_im∂
(
X86C⁄ãxt
 *
˘x
)

1061 
•ec_mode
;

1062 
num
;

1065 
num
 = (Ë
˘x
->
ö°
.
imm
.
b
;

1066 i‡(
num
 != 0x80)

1067 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ suµ‹ãd f‹Çum !0x80", 
__FUNCTION__
);

1070 
•ec_mode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

1071 i‡(!
•ec_mode
)

1072 
	`X86C⁄ãxtSysˇŒ
(
˘x
);

1074 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_sysˇŒ
, 0, 0, 0, 0, 0, 0, 0);

1075 
	}
}

1078 
	$x86_iß_öto_im∂
(
X86C⁄ãxt
 *
˘x
)

1080 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ im∂emíãd", 
__FUNCTION__
);

1081 
	}
}

1085 
	$x86_iß_jmp_ªl8_im∂
(
X86C⁄ãxt
 *
˘x
)

1087 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1089 
˘x
->
èrgë_eù
 = 
ªgs
->
eù
 + (Ë˘x->
ö°
.
imm
.
b
;

1090 
ªgs
->
eù
 = 
˘x
->
èrgë_eù
;

1092 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_jump
, 0, 0, 0, 0, 0, 0, 0);

1093 
	}
}

1096 
	$x86_iß_jmp_ªl32_im∂
(
X86C⁄ãxt
 *
˘x
)

1098 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1100 
˘x
->
èrgë_eù
 = 
ªgs
->
eù
 + ctx->
ö°
.
imm
.
d
;

1101 
ªgs
->
eù
 = 
˘x
->
èrgë_eù
;

1103 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_jump
, 0, 0, 0, 0, 0, 0, 0);

1104 
	}
}

1107 
	$x86_iß_jmp_rm32_im∂
(
X86C⁄ãxt
 *
˘x
)

1109 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1111 
˘x
->
èrgë_eù
 = 
	`X86C⁄ãxtLﬂdRm32
(ctx);

1112 
ªgs
->
eù
 = 
˘x
->
èrgë_eù
;

1114 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_jump
, 
x86_dï_rm32
, 0, 0, 0, 0, 0, 0);

1115 
	}
}

1118 
	$x86_iß_Àa_r32_m_im∂
(
X86C⁄ãxt
 *
˘x
)

1120 
vÆue
 = 
	`X86C⁄ãxtEf„˘iveAddªss
(
˘x
);

1122 i‡(
˘x
->
ö°
.
£gmít
)

1124 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ suµ‹ãd f‹Åhi†£gmít", 
__FUNCTION__
);

1128 
	`X86C⁄ãxtSt‹eR32
(
˘x
, 
vÆue
);

1130 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_efÁddr
, 
x86_dï_ó£g
, 
x86_dï_óbas
, 
x86_dï_óidx
, 
x86_dï_r32
, 0, 0, 0);

1131 
	}
}

1134 
	$x86_iß_Àave_im∂
(
X86C⁄ãxt
 *
˘x
)

1136 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1138 
vÆue
;

1139 
ªgs
->
e•
 =Ñegs->
ebp
;

1141 i‡(
˘x
->
ö°
.
£gmít
)

1143 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ suµ‹ãd segmít", 
__FUNCTION__
);

1147 
	`X86C⁄ãxtMemRód
(
˘x
, 
ªgs
->
e•
, 4, &
vÆue
);

1148 
ªgs
->
e•
 += 4;

1149 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_ebp
, 
vÆue
);

1151 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 
x86_dï_ebp
, 0, 0, 
x86_dï_e•
, 0, 0, 0);

1152 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_efÁddr
, 
x86_dï_e•
, 0, 0, 
x86_dï_aux
, 0, 0, 0);

1153 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_lﬂd
, 
ªgs
->
e•
 - 4, 4, 
x86_dï_aux
, 0, 0, 
x86_dï_ebp
, 0, 0, 0);

1154 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_add
, 
x86_dï_e•
, 0, 0, x86_dep_esp, 0, 0, 0);

1155 
	}
}

1158 
	$x86_iß_l„n˚_im∂
(
X86C⁄ãxt
 *
˘x
)

1160 
	}
}

1163 
	$x86_iß_lock_xadd_rm8_r8_im∂
(
X86C⁄ãxt
 *
˘x
)

1165 
	`x86_iß_xadd_rm8_r8_im∂
(
˘x
);

1166 
	}
}

1169 
	$x86_iß_lock_xadd_rm32_r32_im∂
(
X86C⁄ãxt
 *
˘x
)

1171 
	`x86_iß_xadd_rm32_r32_im∂
(
˘x
);

1172 
	}
}

1175 
	$x86_iß_mov_rm8_imm8_im∂
(
X86C⁄ãxt
 *
˘x
)

1177 
vÆue
 = 
˘x
->
ö°
.
imm
.
b
;

1178 
	`X86C⁄ãxtSt‹eRm8
(
˘x
, 
vÆue
);

1180 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 0, 0, 0, 
x86_dï_rm8
, 0, 0, 0);

1181 
	}
}

1184 
	$x86_iß_mov_r8_rm8_im∂
(
X86C⁄ãxt
 *
˘x
)

1186 
vÆue
 = 
	`X86C⁄ãxtLﬂdRm8
(
˘x
);

1187 
	`X86C⁄ãxtSt‹eR8
(
˘x
, 
vÆue
);

1189 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 
x86_dï_rm8
, 0, 0, 
x86_dï_r8
, 0, 0, 0);

1190 
	}
}

1193 
	$x86_iß_mov_rm8_r8_im∂
(
X86C⁄ãxt
 *
˘x
)

1195 
vÆue
 = 
	`X86C⁄ãxtLﬂdR8
(
˘x
);

1196 
	`X86C⁄ãxtSt‹eRm8
(
˘x
, 
vÆue
);

1198 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 
x86_dï_r8
, 0, 0, 
x86_dï_rm8
, 0, 0, 0);

1199 
	}
}

1202 
	$x86_iß_mov_rm16_r16_im∂
(
X86C⁄ãxt
 *
˘x
)

1204 
vÆue
 = 
	`X86C⁄ãxtLﬂdR16
(
˘x
);

1205 
	`X86C⁄ãxtSt‹eRm16
(
˘x
, 
vÆue
);

1207 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 
x86_dï_r16
, 0, 0, 
x86_dï_rm16
, 0, 0, 0);

1208 
	}
}

1211 
	$x86_iß_mov_rm32_r32_im∂
(
X86C⁄ãxt
 *
˘x
)

1213 
vÆue
 = 
	`X86C⁄ãxtLﬂdR32
(
˘x
);

1214 
	`X86C⁄ãxtSt‹eRm32
(
˘x
, 
vÆue
);

1216 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 
x86_dï_r32
, 0, 0, 
x86_dï_rm32
, 0, 0, 0);

1217 
	}
}

1220 
	$x86_iß_mov_r16_rm16_im∂
(
X86C⁄ãxt
 *
˘x
)

1222 
vÆue
 = 
	`X86C⁄ãxtLﬂdRm16
(
˘x
);

1223 
	`X86C⁄ãxtSt‹eR16
(
˘x
, 
vÆue
);

1225 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 
x86_dï_rm16
, 0, 0, 
x86_dï_r16
, 0, 0, 0);

1226 
	}
}

1229 
	$x86_iß_mov_r32_rm32_im∂
(
X86C⁄ãxt
 *
˘x
)

1231 
vÆue
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
);

1232 
	`X86C⁄ãxtSt‹eR32
(
˘x
, 
vÆue
);

1234 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 
x86_dï_rm32
, 0, 0, 
x86_dï_r32
, 0, 0, 0);

1235 
	}
}

1238 
	$x86_iß_mov_Æ_moffs8_im∂
(
X86C⁄ãxt
 *
˘x
)

1240 
vÆue
;

1242 
	`X86C⁄ãxtMemRód
(
˘x
, 
	`X86C⁄ãxtMoffsAddªss
(˘x), 1, &
vÆue
);

1243 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_Æ
, 
vÆue
);

1245 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_efÁddr
, 0, 0, 0, 
x86_dï_aux
, 0, 0, 0);

1246 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_lﬂd
, 
	`X86C⁄ãxtMoffsAddªss
(˘x), 1, 
x86_dï_aux
, 0, 0, 
x86_dï_óx
, 0, 0, 0);

1247 
	}
}

1250 
	$x86_iß_mov_ax_moffs16_im∂
(
X86C⁄ãxt
 *
˘x
)

1252 
vÆue
;

1254 
	`X86C⁄ãxtMemRód
(
˘x
, 
	`X86C⁄ãxtMoffsAddªss
(˘x), 2, &
vÆue
);

1255 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_ax
, 
vÆue
);

1257 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_efÁddr
, 0, 0, 0, 
x86_dï_aux
, 0, 0, 0);

1258 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_lﬂd
, 
	`X86C⁄ãxtMoffsAddªss
(˘x), 2, 
x86_dï_aux
, 0, 0, 
x86_dï_óx
, 0, 0, 0);

1259 
	}
}

1262 
	$x86_iß_mov_óx_moffs32_im∂
(
X86C⁄ãxt
 *
˘x
)

1264 
vÆue
;

1266 
	`X86C⁄ãxtMemRód
(
˘x
, 
	`X86C⁄ãxtMoffsAddªss
(˘x), 4, &
vÆue
);

1267 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_óx
, 
vÆue
);

1269 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_efÁddr
, 0, 0, 0, 
x86_dï_aux
, 0, 0, 0);

1270 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_lﬂd
, 
	`X86C⁄ãxtMoffsAddªss
(˘x), 4, 
x86_dï_aux
, 0, 0, 
x86_dï_óx
, 0, 0, 0);

1271 
	}
}

1274 
	$x86_iß_mov_moffs8_Æ_im∂
(
X86C⁄ãxt
 *
˘x
)

1276 
vÆue
 = 
	`X86C⁄ãxtLﬂdReg
(
˘x
, 
x86_ö°_ªg_Æ
);

1277 
	`X86C⁄ãxtMemWrôe
(
˘x
, 
	`X86C⁄ãxtMoffsAddªss
(˘x), 1, &
vÆue
);

1279 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_efÁddr
, 0, 0, 0, 
x86_dï_aux
, 0, 0, 0);

1280 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_°‹e
, 
	`X86C⁄ãxtMoffsAddªss
(˘x), 1, 
x86_dï_aux
, 
x86_dï_óx
, 0, 0, 0, 0, 0);

1281 
	}
}

1284 
	$x86_iß_mov_moffs16_ax_im∂
(
X86C⁄ãxt
 *
˘x
)

1286 
vÆue
 = 
	`X86C⁄ãxtLﬂdReg
(
˘x
, 
x86_ö°_ªg_ax
);

1287 
	`X86C⁄ãxtMemWrôe
(
˘x
, 
	`X86C⁄ãxtMoffsAddªss
(˘x), 2, &
vÆue
);

1289 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_efÁddr
, 0, 0, 0, 
x86_dï_aux
, 0, 0, 0);

1290 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_°‹e
, 
	`X86C⁄ãxtMoffsAddªss
(˘x), 2, 
x86_dï_aux
, 
x86_dï_óx
, 0, 0, 0, 0, 0);

1291 
	}
}

1294 
	$x86_iß_mov_moffs32_óx_im∂
(
X86C⁄ãxt
 *
˘x
)

1296 
vÆue
 = 
	`X86C⁄ãxtLﬂdReg
(
˘x
, 
x86_ö°_ªg_óx
);

1297 
	`X86C⁄ãxtMemWrôe
(
˘x
, 
	`X86C⁄ãxtMoffsAddªss
(˘x), 4, &
vÆue
);

1299 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_efÁddr
, 0, 0, 0, 
x86_dï_aux
, 0, 0, 0);

1300 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_°‹e
, 
	`X86C⁄ãxtMoffsAddªss
(˘x), 4, 
x86_dï_aux
, 
x86_dï_óx
, 0, 0, 0, 0, 0);

1301 
	}
}

1304 
	$x86_iß_mov_ú8_imm8_im∂
(
X86C⁄ãxt
 *
˘x
)

1306 
vÆue
 = 
˘x
->
ö°
.
imm
.
b
;

1307 
	`X86C⁄ãxtSt‹eIR8
(
˘x
, 
vÆue
);

1309 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 0, 0, 0, 
x86_dï_ú8
, 0, 0, 0);

1310 
	}
}

1313 
	$x86_iß_mov_ú16_imm16_im∂
(
X86C⁄ãxt
 *
˘x
)

1315 
vÆue
 = 
˘x
->
ö°
.
imm
.
w
;

1316 
	`X86C⁄ãxtSt‹eIR16
(
˘x
, 
vÆue
);

1318 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 0, 0, 0, 
x86_dï_ú16
, 0, 0, 0);

1319 
	}
}

1322 
	$x86_iß_mov_ú32_imm32_im∂
(
X86C⁄ãxt
 *
˘x
)

1324 
vÆue
 = 
˘x
->
ö°
.
imm
.
d
;

1325 
	`X86C⁄ãxtSt‹eIR32
(
˘x
, 
vÆue
);

1327 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 0, 0, 0, 
x86_dï_ú32
, 0, 0, 0);

1328 
	}
}

1331 
	$x86_iß_mov_rm16_imm16_im∂
(
X86C⁄ãxt
 *
˘x
)

1333 
vÆue
 = 
˘x
->
ö°
.
imm
.
w
;

1334 
	`X86C⁄ãxtSt‹eRm16
(
˘x
, 
vÆue
);

1336 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 0, 0, 0, 
x86_dï_rm16
, 0, 0, 0);

1337 
	}
}

1340 
	$x86_iß_mov_rm32_imm32_im∂
(
X86C⁄ãxt
 *
˘x
)

1342 
vÆue
 = 
˘x
->
ö°
.
imm
.
d
;

1343 
	`X86C⁄ãxtSt‹eRm32
(
˘x
, 
vÆue
);

1345 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 0, 0, 0, 
x86_dï_rm32
, 0, 0, 0);

1346 
	}
}

1349 
	$x86_iß_mov_rm16_§eg_im∂
(
X86C⁄ãxt
 *
˘x
)

1351 
vÆue
 = 
	`X86C⁄ãxtLﬂdSReg
(
˘x
);

1352 i‡(
˘x
->
ö°
.
ªg
 != 5)

1353 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ suµ‹ãd f‹ sªg !gs", 
__FUNCTION__
);

1354 
	`X86C⁄ãxtSt‹eRm16
(
˘x
, 
vÆue
);

1356 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 
x86_dï_§eg
, 0, 0, 
x86_dï_rm16
, 0, 0, 0);

1357 
	}
}

1360 
	$x86_iß_mov_rm32_§eg_im∂
(
X86C⁄ãxt
 *
˘x
)

1362 
	`x86_iß_mov_rm16_§eg_im∂
(
˘x
);

1363 
	}
}

1366 
	$x86_iß_mov_§eg_rm16_im∂
(
X86C⁄ãxt
 *
˘x
)

1368 
vÆue
 = 
	`X86C⁄ãxtLﬂdRm16
(
˘x
);

1369 i‡(
˘x
->
ö°
.
ªg
 != 5)

1370 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ suµ‹ãd f‹ sªg !gs", 
__FUNCTION__
);

1371 
	`X86C⁄ãxtSt‹eSReg
(
˘x
, 
vÆue
);

1373 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 
x86_dï_rm16
, 0, 0, 
x86_dï_§eg
, 0, 0, 0);

1374 
	}
}

1377 
	$x86_iß_mov_§eg_rm32_im∂
(
X86C⁄ãxt
 *
˘x
)

1379 
	`x86_iß_mov_§eg_rm16_im∂
(
˘x
);

1380 
	}
}

1383 
	$x86_iß_movsx_r16_rm8_im∂
(
X86C⁄ãxt
 *
˘x
)

1385 
vÆue
 = (Ë
	`X86C⁄ãxtLﬂdRm8
(
˘x
);

1386 
	`X86C⁄ãxtSt‹eR16
(
˘x
, 
vÆue
);

1388 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_sign
, 
x86_dï_rm8
, 0, 0, 
x86_dï_r16
, 0, 0, 0);

1389 
	}
}

1392 
	$x86_iß_movsx_r32_rm8_im∂
(
X86C⁄ãxt
 *
˘x
)

1394 
vÆue
 = (Ë
	`X86C⁄ãxtLﬂdRm8
(
˘x
);

1395 
	`X86C⁄ãxtSt‹eR32
(
˘x
, 
vÆue
);

1397 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_sign
, 
x86_dï_rm8
, 0, 0, 
x86_dï_r32
, 0, 0, 0);

1398 
	}
}

1401 
	$x86_iß_movsx_r32_rm16_im∂
(
X86C⁄ãxt
 *
˘x
)

1403 
vÆue
 = (Ë
	`X86C⁄ãxtLﬂdRm16
(
˘x
);

1404 
	`X86C⁄ãxtSt‹eR32
(
˘x
, 
vÆue
);

1406 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_sign
, 
x86_dï_rm16
, 0, 0, 
x86_dï_r32
, 0, 0, 0);

1407 
	}
}

1410 
	$x86_iß_movzx_r16_rm8_im∂
(
X86C⁄ãxt
 *
˘x
)

1412 
vÆue
 = 
	`X86C⁄ãxtLﬂdRm8
(
˘x
);

1413 
	`X86C⁄ãxtSt‹eR16
(
˘x
, 
vÆue
);

1415 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 
x86_dï_rm8
, 0, 0, 
x86_dï_r16
, 0, 0, 0);

1416 
	}
}

1419 
	$x86_iß_movzx_r32_rm8_im∂
(
X86C⁄ãxt
 *
˘x
)

1421 
vÆue
 = 
	`X86C⁄ãxtLﬂdRm8
(
˘x
);

1422 
	`X86C⁄ãxtSt‹eR32
(
˘x
, 
vÆue
);

1424 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 
x86_dï_rm8
, 0, 0, 
x86_dï_r32
, 0, 0, 0);

1425 
	}
}

1428 
	$x86_iß_movzx_r32_rm16_im∂
(
X86C⁄ãxt
 *
˘x
)

1430 
vÆue
 = 
	`X86C⁄ãxtLﬂdRm16
(
˘x
);

1431 
	`X86C⁄ãxtSt‹eR32
(
˘x
, 
vÆue
);

1433 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 
x86_dï_rm16
, 0, 0, 
x86_dï_r32
, 0, 0, 0);

1434 
	}
}

1437 
	$x86_iß_mul_rm32_im∂
(
X86C⁄ãxt
 *
˘x
)

1439 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1441 
óx
 = 
	`X86C⁄ãxtLﬂdReg
(
˘x
, 
x86_ö°_ªg_óx
);

1442 
rm32
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
);

1443 
Êags
 = 
ªgs
->
eÊags
;

1444 
edx
;

1446 
__X86_ISA_ASM_START__


1447 
asm
 volatile (

1457 : "=g" (
Êags
), "=m" (
edx
), "=m" (
óx
)

1458 : "m" (
óx
), "m" (
rm32
), "g" (
Êags
)

1461 
__X86_ISA_ASM_END__


1463 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_óx
, 
óx
);

1464 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_edx
, 
edx
);

1465 
ªgs
->
eÊags
 = 
Êags
;

1467 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_mu…
, 
x86_dï_rm32
, 
x86_dï_óx
, 0, 
x86_dï_edx
, x86_dï_óx, 
x86_dï_of
, 
x86_dï_cf
);

1468 
	}
}

1471 
	$x86_iß_√g_rm8_im∂
(
X86C⁄ãxt
 *
˘x
)

1473 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1475 
rm8
 = 
	`X86C⁄ãxtLﬂdRm8
(
˘x
);

1476 
Êags
 = 
ªgs
->
eÊags
;

1478 
__X86_ISA_ASM_START__


1479 
asm
 volatile (

1487 : "=g" (
Êags
), "=g" (
rm8
)

1488 : "g" (
rm8
), "g" (
Êags
)

1491 
__X86_ISA_ASM_END__


1493 
	`X86C⁄ãxtSt‹eRm8
(
˘x
, 
rm8
);

1494 
ªgs
->
eÊags
 = 
Êags
;

1496 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_sub
, 
x86_dï_rm8
, 0, 0, x86_dï_rm8, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
);

1497 
	}
}

1500 
	$x86_iß_√g_rm32_im∂
(
X86C⁄ãxt
 *
˘x
)

1502 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1504 
rm32
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
);

1505 
Êags
 = 
ªgs
->
eÊags
;

1507 
__X86_ISA_ASM_START__


1508 
asm
 volatile (

1516 : "=g" (
Êags
), "=g" (
rm32
)

1517 : "g" (
rm32
), "g" (
Êags
)

1520 
__X86_ISA_ASM_END__


1522 
	`X86C⁄ãxtSt‹eRm32
(
˘x
, 
rm32
);

1523 
ªgs
->
eÊags
 = 
Êags
;

1525 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_sub
, 
x86_dï_rm32
, 0, 0, x86_dï_rm32, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
);

1526 
	}
}

1529 
	$x86_iß_n›_im∂
(
X86C⁄ãxt
 *
˘x
)

1531 
	}
}

1534 
	$x86_iß_n›_rm16_im∂
(
X86C⁄ãxt
 *
˘x
)

1536 
	}
}

1539 
	$x86_iß_n›_rm32_im∂
(
X86C⁄ãxt
 *
˘x
)

1541 
	}
}

1544 
	$x86_iß_nŸ_rm8_im∂
(
X86C⁄ãxt
 *
˘x
)

1546 
vÆue
 = 
	`X86C⁄ãxtLﬂdRm8
(
˘x
);

1548 
vÆue
 = ~value;

1549 
	`X86C⁄ãxtSt‹eRm8
(
˘x
, 
vÆue
);

1551 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_nŸ
, 
x86_dï_rm8
, 0, 0, x86_dep_rm8, 0, 0, 0);

1552 
	}
}

1555 
	$x86_iß_nŸ_rm16_im∂
(
X86C⁄ãxt
 *
˘x
)

1557 
vÆue
 = 
	`X86C⁄ãxtLﬂdRm16
(
˘x
);

1558 
vÆue
 = ~value;

1559 
	`X86C⁄ãxtSt‹eRm16
(
˘x
, 
vÆue
);

1561 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_nŸ
, 
x86_dï_rm8
, 0, 0, 
x86_dï_rm16
, 0, 0, 0);

1562 
	}
}

1565 
	$x86_iß_nŸ_rm32_im∂
(
X86C⁄ãxt
 *
˘x
)

1567 
vÆue
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
);

1568 
vÆue
 = ~value;

1569 
	`X86C⁄ãxtSt‹eRm32
(
˘x
, 
vÆue
);

1571 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_nŸ
, 
x86_dï_rm8
, 0, 0, 
x86_dï_rm32
, 0, 0, 0);

1572 
	}
}

1575 
	$x86_iß_out_imm8_Æ_im∂
(
X86C⁄ãxt
 *
˘x
)

1577 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ im∂emíãd", 
__FUNCTION__
);

1578 
	}
}

1581 
	$x86_iß_out_imm8_ax_im∂
(
X86C⁄ãxt
 *
˘x
)

1583 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ im∂emíãd", 
__FUNCTION__
);

1584 
	}
}

1587 
	$x86_iß_out_imm8_óx_im∂
(
X86C⁄ãxt
 *
˘x
)

1589 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ im∂emíãd", 
__FUNCTION__
);

1590 
	}
}

1593 
	$x86_iß_out_dx_Æ_im∂
(
X86C⁄ãxt
 *
˘x
)

1595 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ im∂emíãd", 
__FUNCTION__
);

1596 
	}
}

1599 
	$x86_iß_out_dx_ax_im∂
(
X86C⁄ãxt
 *
˘x
)

1601 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ im∂emíãd", 
__FUNCTION__
);

1602 
	}
}

1605 
	$x86_iß_out_dx_óx_im∂
(
X86C⁄ãxt
 *
˘x
)

1607 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ im∂emíãd", 
__FUNCTION__
);

1608 
	}
}

1611 
	$x86_iß_∑u£_im∂
(
X86C⁄ãxt
 *
˘x
)

1613 
	}
}

1616 
	$x86_iß_p›_rm32_im∂
(
X86C⁄ãxt
 *
˘x
)

1618 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1619 
vÆue
;

1621 
	`X86C⁄ãxtMemRód
(
˘x
, 
ªgs
->
e•
, 4, &
vÆue
);

1622 
ªgs
->
e•
 += 4;

1623 
	`X86C⁄ãxtSt‹eRm32
(
˘x
, 
vÆue
);

1625 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_efÁddr
, 
x86_dï_e•
, 0, 0, 
x86_dï_aux
, 0, 0, 0);

1626 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_lﬂd
, 
ªgs
->
e•
 - 4, 4, 
x86_dï_aux
, 0, 0, 
x86_dï_rm32
, 0, 0, 0);

1627 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_add
, 
x86_dï_e•
, 0, 0, x86_dep_esp, 0, 0, 0);

1628 
	}
}

1631 
	$x86_iß_p›_ú32_im∂
(
X86C⁄ãxt
 *
˘x
)

1633 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1634 
vÆue
;

1636 i‡(
˘x
->
ö°
.
£gmít
)

1638 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ suµ‹ãd segmít", 
__FUNCTION__
);

1642 
	`X86C⁄ãxtMemRód
(
˘x
, 
ªgs
->
e•
, 4, &
vÆue
);

1643 
ªgs
->
e•
 += 4;

1644 
	`X86C⁄ãxtSt‹eIR32
(
˘x
, 
vÆue
);

1646 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_efÁddr
, 
x86_dï_e•
, 0, 0, 
x86_dï_aux
, 0, 0, 0);

1647 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_lﬂd
, 
ªgs
->
e•
 - 4, 4, 
x86_dï_aux
, 0, 0, 
x86_dï_ú32
, 0, 0, 0);

1648 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_add
, 
x86_dï_e•
, 0, 0, x86_dep_esp, 0, 0, 0);

1649 
	}
}

1652 
	$x86_iß_p›f_im∂
(
X86C⁄ãxt
 *
˘x
)

1654 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1656 
	`X86C⁄ãxtMemRód
(
˘x
, 
ªgs
->
e•
, 4, &ªgs->
eÊags
);

1657 
ªgs
->
e•
 += 4;

1663 
ªgs
->
eÊags
 &= ~(1 << 8);

1665 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_efÁddr
, 
x86_dï_e•
, 0, 0, 
x86_dï_aux
, 0, 0, 0);

1666 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_lﬂd
, 
ªgs
->
e•
 - 4, 4, 
x86_dï_aux
, 0, 0, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
, 0);

1667 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_add
, 
x86_dï_e•
, 0, 0, x86_dep_esp, 0, 0, 0);

1668 
	}
}

1671 
	$x86_iß_¥e„tcht0_m8_im∂
(
X86C⁄ãxt
 *
˘x
)

1673 
eff_addr
;

1676 i‡(
¨ch_x86
->
sim_köd
 !
¨ch_sim_köd_dëaûed
)

1679 i‡(!
x86_emu_¥o˚ss_¥e„tch_höts
)

1682 
eff_addr
 = 
	`X86C⁄ãxtEf„˘iveAddªss
(
˘x
);

1683 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_efÁddr
, 
x86_dï_ó£g
, 
x86_dï_óbas
, 
x86_dï_óidx
, 
x86_dï_aux
, 0, 0, 0);

1684 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_¥e„tch
, 
eff_addr
, 1, 
x86_dï_aux
, 0, 0, 0, 0, 0, 0);

1685 
	}
}

1688 
	$x86_iß_¥e„tcht1_im∂
(
X86C⁄ãxt
 *
˘x
)

1690 
	}
}

1693 
	$x86_iß_¥e„tcht2_im∂
(
X86C⁄ãxt
 *
˘x
)

1695 
	}
}

1698 
	$x86_iß_¥e„tch¡a_im∂
(
X86C⁄ãxt
 *
˘x
)

1700 
	}
}

1703 
	$x86_iß_push_imm8_im∂
(
X86C⁄ãxt
 *
˘x
)

1705 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1706 
vÆue
 = (Ë
˘x
->
ö°
.
imm
.
b
;

1708 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_e•
, 
ªgs
->
e•
 - 4);

1709 
	`X86C⁄ãxtMemWrôe
(
˘x
, 
ªgs
->
e•
, 4, &
vÆue
);

1711 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_sub
, 
x86_dï_e•
, 0, 0, x86_dep_esp, 0, 0, 0);

1712 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_efÁddr
, 
x86_dï_e•
, 0, 0, 
x86_dï_aux
, 0, 0, 0);

1713 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_°‹e
, 
ªgs
->
e•
, 4, 
x86_dï_aux
, 0, 0, 0, 0, 0, 0);

1714 
	}
}

1717 
	$x86_iß_push_imm32_im∂
(
X86C⁄ãxt
 *
˘x
)

1719 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1720 
vÆue
 = 
˘x
->
ö°
.
imm
.
d
;

1722 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_e•
, 
ªgs
->
e•
 - 4);

1723 
	`X86C⁄ãxtMemWrôe
(
˘x
, 
ªgs
->
e•
, 4, &
vÆue
);

1725 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_sub
, 
x86_dï_e•
, 0, 0, x86_dep_esp, 0, 0, 0);

1726 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_efÁddr
, 
x86_dï_e•
, 0, 0, 
x86_dï_aux
, 0, 0, 0);

1727 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_°‹e
, 
ªgs
->
e•
, 4, 
x86_dï_aux
, 0, 0, 0, 0, 0, 0);

1728 
	}
}

1731 
	$x86_iß_push_rm32_im∂
(
X86C⁄ãxt
 *
˘x
)

1733 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1734 
vÆue
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
);

1736 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_e•
, 
ªgs
->
e•
 - 4);

1737 
	`X86C⁄ãxtMemWrôe
(
˘x
, 
ªgs
->
e•
, 4, &
vÆue
);

1739 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_sub
, 
x86_dï_e•
, 0, 0, x86_dep_esp, 0, 0, 0);

1740 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_efÁddr
, 
x86_dï_e•
, 0, 0, 
x86_dï_aux
, 0, 0, 0);

1741 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_°‹e
, 
ªgs
->
e•
, 4, 
x86_dï_aux
, 
x86_dï_rm32
, 0, 0, 0, 0, 0);

1742 
	}
}

1745 
	$x86_iß_push_ú32_im∂
(
X86C⁄ãxt
 *
˘x
)

1747 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1748 
vÆue
 = 
	`X86C⁄ãxtLﬂdIR32
(
˘x
);

1750 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_e•
, 
ªgs
->
e•
 - 4);

1751 
	`X86C⁄ãxtMemWrôe
(
˘x
, 
ªgs
->
e•
, 4, &
vÆue
);

1753 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_sub
, 
x86_dï_e•
, 0, 0, x86_dep_esp, 0, 0, 0);

1754 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_efÁddr
, 
x86_dï_e•
, 0, 0, 
x86_dï_aux
, 0, 0, 0);

1755 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_°‹e
, 
ªgs
->
e•
, 4, 
x86_dï_aux
, 
x86_dï_ú32
, 0, 0, 0, 0, 0);

1756 
	}
}

1759 
	$x86_iß_pushf_im∂
(
X86C⁄ãxt
 *
˘x
)

1761 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1763 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_e•
, 
ªgs
->
e•
 - 4);

1764 
	`X86C⁄ãxtMemWrôe
(
˘x
, 
ªgs
->
e•
, 4, &ªgs->
eÊags
);

1766 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_sub
, 
x86_dï_e•
, 0, 0, x86_dep_esp, 0, 0, 0);

1767 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_efÁddr
, 
x86_dï_e•
, 0, 0, 
x86_dï_aux
, 0, 0, 0);

1768 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
, 
x86_dï_aux2
, 0, 0, 0);

1769 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_°‹e
, 
ªgs
->
e•
, 4, 
x86_dï_aux
, 
x86_dï_aux2
, 0, 0, 0, 0, 0);

1770 
	}
}

1773 
	$x86_iß_rdtsc_im∂
(
X86C⁄ãxt
 *
˘x
)

1775 
óx
, 
edx
;

1777 
__X86_ISA_ASM_START__


1778 
asm
 volatile (

1782 : "=g" (
óx
), "=g" (
edx
)

1786 
__X86_ISA_ASM_END__


1788 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_edx
, 
edx
);

1789 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_óx
, 
óx
);

1791 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 0, 0, 0, 
x86_dï_óx
, 
x86_dï_edx
, 0, 0);

1792 
	}
}

1795 
	$x86_iß_ªt_im∂
(
X86C⁄ãxt
 *
˘x
)

1797 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1799 i‡(
˘x
->
ö°
.
£gmít
)

1801 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ suµ‹ãd segmít", 
__FUNCTION__
);

1805 
	`X86C⁄ãxtMemRód
(
˘x
, 
ªgs
->
e•
, 4, &˘x->
èrgë_eù
);

1806 
ªgs
->
e•
 += 4;

1807 
ªgs
->
eù
 = 
˘x
->
èrgë_eù
;

1809 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_efÁddr
, 
x86_dï_e•
, 0, 0, 
x86_dï_aux
, 0, 0, 0);

1810 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_lﬂd
, 
ªgs
->
e•
 - 4, 4, 
x86_dï_aux
, 0, 0, x86_dep_aux, 0, 0, 0);

1811 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_add
, 
x86_dï_e•
, 0, 0, x86_dep_esp, 0, 0, 0);

1812 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_ªt
, 
x86_dï_aux
, 0, 0, 0, 0, 0, 0);

1813 
	}
}

1816 
	$x86_iß_ªpz_ªt_im∂
(
X86C⁄ãxt
 *
˘x
)

1818 
	`x86_iß_ªt_im∂
(
˘x
);

1819 
	}
}

1822 
	$x86_iß_ªt_imm16_im∂
(
X86C⁄ãxt
 *
˘x
)

1824 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1825 
p›
;

1827 i‡(
˘x
->
ö°
.
£gmít
)

1829 
	`X86C⁄ãxtEº‹
(
˘x
, "%s:ÇŸ suµ‹ãd segmít", 
__FUNCTION__
);

1833 
	`X86C⁄ãxtMemRód
(
˘x
, 
ªgs
->
e•
, 4, &˘x->
èrgë_eù
);

1834 
p›
 = 
˘x
->
ö°
.
imm
.
w
;

1835 
ªgs
->
e•
 +4 + 
p›
;

1836 
ªgs
->
eù
 = 
˘x
->
èrgë_eù
;

1838 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_efÁddr
, 
x86_dï_e•
, 0, 0, 
x86_dï_aux
, 0, 0, 0);

1839 
	`x86_uö°_√w_mem
(
˘x
, 
x86_uö°_lﬂd
, 
ªgs
->
e•
 - 4 - 
p›
, 4, 
x86_dï_aux
, 0, 0, x86_dep_aux, 0, 0, 0);

1840 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_add
, 
x86_dï_e•
, 0, 0, x86_dep_esp, 0, 0, 0);

1841 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_ªt
, 
x86_dï_aux
, 0, 0, 0, 0, 0, 0);

1842 
	}
}

1845 
	$x86_iß_ßhf_im∂
(
X86C⁄ãxt
 *
˘x
)

1847 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1849 
ªgs
->
eÊags
 &= ~0xff;

1850 
ªgs
->
eÊags
 |
	`X86C⁄ãxtLﬂdReg
(
˘x
, 
x86_ö°_ªg_ah
);

1851 
ªgs
->
eÊags
 &= ~0x28;

1852 
ªgs
->
eÊags
 |= 0x2;

1854 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 
x86_dï_óx
, 0, 0, 0, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
);

1855 
	}
}

1858 
	$x86_iß_s„n˚_im∂
(
X86C⁄ãxt
 *
˘x
)

1860 
	}
}

1863 
	$x86_iß_shld_rm16_r16_imm8_im∂
(
X86C⁄ãxt
 *
˘x
)

1865 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1867 
rm16
 = 
	`X86C⁄ãxtLﬂdRm16
(
˘x
);

1868 
r16
 = 
	`X86C⁄ãxtLﬂdR16
(
˘x
);

1869 
imm8
 = 
˘x
->
ö°
.
imm
.
b
;

1870 
Êags
 = 
ªgs
->
eÊags
;

1872 
__X86_ISA_ASM_START__


1873 
asm
 volatile (

1883 : "=g" (
Êags
), "=m" (
rm16
)

1884 : "m" (
rm16
), "m" (
r16
), "m" (
imm8
), "g" (
Êags
)

1887 
__X86_ISA_ASM_END__


1889 
	`X86C⁄ãxtSt‹eRm16
(
˘x
, 
rm16
);

1890 
ªgs
->
eÊags
 = 
Êags
;

1892 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_shi·
, 
x86_dï_rm16
, 
x86_dï_r16
, 0, x86_dï_rm16, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
);

1893 
	}
}

1896 
	$x86_iß_shld_rm16_r16_˛_im∂
(
X86C⁄ãxt
 *
˘x
)

1898 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1900 
rm16
 = 
	`X86C⁄ãxtLﬂdRm16
(
˘x
);

1901 
r16
 = 
	`X86C⁄ãxtLﬂdR16
(
˘x
);

1902 
˛
 = 
	`X86C⁄ãxtLﬂdReg
(
˘x
, 
x86_ö°_ªg_˛
);

1903 
Êags
 = 
ªgs
->
eÊags
;

1905 
__X86_ISA_ASM_START__


1906 
asm
 volatile (

1916 : "=g" (
Êags
), "=m" (
rm16
)

1917 : "m" (
rm16
), "m" (
r16
), "m" (
˛
), "g" (
Êags
)

1920 
__X86_ISA_ASM_END__


1922 
	`X86C⁄ãxtSt‹eRm16
(
˘x
, 
rm16
);

1923 
ªgs
->
eÊags
 = 
Êags
;

1925 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_shi·
, 
x86_dï_rm16
, 
x86_dï_r16
, 
x86_dï_ecx
,

1926 
x86_dï_rm16
, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
);

1927 
	}
}

1930 
	$x86_iß_shld_rm32_r32_imm8_im∂
(
X86C⁄ãxt
 *
˘x
)

1932 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1934 
rm32
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
);

1935 
r32
 = 
	`X86C⁄ãxtLﬂdR32
(
˘x
);

1936 
imm8
 = 
˘x
->
ö°
.
imm
.
b
;

1937 
Êags
 = 
ªgs
->
eÊags
;

1939 
__X86_ISA_ASM_START__


1940 
asm
 volatile (

1950 : "=g" (
Êags
), "=m" (
rm32
)

1951 : "m" (
rm32
), "m" (
r32
), "m" (
imm8
), "g" (
Êags
)

1954 
__X86_ISA_ASM_END__


1956 
	`X86C⁄ãxtSt‹eRm32
(
˘x
, 
rm32
);

1957 
ªgs
->
eÊags
 = 
Êags
;

1959 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_shi·
, 
x86_dï_rm32
, 
x86_dï_r32
, 0, x86_dï_rm32, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
);

1960 
	}
}

1963 
	$x86_iß_shld_rm32_r32_˛_im∂
(
X86C⁄ãxt
 *
˘x
)

1965 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1967 
rm32
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
);

1968 
r32
 = 
	`X86C⁄ãxtLﬂdR32
(
˘x
);

1969 
˛
 = 
	`X86C⁄ãxtLﬂdReg
(
˘x
, 
x86_ö°_ªg_˛
);

1970 
Êags
 = 
ªgs
->
eÊags
;

1972 
__X86_ISA_ASM_START__


1973 
asm
 volatile (

1983 : "=g" (
Êags
), "=m" (
rm32
)

1984 : "m" (
rm32
), "m" (
r32
), "m" (
˛
), "g" (
Êags
)

1987 
__X86_ISA_ASM_END__


1989 
	`X86C⁄ãxtSt‹eRm32
(
˘x
, 
rm32
);

1990 
ªgs
->
eÊags
 = 
Êags
;

1992 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_shi·
, 
x86_dï_rm32
, 
x86_dï_r32
, 
x86_dï_ecx
,

1993 
x86_dï_rm32
, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
);

1994 
	}
}

1997 
	$x86_iß_shrd_rm32_r32_imm8_im∂
(
X86C⁄ãxt
 *
˘x
)

1999 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

2001 
rm32
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
);

2002 
r32
 = 
	`X86C⁄ãxtLﬂdR32
(
˘x
);

2003 
imm8
 = 
˘x
->
ö°
.
imm
.
b
;

2004 
Êags
 = 
ªgs
->
eÊags
;

2006 
__X86_ISA_ASM_START__


2007 
asm
 volatile (

2017 : "=g" (
Êags
), "=m" (
rm32
)

2018 : "m" (
rm32
), "m" (
r32
), "m" (
imm8
), "g" (
Êags
)

2021 
__X86_ISA_ASM_END__


2023 
	`X86C⁄ãxtSt‹eRm32
(
˘x
, 
rm32
);

2024 
ªgs
->
eÊags
 = 
Êags
;

2026 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_shi·
, 
x86_dï_rm32
, 
x86_dï_r32
, 0, x86_dï_rm32, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
);

2027 
	}
}

2030 
	$x86_iß_shrd_rm32_r32_˛_im∂
(
X86C⁄ãxt
 *
˘x
)

2032 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

2034 
rm32
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
);

2035 
r32
 = 
	`X86C⁄ãxtLﬂdR32
(
˘x
);

2036 
˛
 = 
	`X86C⁄ãxtLﬂdReg
(
˘x
, 
x86_ö°_ªg_˛
);

2037 
Êags
 = 
ªgs
->
eÊags
;

2039 
__X86_ISA_ASM_START__


2040 
asm
 volatile (

2050 : "=g" (
Êags
), "=m" (
rm32
)

2051 : "m" (
rm32
), "m" (
r32
), "m" (
˛
), "g" (
Êags
)

2054 
__X86_ISA_ASM_END__


2056 
	`X86C⁄ãxtSt‹eRm32
(
˘x
, 
rm32
);

2057 
ªgs
->
eÊags
 = 
Êags
;

2059 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_shi·
, 
x86_dï_rm32
, 
x86_dï_r32
, 
x86_dï_ecx
,

2060 
x86_dï_rm32
, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
);

2061 
	}
}

2064 
	$x86_iß_°d_im∂
(
X86C⁄ãxt
 *
˘x
)

2066 
	`X86C⁄ãxtSëFœg
(
˘x
, 
x86_ö°_Êag_df
);

2068 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 0, 0, 0, 0, 
x86_dï_df
, 0, 0);

2069 
	}
}

2072 
	$x86_iß_xadd_rm8_r8_im∂
(
X86C⁄ãxt
 *
˘x
)

2074 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

2076 
rm8
 = 
	`X86C⁄ãxtLﬂdRm8
(
˘x
);

2077 
r8
 = 
	`X86C⁄ãxtLﬂdR8
(
˘x
);

2078 
sum
;

2079 
Êags
 = 
ªgs
->
eÊags
;

2081 
__X86_ISA_ASM_START__


2082 
asm
 volatile (

2090 : "=g" (
Êags
), "=m" (
sum
)

2091 : "m" (
rm8
), "m" (
r8
), "g" (
Êags
)

2094 
__X86_ISA_ASM_END__


2096 
	`X86C⁄ãxtSt‹eR8
(
˘x
, 
rm8
);

2097 
	`X86C⁄ãxtSt‹eRm8
(
˘x
, 
sum
);

2098 
ªgs
->
eÊags
 = 
Êags
;

2100 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_add
, 
x86_dï_rm8
, 
x86_dï_r8
, 0, 
x86_dï_aux
, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
);

2101 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 
x86_dï_aux
, 0, 0, 
x86_dï_rm8
, 0, 0, 0);

2102 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 
x86_dï_aux
, 0, 0, 
x86_dï_r8
, 0, 0, 0);

2103 
	}
}

2106 
	$x86_iß_xadd_rm32_r32_im∂
(
X86C⁄ãxt
 *
˘x
)

2108 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

2110 
rm32
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
);

2111 
r32
 = 
	`X86C⁄ãxtLﬂdR32
(
˘x
);

2112 
sum
;

2113 
Êags
 = 
ªgs
->
eÊags
;

2115 
__X86_ISA_ASM_START__


2116 
asm
 volatile (

2124 : "=g" (
Êags
), "=m" (
sum
)

2125 : "m" (
rm32
), "m" (
r32
), "g" (
Êags
)

2128 
__X86_ISA_ASM_END__


2130 
	`X86C⁄ãxtSt‹eR32
(
˘x
, 
rm32
);

2131 
	`X86C⁄ãxtSt‹eRm32
(
˘x
, 
sum
);

2132 
ªgs
->
eÊags
 = 
Êags
;

2134 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_add
, 
x86_dï_rm32
, 
x86_dï_r32
, 0, 
x86_dï_aux
, 
x86_dï_zps
, 
x86_dï_cf
, 
x86_dï_of
);

2135 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 
x86_dï_aux
, 0, 0, 
x86_dï_rm32
, 0, 0, 0);

2136 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 
x86_dï_aux
, 0, 0, 
x86_dï_r32
, 0, 0, 0);

2137 
	}
}

2140 
	$x86_iß_xchg_ú16_ax_im∂
(
X86C⁄ãxt
 *
˘x
)

2142 
ax
, 
ú16
;

2144 
ax
 = 
	`X86C⁄ãxtLﬂdReg
(
˘x
, 
x86_ö°_ªg_ax
);

2145 
ú16
 = 
	`X86C⁄ãxtLﬂdIR16
(
˘x
);

2146 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_ax
, 
ú16
);

2147 
	`X86C⁄ãxtSt‹eIR16
(
˘x
, 
ax
);

2149 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 
x86_dï_ú16
, 
x86_dï_óx
, 0, x86_dep_ir16, x86_dep_eax, 0, 0);

2150 
	}
}

2153 
	$x86_iß_xchg_ú32_óx_im∂
(
X86C⁄ãxt
 *
˘x
)

2155 
óx
, 
ú32
;

2157 
óx
 = 
	`X86C⁄ãxtLﬂdReg
(
˘x
, 
x86_ö°_ªg_óx
);

2158 
ú32
 = 
	`X86C⁄ãxtLﬂdIR32
(
˘x
);

2159 
	`X86C⁄ãxtSt‹eReg
(
˘x
, 
x86_ö°_ªg_óx
, 
ú32
);

2160 
	`X86C⁄ãxtSt‹eIR32
(
˘x
, 
óx
);

2162 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 
x86_dï_ú32
, 
x86_dï_óx
, 0, x86_dep_ir32, x86_dep_eax, 0, 0);

2163 
	}
}

2166 
	$x86_iß_xchg_rm8_r8_im∂
(
X86C⁄ãxt
 *
˘x
)

2168 
rm8
;

2169 
r8
;

2171 
rm8
 = 
	`X86C⁄ãxtLﬂdRm8
(
˘x
);

2172 
r8
 = 
	`X86C⁄ãxtLﬂdR8
(
˘x
);

2173 
	`X86C⁄ãxtSt‹eRm8
(
˘x
, 
r8
);

2174 
	`X86C⁄ãxtSt‹eR8
(
˘x
, 
rm8
);

2176 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 
x86_dï_rm8
, 
x86_dï_r8
, 0, x86_dep_rm8, x86_dep_r8, 0, 0);

2177 
	}
}

2180 
	$x86_iß_xchg_rm16_r16_im∂
(
X86C⁄ãxt
 *
˘x
)

2182 
rm16
;

2183 
r16
;

2185 
rm16
 = 
	`X86C⁄ãxtLﬂdRm16
(
˘x
);

2186 
r16
 = 
	`X86C⁄ãxtLﬂdR16
(
˘x
);

2187 
	`X86C⁄ãxtSt‹eRm16
(
˘x
, 
r16
);

2188 
	`X86C⁄ãxtSt‹eR16
(
˘x
, 
rm16
);

2190 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 
x86_dï_rm16
, 
x86_dï_r16
, 0, x86_dep_rm16, x86_dep_r16, 0, 0);

2191 
	}
}

2194 
	$x86_iß_xchg_rm32_r32_im∂
(
X86C⁄ãxt
 *
˘x
)

2196 
rm32
;

2197 
r32
;

2199 
rm32
 = 
	`X86C⁄ãxtLﬂdRm32
(
˘x
);

2200 
r32
 = 
	`X86C⁄ãxtLﬂdR32
(
˘x
);

2201 
	`X86C⁄ãxtSt‹eRm32
(
˘x
, 
r32
);

2202 
	`X86C⁄ãxtSt‹eR32
(
˘x
, 
rm32
);

2204 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_move
, 
x86_dï_rm32
, 
x86_dï_r32
, 0, x86_dep_rm32, x86_dep_r32, 0, 0);

2205 
	}
}

	@emu/machine.h

20 #i‚de‡
ARCH_X86_EMU_MACHINE_H


21 
	#ARCH_X86_EMU_MACHINE_H


	)

24 
x86_c⁄ãxt_ho°_Êags
;

26 
	#__X86_ISA_ASM_START__
 
asm
 volatile ( \

29 : "=m" (
x86_c⁄ãxt_ho°_Êags
));

	)

31 
	#__X86_ISA_ASM_END__
 
asm
 volatile ( \

34 : "=m" (
x86_c⁄ãxt_ho°_Êags
));

	)

37 
x86_c⁄ãxt_ho°_Âív
[28];

39 
	#__X86_ISA_FP_ASM_START__
 
asm
 volatile ( \

45 : "=m" (
x86_c⁄ãxt_ho°_Êags
), "=m" (*
x86_c⁄ãxt_ho°_Âív
) \

46 : "m" (
˘x
->
ªgs
->
Âu_˘æ
));

	)

48 
	#__X86_ISA_FP_ASM_END__
 
asm
 volatile ( \

53 : "=m" (
x86_c⁄ãxt_ho°_Êags
), "=m" (
˘x
->
ªgs
->
Âu_˘æ
) \

54 : "m" (*
x86_c⁄ãxt_ho°_Âív
));

	)

58 
	#DEFINST
(
«me
, 
›1
, 
›2
, 
›3
, 
modrm
, 
imm
, 
pfx
) \

59 
x86_iß_
##
«me
##
	`_im∂
(
X86C⁄ãxt
 *
˘x
);

	)

60 
	~<¨ch/x86/asm/asm.d©
>

61 #unde‡
DEFINST


	@emu/regs.c

20 
	~<lib/mh™dÀ/mh™dÀ.h
>

21 
	~<lib/utû/misc.h
>

23 
	~"iß.h
"

24 
	~"ªgs.h
"

27 
x86_ªgs_t
 *
	$x86_ªgs_¸óã
()

29 
x86_ªgs_t
 *
ªgs
;

32 
ªgs
 = 
	`xˇŒoc
(1, (
x86_ªgs_t
));

33 
ªgs
->
Âu_˘æ
 = 0x37f;

36  
ªgs
;

37 
	}
}

40 
	$x86_ªgs_‰ì
(
x86_ªgs_t
 *
ªgs
)

42 
	`‰ì
(
ªgs
);

43 
	}
}

46 
	$x86_ªgs_c›y
(
x86_ªgs_t
 *
d°
, x86_ªgs_à*
§c
)

48 
	`mem˝y
(
d°
, 
§c
, (
x86_ªgs_t
));

49 
	}
}

52 
	$x86_ªgs_Âu_°ack_dump
(
x86_ªgs_t
 *
ªgs
, 
FILE
 *
f
)

54 
ödex
, 
i
;

55 
vÆue
;

56 *
comma
 = "";

58 
	`Ârötf
(
f
, "{");

59 
ödex
 = (
ªgs
->
Âu_t›
 + 7) % 8;

60 
i
 = 0; i < 8; i++) {

61 i‡(
ªgs
->
Âu_°ack
[
ödex
].
vÆid
) {

62 
vÆue
 = 
	`X86C⁄ãxtExãndedToDoubÀ
(
ªgs
->
Âu_°ack
[
ödex
].value);

63 
	`Ârötf
(
f
, "%s%g", 
comma
, 
vÆue
);

64 
comma
 = ", ";

66 
ödex
 = (index + 7) % 8;

68 
	`Ârötf
(
f
, "}\n");

69 
	}
}

72 
	$x86_ªgs_dump
(
x86_ªgs_t
 *
ªgs
, 
FILE
 *
f
)

74 
i
, 
j
;

77 
	`Ârötf
(
f
, "Éax=%08xÉcx=%08xÉdx=%08xÉbx=%08x\n",

78 
ªgs
->
óx
,Ñegs->
ecx
,Ñegs->
edx
,Ñegs->
ebx
);

79 
	`Ârötf
(
f
, "Ésp=%08xÉbp=%08xÉsi=%08xÉdi=%08x\n",

80 
ªgs
->
e•
,Ñegs->
ebp
,Ñegs->
esi
,Ñegs->
edi
);

81 
	`Ârötf
(
f
, "És=%x, cs=%x, ss=%x, ds=%x, fs=%x, gs=%x\n",

82 
ªgs
->
es
,Ñegs->
cs
,Ñegs->
ss
,Ñegs->
ds
,Ñegs->
fs
,Ñegs->
gs
);

83 
	`Ârötf
(
f
, "Éù=%08x\n", 
ªgs
->
eù
);

84 
	`Ârötf
(
f
, " flags=%04x (cf=%dÖf=%dáf=%d zf=%d sf=%d df=%d of=%d)\n",

85 
ªgs
->
eÊags
,

86 (
ªgs
->
eÊags
 & (1 << 
x86_ö°_Êag_cf
)) > 0,

87 (
ªgs
->
eÊags
 & (1 << 
x86_ö°_Êag_pf
)) > 0,

88 (
ªgs
->
eÊags
 & (1 << 
x86_ö°_Êag_af
)) > 0,

89 (
ªgs
->
eÊags
 & (1 << 
x86_ö°_Êag_zf
)) > 0,

90 (
ªgs
->
eÊags
 & (1 << 
x86_ö°_Êag_sf
)) > 0,

91 (
ªgs
->
eÊags
 & (1 << 
x86_ö°_Êag_df
)) > 0,

92 (
ªgs
->
eÊags
 & (1 << 
x86_ö°_Êag_of
)) > 0);

95 
	`Ârötf
(
f
, " fpu_stack (last=top): ");

96 
	`x86_ªgs_Âu_°ack_dump
(
ªgs
, 
f
);

99 
	`Ârötf
(
f
, " fpu_code (C3-C2-C1-C0): %d-%d-%d-%d\n",

100 
	`GETBIT32
(
ªgs
->
Âu_code
, 3) > 0, GETBIT32(regs->fpu_code, 2) > 0,

101 
	`GETBIT32
(
ªgs
->
Âu_code
, 1) > 0, GETBIT32(regs->fpu_code, 0) > 0);

102 
	`Ârötf
(
f
, " fpu_ctrl=%04x\n",

103 
ªgs
->
Âu_˘æ
);

106 
i
 = 0; i < 8; i++) {

107 
	`Ârötf
(
f
, " xmm%d =", 
i
);

108 
j
 = 0; j < 16; j++)

109 
	`Ârötf
(
f
, " %02x", 
ªgs
->
xmm
[
i
][
j
]);

110 
	`Ârötf
(
f
, "\n");

112 
	}
}

	@emu/regs.h

20 #i‚de‡
ARCH_X86_EMU_REGS_H


21 
	#ARCH_X86_EMU_REGS_H


	)

23 
	~<°dio.h
>

26 
	sx86_ªgs_t


29 
	móx
, 
	mecx
, 
	medx
, 
	mebx
;

30 
	me•
, 
	mebp
, 
	mesi
, 
	medi
;

31 
	mes
, 
	mcs
, 
	mss
, 
	mds
, 
	mfs
, 
	mgs
;

32 
	meù
;

33 
	meÊags
;

38 
	mvÆue
[10];

39 
	mvÆid
;

40 } 
	mÂu_°ack
[8];

41 
	mÂu_t›
;

42 
	mÂu_code
;

43 
	mÂu_˘æ
;

46 
	mxmm
[8][16];

48 } 
__©åibuã__
((
∑cked
));

50 
x86_ªgs_t
 *
x86_ªgs_¸óã
();

51 
x86_ªgs_‰ì
(
x86_ªgs_t
 *
ªgs
);

53 
x86_ªgs_c›y
(
x86_ªgs_t
 *
d°
, x86_ªgs_à*
§c
);

54 
x86_ªgs_dump
(
x86_ªgs_t
 *
ªgs
, 
FILE
 *
f
);

55 
x86_ªgs_Âu_°ack_dump
(
x86_ªgs_t
 *
ªgs
, 
FILE
 *
f
);

	@emu/signal.c

20 
	~<î∫o.h
>

21 
	~<sig«l.h
>

23 
	~<lib/mh™dÀ/mh™dÀ.h
>

24 
	~<lib/utû/debug.h
>

25 
	~<lib/utû/misc.h
>

26 
	~<lib/utû/°rög.h
>

27 
	~<mem-sy°em/mem‹y.h
>

29 
	~"c⁄ãxt.h
"

30 
	~"ªgs.h
"

31 
	~"sig«l.h
"

32 
	~"sysˇŒ.h
"

39 
°r_m≠_t
 
	gx86_sig«l_m≠
 =

77 
°r_m≠_t
 
	gx86_siga˘i⁄_Êags_m≠
 =

93 *
	$x86_sig«l_«me
(
signum
)

95  
	`°r_m≠_vÆue
(&
x86_sig«l_m≠
, 
signum
);

96 
	}
}

99 
	$x86_siga˘i⁄_dump
(
x86_siga˘i⁄_t
 *
sim
, 
FILE
 *
f
)

101 
	`Ârötf
(
f
, "handler=0x%x, flags=0x%x,Ñestorer=0x%x, mask=0x%llx",

102 
sim
->
h™dÀr
, sim->
Êags
,

103 
sim
->
ª°‹î
, sim->
mask
);

104 
	}
}

107 
	$x86_siga˘i⁄_Êags_dump
(
Êags
, 
FILE
 *
f
)

109 
buf
[0x200];

110 
	`°r_m≠_Êags
(&
x86_siga˘i⁄_Êags_m≠
, 
Êags
, 
buf
, 0x200);

111 
	`Ârötf
(
f
, "%s", 
buf
);

112 
	}
}

115 
	$x86_sig£t_membî
(*
sim_sig£t
, 
sig
)

117 i‡(
sig
 < 1 || sig > 64)

119  (*
sim_sig£t
 & (1ULL << (
sig
 - 1))) > 0;

120 
	}
}

123 
	$x86_sig£t_add
(*
sim_sig£t
, 
sig
)

125 i‡(
sig
 < 1 || sig > 64)

127 *
sim_sig£t
 |1ULL << (
sig
 - 1);

128 
	}
}

131 
	$x86_sig£t_dñ
(*
sim_sig£t
, 
sig
)

133 i‡(
sig
 < 1 || sig > 64)

135 *
sim_sig£t
 &~(1ULL << (
sig
 - 1));

136 
	}
}

139 
	$x86_sig£t_dump
(
sim_sig£t
, 
FILE
 *
f
)

141 
i
;

142 *
comma
 = "", *
«me
;

143 i‡(
sim_sig£t
 == () -1)

145 
	`Ârötf
(
f
, "{<all>}");

148 
	`Ârötf
(
f
, "{");

149 
i
 = 1; i <= 64; i++)

151 i‡(
	`x86_sig£t_membî
(&
sim_sig£t
, 
i
))

153 i‡(
i
 < 32)

155 
«me
 = 
	`°r_m≠_vÆue
(&
x86_sig«l_m≠
, 
i
);

156 
	`Ârötf
(
f
, "%s%s", 
comma
, 
«me
);

160 
	`Ârötf
(
f
, "%s%d", 
comma
, 
i
);

162 
comma
 = ",";

165 
	`Ârötf
(
f
, "}");

166 
	}
}

175 
x86_sig«l_mask_èbÀ_t
 *
	$x86_sig«l_mask_èbÀ_¸óã
()

177 
x86_sig«l_mask_èbÀ_t
 *
èbÀ
;

180 
èbÀ
 = 
	`xˇŒoc
(1, (
x86_sig«l_mask_èbÀ_t
));

181  
èbÀ
;

182 
	}
}

184 
	$x86_sig«l_mask_èbÀ_‰ì
(
x86_sig«l_mask_èbÀ_t
 *
èbÀ
)

186 
	`‰ì
(
èbÀ
);

187 
	}
}

196 
x86_sig«l_h™dÀr_èbÀ_t
 *
	$x86_sig«l_h™dÀr_èbÀ_¸óã
()

198 
x86_sig«l_h™dÀr_èbÀ_t
 *
èbÀ
;

201 
èbÀ
 = 
	`xˇŒoc
(1, (
x86_sig«l_h™dÀr_èbÀ_t
));

202  
èbÀ
;

203 
	}
}

206 
	$x86_sig«l_h™dÀr_èbÀ_‰ì
(
x86_sig«l_h™dÀr_èbÀ_t
 *
èbÀ
)

208 
	`as£π
(!
èbÀ
->
num_löks
);

209 
	`‰ì
(
èbÀ
);

210 
	}
}

213 
x86_sig«l_h™dÀr_èbÀ_t
 *
	$x86_sig«l_h™dÀr_èbÀ_lök
(
x86_sig«l_h™dÀr_èbÀ_t
 *
èbÀ
)

215 
èbÀ
->
num_löks
++;

216  
èbÀ
;

217 
	}
}

220 
	$x86_sig«l_h™dÀr_èbÀ_u∆ök
(
x86_sig«l_h™dÀr_èbÀ_t
 *
èbÀ
)

222 
	`as£π
(
èbÀ
->
num_löks
 >= 0);

223 i‡(
èbÀ
->
num_löks
)

224 
èbÀ
->
num_löks
--;

226 
	`x86_sig«l_h™dÀr_èbÀ_‰ì
(
èbÀ
);

227 
	}
}

239 
	sx86_sig‰ame


241 
	m¥ëcode
;

242 
	msig
;

244 
	mgs
, 
	mfs
, 
	mes
, 
	mds
;

245 
	medi
, 
	mesi
, 
	mebp
, 
	me•
;

246 
	mebx
, 
	medx
, 
	mecx
, 
	móx
;

247 
	må≠no
, 
	mîr
, 
	meù
, 
	mcs
;

248 
	meÊags
;

249 
	me•_©_sig«l
;

250 
	mss
;

251 
	mpÂ°©e
;

252 
	mﬁdmask
;

253 
	m¸2
;

263 
	gx86_sig«l_ªtcode
[] = "\x58\xb8\x77\x00\x00\x00\xcd\x80";

266 
	$X86C⁄ãxtRunSig«lH™dÀr
(
X86C⁄ãxt
 *
˘x
, 
sig
)

268 
h™dÀr
;

269 
x86_sig‰ame
 
sig‰ame
;

272 
	`as£π
(
	`IN_RANGE
(
sig
, 1, 64));

273 
	`x86_sys_debug
("context %dÉxecutes signal handler for signal %d\n",

274 
˘x
->
pid
, 
sig
);

277 i‡(
sig
 =
SIGCHLD
 && !
˘x
->
sig«l_h™dÀr_èbÀ
->
siga˘i⁄
[sig - 1].
h™dÀr
)

281 
˘x
->
sig«l_mask_èbÀ
->
ªgs
 = 
	`x86_ªgs_¸óã
();

282 
	`x86_ªgs_c›y
(
˘x
->
sig«l_mask_èbÀ
->
ªgs
, ctx->regs);

285 
˘x
->
sig«l_mask_èbÀ
->
¥ëcode
 = 
	`mem_m≠_•a˚
(˘x->
mem
, 
MEM_PAGE_SIZE
, MEM_PAGE_SIZE);

286 
	`mem_m≠
(
˘x
->
mem
, ctx->
sig«l_mask_èbÀ
->
¥ëcode
, 
MEM_PAGE_SIZE
, 
mem_ac˚ss_exec
 | 
mem_ac˚ss_öô
);

287 
	`x86_sys_debug
("Ñëu∫ codêo‡sig«»h™dÀ∏Æloˇãdáà0x%x\n", 
˘x
->
sig«l_mask_èbÀ
->
¥ëcode
);

288 
	`mem_ac˚ss
(
˘x
->
mem
, ctx->
sig«l_mask_èbÀ
->
¥ëcode
, (
x86_sig«l_ªtcode
), x86_sig«l_ªtcode, 
mem_ac˚ss_öô
);

291 
sig‰ame
.
¥ëcode
 = 
˘x
->
sig«l_mask_èbÀ
->pretcode;

292 
sig‰ame
.
sig
 = sig;

293 
sig‰ame
.
gs
 = 
˘x
->
ªgs
->gs;

294 
sig‰ame
.
fs
 = 
˘x
->
ªgs
->fs;

295 
sig‰ame
.
es
 = 
˘x
->
ªgs
->es;

296 
sig‰ame
.
ds
 = 
˘x
->
ªgs
->ds;

297 
sig‰ame
.
edi
 = 
˘x
->
ªgs
->edi;

298 
sig‰ame
.
esi
 = 
˘x
->
ªgs
->esi;

299 
sig‰ame
.
ebp
 = 
˘x
->
ªgs
->ebp;

300 
sig‰ame
.
e•
 = 
˘x
->
ªgs
->esp;

301 
sig‰ame
.
ebx
 = 
˘x
->
ªgs
->ebx;

302 
sig‰ame
.
edx
 = 
˘x
->
ªgs
->edx;

303 
sig‰ame
.
ecx
 = 
˘x
->
ªgs
->ecx;

304 
sig‰ame
.
óx
 = 
˘x
->
ªgs
->eax;

305 
sig‰ame
.
å≠no
 = 0;

306 
sig‰ame
.
îr
 = 0;

307 
sig‰ame
.
eù
 = 
˘x
->
ªgs
->eip;

308 
sig‰ame
.
cs
 = 
˘x
->
ªgs
->cs;

309 
sig‰ame
.
eÊags
 = 
˘x
->
ªgs
->eflags;

310 
sig‰ame
.
e•_©_sig«l
 = 
˘x
->
ªgs
->
e•
;

311 
sig‰ame
.
ss
 = 
˘x
->
ªgs
->ss;

312 
sig‰ame
.
pÂ°©e
 = 0;

313 
sig‰ame
.
ﬁdmask
 = 0;

314 
sig‰ame
.
¸2
 = 0;

317 
˘x
->
ªgs
->
e•
 -(
sig‰ame
);

318 
	`mem_wrôe
(
˘x
->
mem
, ctx->
ªgs
->
e•
, (
sig‰ame
), &sigframe);

323 i‡(
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtH™dÀr
))

324 
	`Áèl
("signal_handler_run:álreadyÑunningá handler");

325 
	`X86C⁄ãxtSëSèã
(
˘x
, 
X86C⁄ãxtH™dÀr
);

328 
h™dÀr
 = 
˘x
->
sig«l_h™dÀr_èbÀ
->
siga˘i⁄
[
sig
 - 1].handler;

329 i‡(!
h™dÀr
)

330 
	`Áèl
("%s: invÆid sig«»h™dÀr", 
__FUNCTION__
);

331 
˘x
->
ªgs
->
eù
 = 
h™dÀr
;

332 
	}
}

335 
	$X86C⁄ãxtRëu∫FromSig«lH™dÀr
(
X86C⁄ãxt
 *
˘x
)

338 i‡(!
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtH™dÀr
))

339 
	`Áèl
("signal_handler_return:Çot handlingá signal");

340 
	`X86C⁄ãxtCÀ¨Sèã
(
˘x
, 
X86C⁄ãxtH™dÀr
);

343 
	`mem_unm≠
(
˘x
->
mem
, ctx->
sig«l_mask_èbÀ
->
¥ëcode
, 
MEM_PAGE_SIZE
);

344 
	`x86_sys_debug
(" signal handlerÑeturn codeát 0x%x deallocated\n",

345 
˘x
->
sig«l_mask_èbÀ
->
¥ëcode
);

348 
	`x86_ªgs_c›y
(
˘x
->
ªgs
, ctx->
sig«l_mask_èbÀ
->regs);

349 
	`x86_ªgs_‰ì
(
˘x
->
sig«l_mask_èbÀ
->
ªgs
);

350 
	}
}

353 
	$X86C⁄ãxtCheckSig«lH™dÀrI¡r
(
X86C⁄ãxt
 *
˘x
)

355 
sig
;

359 
	`as£π
(!
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtH™dÀr
));

360 
	`as£π
(
˘x
->
sig«l_mask_èbÀ
->
≥ndög
 & ~˘x->sig«l_mask_èbÀ->
blocked
);

363 
sig
 = 1; sig <= 64; sig++)

364 i‡(
	`x86_sig£t_membî
(&
˘x
->
sig«l_mask_èbÀ
->
≥ndög
, 
sig
) &&

365 !
	`x86_sig£t_membî
(&
˘x
->
sig«l_mask_èbÀ
->
blocked
, 
sig
))

367 
	`as£π
(
sig
 <= 64);

371 i‡(
˘x
->
sig«l_h™dÀr_èbÀ
->
siga˘i⁄
[
sig
 - 1].
Êags
 & 0x10000000u)

373 
buf
[2];

375 
˘x
->
ªgs
->
eù
 -= 2;

376 
	`mem_ªad
(
˘x
->
mem
, ctx->
ªgs
->
eù
, 2, 
buf
);

377 
	`as£π
(
buf
[0] == 0xcd && buf[1] == 0x80);

383 
˘x
->
ªgs
->
óx
 = -
EINTR
;

387 
	`X86C⁄ãxtRunSig«lH™dÀr
(
˘x
, 
sig
);

388 
	`x86_sig£t_dñ
(&
˘x
->
sig«l_mask_èbÀ
->
≥ndög
, 
sig
);

390 
	}
}

393 
	$X86C⁄ãxtCheckSig«lH™dÀr
(
X86C⁄ãxt
 *
˘x
)

395 
sig
;

398 i‡(
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtH™dÀr
))

402 i‡(!(
˘x
->
sig«l_mask_èbÀ
->
≥ndög
 & ~˘x->sig«l_mask_èbÀ->
blocked
))

407 
sig
 = 1; sig <= 64; sig++)

409 i‡(
	`x86_sig£t_membî
(&
˘x
->
sig«l_mask_èbÀ
->
≥ndög
, 
sig
) &&

410 !
	`x86_sig£t_membî
(&
˘x
->
sig«l_mask_èbÀ
->
blocked
, 
sig
))

412 
	`X86C⁄ãxtRunSig«lH™dÀr
(
˘x
, 
sig
);

413 
	`x86_sig£t_dñ
(&
˘x
->
sig«l_mask_èbÀ
->
≥ndög
, 
sig
);

417 
	}
}

	@emu/signal.h

20 #i‚de‡
ARCH_X86_EMU_SIGNAL_H


21 
	#ARCH_X86_EMU_SIGNAL_H


	)

30 
X86C⁄ãxtRunSig«lH™dÀr
(
X86C⁄ãxt
 *
£lf
, 
sig
);

33 
X86C⁄ãxtRëu∫FromSig«lH™dÀr
(
X86C⁄ãxt
 *
£lf
);

35 
X86C⁄ãxtCheckSig«lH™dÀr
(
X86C⁄ãxt
 *
£lf
);

45 
X86C⁄ãxtCheckSig«lH™dÀrI¡r
(
X86C⁄ãxt
 *
£lf
);

55 
	sx86_sig«l_mask_èbÀ_t


57 
	m≥ndög
;

58 
	mblocked
;

59 
	mbackup
;

60 
x86_ªgs_t
 *
	mªgs
;

61 
	m¥ëcode
;

64 
x86_sig«l_mask_èbÀ_t
 *
x86_sig«l_mask_èbÀ_¸óã
();

65 
x86_sig«l_mask_èbÀ_‰ì
(
x86_sig«l_mask_èbÀ_t
 *
èbÀ
);

73 
	sx86_sig«l_h™dÀr_èbÀ_t


76 
	mnum_löks
;

79 
	sx86_siga˘i⁄_t


81 
	mh™dÀr
;

82 
	mÊags
;

83 
	mª°‹î
;

84 
	mmask
;

85 } 
	msiga˘i⁄
[64];

88 
x86_sig«l_h™dÀr_èbÀ_t
 *
x86_sig«l_h™dÀr_èbÀ_¸óã
();

89 
x86_sig«l_h™dÀr_èbÀ_‰ì
(
x86_sig«l_h™dÀr_èbÀ_t
 *
èbÀ
);

91 
x86_sig«l_h™dÀr_èbÀ_t
 *
x86_sig«l_h™dÀr_èbÀ_lök
(x86_sig«l_h™dÀr_èbÀ_à*
èbÀ
);

92 
x86_sig«l_h™dÀr_èbÀ_u∆ök
(
x86_sig«l_h™dÀr_èbÀ_t
 *
èbÀ
);

100 *
x86_sig«l_«me
(
signum
);

101 
x86_siga˘i⁄_dump
(
x86_siga˘i⁄_t
 *
sim_siga˘i⁄
, 
FILE
 *
f
);

102 
x86_siga˘i⁄_Êags_dump
(
Êags
, 
FILE
 *
f
);

103 
x86_sig£t_dump
(
sim_sig£t
, 
FILE
 *
f
);

104 
x86_sig£t_add
(*
sim_sig£t
, 
sig«l
);

105 
x86_sig£t_dñ
(*
sim_sig£t
, 
sig«l
);

106 
x86_sig£t_membî
(*
sim_sig£t
, 
sig«l
);

	@emu/syscall.c

20 
	~<î∫o.h
>

21 
	~<f˙é.h
>

22 
	~<pﬁl.h
>

23 
	~<sysˇŒ.h
>

24 
	~<uni°d.h
>

25 
	~<utime.h
>

26 
	~<sys/io˘l.h
>

27 
	~<sys/mm™.h
>

28 
	~<sys/ªsour˚.h
>

29 
	~<sys/sockë.h
>

30 
	~<sys/°©.h
>

31 
	~<sys/°©fs.h
>

32 
	~<sys/time.h
>

33 
	~<sys/times.h
>

35 
	~<¨ch/comm⁄/ru¡ime.h
>

36 
	~<¨ch/x86/timög/˝u.h
>

37 
	~<lib/esim/esim.h
>

38 
	~<lib/mh™dÀ/mh™dÀ.h
>

39 
	~<lib/utû/bô-m≠.h
>

40 
	~<lib/utû/debug.h
>

41 
	~<lib/utû/li°.h
>

42 
	~<lib/utû/misc.h
>

43 
	~<lib/utû/°rög.h
>

44 
	~<mem-sy°em/mem‹y.h
>

46 
	~"c⁄ãxt.h
"

47 
	~"emu.h
"

48 
	~"fûe-desc.h
"

49 
	~"iß.h
"

50 
	~"lﬂdî.h
"

51 
	~"ªgs.h
"

52 
	~"sig«l.h
"

53 
	~"sysˇŒ.h
"

62 
	gx86_sys_debug_ˇãg‹y
;

72 *
	gîr_x86_sys_nŸe
 =

81 *
	gx86_sys_ˇŒ_«me
[] =

83 
	#DEFSYSCALL
(
«me
, 
code
Ë#«me,

	)

84 
	~"sysˇŒ.d©
"

85 #unde‡
DEFSYSCALL


93 
	#DEFSYSCALL
(
«me
, 
code
Ë
x86_sys_code_
##«mêcode,

	)

94 
	~"sysˇŒ.d©
"

95 #unde‡
DEFSYSCALL


96 
	mx86_sys_code_cou¡


101 
	#DEFSYSCALL
(
«me
, 
code
) \

102 
x86_sys_
##
«me
##
	`_im∂
(
X86C⁄ãxt
 *
˘x
);

	)

103 
	~"sysˇŒ.d©
"

104 #unde‡
DEFSYSCALL


108 (*
	gx86_sys_ˇŒ_func
[
x86_sys_code_cou¡
 + 1])(
X86C⁄ãxt
 *
	g˘x
) =

110 
	#DEFSYSCALL
(
«me
, 
code
Ë
x86_sys_
##«me##
_im∂
,

	)

111 
	~"sysˇŒ.d©
"

112 #unde‡
DEFSYSCALL


113 
NULL


118 
	gx86_sys_ˇŒ_‰eq
[
x86_sys_code_cou¡
 + 1];

127 
	#SIM_EPERM
 1

	)

128 
	#SIM_ENOENT
 2

	)

129 
	#SIM_ESRCH
 3

	)

130 
	#SIM_EINTR
 4

	)

131 
	#SIM_EIO
 5

	)

132 
	#SIM_ENXIO
 6

	)

133 
	#SIM_E2BIG
 7

	)

134 
	#SIM_ENOEXEC
 8

	)

135 
	#SIM_EBADF
 9

	)

136 
	#SIM_ECHILD
 10

	)

137 
	#SIM_EAGAIN
 11

	)

138 
	#SIM_ENOMEM
 12

	)

139 
	#SIM_EACCES
 13

	)

140 
	#SIM_EFAULT
 14

	)

141 
	#SIM_ENOTBLK
 15

	)

142 
	#SIM_EBUSY
 16

	)

143 
	#SIM_EEXIST
 17

	)

144 
	#SIM_EXDEV
 18

	)

145 
	#SIM_ENODEV
 19

	)

146 
	#SIM_ENOTDIR
 20

	)

147 
	#SIM_EISDIR
 21

	)

148 
	#SIM_EINVAL
 22

	)

149 
	#SIM_ENFILE
 23

	)

150 
	#SIM_EMFILE
 24

	)

151 
	#SIM_ENOTTY
 25

	)

152 
	#SIM_ETXTBSY
 26

	)

153 
	#SIM_EFBIG
 27

	)

154 
	#SIM_ENOSPC
 28

	)

155 
	#SIM_ESPIPE
 29

	)

156 
	#SIM_EROFS
 30

	)

157 
	#SIM_EMLINK
 31

	)

158 
	#SIM_EPIPE
 32

	)

159 
	#SIM_EDOM
 33

	)

160 
	#SIM_ERANGE
 34

	)

162 
	#SIM_ERRNO_MAX
 34

	)

164 
°r_m≠_t
 
	gx86_sys_îr‹_code_m≠
 =

206 
	$x86_sys_dump_°©s
(
FILE
 *
f
)

208 
i
;

211 
	`Ârötf
(
f
, "\n\n**\n** System calls summary:\n**\n\n");

212 
	`Ârötf
(
f
, "%-20s %s\n", "System call", "Count");

213 
i
 = 0; i < 30; i++)

214 
	`Ârötf
(
f
, "-");

215 
	`Ârötf
(
f
, "\n");

218 
i
 = 1; i <
x86_sys_code_cou¡
; i++)

219 i‡(
x86_sys_ˇŒ_‰eq
[
i
])

220 
	`Ârötf
(
f
, "%-20†%d\n", 
x86_sys_ˇŒ_«me
[
i
],

221 
x86_sys_ˇŒ_‰eq
[
i
]);

222 
	`Ârötf
(
f
, "\n");

223 
	}
}

226 
	$X86C⁄ãxtSysˇŒ
(
X86C⁄ãxt
 *
£lf
)

228 
X86Emu
 *
emu
 = 
£lf
->emu;

230 
x86_ªgs_t
 *
ªgs
 = 
£lf
->regs;

231 
ru¡ime_t
 *
ru¡ime
;

233 
code
;

234 
îr
;

237 
code
 = 
ªgs
->
óx
;

241 i‡(
code
 < 1 || codê>
x86_sys_code_cou¡
)

244 
ru¡ime
 = 
	`ru¡ime_gë_‰om_sysˇŒ_code
(
code
);

245 i‡(!
ru¡ime
)

246 
	`Áèl
("%s: invÆid sy°em cÆ»codê(%d)", 
__FUNCTION__
, 
code
);

249 
	`x86_sys_debug
("%sÑuntime ABI call (code %d, inst %lld,Öid %d)\n",

250 
ru¡ime
->
«me
, 
code
, 
	`asEmu
(
emu
)->
ö°ru˘i⁄s
, 
£lf
->
pid
);

253 
îr
 = 
	`ru¡ime_abi_ˇŒ
(
ru¡ime
, 
£lf
);

256 
ªgs
->
óx
 = 
îr
;

259 
	`x86_sys_debug
("Ñë=(%d, 0x%x)\n", 
îr
,Érr);

264 
x86_sys_ˇŒ_‰eq
[
code
]++;

267 
	`x86_sys_debug
("system call '%s' (code %d, inst %lld,Öid %d)\n",

268 
x86_sys_ˇŒ_«me
[
code
], code, 
	`asEmu
(
emu
)->
ö°ru˘i⁄s
, 
£lf
->
pid
);

269 
	`X86C⁄ãxtDebugCÆl
("system call '%s' (code %d, inst %lld,Öid %d)\n",

270 
x86_sys_ˇŒ_«me
[
code
], code, 
	`asEmu
(
emu
)->
ö°ru˘i⁄s
, 
£lf
->
pid
);

273 
îr
 = 
x86_sys_ˇŒ_func
[
code
](
£lf
);

277 i‡(
code
 !
x86_sys_code_sigªtu∫
 && !
	`X86C⁄ãxtGëSèã
(
£lf
, 
X86C⁄ãxtSu•íded
))

278 
ªgs
->
óx
 = 
îr
;

281 
	`x86_sys_debug
("Ñë=(%d, 0x%x)", 
îr
,Érr);

282 i‡(
îr
 < 0 &&Éº >-
SIM_ERRNO_MAX
)

283 
	`x86_sys_debug
(",Éºno=%s)", 
	`°r_m≠_vÆue
(&
x86_sys_îr‹_code_m≠
, -
îr
));

284 
	`x86_sys_debug
("\n");

285 
	}
}

296 
	$x86_sys_exô_im∂
(
X86C⁄ãxt
 *
˘x
)

298 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

299 
°©us
;

302 
°©us
 = 
ªgs
->
ebx
;

303 
	`x86_sys_debug
(" sètus=0x%x\n", 
°©us
);

306 
	`X86C⁄ãxtFöish
(
˘x
, 
°©us
);

308 
	}
}

317 
	$x86_sys_˛o£_im∂
(
X86C⁄ãxt
 *
˘x
)

319 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

320 
x86_fûe_desc_t
 *
fd
;

322 
gue°_fd
;

323 
ho°_fd
;

326 
gue°_fd
 = 
ªgs
->
ebx
;

327 
	`x86_sys_debug
(" gue°_fd=%d\n", 
gue°_fd
);

328 
ho°_fd
 = 
	`x86_fûe_desc_èbÀ_gë_ho°_fd
(
˘x
->
fûe_desc_èbÀ
, 
gue°_fd
);

329 
	`x86_sys_debug
(" ho°_fd=%d\n", 
ho°_fd
);

332 
fd
 = 
	`x86_fûe_desc_èbÀ_íåy_gë
(
˘x
->
fûe_desc_èbÀ
, 
gue°_fd
);

333 i‡(!
fd
)

334  -
EBADF
;

337 i‡(
ho°_fd
 > 2)

338 
	`˛o£
(
ho°_fd
);

341 i‡(
fd
->
köd
 =
fûe_desc_vútuÆ
)

342 
	`x86_sys_debug
(" ho° fûê'%s':Åemp‹¨y fûêdñëed\n", 
fd
->
∑th
);

343 
	`x86_fûe_desc_èbÀ_íåy_‰ì
(
˘x
->
fûe_desc_èbÀ
, 
fd
->
gue°_fd
);

347 
	}
}

355 
	$x86_sys_ªad_im∂
(
X86C⁄ãxt
 *
˘x
)

357 
X86Emu
 *
emu
 = 
˘x
->emu;

359 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

360 
mem_t
 *
mem
 = 
˘x
->mem;

362 
buf_±r
;

363 
cou¡
;

365 
gue°_fd
;

366 
ho°_fd
;

367 
îr
;

369 *
buf
;

371 
x86_fûe_desc_t
 *
fd
;

372 
pﬁlfd
 
fds
;

375 
gue°_fd
 = 
ªgs
->
ebx
;

376 
buf_±r
 = 
ªgs
->
ecx
;

377 
cou¡
 = 
ªgs
->
edx
;

378 
	`x86_sys_debug
(" guest_fd=%d, buf_ptr=0x%x, count=0x%x\n",

379 
gue°_fd
, 
buf_±r
, 
cou¡
);

382 
fd
 = 
	`x86_fûe_desc_èbÀ_íåy_gë
(
˘x
->
fûe_desc_èbÀ
, 
gue°_fd
);

383 i‡(!
fd
)

384  -
EBADF
;

385 
ho°_fd
 = 
fd
->host_fd;

386 
	`x86_sys_debug
(" ho°_fd=%d\n", 
ho°_fd
);

389 
buf
 = 
	`xˇŒoc
(1, 
cou¡
);

390 
fds
.
fd
 = 
ho°_fd
;

391 
fds
.
evíts
 = 
POLLIN
;

392 
îr
 = 
	`pﬁl
(&
fds
, 1, 0);

393 i‡(
îr
 < 0)

394 
	`Áèl
("%s:Éº‹Éxecutög 'pﬁl'", 
__FUNCTION__
);

397 i‡(
fds
.
ªvíts
 || (
fd
->
Êags
 & 
O_NONBLOCK
))

400 
îr
 = 
	`ªad
(
ho°_fd
, 
buf
, 
cou¡
);

401 i‡(
îr
 == -1)

403 
	`‰ì
(
buf
);

404  -
î∫o
;

408 i‡(
îr
 > 0)

410 
	`mem_wrôe
(
mem
, 
buf_±r
, 
îr
, 
buf
);

411 
	`x86_sys_debug_buf„r
(" buf", 
buf
, 
îr
);

415 
	`‰ì
(
buf
);

416  
îr
;

420 
	`x86_sys_debug
(" blockingÑead -Örocess suspended\n");

421 
˘x
->
wakeup_fd
 = 
gue°_fd
;

422 
˘x
->
wakeup_evíts
 = 1;

423 
	`X86C⁄ãxtSëSèã
(
˘x
, 
X86C⁄ãxtSu•íded
 | 
X86C⁄ãxtRód
);

424 
	`X86EmuPro˚ssEvítsScheduÀ
(
emu
);

428 
	`‰ì
(
buf
);

430 
	}
}

439 
	$x86_sys_wrôe_im∂
(
X86C⁄ãxt
 *
˘x
)

441 
X86Emu
 *
emu
 = 
˘x
->emu;

443 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

444 
mem_t
 *
mem
 = 
˘x
->mem;

446 
buf_±r
;

447 
cou¡
;

449 
gue°_fd
;

450 
ho°_fd
;

451 
îr
;

453 
x86_fûe_desc_t
 *
desc
;

454 *
buf
;

456 
pﬁlfd
 
fds
;

459 
gue°_fd
 = 
ªgs
->
ebx
;

460 
buf_±r
 = 
ªgs
->
ecx
;

461 
cou¡
 = 
ªgs
->
edx
;

462 
	`x86_sys_debug
(" guest_fd=%d, buf_ptr=0x%x, count=0x%x\n",

463 
gue°_fd
, 
buf_±r
, 
cou¡
);

466 
desc
 = 
	`x86_fûe_desc_èbÀ_íåy_gë
(
˘x
->
fûe_desc_èbÀ
, 
gue°_fd
);

467 i‡(!
desc
)

468  -
EBADF
;

469 
ho°_fd
 = 
desc
->host_fd;

470 
	`x86_sys_debug
(" ho°_fd=%d\n", 
ho°_fd
);

473 
buf
 = 
	`xˇŒoc
(1, 
cou¡
);

474 
	`mem_ªad
(
mem
, 
buf_±r
, 
cou¡
, 
buf
);

475 
	`x86_sys_debug_buf„r
(" buf", 
buf
, 
cou¡
);

478 
fds
.
fd
 = 
ho°_fd
;

479 
fds
.
evíts
 = 
POLLOUT
;

480 
	`pﬁl
(&
fds
, 1, 0);

483 i‡(
fds
.
ªvíts
)

486 
îr
 = 
	`wrôe
(
ho°_fd
, 
buf
, 
cou¡
);

487 i‡(
îr
 == -1)

488 
îr
 = -
î∫o
;

491 
	`‰ì
(
buf
);

492  
îr
;

496 
	`x86_sys_debug
(" blocking write -Örocess suspended\n");

497 
˘x
->
wakeup_fd
 = 
gue°_fd
;

498 
	`X86C⁄ãxtSëSèã
(
˘x
, 
X86C⁄ãxtSu•íded
 | 
X86C⁄ãxtWrôe
);

499 
	`X86EmuPro˚ssEvítsScheduÀ
(
emu
);

503 
	`‰ì
(
buf
);

505 
	}
}

514 
°r_m≠_t
 
	gsys_›í_Êags_m≠
 =

536 
x86_fûe_desc_t
 *
	$x86_sys_›í_vútuÆ
(
X86C⁄ãxt
 *
˘x
,

537 *
∑th
, 
Êags
, 
mode
)

539 
ãmp_∑th
[
MAX_PATH_SIZE
];

540 
x86_fûe_desc_t
 *
desc
;

541 
ho°_fd
;

544 
ãmp_∑th
[0] = '\0';

547 i‡(!
	`°rcmp
(
∑th
, "/proc/self/maps"))

548 
	`X86C⁄ãxtProcSñfM≠s
(
˘x
, 
ãmp_∑th
, Åemp_path);

551 i‡(!
	`°rcmp
(
∑th
, "/proc/cpuinfo"))

552 
	`X86C⁄ãxtProcCPUInfo
(
˘x
, 
ãmp_∑th
, Åemp_path);

555 i‡(!
ãmp_∑th
[0])

556  
NULL
;

559 
ho°_fd
 = 
	`›í
(
ãmp_∑th
, 
Êags
, 
mode
);

560 
	`as£π
(
ho°_fd
 > 0);

563 
desc
 = 
	`x86_fûe_desc_èbÀ_íåy_√w
(
˘x
->
fûe_desc_èbÀ
, 
fûe_desc_vútuÆ
, 
ho°_fd
, 
ãmp_∑th
, 
Êags
);

564 
	`x86_sys_debug
(" host file '%s' opened: guest_fd=%d, host_fd=%d\n",

565 
ãmp_∑th
, 
desc
->
gue°_fd
, desc->
ho°_fd
);

566  
desc
;

567 
	}
}

569 
	$x86_sys_›í_im∂
(
X86C⁄ãxt
 *
˘x
)

571 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

572 
mem_t
 *
mem
 = 
˘x
->mem;

574 
x86_fûe_desc_t
 *
desc
;

576 
fûe_«me_±r
;

578 
Êags
;

579 
mode
;

580 
Àngth
;

582 
fûe_«me
[
MAX_PATH_SIZE
];

583 
fuŒ_∑th
[
MAX_PATH_SIZE
];

584 
ãmp_∑th
[
MAX_PATH_SIZE
];

585 
Êags_°r
[
MAX_STRING_SIZE
];

587 
ho°_fd
;

590 
fûe_«me_±r
 = 
ªgs
->
ebx
;

591 
Êags
 = 
ªgs
->
ecx
;

592 
mode
 = 
ªgs
->
edx
;

593 
Àngth
 = 
	`mem_ªad_°rög
(
mem
, 
fûe_«me_±r
,  
fûe_«me
, file_name);

594 i‡(
Àngth
 >
MAX_PATH_SIZE
)

595 
	`Áèl
("syscall open: maximumÖathÜengthÉxceeded");

596 
	`X86C⁄ãxtGëFuŒP©h
(
˘x
, 
fûe_«me
, 
fuŒ_∑th
,  full_path);

597 
	`x86_sys_debug
(" filename='%s' flags=0x%x, mode=0x%x\n",

598 
fûe_«me
, 
Êags
, 
mode
);

599 
	`x86_sys_debug
(" fuŒ∑th='%s'\n", 
fuŒ_∑th
);

600 
	`°r_m≠_Êags
(&
sys_›í_Êags_m≠
, 
Êags
, 
Êags_°r
,  flags_str);

601 
	`x86_sys_debug
(" fœgs=%s\n", 
Êags_°r
);

606 i‡(
	`ru¡ime_ªdúe˘
(
fuŒ_∑th
, 
ãmp_∑th
, Åemp_path))

607 
	`¢¥ötf
(
fuŒ_∑th
,  fuŒ_∑th, "%s", 
ãmp_∑th
);

610 i‡(!
	`°∫cmp
(
fuŒ_∑th
, "/proc/", 6))

613 
desc
 = 
	`x86_sys_›í_vútuÆ
(
˘x
, 
fuŒ_∑th
, 
Êags
, 
mode
);

614 i‡(
desc
)

615  
desc
->
gue°_fd
;

619 
	`x86_sys_debug
(" warning: unhandled virtual file\n");

623 
ho°_fd
 = 
	`›í
(
fuŒ_∑th
, 
Êags
, 
mode
);

624 i‡(
ho°_fd
 == -1)

625  -
î∫o
;

628 
desc
 = 
	`x86_fûe_desc_èbÀ_íåy_√w
(
˘x
->
fûe_desc_èbÀ
,

629 
fûe_desc_ªguœr
, 
ho°_fd
, 
fuŒ_∑th
, 
Êags
);

630 
	`x86_sys_debug
(" file descriptor opened: guest_fd=%d, host_fd=%d\n",

631 
desc
->
gue°_fd
, desc->
ho°_fd
);

634  
desc
->
gue°_fd
;

635 
	}
}

644 
°r_m≠_t
 
	gsys_waôpid_›ti⁄s_m≠
 =

658 
	$x86_sys_waôpid_im∂
(
X86C⁄ãxt
 *
˘x
)

660 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

661 
mem_t
 *
mem
 = 
˘x
->mem;

663 
X86C⁄ãxt
 *
chûd
;

665 
pid
;

666 
›ti⁄s
;

667 
°©us_±r
;

669 
›ti⁄s_°r
[
MAX_STRING_SIZE
];

672 
pid
 = 
ªgs
->
ebx
;

673 
°©us_±r
 = 
ªgs
->
ecx
;

674 
›ti⁄s
 = 
ªgs
->
edx
;

675 
	`x86_sys_debug
("Öid=%d,Östatus=0x%x, options=0x%x\n",

676 
pid
, 
°©us_±r
, 
›ti⁄s
);

677 
	`°r_m≠_Êags
(&
sys_waôpid_›ti⁄s_m≠
, 
›ti⁄s
, 
›ti⁄s_°r
,  options_str);

678 
	`x86_sys_debug
(" o±i⁄s=%s\n", 
›ti⁄s_°r
);

681 i‡(
pid
 != -1 &&Öid <= 0)

682 
	`Áèl
("%s: only supported forÖid=-1 orÖid > 0.\n%s",

683 
__FUNCTION__
, 
îr_x86_sys_nŸe
);

686 
chûd
 = 
	`X86C⁄ãxtGëZombõ
(
˘x
, 
pid
);

690 i‡(!
chûd
 && !(
›ti⁄s
 & 0x1))

692 
˘x
->
wakeup_pid
 = 
pid
;

693 
	`X86C⁄ãxtSëSèã
(
˘x
, 
X86C⁄ãxtSu•íded
 | 
X86C⁄ãxtWaôpid
);

699 i‡(
chûd
)

701 i‡(
°©us_±r
)

702 
	`mem_wrôe
(
mem
, 
°©us_±r
, 4, &
chûd
->
exô_code
);

703 
	`X86C⁄ãxtSëSèã
(
chûd
, 
X86C⁄ãxtFöished
);

704  
chûd
->
pid
;

709 
	}
}

718 
	$x86_sys_u∆ök_im∂
(
X86C⁄ãxt
 *
˘x
)

720 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

721 
mem_t
 *
mem
 = 
˘x
->mem;

723 
fûe_«me_±r
;

725 
Àngth
;

726 
îr
;

728 
fûe_«me
[
MAX_PATH_SIZE
];

729 
fuŒ_∑th
[
MAX_PATH_SIZE
];

732 
fûe_«me_±r
 = 
ªgs
->
ebx
;

733 
Àngth
 = 
	`mem_ªad_°rög
(
mem
, 
fûe_«me_±r
,  
fûe_«me
, file_name);

734 i‡(
Àngth
 >
MAX_PATH_SIZE
)

735 
	`Áèl
("%s: buf„∏toÿsmÆl", 
__FUNCTION__
);

736 
	`X86C⁄ãxtGëFuŒP©h
(
˘x
, 
fûe_«me
, 
fuŒ_∑th
,  full_path);

737 
	`x86_sys_debug
(" fûe_«me_±r=0x%x\n", 
fûe_«me_±r
);

738 
	`x86_sys_debug
(" fûe_«me=%s, fuŒ_∑th=%s\n", 
fûe_«me
, 
fuŒ_∑th
);

741 
îr
 = 
	`u∆ök
(
fuŒ_∑th
);

742 i‡(
îr
 == -1)

743  -
î∫o
;

747 
	}
}

756 *
	gîr_sys_execve_nŸe
 =

762 
	$x86_sys_execve_im∂
(
X86C⁄ãxt
 *
˘x
)

764 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

765 
mem_t
 *
mem
 = 
˘x
->mem;

767 
«me_±r
;

768 
¨gv
;

769 
ívp
;

770 
ªgs_±r
;

772 
«me
[
MAX_PATH_SIZE
];

773 
fuŒ_∑th
[
MAX_PATH_SIZE
];

774 
Àngth
;

776 
li°_t
 *
¨g_li°
;

777 
¨g_°r
[
MAX_STRING_SIZE
];

778 *
¨g
;

780 
ív
[
MAX_LONG_STRING_SIZE
];

781 
i
;

784 
«me_±r
 = 
ªgs
->
ebx
;

785 
¨gv
 = 
ªgs
->
ecx
;

786 
ívp
 = 
ªgs
->
edx
;

787 
ªgs_±r
 = 
ªgs
->
esi
;

788 
	`x86_sys_debug
("Çame_ptr=0x%x,árgv=0x%x,Énvp=0x%x,Ñegs=0x%x\n",

789 
«me_±r
, 
¨gv
, 
ívp
, 
ªgs_±r
);

792 
Àngth
 = 
	`mem_ªad_°rög
(
mem
, 
«me_±r
,  
«me
,Çame);

793 i‡(
Àngth
 > 
«me
)

794 
	`Áèl
("%s: buf„∏toÿsmÆl", 
__FUNCTION__
);

795 
	`X86C⁄ãxtGëFuŒP©h
(
˘x
, 
«me
, 
fuŒ_∑th
,  full_path);

796 
	`x86_sys_debug
("Çame='%s', fuŒ_∑th='%s'\n", 
«me
, 
fuŒ_∑th
);

799 
¨g_li°
 = 
	`li°_¸óã
();

802 
¨g_±r
;

805 
	`mem_ªad
(
mem
, 
¨gv
 + 
¨g_li°
->
cou¡
 * 4, 4, &
¨g_±r
);

806 i‡(!
¨g_±r
)

810 
Àngth
 = 
	`mem_ªad_°rög
(
mem
, 
¨g_±r
,  
¨g_°r
,árg_str);

811 i‡(
Àngth
 > 
¨g_°r
)

812 
	`Áèl
("%s: buf„∏toÿsmÆl", 
__FUNCTION__
);

815 
¨g
 = 
	`x°rdup
(
¨g_°r
);

816 
	`li°_add
(
¨g_li°
, 
¨g
);

817 
	`x86_sys_debug
("árgv[%d]='%s'\n", 
¨g_li°
->
cou¡
, 
¨g
);

821 
	`x86_sys_debug
("\n");

822 
i
 = 0; ; i++)

824 
ív_±r
;

827 
	`mem_ªad
(
mem
, 
ívp
 + 
i
 * 4, 4, &
ív_±r
);

828 i‡(!
ív_±r
)

832 
Àngth
 = 
	`mem_ªad_°rög
(
mem
, 
ív_±r
,  
ív
,Énv);

833 i‡(
Àngth
 > 
ív
)

834 
	`Áèl
("%s: buf„∏toÿsmÆl", 
__FUNCTION__
);

837 
	`x86_sys_debug
("Énvp[%d]='%s'\n", 
i
, 
ív
);

845 i‡(!
	`°rcmp
(
fuŒ_∑th
, "/bö/sh"Ë&& 
	`li°_cou¡
(
¨g_li°
) == 3 &&

846 !
	`°rcmp
(
	`li°_gë
(
¨g_li°
, 0), "sh") &&

847 !
	`°rcmp
(
	`li°_gë
(
¨g_li°
, 1), "-c"))

849 
exô_code
;

852 
	`w¨nög
("%s: child contextÉxecutedÇatively.\n%s",

853 
__FUNCTION__
, 
îr_sys_execve_nŸe
);

854 
exô_code
 = 
	`sy°em
(
	`li°_gë
(
¨g_li°
, 2));

855 
	`X86C⁄ãxtFöish
(
˘x
, 
exô_code
);

858 
i
 = 0; i < 
	`li°_cou¡
(
¨g_li°
); i++)

859 
	`‰ì
(
	`li°_gë
(
¨g_li°
, 
i
));

860 
	`li°_‰ì
(
¨g_li°
);

865 
i
 = 0; i < 
	`li°_cou¡
(
¨g_li°
); i++)

866 
	`‰ì
(
	`li°_gë
(
¨g_li°
, 
i
));

867 
	`li°_‰ì
(
¨g_li°
);

870 
	`Áèl
("%s:ÇŸ im∂emíãd.\n%s", 
__FUNCTION__
, 
îr_x86_sys_nŸe
);

872 
	}
}

881 
	$x86_sys_chdú_im∂
(
X86C⁄ãxt
 *
˘x
)

883 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

884 
x86_lﬂdî_t
 *
lﬂdî
 = 
˘x
->loader;

885 
mem_t
 *
mem
 = 
˘x
->mem;

887 
∑th
[
MAX_STRING_SIZE
];

888 
ﬁd_ho°_∑th
[
MAX_STRING_SIZE
];

890 
∑th_±r
;

892 
Àngth
;

893 
îr
;

896 
∑th_±r
 = 
ªgs
->
ebx
;

897 
	`x86_sys_debug
("Ö©h_±r=0x%x\n", 
∑th_±r
);

900 
Àngth
 = 
	`mem_ªad_°rög
(
mem
, 
∑th_±r
,  
∑th
,Öath);

901 i‡(
Àngth
 > 
∑th
)

902 
	`Áèl
("%s: buf„∏'∑th'ÅoÿsmÆl", 
__FUNCTION__
);

903 
	`x86_sys_debug
("Ö©h='%s'\n", 
∑th
);

906 i‡(!
	`gëcwd
(
ﬁd_ho°_∑th
,  old_host_path))

907 
	`Áèl
("%s: buf„∏'ﬁd_ho°_∑th'ÅoÿsmÆl", 
__FUNCTION__
);

910 i‡(
	`chdú
(
lﬂdî
->
cwd
))

911 
	`Áèl
("%s: %s: cannot cdÅo guest working directory",

912 
__FUNCTION__
, 
lﬂdî
->
cwd
);

915 
îr
 = 
	`chdú
(
∑th
);

916 i‡(!
îr
)

918 i‡(!
	`gëcwd
(
∑th
, Öath))

919 
	`Áèl
("%s: buf„∏'∑th'ÅoÿsmÆl", 
__FUNCTION__
);

920 
lﬂdî
->
cwd
 = 
	`°r_£t
÷ﬂdî->cwd, 
∑th
);

921 
	`x86_sys_debug
(" New w‹kög dúe˘‹y i†'%s'\n", 
lﬂdî
->
cwd
);

925 i‡(
	`chdú
(
ﬁd_ho°_∑th
))

926 
	`Áèl
("%s: c™nŸ cd back i¡ÿﬁd ho°Ö©h", 
__FUNCTION__
);

929  
îr
;

930 
	}
}

939 
	$x86_sys_time_im∂
(
X86C⁄ãxt
 *
˘x
)

941 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

942 
mem_t
 *
mem
 = 
˘x
->mem;

944 
time_±r
;

945 
t
;

948 
time_±r
 = 
ªgs
->
ebx
;

949 
	`x86_sys_debug
("Ötime=0x%x\n", 
time_±r
);

952 
t
 = 
	`time
(
NULL
);

953 i‡(
time_±r
)

954 
	`mem_wrôe
(
mem
, 
time_±r
, 4, &
t
);

957  
t
;

958 
	}
}

967 
	$x86_sys_chmod_im∂
(
X86C⁄ãxt
 *
˘x
)

969 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

970 
mem_t
 *
mem
 = 
˘x
->mem;

972 
fûe_«me_±r
;

973 
mode
;

975 
Àn
;

976 
îr
;

978 
fûe_«me
[
MAX_PATH_SIZE
];

979 
fuŒ_∑th
[
MAX_PATH_SIZE
];

982 
fûe_«me_±r
 = 
ªgs
->
ebx
;

983 
mode
 = 
ªgs
->
ecx
;

984 
Àn
 = 
	`mem_ªad_°rög
(
mem
, 
fûe_«me_±r
,  
fûe_«me
, file_name);

985 i‡(
Àn
 > 
fûe_«me
)

986 
	`Áèl
("%s: buf„∏toÿsmÆl", 
__FUNCTION__
);

987 
	`X86C⁄ãxtGëFuŒP©h
(
˘x
, 
fûe_«me
, 
fuŒ_∑th
,  full_path);

988 
	`x86_sys_debug
(" fûe_«me_±r=0x%x, mode=0x%x\n", 
fûe_«me_±r
, 
mode
);

989 
	`x86_sys_debug
(" fûe_«me='%s', fuŒ_∑th='%s'\n", 
fûe_«me
, 
fuŒ_∑th
);

992 
îr
 = 
	`chmod
(
fuŒ_∑th
, 
mode
);

993 i‡(
îr
 == -1)

994  -
î∫o
;

997  
îr
;

998 
	}
}

1007 
	$x86_sys_l£ek_im∂
(
X86C⁄ãxt
 *
˘x
)

1009 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1011 
off£t
;

1013 
fd
;

1014 
‹igö
;

1015 
ho°_fd
;

1016 
îr
;

1019 
fd
 = 
ªgs
->
ebx
;

1020 
off£t
 = 
ªgs
->
ecx
;

1021 
‹igö
 = 
ªgs
->
edx
;

1022 
ho°_fd
 = 
	`x86_fûe_desc_èbÀ_gë_ho°_fd
(
˘x
->
fûe_desc_èbÀ
, 
fd
);

1023 
	`x86_sys_debug
(" fd=%d, offset=0x%x, origin=0x%x\n",

1024 
fd
, 
off£t
, 
‹igö
);

1025 
	`x86_sys_debug
(" ho°_fd=%d\n", 
ho°_fd
);

1028 
îr
 = 
	`l£ek
(
ho°_fd
, 
off£t
, 
‹igö
);

1029 i‡(
îr
 == -1)

1030  -
î∫o
;

1033  
îr
;

1034 
	}
}

1043 
	$x86_sys_gëpid_im∂
(
X86C⁄ãxt
 *
˘x
)

1045  
˘x
->
pid
;

1046 
	}
}

1055 
	ssim_utimbuf


1057 
	ma˘ime
;

1058 
	mmodtime
;

1061 
	$sys_utime_gue°_to_ho°
(
utimbuf
 *
ho°
, 
sim_utimbuf
 *
gue°
)

1063 
ho°
->
a˘ime
 = 
gue°
->actime;

1064 
ho°
->
modtime
 = 
gue°
->modtime;

1065 
	}
}

1067 
	$x86_sys_utime_im∂
(
X86C⁄ãxt
 *
˘x
)

1069 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1070 
mem_t
 *
mem
 = 
˘x
->mem;

1072 
fûe_«me_±r
;

1073 
utimbuf_±r
;

1075 
utimbuf
 utimbuf;

1076 
sim_utimbuf
 sim_utimbuf;

1078 
Àn
;

1079 
îr
;

1081 
fûe_«me
[
MAX_PATH_SIZE
];

1082 
fuŒ_∑th
[
MAX_PATH_SIZE
];

1085 
fûe_«me_±r
 = 
ªgs
->
ebx
;

1086 
utimbuf_±r
 = 
ªgs
->
ecx
;

1087 
	`x86_sys_debug
(" file_name_ptr=0x%x, utimbuf_ptr=0x%x\n",

1088 
fûe_«me_±r
, 
utimbuf_±r
);

1091 
Àn
 = 
	`mem_ªad_°rög
(
mem
, 
fûe_«me_±r
,  
fûe_«me
, file_name);

1092 i‡(
Àn
 >
MAX_PATH_SIZE
)

1093 
	`Áèl
("%s: buf„∏toÿsmÆl", 
__FUNCTION__
);

1096 
	`X86C⁄ãxtGëFuŒP©h
(
˘x
, 
fûe_«me
, 
fuŒ_∑th
,  full_path);

1097 
	`x86_sys_debug
(" fûe_«me='%s', fuŒ_∑th='%s'\n", 
fûe_«me
, 
fuŒ_∑th
);

1100 
	`mem_ªad
(
mem
, 
utimbuf_±r
, (
sim_utimbuf
), &sim_utimbuf);

1101 
	`sys_utime_gue°_to_ho°
(&
utimbuf
, &
sim_utimbuf
);

1102 
	`x86_sys_debug
(" utimbuf.actime = %u, utimbuf.modtime = %u\n",

1103 
sim_utimbuf
.
a˘ime
, sim_utimbuf.
modtime
);

1106 
îr
 = 
	`utime
(
fuŒ_∑th
, &
utimbuf
);

1107 i‡(
îr
 == -1)

1108  -
î∫o
;

1111  
îr
;

1112 
	}
}

1121 
°r_m≠_t
 
	gsys_ac˚ss_mode_m≠
 =

1130 
	$x86_sys_ac˚ss_im∂
(
X86C⁄ãxt
 *
˘x
)

1132 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1133 
mem_t
 *
mem
 = 
˘x
->mem;

1135 
fûe_«me_±r
;

1137 
mode
;

1138 
Àn
;

1139 
îr
;

1141 
fûe_«me
[
MAX_PATH_SIZE
];

1142 
fuŒ_∑th
[
MAX_PATH_SIZE
];

1143 
mode_°r
[
MAX_STRING_SIZE
];

1146 
fûe_«me_±r
 = 
ªgs
->
ebx
;

1147 
mode
 = 
ªgs
->
ecx
;

1150 
Àn
 = 
	`mem_ªad_°rög
(
mem
, 
fûe_«me_±r
,  
fûe_«me
, file_name);

1151 i‡(
Àn
 > 
fûe_«me
)

1152 
	`Áèl
("%s: buf„∏toÿsmÆl", 
__FUNCTION__
);

1155 
	`X86C⁄ãxtGëFuŒP©h
(
˘x
, 
fûe_«me
, 
fuŒ_∑th
,  full_path);

1158 
	`°r_m≠_Êags
(&
sys_ac˚ss_mode_m≠
, 
mode
, 
mode_°r
,  mode_str);

1159 
	`x86_sys_debug
(" fûe_«me='%s', mode=0x%x\n", 
fûe_«me
, 
mode
);

1160 
	`x86_sys_debug
(" fuŒ_∑th='%s'\n", 
fuŒ_∑th
);

1161 
	`x86_sys_debug
(" mode=%s\n", 
mode_°r
);

1164 
îr
 = 
	`ac˚ss
(
fuŒ_∑th
, 
mode
);

1165 i‡(
îr
 == -1)

1166  -
î∫o
;

1169  
îr
;

1170 
	}
}

1179 
	$x86_sys_kûl_im∂
(
X86C⁄ãxt
 *
˘x
)

1181 
X86Emu
 *
emu
 = 
˘x
->emu;

1183 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1184 
X86C⁄ãxt
 *
ãmp_˘x
;

1186 
pid
;

1187 
sig
;

1190 
pid
 = 
ªgs
->
ebx
;

1191 
sig
 = 
ªgs
->
ecx
;

1192 
	`x86_sys_debug
("Öid=%d, sig=%d (%s)\n", 
pid
,

1193 
sig
, 
	`x86_sig«l_«me
(sig));

1197 
ãmp_˘x
 = 
	`X86EmuGëC⁄ãxt
(
emu
, 
pid
);

1198 i‡(!
ãmp_˘x
)

1199 
	`Áèl
("%s: invÆidÖid %d", 
__FUNCTION__
, 
pid
);

1202 
	`x86_sig£t_add
(&
ãmp_˘x
->
sig«l_mask_èbÀ
->
≥ndög
, 
sig
);

1203 
	`X86C⁄ãxtHo°ThªadSu•ídC™˚l
(
ãmp_˘x
);

1204 
	`X86EmuPro˚ssEvítsScheduÀ
(
emu
);

1205 
	`X86EmuPro˚ssEvíts
(
emu
);

1209 
	}
}

1218 
	$x86_sys_ª«me_im∂
(
X86C⁄ãxt
 *
˘x
)

1220 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1221 
mem_t
 *
mem
 = 
˘x
->mem;

1223 
ﬁd_∑th_±r
;

1224 
√w_∑th_±r
;

1226 
ﬁd_∑th
[
MAX_PATH_SIZE
];

1227 
√w_∑th
[
MAX_PATH_SIZE
];

1228 
ﬁd_fuŒ_∑th
[
MAX_PATH_SIZE
];

1229 
√w_fuŒ_∑th
[
MAX_PATH_SIZE
];

1231 
Àn
;

1232 
îr
;

1235 
ﬁd_∑th_±r
 = 
ªgs
->
ebx
;

1236 
√w_∑th_±r
 = 
ªgs
->
ecx
;

1237 
	`x86_sys_debug
(" old_path_ptr=0x%x,Çew_path_ptr=0x%x\n",

1238 
ﬁd_∑th_±r
, 
√w_∑th_±r
);

1241 
Àn
 = 
	`mem_ªad_°rög
(
mem
, 
ﬁd_∑th_±r
,  
ﬁd_∑th
, old_path);

1242 i‡(
Àn
 > 
ﬁd_∑th
)

1243 
	`Áèl
("%s: buf„∏toÿsmÆl", 
__FUNCTION__
);

1246 
Àn
 = 
	`mem_ªad_°rög
(
mem
, 
√w_∑th_±r
,  
√w_∑th
,Çew_path);

1247 i‡(
Àn
 > 
√w_∑th
)

1248 
	`Áèl
("%s: buf„∏toÿsmÆl", 
__FUNCTION__
);

1251 
	`X86C⁄ãxtGëFuŒP©h
(
˘x
, 
ﬁd_∑th
, 
ﬁd_fuŒ_∑th
,  old_full_path);

1252 
	`X86C⁄ãxtGëFuŒP©h
(
˘x
, 
√w_∑th
, 
√w_fuŒ_∑th
, Çew_full_path);

1253 
	`x86_sys_debug
(" old_∑th='%s',Çew_∑th='%s'\n", 
ﬁd_∑th
, 
√w_∑th
);

1254 
	`x86_sys_debug
(" old_fuŒ_∑th='%s',Çew_fuŒ_∑th='%s'\n", 
ﬁd_fuŒ_∑th
, 
√w_fuŒ_∑th
);

1257 
îr
 = 
	`ª«me
(
ﬁd_fuŒ_∑th
, 
√w_fuŒ_∑th
);

1258 i‡(
îr
 == -1)

1259  -
î∫o
;

1262  
îr
;

1263 
	}
}

1272 
	$x86_sys_mkdú_im∂
(
X86C⁄ãxt
 *
˘x
)

1274 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1275 
mem_t
 *
mem
 = 
˘x
->mem;

1277 
∑th_±r
;

1279 
mode
;

1280 
Àn
;

1281 
îr
;

1283 
∑th
[
MAX_PATH_SIZE
];

1284 
fuŒ_∑th
[
MAX_PATH_SIZE
];

1287 
∑th_±r
 = 
ªgs
->
ebx
;

1288 
mode
 = 
ªgs
->
ecx
;

1289 
	`x86_sys_debug
("Ö©h_±r=0x%x, mode=0x%x\n", 
∑th_±r
, 
mode
);

1292 
Àn
 = 
	`mem_ªad_°rög
(
mem
, 
∑th_±r
,  
∑th
,Öath);

1293 i‡(
Àn
 > 
∑th
)

1294 
	`Áèl
("%s: buf„∏toÿsmÆl", 
__FUNCTION__
);

1297 
	`X86C⁄ãxtGëFuŒP©h
(
˘x
, 
∑th
, 
fuŒ_∑th
, 
MAX_PATH_SIZE
);

1298 
	`x86_sys_debug
("Ö©h='%s', fuŒ_∑th='%s'\n", 
∑th
, 
fuŒ_∑th
);

1301 
îr
 = 
	`mkdú
(
fuŒ_∑th
, 
mode
);

1302 i‡(
îr
 == -1)

1303  -
î∫o
;

1306  
îr
;

1307 
	}
}

1316 
	$x86_sys_dup_im∂
(
X86C⁄ãxt
 *
˘x
)

1318 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1320 
gue°_fd
;

1321 
dup_gue°_fd
;

1322 
ho°_fd
;

1323 
dup_ho°_fd
;

1325 
x86_fûe_desc_t
 *
desc
;

1326 
x86_fûe_desc_t
 *
dup_desc
;

1329 
gue°_fd
 = 
ªgs
->
ebx
;

1330 
	`x86_sys_debug
(" gue°_fd=%d\n", 
gue°_fd
);

1333 
desc
 = 
	`x86_fûe_desc_èbÀ_íåy_gë
(
˘x
->
fûe_desc_èbÀ
, 
gue°_fd
);

1334 i‡(!
desc
)

1335  -
EBADF
;

1336 
ho°_fd
 = 
desc
->host_fd;

1337 
	`x86_sys_debug
(" ho°_fd=%d\n", 
ho°_fd
);

1340 
dup_ho°_fd
 = 
	`dup
(
ho°_fd
);

1341 i‡(
dup_ho°_fd
 == -1)

1342  -
î∫o
;

1345 
dup_desc
 = 
	`x86_fûe_desc_èbÀ_íåy_√w
(
˘x
->
fûe_desc_èbÀ
,

1346 
fûe_desc_ªguœr
, 
dup_ho°_fd
, 
desc
->
∑th
, desc->
Êags
);

1347 
dup_gue°_fd
 = 
dup_desc
->
gue°_fd
;

1350  
dup_gue°_fd
;

1351 
	}
}

1360 
	$x86_sys_pùe_im∂
(
X86C⁄ãxt
 *
˘x
)

1362 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1363 
mem_t
 *
mem
 = 
˘x
->mem;

1365 
x86_fûe_desc_t
 *
ªad_desc
;

1366 
x86_fûe_desc_t
 *
wrôe_desc
;

1368 
fd_±r
;

1370 
gue°_ªad_fd
;

1371 
gue°_wrôe_fd
;

1373 
ho°_fd
[2];

1374 
îr
;

1377 
fd_±r
 = 
ªgs
->
ebx
;

1378 
	`x86_sys_debug
(" fd_±r=0x%x\n", 
fd_±r
);

1381 
îr
 = 
	`pùe
(
ho°_fd
);

1382 i‡(
îr
 == -1)

1383 
	`Áèl
("%s: c™nŸ cª©êpùe", 
__FUNCTION__
);

1384 
	`x86_sys_debug
(" hostÖipe created: fd={%d, %d}\n",

1385 
ho°_fd
[0], host_fd[1]);

1388 
ªad_desc
 = 
	`x86_fûe_desc_èbÀ_íåy_√w
(
˘x
->
fûe_desc_èbÀ
,

1389 
fûe_desc_pùe
, 
ho°_fd
[0], "", 
O_RDONLY
);

1390 
wrôe_desc
 = 
	`x86_fûe_desc_èbÀ_íåy_√w
(
˘x
->
fûe_desc_èbÀ
,

1391 
fûe_desc_pùe
, 
ho°_fd
[1], "", 
O_WRONLY
);

1392 
	`x86_sys_debug
(" guestÖipe created: fd={%d, %d}\n",

1393 
ªad_desc
->
gue°_fd
, 
wrôe_desc
->guest_fd);

1394 
gue°_ªad_fd
 = 
ªad_desc
->
gue°_fd
;

1395 
gue°_wrôe_fd
 = 
wrôe_desc
->
gue°_fd
;

1398 
	`mem_wrôe
(
mem
, 
fd_±r
, 4, &
gue°_ªad_fd
);

1399 
	`mem_wrôe
(
mem
, 
fd_±r
 + 4, 4, &
gue°_wrôe_fd
);

1401 
	}
}

1410 
	ssim_tms


1412 
	mutime
;

1413 
	m°ime
;

1414 
	mcutime
;

1415 
	mc°ime
;

1418 
	$sys_times_ho°_to_gue°
(
sim_tms
 *
gue°
, 
tms
 *
ho°
)

1420 
gue°
->
utime
 = 
ho°
->
tms_utime
;

1421 
gue°
->
°ime
 = 
ho°
->
tms_°ime
;

1422 
gue°
->
cutime
 = 
ho°
->
tms_cutime
;

1423 
gue°
->
c°ime
 = 
ho°
->
tms_c°ime
;

1424 
	}
}

1426 
	$x86_sys_times_im∂
(
X86C⁄ãxt
 *
˘x
)

1428 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1429 
mem_t
 *
mem
 = 
˘x
->mem;

1431 
tms_±r
;

1433 
tms
Åms;

1434 
sim_tms
 sim_tms;

1436 
îr
;

1439 
tms_±r
 = 
ªgs
->
ebx
;

1440 
	`x86_sys_debug
("Åms_±r=0x%x\n", 
tms_±r
);

1443 
îr
 = 
	`times
(&
tms
);

1446 i‡(
tms_±r
)

1448 
	`sys_times_ho°_to_gue°
(&
sim_tms
, &
tms
);

1449 
	`mem_wrôe
(
mem
, 
tms_±r
, (
sim_tms
), &sim_tms);

1453  
îr
;

1454 
	}
}

1463 
	$x86_sys_brk_im∂
(
X86C⁄ãxt
 *
˘x
)

1465 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1466 
mem_t
 *
mem
 = 
˘x
->mem;

1468 
ﬁd_hóp_bªak
;

1469 
√w_hóp_bªak
;

1470 
size
;

1472 
ﬁd_hóp_bªak_Æig√d
;

1473 
√w_hóp_bªak_Æig√d
;

1476 
√w_hóp_bªak
 = 
ªgs
->
ebx
;

1477 
ﬁd_hóp_bªak
 = 
mem
->
hóp_bªak
;

1478 
	`x86_sys_debug
("Çewbrk=0x%x (previous brk was 0x%x)\n",

1479 
√w_hóp_bªak
, 
ﬁd_hóp_bªak
);

1482 
√w_hóp_bªak_Æig√d
 = 
	`ROUND_UP
(
√w_hóp_bªak
, 
MEM_PAGE_SIZE
);

1483 
ﬁd_hóp_bªak_Æig√d
 = 
	`ROUND_UP
(
ﬁd_hóp_bªak
, 
MEM_PAGE_SIZE
);

1487 i‡(!
√w_hóp_bªak
)

1488  
ﬁd_hóp_bªak
;

1493 i‡(
√w_hóp_bªak
 > 
ﬁd_hóp_bªak
)

1495 
size
 = 
√w_hóp_bªak_Æig√d
 - 
ﬁd_hóp_bªak_Æig√d
;

1496 i‡(
size
)

1498 i‡(
	`mem_m≠_•a˚
(
mem
, 
ﬁd_hóp_bªak_Æig√d
, 
size
) != old_heap_break_aligned)

1499 
	`Áèl
("%s: ouào‡mem‹y", 
__FUNCTION__
);

1500 
	`mem_m≠
(
mem
, 
ﬁd_hóp_bªak_Æig√d
, 
size
,

1501 
mem_ac˚ss_ªad
 | 
mem_ac˚ss_wrôe
);

1503 
mem
->
hóp_bªak
 = 
√w_hóp_bªak
;

1504 
	`x86_sys_debug
(" hó∞grow†%u byãs\n", 
√w_hóp_bªak
 - 
ﬁd_hóp_bªak
);

1505  
√w_hóp_bªak
;

1509 i‡(
√w_hóp_bªak
 < 
ﬁd_hóp_bªak
)

1511 
size
 = 
ﬁd_hóp_bªak_Æig√d
 - 
√w_hóp_bªak_Æig√d
;

1512 i‡(
size
)

1513 
	`mem_unm≠
(
mem
, 
√w_hóp_bªak_Æig√d
, 
size
);

1514 
mem
->
hóp_bªak
 = 
√w_hóp_bªak
;

1515 
	`x86_sys_debug
(" hó∞shrök†%u byãs\n", 
ﬁd_hóp_bªak
 - 
√w_hóp_bªak
);

1516  
√w_hóp_bªak
;

1521 
	}
}

1537 
	$x86_sys_io˘l_im∂
(
X86C⁄ãxt
 *
˘x
)

1539 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1540 
mem_t
 *
mem
 = 
˘x
->mem;

1542 
cmd
;

1543 
¨g
;

1545 
gue°_fd
;

1546 
îr
;

1548 
x86_fûe_desc_t
 *
desc
;

1551 
gue°_fd
 = 
ªgs
->
ebx
;

1552 
cmd
 = 
ªgs
->
ecx
;

1553 
¨g
 = 
ªgs
->
edx
;

1554 
	`x86_sys_debug
(" guest_fd=%d, cmd=0x%x,árg=0x%x\n",

1555 
gue°_fd
, 
cmd
, 
¨g
);

1558 
desc
 = 
	`x86_fûe_desc_èbÀ_íåy_gë
(
˘x
->
fûe_desc_èbÀ
, 
gue°_fd
);

1559 i‡(!
desc
)

1560  -
EBADF
;

1563 i‡(
cmd
 >= 0x5401 || cmd <= 0x5408)

1569 
buf
[60];

1572 
	`mem_ªad
(
mem
, 
¨g
,  
buf
, buf);

1573 
îr
 = 
	`io˘l
(
desc
->
ho°_fd
, 
cmd
, &
buf
);

1574 i‡(
îr
 == -1)

1575  -
î∫o
;

1578 
	`mem_wrôe
(
mem
, 
¨g
,  
buf
, buf);

1579  
îr
;

1583 
	`Áèl
("%s:Çot implement for cmd = 0x%x.\n%s",

1584 
__FUNCTION__
, 
cmd
, 
îr_x86_sys_nŸe
);

1589 
	}
}

1598 
	$x86_sys_gëµid_im∂
(
X86C⁄ãxt
 *
˘x
)

1601 i‡(!
˘x
->
∑ª¡
)

1605  
˘x
->
∑ª¡
->
pid
;

1606 
	}
}

1615 
°r_m≠_t
 
	gsys_æimô_ªs_m≠
 =

1638 
	ssim_æimô


1640 
	mcur
;

1641 
	mmax
;

1644 
	$x86_sys_£ålimô_im∂
(
X86C⁄ãxt
 *
˘x
)

1646 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1647 
mem_t
 *
mem
 = 
˘x
->mem;

1649 
ªs
;

1650 
æim_±r
;

1652 *
ªs_°r
;

1654 
sim_æimô
 sim_rlimit;

1657 
ªs
 = 
ªgs
->
ebx
;

1658 
æim_±r
 = 
ªgs
->
ecx
;

1659 
ªs_°r
 = 
	`°r_m≠_vÆue
(&
sys_æimô_ªs_m≠
, 
ªs
);

1660 
	`x86_sys_debug
("Ñes=0x%x,Ñlim_±r=0x%x\n", 
ªs
, 
æim_±r
);

1661 
	`x86_sys_debug
("Ñes=%s\n", 
ªs_°r
);

1664 
	`mem_ªad
(
mem
, 
æim_±r
, (
sim_æimô
), &sim_rlimit);

1665 
	`x86_sys_debug
("Ñlim->cur=0x%x,Ñlim->max=0x%x\n",

1666 
sim_æimô
.
cur
, sim_æimô.
max
);

1669 
ªs
)

1672 
RLIMIT_DATA
:

1679 
RLIMIT_STACK
:

1687 
	`Áèl
("%s:Çot implemented forÑes = %s.\n%s",

1688 
__FUNCTION__
, 
ªs_°r
, 
îr_x86_sys_nŸe
);

1693 
	}
}

1702 
	ssim_rußge


1704 
	mutime_£c
, 
	mutime_u£c
;

1705 
	m°ime_£c
, 
	m°ime_u£c
;

1706 
	mmaxrss
;

1707 
	mixrss
;

1708 
	midrss
;

1709 
	mi§ss
;

1710 
	mmöÊt
;

1711 
	mmajÊt
;

1712 
	mnsw≠
;

1713 
	möblock
;

1714 
	moublock
;

1715 
	mmsg¢d
;

1716 
	mmsgrcv
;

1717 
	mnsig«ls
;

1718 
	mnvcsw
;

1719 
	mnivcsw
;

1722 
	$sys_rußge_ho°_to_gue°
(
sim_rußge
 *
gue°
, 
rußge
 *
ho°
)

1724 
gue°
->
utime_£c
 = 
ho°
->
ru_utime
.
tv_£c
;

1725 
gue°
->
utime_u£c
 = 
ho°
->
ru_utime
.
tv_u£c
;

1726 
gue°
->
°ime_£c
 = 
ho°
->
ru_°ime
.
tv_£c
;

1727 
gue°
->
°ime_u£c
 = 
ho°
->
ru_°ime
.
tv_u£c
;

1728 
gue°
->
maxrss
 = 
ho°
->
ru_maxrss
;

1729 
gue°
->
ixrss
 = 
ho°
->
ru_ixrss
;

1730 
gue°
->
idrss
 = 
ho°
->
ru_idrss
;

1731 
gue°
->
i§ss
 = 
ho°
->
ru_i§ss
;

1732 
gue°
->
möÊt
 = 
ho°
->
ru_möÊt
;

1733 
gue°
->
majÊt
 = 
ho°
->
ru_majÊt
;

1734 
gue°
->
nsw≠
 = 
ho°
->
ru_nsw≠
;

1735 
gue°
->
öblock
 = 
ho°
->
ru_öblock
;

1736 
gue°
->
oublock
 = 
ho°
->
ru_oublock
;

1737 
gue°
->
msg¢d
 = 
ho°
->
ru_msg¢d
;

1738 
gue°
->
msgrcv
 = 
ho°
->
ru_msgrcv
;

1739 
gue°
->
nsig«ls
 = 
ho°
->
ru_nsig«ls
;

1740 
gue°
->
nvcsw
 = 
ho°
->
ru_nvcsw
;

1741 
gue°
->
nivcsw
 = 
ho°
->
ru_nivcsw
;

1742 
	}
}

1744 
	$x86_sys_gërußge_im∂
(
X86C⁄ãxt
 *
˘x
)

1746 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1747 
mem_t
 *
mem
 = 
˘x
->mem;

1749 
who
;

1750 
u_±r
;

1752 
rußge
Ñusage;

1753 
sim_rußge
 sim_rusage;

1755 
îr
;

1758 
who
 = 
ªgs
->
ebx
;

1759 
u_±r
 = 
ªgs
->
ecx
;

1760 
	`x86_sys_debug
(" who=0x%x,Öru=0x%x\n", 
who
, 
u_±r
);

1763 i‡(
who
 != 0)

1764 
	`Áèl
("%s:Çot implemented for who != RUSAGE_SELF.\n%s",

1765 
__FUNCTION__
, 
îr_x86_sys_nŸe
);

1768 
îr
 = 
	`gërußge
(
RUSAGE_SELF
, &
rußge
);

1769 i‡(
îr
 == -1)

1770  -
î∫o
;

1773 
	`sys_rußge_ho°_to_gue°
(&
sim_rußge
, &
rußge
);

1774 
	`mem_wrôe
(
mem
, 
u_±r
,  
sim_rußge
, &sim_rusage);

1782 
	}
}

1791 
	$x86_sys_gëtimeofday_im∂
(
X86C⁄ãxt
 *
˘x
)

1793 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1794 
mem_t
 *
mem
 = 
˘x
->mem;

1796 
tv_±r
;

1797 
tz_±r
;

1799 
timevÆ
 
tv
;

1800 
timez⁄e
 
tz
;

1803 
tv_±r
 = 
ªgs
->
ebx
;

1804 
tz_±r
 = 
ªgs
->
ecx
;

1805 
	`x86_sys_debug
("Åv_±r=0x%x,Åz_±r=0x%x\n", 
tv_±r
, 
tz_±r
);

1808 
	`gëtimeofday
(&
tv
, &
tz
);

1811 i‡(
tv_±r
)

1813 
	`mem_wrôe
(
mem
, 
tv_±r
, 4, &
tv
.
tv_£c
);

1814 
	`mem_wrôe
(
mem
, 
tv_±r
 + 4, 4, &
tv
.
tv_u£c
);

1818 i‡(
tz_±r
)

1820 
	`mem_wrôe
(
mem
, 
tz_±r
, 4, &
tz
.
tz_möuãswe°
);

1821 
	`mem_wrôe
(
mem
, 
tz_±r
 + 4, 4, &
tz
.
tz_d°time
);

1826 
	}
}

1835 
	$x86_sys_ªadlök_im∂
(
X86C⁄ãxt
 *
˘x
)

1837 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

1838 
mem_t
 *
mem
 = 
˘x
->mem;

1840 
∑th_±r
;

1841 
buf
;

1842 
bufsz
;

1844 
∑th
[
MAX_PATH_SIZE
];

1845 
fuŒ_∑th
[
MAX_PATH_SIZE
];

1846 
de°_∑th
[
MAX_PATH_SIZE
];

1848 
de°_size
;

1849 
Àn
;

1850 
îr
;

1853 
∑th_±r
 = 
ªgs
->
ebx
;

1854 
buf
 = 
ªgs
->
ecx
;

1855 
bufsz
 = 
ªgs
->
edx
;

1856 
	`x86_sys_debug
("Ö©h_±r=0x%x, buf=0x%x, bufsz=%d\n", 
∑th_±r
, 
buf
, 
bufsz
);

1859 
Àn
 = 
	`mem_ªad_°rög
(
mem
, 
∑th_±r
,  
∑th
,Öath);

1860 i‡(
Àn
 = 
∑th
)

1861 
	`Áèl
("%s: buf„∏toÿsmÆl", 
__FUNCTION__
);

1864 
	`X86C⁄ãxtGëFuŒP©h
(
˘x
, 
∑th
, 
fuŒ_∑th
,  full_path);

1865 
	`x86_sys_debug
("Ö©h='%s', fuŒ_∑th='%s'\n", 
∑th
, 
fuŒ_∑th
);

1868 i‡(!
	`°rcmp
(
fuŒ_∑th
, "/proc/self/exe"))

1871 i‡(
	`°æí
(
˘x
->
lﬂdî
->
exe
Ë> 
de°_∑th
)

1872 
	`Áèl
("%s: buf„∏toÿsmÆl", 
__FUNCTION__
);

1873 
	`°r˝y
(
de°_∑th
, 
˘x
->
lﬂdî
->
exe
);

1878 
	`mem£t
(
de°_∑th
, 0,  dest_path);

1879 
îr
 = 
	`ªadlök
(
fuŒ_∑th
, 
de°_∑th
,  dest_path);

1880 i‡(
îr
 = 
de°_∑th
)

1881 
	`Áèl
("%s: buf„∏toÿsmÆl", 
__FUNCTION__
);

1882 i‡(
îr
 == -1)

1883  -
î∫o
;

1887 
de°_size
 = 
	`MIN
(
	`°æí
(
de°_∑th
), 
bufsz
);

1888 
	`mem_wrôe
(
mem
, 
buf
, 
de°_size
, 
de°_∑th
);

1889 
	`x86_sys_debug
(" de°_∑th='%s'\n", 
de°_∑th
);

1892  
de°_size
;

1893 
	}
}

1902 
	#SYS_MMAP_BASE_ADDRESS
 0xb7fb0000

	)

1904 
°r_m≠_t
 
	gsys_mm≠_¥Ÿ_m≠
 =

1916 
°r_m≠_t
 
	gsys_mm≠_Êags_m≠
 =

1933 
	$x86_sys_mm≠
(
X86C⁄ãxt
 *
˘x
, 
addr
, 
Àn
,

1934 
¥Ÿ
, 
Êags
, 
gue°_fd
, 
off£t
)

1936 
mem_t
 *
mem
 = 
˘x
->mem;

1938 
Àn_Æig√d
;

1940 
≥rm
;

1941 
ho°_fd
;

1943 
x86_fûe_desc_t
 *
desc
;

1946 
	`as£π
(
PROT_READ
 == 1);

1947 
	`as£π
(
PROT_WRITE
 == 2);

1948 
	`as£π
(
PROT_EXEC
 == 4);

1951 
	`as£π
(
MAP_SHARED
 == 0x01);

1952 
	`as£π
(
MAP_PRIVATE
 == 0x02);

1953 
	`as£π
(
MAP_FIXED
 == 0x10);

1954 
	`as£π
(
MAP_ANONYMOUS
 == 0x20);

1957 
desc
 = 
	`x86_fûe_desc_èbÀ_íåy_gë
(
˘x
->
fûe_desc_èbÀ
, 
gue°_fd
);

1958 
ho°_fd
 = 
desc
 ? desc->host_fd : -1;

1959 i‡(
gue°_fd
 > 0 && 
ho°_fd
 < 0)

1960 
	`Áèl
("%s: invÆid gue° des¸ùt‹", 
__FUNCTION__
);

1963 
≥rm
 = 
mem_ac˚ss_öô
;

1964 
≥rm
 |
¥Ÿ
 & 
PROT_READ
 ? 
mem_ac˚ss_ªad
 : 0;

1965 
≥rm
 |
¥Ÿ
 & 
PROT_WRITE
 ? 
mem_ac˚ss_wrôe
 : 0;

1966 
≥rm
 |
¥Ÿ
 & 
PROT_EXEC
 ? 
mem_ac˚ss_exec
 : 0;

1970 i‡(
Êags
 & 
MAP_ANONYMOUS
)

1971 
ho°_fd
 = -1;

1975 i‡(
off£t
 & ~
MEM_PAGE_MASK
)

1976 
	`Áèl
("%s: u«lig√d off£t", 
__FUNCTION__
);

1977 i‡(
addr
 & ~
MEM_PAGE_MASK
)

1978 
	`Áèl
("%s: u«lig√dáddªss", 
__FUNCTION__
);

1979 
Àn_Æig√d
 = 
	`ROUND_UP
(
Àn
, 
MEM_PAGE_SIZE
);

1982 i‡(
Êags
 & 
MAP_FIXED
)

1986 i‡(!
addr
)

1987 
	`Áèl
("%s:Çÿ°¨à•ecifõd f‹ fixed m≠pög", 
__FUNCTION__
);

1991 
	`mem_unm≠
(
mem
, 
addr
, 
Àn_Æig√d
);

1995 i‡(!
addr
 || 
	`mem_m≠_•a˚_down
(
mem
,áddr, 
Àn_Æig√d
) !=áddr)

1996 
addr
 = 
SYS_MMAP_BASE_ADDRESS
;

1997 
addr
 = 
	`mem_m≠_•a˚_down
(
mem
,áddr, 
Àn_Æig√d
);

1998 i‡(
addr
 == -1)

1999 
	`Áèl
("%s: ouào‡gue° mem‹y", 
__FUNCTION__
);

2003 
	`mem_m≠
(
mem
, 
addr
, 
Àn_Æig√d
, 
≥rm
);

2006 i‡(
ho°_fd
 >= 0)

2008 
buf
[
MEM_PAGE_SIZE
];

2010 
œ°_pos
;

2011 
cuº_addr
;

2013 
size
;

2014 
cou¡
;

2017 
œ°_pos
 = 
	`l£ek
(
ho°_fd
, 0, 
SEEK_CUR
);

2018 
	`l£ek
(
ho°_fd
, 
off£t
, 
SEEK_SET
);

2021 
	`as£π
(
Àn_Æig√d
 % 
MEM_PAGE_SIZE
 == 0);

2022 
	`as£π
(
addr
 % 
MEM_PAGE_SIZE
 == 0);

2023 
cuº_addr
 = 
addr
;

2024 
size
 = 
Àn_Æig√d
; sizê> 0; sizê-
MEM_PAGE_SIZE
)

2026 
	`mem£t
(
buf
, 0, 
MEM_PAGE_SIZE
);

2027 
cou¡
 = 
	`ªad
(
ho°_fd
, 
buf
, 
MEM_PAGE_SIZE
);

2028 i‡(
cou¡
)

2029 
	`mem_ac˚ss
(
mem
, 
cuº_addr
, 
MEM_PAGE_SIZE
, 
buf
, 
mem_ac˚ss_öô
);

2030 
cuº_addr
 +
MEM_PAGE_SIZE
;

2034 
	`l£ek
(
ho°_fd
, 
œ°_pos
, 
SEEK_SET
);

2038  
addr
;

2039 
	}
}

2041 
	$x86_sys_mm≠_im∂
(
X86C⁄ãxt
 *
˘x
)

2043 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

2044 
mem_t
 *
mem
 = 
˘x
->mem;

2046 
¨gs_±r
;

2047 
addr
;

2048 
Àn
;

2050 
¥Ÿ
;

2051 
Êags
;

2052 
off£t
;

2053 
gue°_fd
;

2055 
¥Ÿ_°r
[
MAX_STRING_SIZE
];

2056 
Êags_°r
[
MAX_STRING_SIZE
];

2060 
¨gs_±r
 = 
ªgs
->
ebx
;

2061 
	`mem_ªad
(
mem
, 
¨gs_±r
, 4, &
addr
);

2062 
	`mem_ªad
(
mem
, 
¨gs_±r
 + 4, 4, &
Àn
);

2063 
	`mem_ªad
(
mem
, 
¨gs_±r
 + 8, 4, &
¥Ÿ
);

2064 
	`mem_ªad
(
mem
, 
¨gs_±r
 + 12, 4, &
Êags
);

2065 
	`mem_ªad
(
mem
, 
¨gs_±r
 + 16, 4, &
gue°_fd
);

2066 
	`mem_ªad
(
mem
, 
¨gs_±r
 + 20, 4, &
off£t
);

2068 
	`x86_sys_debug
("árgs_±r=0x%x\n", 
¨gs_±r
);

2069 
	`x86_sys_debug
("áddr=0x%x,Üen=%u,Örot=0x%x, flags=0x%x, "

2071 
addr
, 
Àn
, 
¥Ÿ
, 
Êags
, 
gue°_fd
, 
off£t
);

2072 
	`°r_m≠_Êags
(&
sys_mm≠_¥Ÿ_m≠
, 
¥Ÿ
, 
¥Ÿ_°r
, Örot_str);

2073 
	`°r_m≠_Êags
(&
sys_mm≠_Êags_m≠
, 
Êags
, 
Êags_°r
,  flags_str);

2074 
	`x86_sys_debug
("ÖrŸ=%s, fœgs=%s\n", 
¥Ÿ_°r
, 
Êags_°r
);

2077  
	`x86_sys_mm≠
(
˘x
, 
addr
, 
Àn
, 
¥Ÿ
, 
Êags
, 
gue°_fd
, 
off£t
);

2078 
	}
}

2087 
	$x86_sys_munm≠_im∂
(
X86C⁄ãxt
 *
˘x
)

2089 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

2090 
mem_t
 *
mem
 = 
˘x
->mem;

2092 
addr
;

2093 
size
;

2094 
size_Æig√d
;

2097 
addr
 = 
ªgs
->
ebx
;

2098 
size
 = 
ªgs
->
ecx
;

2099 
	`x86_sys_debug
("áddr=0x%x, size=0x%x\n", 
addr
, 
size
);

2102 i‡(
addr
 & (
MEM_PAGE_SIZE
 - 1))

2103 
	`Áèl
("%s:áddªs†nŸálig√d", 
__FUNCTION__
);

2106 
size_Æig√d
 = 
	`ROUND_UP
(
size
, 
MEM_PAGE_SIZE
);

2107 
	`mem_unm≠
(
mem
, 
addr
, 
size_Æig√d
);

2111 
	}
}

2120 
	$x86_sys_fchmod_im∂
(
X86C⁄ãxt
 *
˘x
)

2122 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

2124 
fd
;

2125 
ho°_fd
;

2126 
mode
;

2127 
îr
;

2130 
fd
 = 
ªgs
->
ebx
;

2131 
mode
 = 
ªgs
->
ecx
;

2132 
	`x86_sys_debug
(" fd=%d, mode=%d\n", 
fd
, 
mode
);

2135 
ho°_fd
 = 
	`x86_fûe_desc_èbÀ_gë_ho°_fd
(
˘x
->
fûe_desc_èbÀ
, 
fd
);

2136 
	`x86_sys_debug
(" ho°_fd=%d\n", 
ho°_fd
);

2139 
îr
 = 
	`fchmod
(
ho°_fd
, 
mode
);

2140 i‡(
îr
 == -1)

2141  -
î∫o
;

2144  
îr
;

2145 
	}
}

2154 
	ssim_°©fs_t


2156 
	mty≥
;

2157 
	mbsize
;

2158 
	mblocks
;

2159 
	mb‰ì
;

2160 
	mbavaû
;

2161 
	mfûes
;

2162 
	mf‰ì
;

2163 
	mfsid
[2];

2164 
	m«mñí
;

2165 
	m‰size
;

2166 
	mÊags
;

2167 
	m•¨e
[4];

2170 
	$sim_°©fs_ho°_to_gue°
(
sim_°©fs_t
 *
ho°
, 
°©fs
 *
gue°
)

2172 
	`M2S_HOST_GUEST_MATCH
((*
ho°
), 64);

2173 
	`mem£t
(
ho°
, 0, (*host));

2174 
ho°
->
ty≥
 = 
gue°
->
f_ty≥
;

2175 
ho°
->
bsize
 = 
gue°
->
f_bsize
;

2176 
ho°
->
blocks
 = 
gue°
->
f_blocks
;

2177 
ho°
->
b‰ì
 = 
gue°
->
f_b‰ì
;

2178 
ho°
->
bavaû
 = 
gue°
->
f_bavaû
;

2179 
ho°
->
fûes
 = 
gue°
->
f_fûes
;

2180 
ho°
->
f‰ì
 = 
gue°
->
f_f‰ì
;

2181 
	`mem˝y
(&
ho°
->
fsid
, &
gue°
->
f_fsid
, 
	`MIN
( host->fsid,  guest->f_fsid));

2182 
ho°
->
«mñí
 = 
gue°
->
f_«mñí
;

2183 
ho°
->
‰size
 = 
gue°
->
f_‰size
;

2184 
	}
}

2186 
	$x86_sys_°©fs_im∂
(
X86C⁄ãxt
 *
˘x
)

2188 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

2189 
mem_t
 *
mem
 = 
˘x
->mem;

2191 
∑th_±r
;

2192 
°©fs_buf_±r
;

2194 
∑th
[
MAX_PATH_SIZE
];

2196 
°©fs
 
°©fs_buf
;

2197 
sim_°©fs_t
 
sim_°©fs_buf
;

2199 
Àngth
;

2200 
îr
;

2203 
∑th_±r
 = 
ªgs
->
ebx
;

2204 
°©fs_buf_±r
 = 
ªgs
->
ecx
;

2205 
	`x86_sys_debug
("Öath_ptr=0x%x, statsf_buf_ptr=0x%x\n",

2206 
∑th_±r
, 
°©fs_buf_±r
);

2209 
Àngth
 = 
	`mem_ªad_°rög
(
mem
, 
∑th_±r
,  
∑th
,Öath);

2210 i‡(
Àngth
 = 
∑th
)

2211 
	`Áèl
("%s: buf„∏toÿsmÆl", 
__FUNCTION__
);

2212 
	`x86_sys_debug
("Ö©h='%s'\n", 
∑th
);

2215 
îr
 = 
	`°©fs
(
∑th
, &
°©fs_buf
);

2216 i‡(
îr
 == -1)

2217  -
î∫o
;

2220 
	`sim_°©fs_ho°_to_gue°
(&
sim_°©fs_buf
, &
°©fs_buf
);

2221 
	`mem_wrôe
(
mem
, 
°©fs_buf_±r
,  
sim_°©fs_buf
, &sim_statfs_buf);

2223 
	}
}

2232 
°r_m≠_t
 
	gsys_sockëˇŒ_ˇŒ_m≠
 =

2255 
°r_m≠_t
 
	gsys_sockë_Ámûy_m≠
 =

2290 
°r_m≠_t
 
	gsys_sockë_ty≥_m≠
 =

2303 
	$x86_sys_sockëˇŒ_im∂
(
X86C⁄ãxt
 *
˘x
)

2305 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

2306 
mem_t
 *
mem
 = 
˘x
->mem;

2308 
ˇŒ
;

2309 
¨gs
;

2310 *
ˇŒ_°r
;

2313 
ˇŒ
 = 
ªgs
->
ebx
;

2314 
¨gs
 = 
ªgs
->
ecx
;

2315 
ˇŒ_°r
 = 
	`°r_m≠_vÆue
(&
sys_sockëˇŒ_ˇŒ_m≠
, 
ˇŒ
);

2316 
	`x86_sys_debug
(" cÆl=%d (%s),árgs=0x%x\n", 
ˇŒ
, 
ˇŒ_°r
, 
¨gs
);

2319 
ˇŒ
)

2325 
Ámûy
;

2326 
ty≥
;

2327 
¥Ÿocﬁ
;

2329 *
Ámûy_°r
;

2330 
ty≥_°r
[
MAX_STRING_SIZE
];

2332 
ho°_fd
;

2334 
x86_fûe_desc_t
 *
desc
;

2337 
	`mem_ªad
(
mem
, 
¨gs
, 4, &
Ámûy
);

2338 
	`mem_ªad
(
mem
, 
¨gs
 + 4, 4, &
ty≥
);

2339 
	`mem_ªad
(
mem
, 
¨gs
 + 8, 4, &
¥Ÿocﬁ
);

2342 
Ámûy_°r
 = 
	`°r_m≠_vÆue
(&
sys_sockë_Ámûy_m≠
, 
Ámûy
);

2343 
	`¢¥ötf
(
ty≥_°r
, Åype_str, "%s%s%s",

2344 
	`°r_m≠_vÆue
(&
sys_sockë_ty≥_m≠
, 
ty≥
 & 0xff),

2345 
ty≥
 & 0x80000 ? "|SOCK_CLOEXEC" : "",

2346 
ty≥
 & 0x800 ? "|SOCK_NONBLOCK" : "");

2347 
	`x86_sys_debug
(" famûy=%d (%s)\n", 
Ámûy
, 
Ámûy_°r
);

2348 
	`x86_sys_debug
("Åy≥=0x%x (%s)\n", 
ty≥
, 
ty≥_°r
);

2349 
	`x86_sys_debug
("ÖrŸocﬁ=%d\n", 
¥Ÿocﬁ
);

2352 i‡((
ty≥
 & 0xff) != 1)

2353 
	`Áèl
("%s: SYS_SOCKET: onlyÅype SOCK_STREAM supported",

2354 
__FUNCTION__
);

2357 
ho°_fd
 = 
	`sockë
(
Ámûy
, 
ty≥
, 
¥Ÿocﬁ
);

2358 i‡(
ho°_fd
 == -1)

2359  -
î∫o
;

2362 
desc
 = 
	`x86_fûe_desc_èbÀ_íåy_√w
(
˘x
->
fûe_desc_èbÀ
,

2363 
fûe_desc_sockë
, 
ho°_fd
, "", 
O_RDWR
);

2364 
	`x86_sys_debug
(" socket created: guest_fd=%d, host_fd=%d\n",

2365 
desc
->
gue°_fd
, desc->
ho°_fd
);

2368  
desc
->
gue°_fd
;

2374 
gue°_fd
;

2375 
addr_±r
;

2376 
addr_Àn
;

2378 
x86_fûe_desc_t
 *
desc
;

2380 
buf
[
MAX_STRING_SIZE
];

2382 
sockaddr
 *
addr
;

2384 
îr
;

2387 
	`mem_ªad
(
mem
, 
¨gs
, 4, &
gue°_fd
);

2388 
	`mem_ªad
(
mem
, 
¨gs
 + 4, 4, &
addr_±r
);

2389 
	`mem_ªad
(
mem
, 
¨gs
 + 8, 4, &
addr_Àn
);

2390 
	`x86_sys_debug
(" guest_fd=%d,Öaddr=0x%x,áddrlen=%d\n",

2391 
gue°_fd
, 
addr_±r
, 
addr_Àn
);

2394 i‡(
addr_Àn
 >  
buf
)

2395 
	`Áèl
("%s: SYS_CONNECT: buf„∏toÿsmÆl", 
__FUNCTION__
);

2398 
	`M2S_HOST_GUEST_MATCH
( 
addr
->
ß_Ámûy
, 2);

2399 
	`M2S_HOST_GUEST_MATCH
((*Ë&
addr
->
ß_d©a
 - (*Ë&addr->
ß_Ámûy
, 2);

2402 
addr
 = (
sockaddr
 *Ë&
buf
[0];

2403 
	`mem_ªad
(
mem
, 
addr_±r
, 
addr_Àn
, 
addr
);

2404 
	`x86_sys_debug
(" sockaddr.Ámûy=%s\n", 
	`°r_m≠_vÆue
(&
sys_sockë_Ámûy_m≠
, 
addr
->
ß_Ámûy
));

2405 
	`x86_sys_debug_buf„r
(" sockaddr.d©a", 
addr
->
ß_d©a
, 
addr_Àn
 - 2);

2408 
desc
 = 
	`x86_fûe_desc_èbÀ_íåy_gë
(
˘x
->
fûe_desc_èbÀ
, 
gue°_fd
);

2409 i‡(!
desc
)

2410  -
EBADF
;

2413 i‡(
desc
->
köd
 !
fûe_desc_sockë
)

2414 
	`Áèl
("%s: SYS_CONNECT: fûênŸá sockë", 
__FUNCTION__
);

2415 
	`x86_sys_debug
(" ho°_fd=%d\n", 
desc
->
ho°_fd
);

2418 
îr
 = 
	`c⁄√˘
(
desc
->
ho°_fd
, 
addr
, 
addr_Àn
);

2419 i‡(
îr
 == -1)

2420  -
î∫o
;

2423  
îr
;

2429 
gue°_fd
;

2430 
addr_Àn
;

2431 
îr
;

2433 
addr_±r
;

2434 
addr_Àn_±r
;

2436 
x86_fûe_desc_t
 *
desc
;

2437 
sockaddr
 *
addr
;

2438 
sockÀn_t
 
ho°_addr_Àn
;

2440 
	`mem_ªad
(
mem
, 
¨gs
, 4, &
gue°_fd
);

2441 
	`mem_ªad
(
mem
, 
¨gs
 + 4, 4, &
addr_±r
);

2442 
	`mem_ªad
(
mem
, 
¨gs
 + 8, 4, &
addr_Àn_±r
);

2443 
	`x86_sys_debug
(" guest_fd=%d,Öaddr=0x%x,Öaddrlen=0x%x\n",

2444 
gue°_fd
, 
addr_±r
, 
addr_Àn_±r
);

2447 
desc
 = 
	`x86_fûe_desc_èbÀ_íåy_gë
(
˘x
->
fûe_desc_èbÀ
, 
gue°_fd
);

2448 i‡(!
desc
)

2449  -
EBADF
;

2452 
	`mem_ªad
(
mem
, 
addr_Àn_±r
, 4, &
addr_Àn
);

2453 
	`x86_sys_debug
("áddæí=%d\n", 
addr_Àn
);

2454 
ho°_addr_Àn
 = 
addr_Àn
;

2455 
addr
 = 
	`xmÆloc
(
addr_Àn
);

2458 
îr
 = 
	`gë≥î«me
(
desc
->
ho°_fd
, 
addr
, &
ho°_addr_Àn
);

2459 i‡(
îr
 == -1)

2461 
	`‰ì
(
addr
);

2462  -
î∫o
;

2466 
addr_Àn
 = 
ho°_addr_Àn
;

2467 
	`x86_sys_debug
("Ñesult:\n");

2468 
	`x86_sys_debug
("áddæí=%d\n", 
ho°_addr_Àn
);

2469 
	`x86_sys_debug_buf„r
(" sockaddr.d©a", 
addr
->
ß_d©a
, 
addr_Àn
 - 2);

2472 
	`mem_wrôe
(
mem
, 
addr_Àn_±r
, 4, &
addr_Àn
);

2473 
	`mem_wrôe
(
mem
, 
addr_±r
, 
addr_Àn
, 
addr
);

2476 
	`‰ì
(
addr
);

2477  
îr
;

2482 
	`Áèl
("%s: call '%s'Çot implemented",

2483 
__FUNCTION__
, 
ˇŒ_°r
);

2488 
	}
}

2497 
°r_m≠_t
 
	gsys_ôimî_which_m≠
 =

2506 
	ssim_timevÆ


2508 
	mtv_£c
;

2509 
	mtv_u£c
;

2512 
	ssim_ôimîvÆ


2514 
sim_timevÆ
 
	mô_öãrvÆ
;

2515 
sim_timevÆ
 
	mô_vÆue
;

2518 
	$sim_timevÆ_dump
(
sim_timevÆ
 *sim_timeval)

2520 
	`x86_sys_debug
("Åv_sec=%u,Åv_usec=%u\n",

2521 
sim_timevÆ
->
tv_£c
, sim_timevÆ->
tv_u£c
);

2522 
	}
}

2524 
	$sim_ôimîvÆ_dump
(
sim_ôimîvÆ
 *sim_itimerval)

2526 
	`x86_sys_debug
(" it_interval:Åv_sec=%u,Åv_usec=%u\n",

2527 
sim_ôimîvÆ
->
ô_öãrvÆ
.
tv_£c
, sim_ôimîvÆ->ô_öãrvÆ.
tv_u£c
);

2528 
	`x86_sys_debug
(" it_value:Åv_sec=%u,Åv_usec=%u\n",

2529 
sim_ôimîvÆ
->
ô_vÆue
.
tv_£c
, sim_ôimîvÆ->ô_vÆue.
tv_u£c
);

2530 
	}
}

2532 
	$x86_sys_£tôimî_im∂
(
X86C⁄ãxt
 *
˘x
)

2534 
X86Emu
 *
emu
 = 
˘x
->emu;

2536 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

2537 
mem_t
 *
mem
 = 
˘x
->mem;

2539 
which
;

2540 
vÆue_±r
;

2541 
ﬁd_vÆue_±r
;

2543 
sim_ôimîvÆ
 
ôimîvÆ
;

2545 
now
;

2548 
which
 = 
ªgs
->
ebx
;

2549 
vÆue_±r
 = 
ªgs
->
ecx
;

2550 
ﬁd_vÆue_±r
 = 
ªgs
->
edx
;

2551 
	`x86_sys_debug
(" which=%d (%s), value_ptr=0x%x, old_value_ptr=0x%x\n",

2552 
which
, 
	`°r_m≠_vÆue
(&
sys_ôimî_which_m≠
, which), 
vÆue_±r
, 
ﬁd_vÆue_±r
);

2555 
now
 = 
	`esim_ªÆ_time
();

2558 i‡(
vÆue_±r
)

2560 
	`mem_ªad
(
mem
, 
vÆue_±r
,  
ôimîvÆ
, &itimerval);

2561 
	`x86_sys_debug
(" itimervalát 'value_ptr':\n");

2562 
	`sim_ôimîvÆ_dump
(&
ôimîvÆ
);

2566 i‡(
which
 >= 3)

2567 
	`Áèl
("%s: invÆid vÆuêf‹ 'which'", 
__FUNCTION__
);

2570 
˘x
->
ôimî_vÆue
[
which
] = 
now
 + 
ôimîvÆ
.
ô_vÆue
.
tv_£c
 * 1000000

2571 + 
ôimîvÆ
.
ô_vÆue
.
tv_u£c
;

2572 
˘x
->
ôimî_öãrvÆ
[
which
] = 
ôimîvÆ
.
ô_öãrvÆ
.
tv_£c
 * 1000000

2573 + 
ôimîvÆ
.
ô_öãrvÆ
.
tv_u£c
;

2577 
	`X86C⁄ãxtHo°ThªadTimîC™˚l
(
˘x
);

2578 
	`X86EmuPro˚ssEvítsScheduÀ
(
emu
);

2582 
	}
}

2591 
	$x86_sys_gëôimî_im∂
(
X86C⁄ãxt
 *
˘x
)

2593 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

2594 
mem_t
 *
mem
 = 
˘x
->mem;

2596 
which
;

2597 
vÆue_±r
;

2599 
sim_ôimîvÆ
 
ôimîvÆ
;

2601 
now
;

2602 
ªm
;

2605 
which
 = 
ªgs
->
ebx
;

2606 
vÆue_±r
 = 
ªgs
->
ecx
;

2607 
	`x86_sys_debug
(" which=%d (%s), value_ptr=0x%x\n",

2608 
which
, 
	`°r_m≠_vÆue
(&
sys_ôimî_which_m≠
, which), 
vÆue_±r
);

2611 
now
 = 
	`esim_ªÆ_time
();

2614 i‡(
which
 >= 3)

2615 
	`Áèl
("syscall 'getitimer': wrong value for 'which'árgument");

2618 
ªm
 = 
now
 < 
˘x
->
ôimî_vÆue
[
which
] ? ctx->itimer_value[which] -Çow : 0;

2619 
ôimîvÆ
.
ô_vÆue
.
tv_£c
 = 
ªm
 / 1000000;

2620 
ôimîvÆ
.
ô_vÆue
.
tv_u£c
 = 
ªm
 % 1000000;

2621 
ôimîvÆ
.
ô_öãrvÆ
.
tv_£c
 = 
˘x
->
ôimî_öãrvÆ
[
which
] / 1000000;

2622 
ôimîvÆ
.
ô_öãrvÆ
.
tv_u£c
 = 
˘x
->
ôimî_öãrvÆ
[
which
] % 1000000;

2623 
	`mem_wrôe
(
mem
, 
vÆue_±r
,  
ôimîvÆ
, &itimerval);

2627 
	}
}

2636 
	$x86_sys_sigªtu∫_im∂
(
X86C⁄ãxt
 *
˘x
)

2638 
X86Emu
 *
emu
 = 
˘x
->emu;

2640 
	`X86C⁄ãxtRëu∫FromSig«lH™dÀr
(
˘x
);

2642 
	`X86EmuPro˚ssEvítsScheduÀ
(
emu
);

2643 
	`X86EmuPro˚ssEvíts
(
emu
);

2646 
	}
}

2655 
	#SIM_CLONE_VM
 0x00000100

	)

2656 
	#SIM_CLONE_FS
 0x00000200

	)

2657 
	#SIM_CLONE_FILES
 0x00000400

	)

2658 
	#SIM_CLONE_SIGHAND
 0x00000800

	)

2659 
	#SIM_CLONE_PTRACE
 0x00002000

	)

2660 
	#SIM_CLONE_VFORK
 0x00004000

	)

2661 
	#SIM_CLONE_PARENT
 0x00008000

	)

2662 
	#SIM_CLONE_THREAD
 0x00010000

	)

2663 
	#SIM_CLONE_NEWNS
 0x00020000

	)

2664 
	#SIM_CLONE_SYSVSEM
 0x00040000

	)

2665 
	#SIM_CLONE_SETTLS
 0x00080000

	)

2666 
	#SIM_CLONE_PARENT_SETTID
 0x00100000

	)

2667 
	#SIM_CLONE_CHILD_CLEARTID
 0x00200000

	)

2668 
	#SIM_CLONE_DETACHED
 0x00400000

	)

2669 
	#SIM_CLONE_UNTRACED
 0x00800000

	)

2670 
	#SIM_CLONE_CHILD_SETTID
 0x01000000

	)

2671 
	#SIM_CLONE_STOPPED
 0x02000000

	)

2672 
	#SIM_CLONE_NEWUTS
 0x04000000

	)

2673 
	#SIM_CLONE_NEWIPC
 0x08000000

	)

2674 
	#SIM_CLONE_NEWUSER
 0x10000000

	)

2675 
	#SIM_CLONE_NEWPID
 0x20000000

	)

2676 
	#SIM_CLONE_NEWNET
 0x40000000

	)

2677 
	#SIM_CLONE_IO
 0x80000000

	)

2679 
°r_m≠_t
 
	gsys_˛⁄e_Êags_m≠
 =

2708 c⁄° 
	gsys_˛⁄e_suµ‹ãd_Êags
 =

2709 
SIM_CLONE_VM
 |

2710 
SIM_CLONE_FS
 |

2711 
SIM_CLONE_FILES
 |

2712 
SIM_CLONE_SIGHAND
 |

2713 
SIM_CLONE_THREAD
 |

2714 
SIM_CLONE_SYSVSEM
 |

2715 
SIM_CLONE_SETTLS
 |

2716 
SIM_CLONE_PARENT_SETTID
 |

2717 
SIM_CLONE_CHILD_CLEARTID
 |

2718 
SIM_CLONE_CHILD_SETTID
;

2720 
	ssim_u£r_desc


2722 
	míåy_numbî
;

2723 
	mba£_addr
;

2724 
	mlimô
;

2725 
	m£g_32bô
:1;

2726 
	mc⁄ã¡s
:2;

2727 
	mªad_exec_⁄ly
:1;

2728 
	mlimô_ö_∑ges
:1;

2729 
	m£g_nŸ_¥e£¡
:1;

2730 
	mu£abÀ
:1;

2733 
	$x86_sys_˛⁄e_im∂
(
X86C⁄ãxt
 *
˘x
)

2740 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

2741 
mem_t
 *
mem
 = 
˘x
->mem;

2743 
Êags
;

2744 
√w_e•
;

2745 
∑ª¡_tid_±r
;

2746 
chûd_tid_±r
;

2748 
exô_sig«l
;

2750 
Êags_°r
[
MAX_STRING_SIZE
];

2752 
X86C⁄ãxt
 *
√w_˘x
;

2755 
Êags
 = 
ªgs
->
ebx
;

2756 
√w_e•
 = 
ªgs
->
ecx
;

2757 
∑ª¡_tid_±r
 = 
ªgs
->
edx
;

2758 
chûd_tid_±r
 = 
ªgs
->
edi
;

2759 
	`x86_sys_debug
(" flags=0x%x,Çewsp=0x%x,Öarent_tidptr=0x%x, child_tidptr=0x%x\n",

2760 
Êags
, 
√w_e•
, 
∑ª¡_tid_±r
, 
chûd_tid_±r
);

2763 
exô_sig«l
 = 
Êags
 & 0xff;

2764 
Êags
 &= ~0xff;

2767 
	`°r_m≠_Êags
(&
sys_˛⁄e_Êags_m≠
, 
Êags
, 
Êags_°r
, 
MAX_STRING_SIZE
);

2768 
	`x86_sys_debug
(" fœgs=%s\n", 
Êags_°r
);

2769 
	`x86_sys_debug
("Éxô_sig«l=%d (%s)\n", 
exô_sig«l
, 
	`x86_sig«l_«me
(exit_signal));

2772 i‡(!
√w_e•
)

2773 
√w_e•
 = 
ªgs
->
e•
;

2776 i‡(
Êags
 & ~
sys_˛⁄e_suµ‹ãd_Êags
)

2778 
	`°r_m≠_Êags
(&
sys_˛⁄e_Êags_m≠
, 
Êags
 & ~
sys_˛⁄e_suµ‹ãd_Êags
,

2779 
Êags_°r
, 
MAX_STRING_SIZE
);

2780 
	`Áèl
("%s:Çot supported flags: %s\n%s",

2781 
__FUNCTION__
, 
Êags_°r
, 
îr_x86_sys_nŸe
);

2785 i‡(
Êags
 & 
SIM_CLONE_VM
)

2788 i‡((
Êags
 & (
SIM_CLONE_FS
 | 
SIM_CLONE_FILES
 | 
SIM_CLONE_SIGHAND
)) !=

2789 (
SIM_CLONE_FS
 | 
SIM_CLONE_FILES
 | 
SIM_CLONE_SIGHAND
))

2790 
	`Áèl
("%s:Çot supported flags with CLONE_VM.\n%s",

2791 
__FUNCTION__
, 
îr_x86_sys_nŸe
);

2794 
√w_˘x
 = 
	`√w_˘‹
(
X86C⁄ãxt
, 
Cª©eAndCl⁄e
, 
˘x
);

2799 i‡(
Êags
 & (
SIM_CLONE_FS
 | 
SIM_CLONE_FILES
 | 
SIM_CLONE_SIGHAND
))

2800 
	`Áèl
("%s:Çot supported flags with CLONE_VM.\n%s",

2801 
__FUNCTION__
, 
îr_x86_sys_nŸe
);

2804 
√w_˘x
 = 
	`√w_˘‹
(
X86C⁄ãxt
, 
Cª©eAndF‹k
, 
˘x
);

2811 i‡(
Êags
 & 
SIM_CLONE_THREAD
)

2813 
√w_˘x
->
exô_sig«l
 = 0;

2814 
√w_˘x
->
group_∑ª¡
 = 
˘x
->group_parent ?

2815 
˘x
->
group_∑ª¡
 : ctx;

2819 
√w_˘x
->
exô_sig«l
 =Éxit_signal;

2820 
√w_˘x
->
group_∑ª¡
 = 
NULL
;

2824 i‡(
Êags
 & 
SIM_CLONE_PARENT_SETTID
)

2825 
	`mem_wrôe
(
˘x
->
mem
, 
∑ª¡_tid_±r
, 4, &
√w_˘x
->
pid
);

2828 i‡(
Êags
 & 
SIM_CLONE_CHILD_SETTID
)

2829 
	`mem_wrôe
(
√w_˘x
->
mem
, 
chûd_tid_±r
, 4, &√w_˘x->
pid
);

2832 i‡(
Êags
 & 
SIM_CLONE_CHILD_CLEARTID
)

2833 
√w_˘x
->
˛ór_chûd_tid
 = 
chûd_tid_±r
;

2836 i‡(
Êags
 & 
SIM_CLONE_SETTLS
)

2838 
sim_u£r_desc
 
uöfo
;

2839 
uöfo_±r
;

2841 
uöfo_±r
 = 
ªgs
->
esi
;

2842 
	`x86_sys_debug
("Öuöfo=0x%x\n", 
uöfo_±r
);

2844 
	`mem_ªad
(
mem
, 
uöfo_±r
, (
sim_u£r_desc
), &
uöfo
);

2845 
	`x86_sys_debug
("Éntry_number=0x%x, base_addr=0x%x,Üimit=0x%x\n",

2846 
uöfo
.
íåy_numbî
, uöfo.
ba£_addr
, uöfo.
limô
);

2847 
	`x86_sys_debug
(" seg_32bit=0x%x, contents=0x%x,Ñead_exec_only=0x%x\n",

2848 
uöfo
.
£g_32bô
, uöfo.
c⁄ã¡s
, uöfo.
ªad_exec_⁄ly
);

2849 
	`x86_sys_debug
("Üimit_in_pages=0x%x, seg_not_present=0x%x, useable=0x%x\n",

2850 
uöfo
.
limô_ö_∑ges
, uöfo.
£g_nŸ_¥e£¡
, uöfo.
u£abÀ
);

2851 i‡(!
uöfo
.
£g_32bô
)

2852 
	`Áèl
("%s: o∆y 32-bô segmít†suµ‹ãd", 
__FUNCTION__
);

2855 i‡(
uöfo
.
limô_ö_∑ges
)

2856 
uöfo
.
limô
 <<= 12;

2858 
uöfo
.
íåy_numbî
 = 6;

2859 
	`mem_wrôe
(
mem
, 
uöfo_±r
, 4, &
uöfo
.
íåy_numbî
);

2861 
√w_˘x
->
glibc_£gmít_ba£
 = 
uöfo
.
ba£_addr
;

2862 
√w_˘x
->
glibc_£gmít_limô
 = 
uöfo
.
limô
;

2866 
√w_˘x
->
ªgs
->
e•
 = 
√w_e•
;

2867 
√w_˘x
->
ªgs
->
óx
 = 0;

2870 
	`x86_sys_debug
(" c⁄ãxà¸óãd wôhÖid %d\n", 
√w_˘x
->
pid
);

2871  
√w_˘x
->
pid
;

2872 
	}
}

2881 
	ssim_ut¢ame


2883 
	msy¢ame
[65];

2884 
	mnodíame
[65];

2885 
	mªÀa£
[65];

2886 
	mvîsi⁄
[65];

2887 
	mmachöe
[65];

2888 
	mdomaö«me
[65];

2889 } 
__©åibuã__
((
∑cked
));

2891 
sim_ut¢ame
 
	gsim_ut¢ame
 =

2901 
	$x86_sys_√wu«me_im∂
(
X86C⁄ãxt
 *
˘x
)

2903 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

2904 
mem_t
 *
mem
 = 
˘x
->mem;

2906 
ut¢ame_±r
;

2909 
ut¢ame_±r
 = 
ªgs
->
ebx
;

2910 
	`x86_sys_debug
("Öut¢ame=0x%x\n", 
ut¢ame_±r
);

2911 
	`x86_sys_debug
(" sy¢ame='%s',Çodíame='%s'\n", 
sim_ut¢ame
.
sy¢ame
, sim_ut¢ame.
nodíame
);

2912 
	`x86_sys_debug
("Ññ´£='%s', vîsi⁄='%s'\n", 
sim_ut¢ame
.
ªÀa£
, sim_ut¢ame.
vîsi⁄
);

2913 
	`x86_sys_debug
(" machöe='%s', domaö«me='%s'\n", 
sim_ut¢ame
.
machöe
, sim_ut¢ame.
domaö«me
);

2916 
	`mem_wrôe
(
mem
, 
ut¢ame_±r
,  
sim_ut¢ame
, &sim_utsname);

2918 
	}
}

2927 
	$x86_sys_m¥Ÿe˘_im∂
(
X86C⁄ãxt
 *
˘x
)

2929 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

2930 
mem_t
 *
mem
 = 
˘x
->mem;

2932 
°¨t
;

2933 
Àn
;

2935 
¥Ÿ
;

2937 
mem_ac˚ss_t
 
≥rm
 = 0;

2940 
°¨t
 = 
ªgs
->
ebx
;

2941 
Àn
 = 
ªgs
->
ecx
;

2942 
¥Ÿ
 = 
ªgs
->
edx
;

2943 
	`x86_sys_debug
(" sèπ=0x%x,Üí=0x%x,ÖrŸ=0x%x\n", 
°¨t
, 
Àn
, 
¥Ÿ
);

2946 
≥rm
 |
¥Ÿ
 & 0x01 ? 
mem_ac˚ss_ªad
 : 0;

2947 
≥rm
 |
¥Ÿ
 & 0x02 ? 
mem_ac˚ss_wrôe
 : 0;

2948 
≥rm
 |
¥Ÿ
 & 0x04 ? 
mem_ac˚ss_exec
 : 0;

2949 
	`mem_¥Ÿe˘
(
mem
, 
°¨t
, 
Àn
, 
≥rm
);

2953 
	}
}

2962 
	$x86_sys_Œ£ek_im∂
(
X86C⁄ãxt
 *
˘x
)

2964 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

2965 
mem_t
 *
mem
 = 
˘x
->mem;

2967 
fd
;

2968 
ªsu…_±r
;

2970 
‹igö
;

2971 
ho°_fd
;

2972 
off£t_high
;

2973 
off£t_low
;

2975 
off£t
;

2978 
fd
 = 
ªgs
->
ebx
;

2979 
off£t_high
 = 
ªgs
->
ecx
;

2980 
off£t_low
 = 
ªgs
->
edx
;

2981 
off£t
 = ((Ë
off£t_high
 << 32Ë| 
off£t_low
;

2982 
ªsu…_±r
 = 
ªgs
->
esi
;

2983 
‹igö
 = 
ªgs
->
edi
;

2984 
ho°_fd
 = 
	`x86_fûe_desc_èbÀ_gë_ho°_fd
(
˘x
->
fûe_desc_èbÀ
, 
fd
);

2985 
	`x86_sys_debug
(" fd=%d, offset_high=0x%x, offset_low=0x%x,Ñesult_ptr=0x%x, origin=0x%x\n",

2986 
fd
, 
off£t_high
, 
off£t_low
, 
ªsu…_±r
, 
‹igö
);

2987 
	`x86_sys_debug
(" ho°_fd=%d\n", 
ho°_fd
);

2988 
	`x86_sys_debug
(" off£t=0x%Œx\n", (Ë
off£t
);

2991 i‡(
off£t_high
 != -1 && offset_high)

2992 
	`Áèl
("%s: o∆y suµ‹ãd f‹ 32-bô fûes", 
__FUNCTION__
);

2995 
off£t
 = 
	`l£ek
(
ho°_fd
, 
off£t_low
, 
‹igö
);

2996 i‡(
off£t
 == -1)

2997  -
î∫o
;

3000 i‡(
ªsu…_±r
)

3001 
	`mem_wrôe
(
mem
, 
ªsu…_±r
, 8, &
off£t
);

3005 
	}
}

3014 
	ssys_ho°_dúít_t


3016 
	md_öo
;

3017 
off_t
 
	md_off
;

3018 
	md_ª˛í
;

3019 
	md_«me
[];

3022 
	ssys_gue°_dúít_t


3024 
	md_öo
;

3025 
	md_off
;

3026 
	md_ª˛í
;

3027 
	md_«me
[];

3028 } 
__©åibuã__
((
∑cked
));

3030 
	$x86_sys_gëdíts_im∂
(
X86C⁄ãxt
 *
˘x
)

3032 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

3033 
mem_t
 *
mem
 = 
˘x
->mem;

3035 
pdúít
;

3037 
fd
;

3038 
cou¡
;

3039 
ho°_fd
;

3041 *
buf
;

3043 
ƒód
;

3044 
ho°_offs
;

3045 
gue°_offs
;

3047 
d_ty≥
;

3049 
sys_ho°_dúít_t
 *
dúít
;

3050 
sys_gue°_dúít_t
 
sim_dúít
;

3053 
fd
 = 
ªgs
->
ebx
;

3054 
pdúít
 = 
ªgs
->
ecx
;

3055 
cou¡
 = 
ªgs
->
edx
;

3056 
ho°_fd
 = 
	`x86_fûe_desc_èbÀ_gë_ho°_fd
(
˘x
->
fûe_desc_èbÀ
, 
fd
);

3057 
	`x86_sys_debug
(" fd=%d,Ödirent=0x%x, count=%d\n",

3058 
fd
, 
pdúít
, 
cou¡
);

3059 
	`x86_sys_debug
(" ho°_fd=%d\n", 
ho°_fd
);

3062 
buf
 = 
	`xˇŒoc
(1, 
cou¡
);

3063 
ƒód
 = 
	`sysˇŒ
(
SYS_gëdíts
, 
ho°_fd
, 
buf
, 
cou¡
);

3064 i‡(
ƒód
 == -1)

3065 
	`Áèl
("%s: ho° cÆ»Áûed", 
__FUNCTION__
);

3068 i‡(!
ƒód
)

3070 
	`‰ì
(
buf
);

3075 
ho°_offs
 = 0;

3076 
gue°_offs
 = 0;

3077 
ho°_offs
 < 
ƒód
)

3079 
dúít
 = (
sys_ho°_dúít_t
 *Ë(
buf
 + 
ho°_offs
);

3080 
sim_dúít
.
d_öo
 = 
dúít
->d_ino;

3081 
sim_dúít
.
d_off
 = 
dúít
->d_off;

3082 
sim_dúít
.
d_ª˛í
 = (15 + 
	`°æí
(
dúít
->
d_«me
)) / 4 * 4;

3083 
d_ty≥
 = * (*Ë(
buf
 + 
ho°_offs
 + 
dúít
->
d_ª˛í
 - 1);

3085 
	`x86_sys_debug
(" d_öo=%u ", 
sim_dúít
.
d_öo
);

3086 
	`x86_sys_debug
("d_off=%u ", 
sim_dúít
.
d_off
);

3087 
	`x86_sys_debug
("d_ª˛í=%u(ho°),%u(gue°Ë", 
dúít
->
d_ª˛í
, 
sim_dúít
.d_reclen);

3088 
	`x86_sys_debug
("d_«me='%s'\n", 
dúít
->
d_«me
);

3090 
	`mem_wrôe
(
mem
, 
pdúít
 + 
gue°_offs
, 4, &
sim_dúít
.
d_öo
);

3091 
	`mem_wrôe
(
mem
, 
pdúít
 + 
gue°_offs
 + 4, 4, &
sim_dúít
.
d_off
);

3092 
	`mem_wrôe
(
mem
, 
pdúít
 + 
gue°_offs
 + 8, 2, &
sim_dúít
.
d_ª˛í
);

3093 
	`mem_wrôe_°rög
(
mem
, 
pdúít
 + 
gue°_offs
 + 10, 
dúít
->
d_«me
);

3094 
	`mem_wrôe
(
mem
, 
pdúít
 + 
gue°_offs
 + 
sim_dúít
.
d_ª˛í
 - 1, 1, &
d_ty≥
);

3096 
ho°_offs
 +
dúít
->
d_ª˛í
;

3097 
gue°_offs
 +
sim_dúít
.
d_ª˛í
;

3098 i‡(
gue°_offs
 > 
cou¡
)

3099 
	`Áèl
("%s: buf„∏toÿsmÆl", 
__FUNCTION__
);

3101 
	`x86_sys_debug
("Ñë=%d(ho°),%d(gue°)\n", 
ho°_offs
, 
gue°_offs
);

3102 
	`‰ì
(
buf
);

3103  
gue°_offs
;

3104 
	}
}

3114 
	$sim_fd_£t_dump
(*
fd_£t_«me
, 
fd_£t
 *
fds
, 
n
)

3116 
i
;

3118 *
comma
;

3121 i‡(!
n
 || !
fds
)

3123 
	`x86_sys_debug
(" %s={}\n", 
fd_£t_«me
);

3128 
	`x86_sys_debug
(" %s={", 
fd_£t_«me
);

3129 
comma
 = "";

3130 
i
 = 0; i < 
n
; i++)

3132 i‡(!
	`FD_ISSET
(
i
, 
fds
))

3134 
	`x86_sys_debug
("%s%d", 
comma
, 
i
);

3135 
comma
 = ",";

3137 
	`x86_sys_debug
("}\n");

3138 
	}
}

3142 
	$sim_fd_£t_ªad
(
X86C⁄ãxt
 *
˘x
, 
uöt32_t
 
addr
,

3143 
fd_£t
 *
fds
, 
n
)

3145 
mem_t
 *
mem
 = 
˘x
->mem;

3147 
nbyã
;

3148 
nbô
;

3149 
ho°_fd
;

3150 
i
;

3152 
c
;

3154 
	`FD_ZERO
(
fds
);

3155 
i
 = 0; i < 
n
; i++)

3158 
nbyã
 = 
i
 >> 3;

3159 
nbô
 = 
i
 & 7;

3160 
	`mem_ªad
(
mem
, 
addr
 + 
nbyã
, 1, &
c
);

3161 i‡(!(
c
 & (1 << 
nbô
)))

3165 
ho°_fd
 = 
	`x86_fûe_desc_èbÀ_gë_ho°_fd
(
˘x
->
fûe_desc_èbÀ
, 
i
);

3166 i‡(
ho°_fd
 < 0)

3168 
	`FD_SET
(
ho°_fd
, 
fds
);

3171 
	}
}

3175 
	$sim_fd_£t_wrôe
(
X86C⁄ãxt
 *
˘x
, 
addr
,

3176 
fd_£t
 *
fds
, 
n
)

3178 
mem_t
 *
mem
 = 
˘x
->mem;

3180 
nbyã
;

3181 
nbô
;

3182 
gue°_fd
;

3183 
i
;

3185 
c
;

3188 i‡(!
addr
)

3192 
	`mem_zîo
(
mem
, 
addr
, (
n
 + 7) / 8);

3193 
i
 = 0; i < 
n
; i++)

3196 i‡(!
	`FD_ISSET
(
i
, 
fds
))

3200 
gue°_fd
 = 
	`x86_fûe_desc_èbÀ_gë_gue°_fd
(
˘x
->
fûe_desc_èbÀ
, 
i
);

3201 
	`as£π
(
gue°_fd
 >= 0);

3202 
nbyã
 = 
gue°_fd
 >> 3;

3203 
nbô
 = 
gue°_fd
 & 7;

3204 
	`mem_ªad
(
mem
, 
addr
 + 
nbyã
, 1, &
c
);

3205 
c
 |1 << 
nbô
;

3206 
	`mem_wrôe
(
mem
, 
addr
 + 
nbyã
, 1, &
c
);

3208 
	}
}

3210 
	$x86_sys_£À˘_im∂
(
X86C⁄ãxt
 *
˘x
)

3216 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

3217 
mem_t
 *
mem
 = 
˘x
->mem;

3219 
n
;

3220 
öp
;

3221 
ouç
;

3222 
exp
;

3223 
tvp
;

3225 
fd_£t
 
ö
;

3226 
fd_£t
 
out
;

3227 
fd_£t
 
ex
;

3229 
sim_timevÆ
 
sim_tv
;

3230 
timevÆ
 
tv
;

3232 
îr
;

3235 
n
 = 
ªgs
->
ebx
;

3236 
öp
 = 
ªgs
->
ecx
;

3237 
ouç
 = 
ªgs
->
edx
;

3238 
exp
 = 
ªgs
->
esi
;

3239 
tvp
 = 
ªgs
->
edi
;

3240 
	`x86_sys_debug
("Ç=%d, inp=0x%x, outp=0x%x,Éxp=0x%x,Åvp=0x%x\n",

3241 
n
, 
öp
, 
ouç
, 
exp
, 
tvp
);

3244 i‡(!
	`sim_fd_£t_ªad
(
˘x
, 
öp
, &
ö
, 
n
)

3245 || !
	`sim_fd_£t_ªad
(
˘x
, 
ouç
, &
out
, 
n
)

3246 || !
	`sim_fd_£t_ªad
(
˘x
, 
exp
, &
ex
, 
n
))

3248  -
EBADF
;

3252 
	`sim_fd_£t_dump
("öp", &
ö
, 
n
);

3253 
	`sim_fd_£t_dump
("ouç", &
out
, 
n
);

3254 
	`sim_fd_£t_dump
("exp", &
ex
, 
n
);

3257 
	`mem£t
(&
sim_tv
, 0,  sim_tv);

3258 i‡(
tvp
)

3259 
	`mem_ªad
(
mem
, 
tvp
,  
sim_tv
, &sim_tv);

3260 
	`x86_sys_debug
("Åv:\n");

3261 
	`sim_timevÆ_dump
(&
sim_tv
);

3264 i‡(
sim_tv
.
tv_£c
 || sim_tv.
tv_u£c
)

3265 
	`Áèl
("%s:ÇŸ suµ‹ãd f‹ 'tv' othîÅh™ 0", 
__FUNCTION__
);

3268 
	`mem£t
(&
tv
, 0, (tv));

3269 
îr
 = 
	`£À˘
(
n
, &
ö
, &
out
, &
ex
, &
tv
);

3270 i‡(
îr
 == -1)

3271  -
î∫o
;

3274 
	`sim_fd_£t_wrôe
(
˘x
, 
öp
, &
ö
, 
n
);

3275 
	`sim_fd_£t_wrôe
(
˘x
, 
ouç
, &
out
, 
n
);

3276 
	`sim_fd_£t_wrôe
(
˘x
, 
exp
, &
ex
, 
n
);

3279  
îr
;

3280 
	}
}

3289 
°r_m≠_t
 
	gsys_msync_Êags_m≠
 =

3298 
	$x86_sys_msync_im∂
(
X86C⁄ãxt
 *
˘x
)

3300 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

3302 
°¨t
;

3303 
Àn
;

3305 
Êags
;

3307 
Êags_°r
[
MAX_STRING_SIZE
];

3310 
°¨t
 = 
ªgs
->
ebx
;

3311 
Àn
 = 
ªgs
->
ecx
;

3312 
Êags
 = 
ªgs
->
edx
;

3313 
	`°r_m≠_Êags
(&
sys_msync_Êags_m≠
, 
Êags
, 
Êags_°r
,  flags_str);

3314 
	`x86_sys_debug
(" sèπ=0x%x,Üí=0x%x, fœgs=0x%x\n", 
°¨t
, 
Àn
, 
Êags
);

3315 
	`x86_sys_debug
(" fœgs=%s\n", 
Êags_°r
);

3319 
	}
}

3328 
	$x86_sys_wrôev_im∂
(
X86C⁄ãxt
 *
˘x
)

3330 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

3331 
mem_t
 *
mem
 = 
˘x
->mem;

3333 
v
;

3334 
Àn
;

3335 
gue°_fd
;

3336 
ho°_fd
;

3337 
tŸÆ_Àn
;

3339 
x86_fûe_desc_t
 *
desc
;

3341 
iovec_±r
;

3342 
vÀn
;

3343 
iov_ba£
;

3344 
iov_Àn
;

3346 *
buf
;

3349 
gue°_fd
 = 
ªgs
->
ebx
;

3350 
iovec_±r
 = 
ªgs
->
ecx
;

3351 
vÀn
 = 
ªgs
->
edx
;

3352 
	`x86_sys_debug
(" guest_fd=%d, iovec_ptr = 0x%x, vlen=0x%x\n",

3353 
gue°_fd
, 
iovec_±r
, 
vÀn
);

3356 
desc
 = 
	`x86_fûe_desc_èbÀ_íåy_gë
(
˘x
->
fûe_desc_èbÀ
, 
gue°_fd
);

3357 i‡(!
desc
)

3358  -
EBADF
;

3359 
ho°_fd
 = 
desc
->host_fd;

3360 
	`x86_sys_debug
(" ho°_fd=%d\n", 
ho°_fd
);

3363 i‡(
desc
->
köd
 =
fûe_desc_pùe
)

3364 
	`Áèl
("%s:Çot supported forÖipes.\n%s",

3365 
__FUNCTION__
, 
îr_x86_sys_nŸe
);

3368 
tŸÆ_Àn
 = 0;

3369 
v
 = 0; v < 
vÀn
; v++)

3372 
	`mem_ªad
(
mem
, 
iovec_±r
, 4, &
iov_ba£
);

3373 
	`mem_ªad
(
mem
, 
iovec_±r
 + 4, 4, &
iov_Àn
);

3374 
iovec_±r
 += 8;

3377 
buf
 = 
	`xmÆloc
(
iov_Àn
);

3378 
	`mem_ªad
(
mem
, 
iov_ba£
, 
iov_Àn
, 
buf
);

3379 
Àn
 = 
	`wrôe
(
ho°_fd
, 
buf
, 
iov_Àn
);

3380 i‡(
Àn
 == -1)

3382 
	`‰ì
(
buf
);

3383  -
î∫o
;

3387 
tŸÆ_Àn
 +
Àn
;

3388 
	`‰ì
(
buf
);

3392  
tŸÆ_Àn
;

3393 
	}
}

3402 
	ssys_sys˘l_¨gs_t


3404 
	m≤ame
;

3405 
	m∆í
;

3406 
	mpﬁdvÆ
;

3407 
	mﬁdÀ≈
;

3408 
	m≤ewvÆ
;

3409 
	m√wÀn
;

3412 
	$x86_sys_sys˘l_im∂
(
X86C⁄ãxt
 *
˘x
)

3414 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

3415 
mem_t
 *
mem
 = 
˘x
->mem;

3417 
i
;

3419 
¨gs_±r
;

3420 
aux
;

3421 
zîo
 = 0;

3423 
sys_sys˘l_¨gs_t
 
¨gs
;

3426 
¨gs_±r
 = 
ªgs
->
ebx
;

3427 
	`x86_sys_debug
("Ö¨gs=0x%x\n", 
¨gs_±r
);

3430 
	`mem_ªad
(
mem
, 
¨gs_±r
,  
¨gs
, &args);

3431 
	`x86_sys_debug
("Ö«me=0x%x\n", 
¨gs
.
≤ame
);

3432 
	`x86_sys_debug
("ÇÀn=%d\¿ ", 
¨gs
.
∆í
);

3433 
i
 = 0; i < 
¨gs
.
∆í
; i++)

3435 
	`mem_ªad
(
mem
, 
¨gs
.
≤ame
 + 
i
 * 4, 4, &
aux
);

3436 
	`x86_sys_debug
("«me[%d]=%d ", 
i
, 
aux
);

3438 
	`x86_sys_debug
("\¿ÖﬁdvÆ=0x%x\n", 
¨gs
.
pﬁdvÆ
);

3439 
	`x86_sys_debug
(" oldÀ≈=0x%x\n", 
¨gs
.
ﬁdÀ≈
);

3440 
	`x86_sys_debug
("Ö√wvÆ=0x%x\n", 
¨gs
.
≤ewvÆ
);

3441 
	`x86_sys_debug
("ÇewÀn=%d\n", 
¨gs
.
√wÀn
);

3444 i‡(!
¨gs
.
ﬁdÀ≈
 || !¨gs.
pﬁdvÆ
)

3445 
	`Áèl
("%s:Çot supported forÖoldval=0 or oldlenp=0.\n%s",

3446 
__FUNCTION__
, 
îr_x86_sys_nŸe
);

3447 i‡(
¨gs
.
≤ewvÆ
 ||árgs.
√wÀn
)

3448 
	`Áèl
("%s:Çot supported forÖnewval orÇewlen otherÅhan 0.\n%s",

3449 
__FUNCTION__
, 
îr_x86_sys_nŸe
);

3452 
	`mem_wrôe
(
mem
, 
¨gs
.
ﬁdÀ≈
, 4, &
zîo
);

3453 
	`mem_wrôe
(
mem
, 
¨gs
.
pﬁdvÆ
, 1, &
zîo
);

3455 
	}
}

3464 
	$x86_sys_sched_£ç¨am_im∂
(
X86C⁄ãxt
 *
˘x
)

3466 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

3467 
mem_t
 *
mem
 = 
˘x
->mem;

3469 
∑øm_±r
;

3471 
sched_¥i‹ôy
;

3472 
pid
;

3474 
pid
 = 
ªgs
->
ebx
;

3475 
∑øm_±r
 = 
ªgs
->
ecx
;

3476 
	`x86_sys_debug
("Öid=%d\n", 
pid
);

3477 
	`x86_sys_debug
("Ö¨am_±r=0x%x\n", 
∑øm_±r
);

3478 
	`mem_ªad
(
mem
, 
∑øm_±r
, 4, &
sched_¥i‹ôy
);

3479 
	`x86_sys_debug
("Ö¨am.sched_¥i‹ôy=%d\n", 
sched_¥i‹ôy
);

3483 
	}
}

3492 
	$x86_sys_sched_gë∑øm_im∂
(
X86C⁄ãxt
 *
˘x
)

3494 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

3495 
mem_t
 *
mem
 = 
˘x
->mem;

3497 
∑øm_±r
;

3498 
zîo
 = 0;

3500 
pid
;

3503 
pid
 = 
ªgs
->
ebx
;

3504 
∑øm_±r
 = 
ªgs
->
ecx
;

3505 
	`x86_sys_debug
("Öid=%d\n", 
pid
);

3506 
	`x86_sys_debug
("Ö¨am_±r=0x%x\n", 
∑øm_±r
);

3509 
	`mem_wrôe
(
mem
, 
∑øm_±r
, 4, &
zîo
);

3511 
	}
}

3520 
	$x86_sys_sched_gëscheduÀr_im∂
(
X86C⁄ãxt
 *
˘x
)

3522 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

3524 
pid
;

3527 
pid
 = 
ªgs
->
ebx
;

3528 
	`x86_sys_debug
("Öid=%d\n", 
pid
);

3532 
	}
}

3541 
	$x86_sys_sched_gë_¥i‹ôy_max_im∂
(
X86C⁄ãxt
 *
˘x
)

3543 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

3545 
pﬁicy
;

3548 
pﬁicy
 = 
ªgs
->
ebx
;

3549 
	`x86_sys_debug
("Öﬁicy=%d\n", 
pﬁicy
);

3551 
pﬁicy
)

3567 
	`Áèl
("%s:ÖolicyÇot supported.\n%s",

3568 
__FUNCTION__
, 
îr_x86_sys_nŸe
);

3573 
	}
}

3582 
	$x86_sys_sched_gë_¥i‹ôy_mö_im∂
(
X86C⁄ãxt
 *
˘x
)

3584 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

3586 
pﬁicy
;

3589 
pﬁicy
 = 
ªgs
->
ebx
;

3590 
	`x86_sys_debug
("Öﬁicy=%d\n", 
pﬁicy
);

3592 
pﬁicy
)

3608 
	`Áèl
("%s:ÖolicyÇot supported.\n%s",

3609 
__FUNCTION__
, 
îr_x86_sys_nŸe
);

3614 
	}
}

3623 
	$x86_sys_«no¶ìp_im∂
(
X86C⁄ãxt
 *
˘x
)

3625 
X86Emu
 *
emu
 = 
˘x
->emu;

3627 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

3628 
mem_t
 *
mem
 = 
˘x
->mem;

3630 
rqç
;

3631 
rmç
;

3632 
£c
;

3633 
n£c
;

3635 
tŸÆ
;

3636 
now
;

3639 
rqç
 = 
ªgs
->
ebx
;

3640 
rmç
 = 
ªgs
->
ecx
;

3641 
	`x86_sys_debug
("Ñqç=0x%x,Ñmç=0x%x\n", 
rqç
, 
rmç
);

3644 
now
 = 
	`esim_ªÆ_time
();

3647 
	`mem_ªad
(
mem
, 
rqç
, 4, &
£c
);

3648 
	`mem_ªad
(
mem
, 
rqç
 + 4, 4, &
n£c
);

3649 
tŸÆ
 = (Ë
£c
 * 1000000 + (
n£c
 / 1000);

3650 
	`x86_sys_debug
(" sÀïÅimê(us): %Œu\n", 
tŸÆ
);

3653 
˘x
->
wakeup_time
 = 
now
 + 
tŸÆ
;

3654 
	`X86C⁄ãxtSëSèã
(
˘x
, 
X86C⁄ãxtSu•íded
 | 
X86C⁄ãxtN™o¶ìp
);

3655 
	`X86EmuPro˚ssEvítsScheduÀ
(
emu
);

3657 
	}
}

3666 
	$x86_sys_mªm≠_im∂
(
X86C⁄ãxt
 *
˘x
)

3668 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

3669 
mem_t
 *
mem
 = 
˘x
->mem;

3671 
addr
;

3672 
ﬁd_Àn
;

3673 
√w_Àn
;

3674 
√w_addr
;

3676 
Êags
;

3679 
addr
 = 
ªgs
->
ebx
;

3680 
ﬁd_Àn
 = 
ªgs
->
ecx
;

3681 
√w_Àn
 = 
ªgs
->
edx
;

3682 
Êags
 = 
ªgs
->
esi
;

3683 
	`x86_sys_debug
("áddr=0x%x, old_len=0x%x,Çew_len=0x%x flags=0x%x\n",

3684 
addr
, 
ﬁd_Àn
, 
√w_Àn
, 
Êags
);

3687 
	`as£π
(!(
addr
 & (
MEM_PAGE_SIZE
-1)));

3688 
	`as£π
(!(
ﬁd_Àn
 & (
MEM_PAGE_SIZE
-1)));

3689 
	`as£π
(!(
√w_Àn
 & (
MEM_PAGE_SIZE
-1)));

3690 i‡(!(
Êags
 & 0x1))

3691 
	`Áèl
("%s: fœg†MAP_MAYMOVE mu° bê¥e£¡", 
__FUNCTION__
);

3692 i‡(!
ﬁd_Àn
 || !
√w_Àn
)

3693 
	`Áèl
("%s: old_À¿‹Çew_À¿ˇ¬Ÿ bêzîo", 
__FUNCTION__
);

3696 i‡(
√w_Àn
 =
ﬁd_Àn
)

3697  
addr
;

3700 i‡(
√w_Àn
 < 
ﬁd_Àn
)

3702 
	`mem_unm≠
(
mem
, 
addr
 + 
√w_Àn
, 
ﬁd_Àn
 -Çew_len);

3703  
addr
;

3708 i‡(
√w_Àn
 > 
ﬁd_Àn
 && 
	`mem_m≠_•a˚
(
mem
, 
addr
 + old_len,

3709 
√w_Àn
 - 
ﬁd_Àn
Ë=
addr
 + old_len)

3711 
	`mem_m≠
(
mem
, 
addr
 + 
ﬁd_Àn
, 
√w_Àn
 - old_len,

3712 
mem_ac˚ss_ªad
 | 
mem_ac˚ss_wrôe
);

3713  
addr
;

3717 
√w_addr
 = 
	`mem_m≠_•a˚_down
(
mem
, 
SYS_MMAP_BASE_ADDRESS
, 
√w_Àn
);

3718 i‡(
√w_addr
 == -1)

3719 
	`Áèl
("%s: ouào‡gue° mem‹y", 
__FUNCTION__
);

3722 
	`mem_m≠
(
mem
, 
√w_addr
, 
√w_Àn
,

3723 
mem_ac˚ss_ªad
 | 
mem_ac˚ss_wrôe
);

3724 
	`mem_c›y
(
mem
, 
√w_addr
, 
addr
, 
	`MIN
(
ﬁd_Àn
, 
√w_Àn
));

3725 
	`mem_unm≠
(
mem
, 
addr
, 
ﬁd_Àn
);

3728  
√w_addr
;

3729 
	}
}

3738 
°r_m≠_t
 
	gx86_sys_˛ock_gëtime_˛k_id_m≠
 =

3751 
	$x86_sys_˛ock_gëtime_im∂
(
X86C⁄ãxt
 *
˘x
)

3753 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

3754 
mem_t
 *
mem
 = 
˘x
->mem;

3756 
˛k_id
;

3757 
ts_±r
;

3759 
now
;

3761 *
˛k_id_°r
;

3764 
£c
;

3765 
n£c
;

3766 } 
sim_ts
;

3769 
˛k_id
 = 
ªgs
->
ebx
;

3770 
ts_±r
 = 
ªgs
->
ecx
;

3771 
˛k_id_°r
 = 
	`°r_m≠_vÆue
(&
x86_sys_˛ock_gëtime_˛k_id_m≠
, 
˛k_id
);

3772 
	`x86_sys_debug
(" clk_id=0x%x (%s),Ås_ptr=0x%x\n",

3773 
˛k_id
, 
˛k_id_°r
, 
ts_±r
);

3776 
sim_ts
.
£c
 = 0;

3777 
sim_ts
.
n£c
 = 0;

3780 
˛k_id
)

3786 
now
 = 
	`esim_ªÆ_time
();

3787 
sim_ts
.
£c
 = 
now
 / 1000000;

3788 
sim_ts
.
n£c
 = (
now
 % 1000000) * 1000;

3809 
now
 = 
esim_time
 / 1000;

3810 
now
 +
esim_no_f‹w¨d_cy˛es
;

3811 
sim_ts
.
£c
 = 
now
 / 1000000000ll;

3812 
sim_ts
.
n£c
 = 
now
 % 1000000000ll;

3820 
	`Áèl
("%s:Çot implemented for 'clk_id' = %d",

3821 
__FUNCTION__
, 
˛k_id
);

3825 
	`Áèl
("%s: invalid value for 'clk_id' (%d)",

3826 
__FUNCTION__
, 
˛k_id
);

3830 
	`x86_sys_debug
("\âs.tv_£¯%u\n", 
sim_ts
.
£c
);

3831 
	`x86_sys_debug
("\âs.tv_n£¯%u\n", 
sim_ts
.
n£c
);

3834 
	`mem_wrôe
(
mem
, 
ts_±r
,  
sim_ts
, &sim_ts);

3836 
	}
}

3845 
°r_m≠_t
 
	gsys_pﬁl_evít_m≠
 =

3857 
	ssim_pﬁlfd_t


3859 
	mfd
;

3860 
	mevíts
;

3861 
	mªvíts
;

3864 
	$x86_sys_pﬁl_im∂
(
X86C⁄ãxt
 *
˘x
)

3866 
X86Emu
 *
emu
 = 
˘x
->emu;

3868 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

3869 
mem_t
 *
mem
 = 
˘x
->mem;

3871 
pfds
;

3872 
nfds
;

3874 
timeout
;

3875 
gue°_fd
;

3876 
ho°_fd
;

3877 
îr
;

3879 
sim_pﬁlfd_t
 
gue°_fds
;

3880 
pﬁlfd
 
ho°_fds
;

3881 
x86_fûe_desc_t
 *
desc
;

3883 
evíts_°r
[
MAX_STRING_SIZE
];

3885 
now
 = 
	`esim_ªÆ_time
();

3888 
pfds
 = 
ªgs
->
ebx
;

3889 
nfds
 = 
ªgs
->
ecx
;

3890 
timeout
 = 
ªgs
->
edx
;

3891 
	`x86_sys_debug
("Öfds=0x%x,Çfds=%d,Åimeout=%d\n",

3892 
pfds
, 
nfds
, 
timeout
);

3895 
	`M2S_HOST_GUEST_MATCH
( 
gue°_fds
, 8);

3896 
	`M2S_HOST_GUEST_MATCH
(
POLLIN
, 1);

3897 
	`M2S_HOST_GUEST_MATCH
(
POLLPRI
, 2);

3898 
	`M2S_HOST_GUEST_MATCH
(
POLLOUT
, 4);

3901 i‡(
nfds
 != 1)

3902 
	`Áèl
("%s:ÇŸ sup‹ãd f‹Çfd†!1\n%s", 
__FUNCTION__
, 
îr_x86_sys_nŸe
);

3905 
	`mem_ªad
(
mem
, 
pfds
,  
gue°_fds
, &guest_fds);

3906 
gue°_fd
 = 
gue°_fds
.
fd
;

3907 
	`°r_m≠_Êags
(&
sys_pﬁl_evít_m≠
, 
gue°_fds
.
evíts
, 
evíts_°r
, 
MAX_STRING_SIZE
);

3908 
	`x86_sys_debug
(" gue°_fd=%d,Évíts=%s\n", 
gue°_fd
, 
evíts_°r
);

3911 
desc
 = 
	`x86_fûe_desc_èbÀ_íåy_gë
(
˘x
->
fûe_desc_èbÀ
, 
gue°_fd
);

3912 i‡(!
desc
)

3913  -
EBADF
;

3914 
ho°_fd
 = 
desc
->host_fd;

3915 
	`x86_sys_debug
(" ho°_fd=%d\n", 
ho°_fd
);

3918 i‡(
gue°_fds
.
evíts
 & ~(
POLLIN
 | 
POLLOUT
))

3919 
	`Áèl
("%s:ÉventÇot supported.\n%s",

3920 
__FUNCTION__
, 
îr_x86_sys_nŸe
);

3923 i‡(
ho°_fd
 < 0)

3924 
	`Áèl
("%s:Çot supported file descriptor.\n%s",

3925 
__FUNCTION__
, 
îr_x86_sys_nŸe
);

3929 
ho°_fds
.
fd
 = 
ho°_fd
;

3930 
ho°_fds
.
evíts
 = 
gue°_fds
.events;

3931 
îr
 = 
	`pﬁl
(&
ho°_fds
, 1, 0);

3932 i‡(
îr
 == -1)

3933  -
î∫o
;

3937 i‡(
îr
 > 0)

3940 i‡(
gue°_fds
.
evíts
 & 
ho°_fds
.
ªvíts
 & 
POLLOUT
)

3942 
	`x86_sys_debug
("Çon-blocking writeÅo file guaranteed\n");

3943 
gue°_fds
.
ªvíts
 = 
POLLOUT
;

3944 
	`mem_wrôe
(
mem
, 
pfds
,  
gue°_fds
, &guest_fds);

3949 i‡(
gue°_fds
.
evíts
 & 
ho°_fds
.
ªvíts
 & 
POLLIN
)

3951 
	`x86_sys_debug
("Çon-blockingÑead from file guaranteed\n");

3952 
gue°_fds
.
ªvíts
 = 
POLLIN
;

3953 
	`mem_wrôe
(
mem
, 
pfds
,  
gue°_fds
, &guest_fds);

3958 
	`∑nic
("%s: u√x≥˘edÉvíts", 
__FUNCTION__
);

3963 
	`x86_sys_debug
("Örocess goingÅo sleep waiting forÉvents on file\n");

3964 
˘x
->
wakeup_time
 = 0;

3965 i‡(
timeout
 >= 0)

3966 
˘x
->
wakeup_time
 = 
now
 + (Ë
timeout
 * 1000;

3967 
˘x
->
wakeup_fd
 = 
gue°_fd
;

3968 
˘x
->
wakeup_evíts
 = 
gue°_fds
.
evíts
;

3969 
	`X86C⁄ãxtSëSèã
(
˘x
, 
X86C⁄ãxtSu•íded
 | 
X86C⁄ãxtPﬁl
);

3970 
	`X86EmuPro˚ssEvítsScheduÀ
(
emu
);

3972 
	}
}

3981 
	$x86_sys_π_siga˘i⁄_im∂
(
X86C⁄ãxt
 *
˘x
)

3983 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

3984 
mem_t
 *
mem
 = 
˘x
->mem;

3986 
sig
;

3987 
sig£tsize
;

3989 
a˘_±r
;

3990 
ﬁd_a˘_±r
;

3992 
x86_siga˘i⁄_t
 
a˘
;

3995 
sig
 = 
ªgs
->
ebx
;

3996 
a˘_±r
 = 
ªgs
->
ecx
;

3997 
ﬁd_a˘_±r
 = 
ªgs
->
edx
;

3998 
sig£tsize
 = 
ªgs
->
esi
;

3999 
	`x86_sys_debug
(" sig=%d,áct_ptr=0x%x, old_act_ptr=0x%x, sigsetsize=0x%x\n",

4000 
sig
, 
a˘_±r
, 
ﬁd_a˘_±r
, 
sig£tsize
);

4001 
	`x86_sys_debug
(" sig«l=%s\n", 
	`x86_sig«l_«me
(
sig
));

4004 i‡(
sig
 < 1 || sig > 64)

4005 
	`Áèl
("%s: invÆid sig«»(%d)", 
__FUNCTION__
, 
sig
);

4008 i‡(
a˘_±r
)

4010 
	`mem_ªad
(
mem
, 
a˘_±r
,  
a˘
, &act);

4011 i‡(
	`debug_°©us
(
x86_sys_debug_ˇãg‹y
))

4013 
FILE
 *
f
 = 
	`debug_fûe
(
x86_sys_debug_ˇãg‹y
);

4014 
	`x86_sys_debug
("áct: ");

4015 
	`x86_siga˘i⁄_dump
(&
a˘
, 
f
);

4016 
	`x86_sys_debug
("\n flags: ");

4017 
	`x86_siga˘i⁄_Êags_dump
(
a˘
.
Êags
, 
f
);

4018 
	`x86_sys_debug
("\n mask: ");

4019 
	`x86_sig£t_dump
(
a˘
.
mask
, 
f
);

4020 
	`x86_sys_debug
("\n");

4025 i‡(
ﬁd_a˘_±r
)

4026 
	`mem_wrôe
(
mem
, 
ﬁd_a˘_±r
, (
x86_siga˘i⁄_t
),

4027 &
˘x
->
sig«l_h™dÀr_èbÀ
->
siga˘i⁄
[
sig
 - 1]);

4030 i‡(
a˘_±r
)

4031 
˘x
->
sig«l_h™dÀr_èbÀ
->
siga˘i⁄
[
sig
 - 1] = 
a˘
;

4035 
	}
}

4044 
°r_m≠_t
 
	gsys_sig¥ocmask_how_m≠
 =

4053 
	$x86_sys_π_sig¥ocmask_im∂
(
X86C⁄ãxt
 *
˘x
)

4055 
X86Emu
 *
emu
 = 
˘x
->emu;

4057 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

4058 
mem_t
 *
mem
 = 
˘x
->mem;

4060 
£t_±r
;

4061 
ﬁd_£t_±r
;

4063 
how
;

4064 
sig£tsize
;

4066 
£t
;

4067 
ﬁd_£t
;

4069 
how
 = 
ªgs
->
ebx
;

4070 
£t_±r
 = 
ªgs
->
ecx
;

4071 
ﬁd_£t_±r
 = 
ªgs
->
edx
;

4072 
sig£tsize
 = 
ªgs
->
esi
;

4073 
	`x86_sys_debug
(" how=0x%x, set_ptr=0x%x, old_set_ptr=0x%x, sigsetsize=0x%x\n",

4074 
how
, 
£t_±r
, 
ﬁd_£t_±r
, 
sig£tsize
);

4075 
	`x86_sys_debug
(" how=%s\n", 
	`°r_m≠_vÆue
(&
sys_sig¥ocmask_how_m≠
, 
how
));

4078 
ﬁd_£t
 = 
˘x
->
sig«l_mask_èbÀ
->
blocked
;

4081 i‡(
£t_±r
)

4084 
	`mem_ªad
(
mem
, 
£t_±r
, 8, &
£t
);

4085 i‡(
	`debug_°©us
(
x86_sys_debug_ˇãg‹y
))

4087 
	`x86_sys_debug
(" së=0x%Œx ", 
£t
);

4088 
	`x86_sig£t_dump
(
£t
, 
	`debug_fûe
(
x86_sys_debug_ˇãg‹y
));

4089 
	`x86_sys_debug
("\n");

4093 
how
)

4098 
˘x
->
sig«l_mask_èbÀ
->
blocked
 |
£t
;

4103 
˘x
->
sig«l_mask_èbÀ
->
blocked
 &~
£t
;

4108 
˘x
->
sig«l_mask_èbÀ
->
blocked
 = 
£t
;

4112 
	`Áèl
("%s: invÆid vÆuêf‹ 'how'", 
__FUNCTION__
);

4117 i‡(
ﬁd_£t_±r
)

4118 
	`mem_wrôe
(
mem
, 
ﬁd_£t_±r
, 8, &
ﬁd_£t
);

4122 
	`X86EmuPro˚ssEvítsScheduÀ
(
emu
);

4123 
	`X86EmuPro˚ssEvíts
(
emu
);

4126 
	}
}

4135 
	$x86_sys_π_sigsu•íd_im∂
(
X86C⁄ãxt
 *
˘x
)

4137 
X86Emu
 *
emu
 = 
˘x
->emu;

4139 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

4140 
mem_t
 *
mem
 = 
˘x
->mem;

4142 
√w_£t_±r
;

4143 
√w_£t
;

4144 
sig£tsize
;

4146 
√w_£t_±r
 = 
ªgs
->
ebx
;

4147 
sig£tsize
 = 
ªgs
->
ecx
;

4148 
	`x86_sys_debug
("Çew_set_ptr=0x%x, sigsetsize=%d\n",

4149 
√w_£t_±r
, 
sig£tsize
);

4152 
	`mem_ªad
(
mem
, 
√w_£t_±r
, 8, &
√w_£t
);

4153 i‡(
	`debug_°©us
(
x86_sys_debug_ˇãg‹y
))

4155 
FILE
 *
f
 = 
	`debug_fûe
(
x86_sys_debug_ˇãg‹y
);

4156 
	`x86_sys_debug
(" old mask: ");

4157 
	`x86_sig£t_dump
(
˘x
->
sig«l_mask_èbÀ
->
blocked
, 
f
);

4158 
	`x86_sys_debug
("\nÇew mask: ");

4159 
	`x86_sig£t_dump
(
√w_£t
, 
f
);

4160 
	`x86_sys_debug
("\nÖending: ");

4161 
	`x86_sig£t_dump
(
˘x
->
sig«l_mask_èbÀ
->
≥ndög
, 
f
);

4162 
	`x86_sys_debug
("\n");

4166 
˘x
->
sig«l_mask_èbÀ
->
backup
 = ctx->sig«l_mask_èbÀ->
blocked
;

4167 
˘x
->
sig«l_mask_èbÀ
->
blocked
 = 
√w_£t
;

4168 
	`X86C⁄ãxtSëSèã
(
˘x
, 
X86C⁄ãxtSu•íded
 | 
X86C⁄ãxtSigsu•íd
);

4171 
	`X86EmuPro˚ssEvítsScheduÀ
(
emu
);

4172 
	`X86EmuPro˚ssEvíts
(
emu
);

4174 
	}
}

4183 
	$x86_sys_gëcwd_im∂
(
X86C⁄ãxt
 *
˘x
)

4185 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

4186 
mem_t
 *
mem
 = 
˘x
->mem;

4188 
buf_±r
;

4190 
size
;

4191 
Àn
;

4193 *
cwd
;

4196 
buf_±r
 = 
ªgs
->
ebx
;

4197 
size
 = 
ªgs
->
ecx
;

4198 
	`x86_sys_debug
(" buf_±r=0x%x, size=0x%x\n", 
buf_±r
, 
size
);

4201 
cwd
 = 
˘x
->
lﬂdî
->cwd;

4202 
Àn
 = 
	`°æí
(
cwd
);

4205 i‡(
size
 <
Àn
)

4206  -
ERANGE
;

4209 
	`mem_wrôe_°rög
(
mem
, 
buf_±r
, 
cwd
);

4210  
Àn
 + 1;

4211 
	}
}

4220 
	$x86_sys_gëæimô_im∂
(
X86C⁄ãxt
 *
˘x
)

4222 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

4223 
mem_t
 *
mem
 = 
˘x
->mem;

4225 
ªs
;

4226 
æim_±r
;

4228 *
ªs_°r
;

4230 
sim_æimô
 sim_rlimit;

4233 
ªs
 = 
ªgs
->
ebx
;

4234 
æim_±r
 = 
ªgs
->
ecx
;

4235 
ªs_°r
 = 
	`°r_m≠_vÆue
(&
sys_æimô_ªs_m≠
, 
ªs
);

4236 
	`x86_sys_debug
("Ñes=0x%x,Ñlim_±r=0x%x\n", 
ªs
, 
æim_±r
);

4237 
	`x86_sys_debug
("Ñes=%s\n", 
ªs_°r
);

4239 
ªs
)

4244 
sim_æimô
.
cur
 = 0xffffffff;

4245 
sim_æimô
.
max
 = 0xffffffff;

4251 
sim_æimô
.
cur
 = 
˘x
->
lﬂdî
->
°ack_size
;

4252 
sim_æimô
.
max
 = 0xffffffff;

4258 
sim_æimô
.
cur
 = 0x400;

4259 
sim_æimô
.
max
 = 0x400;

4264 
	`Áèl
("%s:Çot implemented forÑes = %s.\n%s",

4265 
__FUNCTION__
, 
ªs_°r
, 
îr_x86_sys_nŸe
);

4269 
	`mem_wrôe
(
mem
, 
æim_±r
, (
sim_æimô
), &sim_rlimit);

4270 
	`x86_sys_debug
("Ñë: cur=0x%x, max=0x%x\n", 
sim_æimô
.
cur
, sim_æimô.
max
);

4274 
	}
}

4283 
	$x86_sys_mm≠2_im∂
(
X86C⁄ãxt
 *
˘x
)

4285 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

4287 
addr
;

4288 
Àn
;

4290 
¥Ÿ
;

4291 
Êags
;

4292 
off£t
;

4293 
gue°_fd
;

4295 
¥Ÿ_°r
[
MAX_STRING_SIZE
];

4296 
Êags_°r
[
MAX_STRING_SIZE
];

4299 
addr
 = 
ªgs
->
ebx
;

4300 
Àn
 = 
ªgs
->
ecx
;

4301 
¥Ÿ
 = 
ªgs
->
edx
;

4302 
Êags
 = 
ªgs
->
esi
;

4303 
gue°_fd
 = 
ªgs
->
edi
;

4304 
off£t
 = 
ªgs
->
ebp
;

4307 
	`x86_sys_debug
("áddr=0x%x,Üen=%u,Örot=0x%x, flags=0x%x, guest_fd=%d, offset=0x%x\n",

4308 
addr
, 
Àn
, 
¥Ÿ
, 
Êags
, 
gue°_fd
, 
off£t
);

4309 
	`°r_m≠_Êags
(&
sys_mm≠_¥Ÿ_m≠
, 
¥Ÿ
, 
¥Ÿ_°r
, 
MAX_STRING_SIZE
);

4310 
	`°r_m≠_Êags
(&
sys_mm≠_Êags_m≠
, 
Êags
, 
Êags_°r
, 
MAX_STRING_SIZE
);

4311 
	`x86_sys_debug
("ÖrŸ=%s, fœgs=%s\n", 
¥Ÿ_°r
, 
Êags_°r
);

4315  
	`x86_sys_mm≠
(
˘x
, 
addr
, 
Àn
, 
¥Ÿ
, 
Êags
, 
gue°_fd
, 
off£t
 << 
MEM_PAGE_SHIFT
);

4316 
	}
}

4325 
	$x86_sys_·runˇã64_im∂
(
X86C⁄ãxt
 *
˘x
)

4327 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

4329 
fd
;

4330 
ho°_fd
;

4331 
îr
;

4333 
Àngth
;

4336 
fd
 = 
ªgs
->
ebx
;

4337 
Àngth
 = 
ªgs
->
ecx
;

4338 
	`x86_sys_debug
(" fd=%d,Üígth=0x%x\n", 
fd
, 
Àngth
);

4341 
ho°_fd
 = 
	`x86_fûe_desc_èbÀ_gë_ho°_fd
(
˘x
->
fûe_desc_èbÀ
, 
fd
);

4342 
	`x86_sys_debug
(" ho°_fd=%d\n", 
ho°_fd
);

4344 
îr
 = 
	`·runˇã
(
ho°_fd
, 
Àngth
);

4345 i‡(
îr
 == -1)

4346  -
î∫o
;

4349  
îr
;

4350 
	}
}

4359 
	ssim_°©64_t


4361 
	mdev
;

4362 
	m∑d1
;

4363 
	m__öo
;

4364 
	mmode
;

4365 
	m∆ök
;

4366 
	muid
;

4367 
	mgid
;

4368 
	mrdev
;

4369 
	m∑d2
;

4370 
	msize
;

4371 
	mblksize
;

4372 
	mblocks
;

4373 
	m©ime
;

4374 
	m©ime_n£c
;

4375 
	mmtime
;

4376 
	mmtime_n£c
;

4377 
	m˘ime
;

4378 
	m˘ime_n£c
;

4379 
	möo
;

4380 } 
__©åibuã__
((
∑cked
));

4382 
	$sys_°©_ho°_to_gue°
(
sim_°©64_t
 *
gue°
, 
°©
 *
ho°
)

4384 
	`M2S_HOST_GUEST_MATCH
((
sim_°©64_t
), 96);

4385 
	`mem£t
(
gue°
, 0, (
sim_°©64_t
));

4387 
gue°
->
dev
 = 
ho°
->
°_dev
;

4388 
gue°
->
__öo
 = 
ho°
->
°_öo
;

4389 
gue°
->
mode
 = 
ho°
->
°_mode
;

4390 
gue°
->
∆ök
 = 
ho°
->
°_∆ök
;

4391 
gue°
->
uid
 = 
ho°
->
°_uid
;

4392 
gue°
->
gid
 = 
ho°
->
°_gid
;

4393 
gue°
->
rdev
 = 
ho°
->
°_rdev
;

4394 
gue°
->
size
 = 
ho°
->
°_size
;

4395 
gue°
->
blksize
 = 
ho°
->
°_blksize
;

4396 
gue°
->
blocks
 = 
ho°
->
°_blocks
;

4397 
gue°
->
©ime
 = 
ho°
->
°_©ime
;

4398 
gue°
->
mtime
 = 
ho°
->
°_mtime
;

4399 
gue°
->
˘ime
 = 
ho°
->
°_˘ime
;

4400 
gue°
->
öo
 = 
ho°
->
°_öo
;

4402 
	`x86_sys_debug
(" stat64 structure:\n");

4403 
	`x86_sys_debug
(" dev=%lld, ino=%lld, mode=%d,Çlink=%d\n",

4404 
gue°
->
dev
, gue°->
öo
, gue°->
mode
, gue°->
∆ök
);

4405 
	`x86_sys_debug
(" uid=%d, gid=%d,Ñdev=%lld\n",

4406 
gue°
->
uid
, gue°->
gid
, gue°->
rdev
);

4407 
	`x86_sys_debug
(" size=%lld, blksize=%d, blocks=%lld\n",

4408 
gue°
->
size
, gue°->
blksize
, gue°->
blocks
);

4409 
	}
}

4411 
	$x86_sys_°©64_im∂
(
X86C⁄ãxt
 *
˘x
)

4413 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

4414 
mem_t
 *
mem
 = 
˘x
->mem;

4416 
fûe_«me_±r
;

4417 
°©buf_±r
;

4419 
fûe_«me
[
MAX_PATH_SIZE
];

4420 
fuŒ_∑th
[
MAX_PATH_SIZE
];

4422 
°©
 
°©buf
;

4423 
sim_°©64_t
 
sim_°©buf
;

4425 
Àngth
;

4426 
îr
;

4429 
fûe_«me_±r
 = 
ªgs
->
ebx
;

4430 
°©buf_±r
 = 
ªgs
->
ecx
;

4431 
	`x86_sys_debug
(" file_name_ptr=0x%x, statbuf_ptr=0x%x\n",

4432 
fûe_«me_±r
, 
°©buf_±r
);

4435 
Àngth
 = 
	`mem_ªad_°rög
(
mem
, 
fûe_«me_±r
,  
fûe_«me
, file_name);

4436 i‡(
Àngth
 = 
fûe_«me
)

4437 
	`Áèl
("%s: buf„∏toÿsmÆl", 
__FUNCTION__
);

4440 
	`X86C⁄ãxtGëFuŒP©h
(
˘x
, 
fûe_«me
, 
fuŒ_∑th
,  full_path);

4441 
	`x86_sys_debug
(" fûe_«me='%s', fuŒ_∑th='%s'\n", 
fûe_«me
, 
fuŒ_∑th
);

4444 
îr
 = 
	`°©
(
fuŒ_∑th
, &
°©buf
);

4445 i‡(
îr
 == -1)

4446  -
î∫o
;

4449 
	`sys_°©_ho°_to_gue°
(&
sim_°©buf
, &
°©buf
);

4450 
	`mem_wrôe
(
mem
, 
°©buf_±r
, (
sim_°©buf
), &sim_statbuf);

4452 
	}
}

4461 
	$x86_sys_l°©64_im∂
(
X86C⁄ãxt
 *
˘x
)

4463 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

4464 
mem_t
 *
mem
 = 
˘x
->mem;

4466 
fûe_«me_±r
;

4467 
°©buf_±r
;

4469 
fûe_«me
[
MAX_PATH_SIZE
];

4470 
fuŒ_∑th
[
MAX_PATH_SIZE
];

4472 
Àngth
;

4473 
îr
;

4475 
°©
 
°©buf
;

4476 
sim_°©64_t
 
sim_°©buf
;

4479 
fûe_«me_±r
 = 
ªgs
->
ebx
;

4480 
°©buf_±r
 = 
ªgs
->
ecx
;

4481 
	`x86_sys_debug
(" fûe_«me_±r=0x%x, sètbuf_±r=0x%x\n", 
fûe_«me_±r
, 
°©buf_±r
);

4484 
Àngth
 = 
	`mem_ªad_°rög
(
mem
, 
fûe_«me_±r
,  
fûe_«me
, file_name);

4485 i‡(
Àngth
 = 
fûe_«me
)

4486 
	`Áèl
("%s: buf„∏toÿsmÆl", 
__FUNCTION__
);

4489 
	`X86C⁄ãxtGëFuŒP©h
(
˘x
, 
fûe_«me
, 
fuŒ_∑th
,  full_path);

4490 
	`x86_sys_debug
(" fûe_«me='%s', fuŒ_∑th='%s'\n", 
fûe_«me
, 
fuŒ_∑th
);

4493 
îr
 = 
	`l°©
(
fuŒ_∑th
, &
°©buf
);

4494 i‡(
îr
 == -1)

4495  -
î∫o
;

4498 
	`sys_°©_ho°_to_gue°
(&
sim_°©buf
, &
°©buf
);

4499 
	`mem_wrôe
(
mem
, 
°©buf_±r
,  
sim_°©buf
, &sim_statbuf);

4501 
	}
}

4510 
	$x86_sys_f°©64_im∂
(
X86C⁄ãxt
 *
˘x
)

4512 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

4513 
mem_t
 *
mem
 = 
˘x
->mem;

4515 
fd
;

4516 
ho°_fd
;

4517 
îr
;

4519 
°©buf_±r
;

4521 
°©
 
°©buf
;

4522 
sim_°©64_t
 
sim_°©buf
;

4525 
fd
 = 
ªgs
->
ebx
;

4526 
°©buf_±r
 = 
ªgs
->
ecx
;

4527 
	`x86_sys_debug
(" fd=%d, sètbuf_±r=0x%x\n", 
fd
, 
°©buf_±r
);

4530 
ho°_fd
 = 
	`x86_fûe_desc_èbÀ_gë_ho°_fd
(
˘x
->
fûe_desc_èbÀ
, 
fd
);

4531 
	`x86_sys_debug
(" ho°_fd=%d\n", 
ho°_fd
);

4534 
îr
 = 
	`f°©
(
ho°_fd
, &
°©buf
);

4535 i‡(
îr
 == -1)

4536  -
î∫o
;

4539 
	`sys_°©_ho°_to_gue°
(&
sim_°©buf
, &
°©buf
);

4540 
	`mem_wrôe
(
mem
, 
°©buf_±r
,  
sim_°©buf
, &sim_statbuf);

4542 
	}
}

4551 
	$x86_sys_gëuid_im∂
(
X86C⁄ãxt
 *
˘x
)

4553  
	`gëuid
();

4554 
	}
}

4563 
	$x86_sys_gëgid_im∂
(
X86C⁄ãxt
 *
˘x
)

4565  
	`gëgid
();

4566 
	}
}

4575 
	$x86_sys_gëeuid_im∂
(
X86C⁄ãxt
 *
˘x
)

4577  
	`gëeuid
();

4578 
	}
}

4587 
	$x86_sys_gëegid_im∂
(
X86C⁄ãxt
 *
˘x
)

4589  
	`gëegid
();

4590 
	}
}

4599 
	$x86_sys_chown_im∂
(
X86C⁄ãxt
 *
˘x
)

4601 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

4602 
mem_t
 *
mem
 = 
˘x
->mem;

4604 
fûe_«me_±r
;

4606 
ow√r
;

4607 
group
;

4608 
Àn
;

4609 
îr
;

4611 
fûe_«me
[
MAX_PATH_SIZE
];

4612 
fuŒ_∑th
[
MAX_PATH_SIZE
];

4615 
fûe_«me_±r
 = 
ªgs
->
ebx
;

4616 
ow√r
 = 
ªgs
->
ecx
;

4617 
group
 = 
ªgs
->
edx
;

4618 
	`x86_sys_debug
(" fûe_«me_±r=0x%x, ow√r=%d, group=%d\n", 
fûe_«me_±r
, 
ow√r
, 
group
);

4621 
Àn
 = 
	`mem_ªad_°rög
(
mem
, 
fûe_«me_±r
,  
fûe_«me
, file_name);

4622 i‡(
Àn
 = 
fûe_«me
)

4623 
	`Áèl
("%s: buf„∏toÿsmÆl", 
__FUNCTION__
);

4626 
	`X86C⁄ãxtGëFuŒP©h
(
˘x
, 
fûe_«me
, 
fuŒ_∑th
,  full_path);

4627 
	`x86_sys_debug
(" fûíame='%s', fuŒ∑th='%s'\n", 
fûe_«me
, 
fuŒ_∑th
);

4630 
îr
 = 
	`chown
(
fuŒ_∑th
, 
ow√r
, 
group
);

4631 i‡(
îr
 == -1)

4632  -
î∫o
;

4635  
îr
;

4636 
	}
}

4645 
	$x86_sys_madvi£_im∂
(
X86C⁄ãxt
 *
˘x
)

4647 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

4649 
°¨t
;

4650 
Àn
;

4652 
advi˚
;

4655 
°¨t
 = 
ªgs
->
ebx
;

4656 
Àn
 = 
ªgs
->
ecx
;

4657 
advi˚
 = 
ªgs
->
edx
;

4658 
	`x86_sys_debug
(" sèπ=0x%x,Üí=%d,ádvi˚=%d\n", 
°¨t
, 
Àn
, 
advi˚
);

4662 
	}
}

4671 
	sho°_dúít_t


4673 
	md_öo
;

4674 
off_t
 
	md_off
;

4675 
	md_ª˛í
;

4676 
	md_«me
[];

4679 
	sgue°_dúít64_t


4681 
	md_öo
;

4682 
	md_off
;

4683 
	md_ª˛í
;

4684 
	md_ty≥
;

4685 
	md_«me
[];

4686 } 
__©åibuã__
((
∑cked
));

4688 
	$x86_sys_gëdíts64_im∂
(
X86C⁄ãxt
 *
˘x
)

4690 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

4691 
mem_t
 *
mem
 = 
˘x
->mem;

4693 
pdúít
;

4694 
cou¡
;

4696 
fd
;

4697 
ho°_fd
;

4698 
ƒód
;

4699 
ho°_offs
;

4700 
gue°_offs
;

4702 *
buf
;

4704 
ho°_dúít_t
 *
ho°_dúít
;

4705 
gue°_dúít64_t
 
gue°_dúít
;

4708 
fd
 = 
ªgs
->
ebx
;

4709 
pdúít
 = 
ªgs
->
ecx
;

4710 
cou¡
 = 
ªgs
->
edx
;

4711 
	`x86_sys_debug
(" fd=%d,Ödúít=0x%x, cou¡=%d\n", 
fd
, 
pdúít
, 
cou¡
);

4714 
ho°_fd
 = 
	`x86_fûe_desc_èbÀ_gë_ho°_fd
(
˘x
->
fûe_desc_èbÀ
, 
fd
);

4715 
	`x86_sys_debug
(" ho°_fd=%d\n", 
ho°_fd
);

4716 i‡(
ho°_fd
 < 0)

4717  -
EBADF
;

4720 
buf
 = 
	`xˇŒoc
(1, 
cou¡
);

4721 
ƒód
 = 
	`sysˇŒ
(
SYS_gëdíts
, 
ho°_fd
, 
buf
, 
cou¡
);

4722 i‡(
ƒód
 < 0)

4723 
	`Áèl
("%s: ho° cÆ»Áûed", 
__FUNCTION__
);

4726 i‡(!
ƒód
)

4728 
	`‰ì
(
buf
);

4733 
ho°_offs
 = 0;

4734 
gue°_offs
 = 0;

4735 
ho°_offs
 < 
ƒód
)

4737 
ho°_dúít
 = (
ho°_dúít_t
 *Ë(
buf
 + 
ho°_offs
);

4738 
gue°_dúít
.
d_öo
 = 
ho°_dúít
->d_ino;

4739 
gue°_dúít
.
d_off
 = 
ho°_dúít
->d_off;

4740 
gue°_dúít
.
d_ª˛í
 = (27 + 
	`°æí
(
ho°_dúít
->
d_«me
)) / 8 * 8;

4741 
gue°_dúít
.
d_ty≥
 = * (*Ë(
buf
 + 
ho°_offs
 + 
ho°_dúít
->
d_ª˛í
 - 1);

4743 
	`x86_sys_debug
(" d_öo=%Œd ", 
gue°_dúít
.
d_öo
);

4744 
	`x86_sys_debug
("d_off=%Œd ", 
gue°_dúít
.
d_off
);

4745 
	`x86_sys_debug
("d_ª˛í=%u(ho°),%u(gue°Ë", 
ho°_dúít
->
d_ª˛í
, 
gue°_dúít
.d_reclen);

4746 
	`x86_sys_debug
("d_«me='%s'\n", 
ho°_dúít
->
d_«me
);

4748 
	`mem_wrôe
(
mem
, 
pdúít
 + 
gue°_offs
, 8, &
gue°_dúít
.
d_öo
);

4749 
	`mem_wrôe
(
mem
, 
pdúít
 + 
gue°_offs
 + 8, 8, &
gue°_dúít
.
d_off
);

4750 
	`mem_wrôe
(
mem
, 
pdúít
 + 
gue°_offs
 + 16, 2, &
gue°_dúít
.
d_ª˛í
);

4751 
	`mem_wrôe
(
mem
, 
pdúít
 + 
gue°_offs
 + 18, 1, &
gue°_dúít
.
d_ty≥
);

4752 
	`mem_wrôe_°rög
(
mem
, 
pdúít
 + 
gue°_offs
 + 19, 
ho°_dúít
->
d_«me
);

4754 
ho°_offs
 +
ho°_dúít
->
d_ª˛í
;

4755 
gue°_offs
 +
gue°_dúít
.
d_ª˛í
;

4756 i‡(
gue°_offs
 > 
cou¡
)

4757 
	`Áèl
("getdents: host bufferÅoo small");

4761 
	`‰ì
(
buf
);

4762 
	`x86_sys_debug
("Ñë=%d (ho°), %d (gue°)\n", 
ho°_offs
, 
gue°_offs
);

4763  
gue°_offs
;

4764 
	}
}

4773 
°r_m≠_t
 
	gsys_f˙é_cmp_m≠
 =

4794 
	$x86_sys_f˙é64_im∂
(
X86C⁄ãxt
 *
˘x
)

4796 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

4798 
gue°_fd
;

4799 
cmd
;

4800 
îr
;

4802 
¨g
;

4804 *
cmd_«me
;

4805 
Êags_°r
[
MAX_STRING_SIZE
];

4807 
x86_fûe_desc_t
 *
desc
;

4810 
gue°_fd
 = 
ªgs
->
ebx
;

4811 
cmd
 = 
ªgs
->
ecx
;

4812 
¨g
 = 
ªgs
->
edx
;

4813 
	`x86_sys_debug
(" guest_fd=%d, cmd=%d,árg=0x%x\n",

4814 
gue°_fd
, 
cmd
, 
¨g
);

4815 
cmd_«me
 = 
	`°r_m≠_vÆue
(&
sys_f˙é_cmp_m≠
, 
cmd
);

4816 
	`x86_sys_debug
(" cmd=%s\n", 
cmd_«me
);

4819 
desc
 = 
	`x86_fûe_desc_èbÀ_íåy_gë
(
˘x
->
fûe_desc_èbÀ
, 
gue°_fd
);

4820 i‡(!
desc
)

4821  -
EBADF
;

4822 i‡(
desc
->
ho°_fd
 < 0)

4823 
	`Áèl
("%s:ÇŸ suµ‹ãd f‹Åhi†ty≥ o‡fûe", 
__FUNCTION__
);

4824 
	`x86_sys_debug
(" ho°_fd=%d\n", 
desc
->
ho°_fd
);

4827 
cmd
)

4832 
îr
 = 
	`f˙é
(
desc
->
ho°_fd
, 
F_GETFD
);

4833 i‡(
îr
 == -1)

4834 
îr
 = -
î∫o
;

4839 
îr
 = 
	`f˙é
(
desc
->
ho°_fd
, 
F_SETFD
, 
¨g
);

4840 i‡(
îr
 == -1)

4841 
îr
 = -
î∫o
;

4846 
îr
 = 
	`f˙é
(
desc
->
ho°_fd
, 
F_GETFL
);

4847 i‡(
îr
 == -1)

4848 
îr
 = -
î∫o
;

4851 
	`°r_m≠_Êags
(&
sys_›í_Êags_m≠
, 
îr
, 
Êags_°r
, 
MAX_STRING_SIZE
);

4852 
	`x86_sys_debug
("Ñë=%s\n", 
Êags_°r
);

4858 
	`°r_m≠_Êags
(&
sys_›í_Êags_m≠
, 
¨g
, 
Êags_°r
, 
MAX_STRING_SIZE
);

4859 
	`x86_sys_debug
("árg=%s\n", 
Êags_°r
);

4860 
desc
->
Êags
 = 
¨g
;

4862 
îr
 = 
	`f˙é
(
desc
->
ho°_fd
, 
F_SETFL
, 
¨g
);

4863 i‡(
îr
 == -1)

4864 
îr
 = -
î∫o
;

4869 
îr
 = 0;

4870 
	`Áèl
("%s: command %sÇot implemented.\n%s",

4871 
__FUNCTION__
, 
cmd_«me
, 
îr_x86_sys_nŸe
);

4875  
îr
;

4876 
	}
}

4885 
	$x86_sys_gëtid_im∂
(
X86C⁄ãxt
 *
˘x
)

4890  
˘x
->
pid
;

4891 
	}
}

4900 
°r_m≠_t
 
	gsys_fuãx_cmd_m≠
 =

4919 
	$x86_sys_fuãx_im∂
(
X86C⁄ãxt
 *
˘x
)

4921 
X86Emu
 *
emu
 = 
˘x
->emu;

4926 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

4927 
mem_t
 *
mem
 = 
˘x
->mem;

4929 
addr1
;

4930 
timeout_±r
;

4931 
addr2
;

4932 
timeout_£c
;

4933 
timeout_u£c
;

4935 
cmd
;

4936 
fuãx
;

4937 
bô£t
;

4939 
›
;

4940 
vÆ1
;

4941 
vÆ3
;

4942 
ªt
;

4945 
addr1
 = 
ªgs
->
ebx
;

4946 
›
 = 
ªgs
->
ecx
;

4947 
vÆ1
 = 
ªgs
->
edx
;

4948 
timeout_±r
 = 
ªgs
->
esi
;

4949 
addr2
 = 
ªgs
->
edi
;

4950 
vÆ3
 = 
ªgs
->
ebp
;

4951 
	`x86_sys_debug
("áddr1=0x%x, op=%d, val1=%d,Ötimeout=0x%x,áddr2=0x%x, val3=%d\n",

4952 
addr1
, 
›
, 
vÆ1
, 
timeout_±r
, 
addr2
, 
vÆ3
);

4957 
cmd
 = 
›
 & ~(256|128);

4958 
	`mem_ªad
(
mem
, 
addr1
, 4, &
fuãx
);

4959 
	`x86_sys_debug
(" futex=%d, cmd=%d (%s)\n",

4960 
fuãx
, 
cmd
, 
	`°r_m≠_vÆue
(&
sys_fuãx_cmd_m≠
, cmd));

4962 
cmd
)

4969 
bô£t
 = 
cmd
 =9 ? 
vÆ3
 : 0xffffffff;

4973 i‡(
fuãx
 !
vÆ1
)

4974  -
EAGAIN
;

4977 i‡(
timeout_±r
)

4979 
	`Áèl
("syscall futex: FUTEX_WAITÇot supported withÅimeout");

4980 
	`mem_ªad
(
mem
, 
timeout_±r
, 4, &
timeout_£c
);

4981 
	`mem_ªad
(
mem
, 
timeout_±r
 + 4, 4, &
timeout_u£c
);

4982 
	`x86_sys_debug
("Åimeout={sec %d, usec %d}\n",

4983 
timeout_£c
, 
timeout_u£c
);

4987 
timeout_£c
 = 0;

4988 
timeout_u£c
 = 0;

4992 
˘x
->
wakeup_fuãx
 = 
addr1
;

4993 
˘x
->
wakeup_fuãx_bô£t
 = 
bô£t
;

4994 
˘x
->
wakeup_fuãx_¶ìp
 = ++
emu
->
fuãx_¶ìp_cou¡
;

4995 
	`X86C⁄ãxtSëSèã
(
˘x
, 
X86C⁄ãxtSu•íded
 | 
X86C⁄ãxtFuãx
);

5003 
bô£t
 = 
cmd
 =10 ? 
vÆ3
 : 0xffffffff;

5004 
ªt
 = 
	`X86C⁄ãxtFuãxWake
(
˘x
, 
addr1
, 
vÆ1
, 
bô£t
);

5005 
	`x86_sys_debug
(" fuãxáà0x%x: %dÖro˚s£†wokí up\n", 
addr1
, 
ªt
);

5006  
ªt
;

5011 
ªqueued
 = 0;

5012 
X86C⁄ãxt
 *
ãmp_˘x
;

5015 i‡(
timeout_±r
 != 0x7fffffff)

5016 
	`Áèl
("%s: FUTEX_CMP_REQUEUE: o∆y suµ‹ãd f‹Ötimeout=INTMAX", 
__FUNCTION__
);

5020 i‡(
fuãx
 !
vÆ3
)

5021  -
EAGAIN
;

5025 
ªt
 = 
	`X86C⁄ãxtFuãxWake
(
˘x
, 
addr1
, 
vÆ1
, 0xffffffff);

5026 
	`x86_sys_debug
(" fuãxáà0x%x: %dÖro˚s£†wokí up\n", 
addr1
, 
ªt
);

5029 
ãmp_˘x
 = 
emu
->
su•íded_li°_hód
;Åemp_ctx;

5030 
ãmp_˘x
 =Åemp_˘x->
su•íded_li°_√xt
)

5032 i‡(
	`X86C⁄ãxtGëSèã
(
ãmp_˘x
, 
X86C⁄ãxtFuãx
)

5033 && 
ãmp_˘x
->
wakeup_fuãx
 =
addr1
)

5035 
ãmp_˘x
->
wakeup_fuãx
 = 
addr2
;

5036 
ªqueued
++;

5039 
	`x86_sys_debug
(" futexát 0x%x: %dÖrocessesÑequeuedÅo futex 0x%x\n",

5040 
addr1
, 
ªqueued
, 
addr2
);

5041  
ªt
;

5046 
›
;

5047 
›¨g
;

5048 
cmp
;

5049 
cm∑rg
;

5051 
vÆ2
 = 
timeout_±r
;

5052 
ﬁdvÆ
;

5053 
√wvÆ
 = 0;

5054 
c⁄d
 = 0;

5055 
ªt
 = 0;

5057 
›
 = (
vÆ3
 >> 28) & 0xf;

5058 
cmp
 = (
vÆ3
 >> 24) & 0xf;

5059 
›¨g
 = (
vÆ3
 >> 12) & 0xfff;

5060 
cm∑rg
 = 
vÆ3
 & 0xfff;

5062 
	`mem_ªad
(
mem
, 
addr2
, 4, &
ﬁdvÆ
);

5063 
›
)

5066 
√wvÆ
 = 
›¨g
;

5069 
√wvÆ
 = 
ﬁdvÆ
 + 
›¨g
;

5072 
√wvÆ
 = 
ﬁdvÆ
 | 
›¨g
;

5075 
√wvÆ
 = 
ﬁdvÆ
 & 
›¨g
;

5078 
√wvÆ
 = 
ﬁdvÆ
 ^ 
›¨g
;

5081 
	`Áèl
("%s: FUTEX_WAKE_OP: invÆid o≥øti⁄", 
__FUNCTION__
);

5083 
	`mem_wrôe
(
mem
, 
addr2
, 4, &
√wvÆ
);

5085 
ªt
 = 
	`X86C⁄ãxtFuãxWake
(
˘x
, 
addr1
, 
vÆ1
, 0xffffffff);

5087 
cmp
)

5090 
c⁄d
 = 
ﬁdvÆ
 =
cm∑rg
;

5093 
c⁄d
 = 
ﬁdvÆ
 !
cm∑rg
;

5096 
c⁄d
 = 
ﬁdvÆ
 < 
cm∑rg
;

5099 
c⁄d
 = 
ﬁdvÆ
 <
cm∑rg
;

5102 
c⁄d
 = 
ﬁdvÆ
 > 
cm∑rg
;

5105 
c⁄d
 = 
ﬁdvÆ
 >
cm∑rg
;

5108 
	`Áèl
("%s: FUTEX_WAKE_OP: invÆid c⁄dôi⁄", 
__FUNCTION__
);

5110 i‡(
c⁄d
)

5111 
ªt
 +
	`X86C⁄ãxtFuãxWake
(
˘x
, 
addr2
, 
vÆ2
, 0xffffffff);

5115  
ªt
;

5119 
	`Áèl
("%s:Çot implemented for cmd=%d (%s).\n%s",

5120 
__FUNCTION__
, 
cmd
, 
	`°r_m≠_vÆue
(&
sys_fuãx_cmd_m≠
, cmd), 
îr_x86_sys_nŸe
);

5125 
	}
}

5134 
	$x86_sys_sched_£èfföôy_im∂
(
X86C⁄ãxt
 *
˘x
)

5136 
X86Emu
 *
emu
 = 
˘x
->emu;

5138 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

5139 
mem_t
 *
mem
 = 
˘x
->mem;

5140 
X86C⁄ãxt
 *
èrgë_˘x
;

5142 
îr
 = 0;

5143 
pid
;

5144 
size
;

5145 
node
;

5146 
num_nodes
;

5147 
num_bôs
;

5149 
i
;

5150 
j
;

5152 
mask_±r
;

5153 *
mask
;

5156 
pid
 = 
ªgs
->
ebx
;

5157 
size
 = 
ªgs
->
ecx
;

5158 
mask_±r
 = 
ªgs
->
edx
;

5159 
	`x86_sys_debug
("Öid=%d, size=%d, mask_ptr=0x%x\n",

5160 
pid
, 
size
, 
mask_±r
);

5163 i‡(!
	`IN_RANGE
(
size
, 0, 1 << 10))

5164 
	`Áèl
("%s: invÆidÑ™gêf‹ 'size' (%d)", 
__FUNCTION__
, 
size
);

5167 
mask
 = 
	`xˇŒoc
(1, 
size
);

5168 
	`mem_ªad
(
mem
, 
mask_±r
, 
size
, 
mask
);

5171 
	`x86_sys_debug
(" CPUs = {");

5172 
i
 = 0; i < 
size
; i++)

5173 
j
 = 0; j < 8; j++)

5174 i‡(
mask
[
i
] & (1 << 
j
))

5175 
	`x86_sys_debug
(" %d", 
i
 * 8 + 
j
);

5176 
	`x86_sys_debug
(" }\n");

5180 
èrgë_˘x
 = 
pid
 ? 
	`X86EmuGëC⁄ãxt
(
emu
,ÖidË: 
˘x
;

5181 i‡(!
èrgë_˘x
)

5183 
îr
 = -
ESRCH
;

5184 
out
;

5189 
num_bôs
 = 0;

5190 
node
 = 0;

5191 
num_nodes
 = 
x86_˝u_num_c‹es
 * 
x86_˝u_num_thªads
;

5192 
i
 = 0; i < 
size
 && 
node
 < 
num_nodes
; i++)

5194 
j
 = 0; j < 8 && 
node
 < 
num_nodes
; j++)

5196 
num_bôs
 +
mask
[
i
] & (1 << 
j
) ? 1 : 0;

5197 
node
++;

5200 i‡(!
num_bôs
)

5202 
îr
 = -
EINVAL
;

5203 
out
;

5207 
node
 = 0;

5208 
i
 = 0; i < 
size
 && 
node
 < 
num_nodes
; i++)

5209 
j
 = 0; j < 8 && 
node
 < 
num_nodes
; j++)

5210 
	`bô_m≠_£t
(
èrgë_˘x
->
afföôy
, 
node
++,

5211 1, 
mask
[
i
] & (1 << 
j
) ? 1 : 0);

5216 
emu
->
scheduÀ_sig«l
 = 1;

5218 
out
:

5220 
	`‰ì
(
mask
);

5221  
îr
;

5222 
	}
}

5231 
	$x86_sys_sched_gëafföôy_im∂
(
X86C⁄ãxt
 *
˘x
)

5233 
X86Emu
 *
emu
 = 
˘x
->emu;

5235 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

5236 
mem_t
 *
mem
 = 
˘x
->mem;

5237 
X86C⁄ãxt
 *
èrgë_˘x
;

5239 
pid
;

5240 
size
;

5241 
node
;

5242 
num_nodes
;

5244 
i
;

5245 
j
;

5247 
mask_±r
;

5248 *
mask
;

5251 
pid
 = 
ªgs
->
ebx
;

5252 
size
 = 
ªgs
->
ecx
;

5253 
mask_±r
 = 
ªgs
->
edx
;

5254 
	`x86_sys_debug
("Öid=%d, size=%d, mask_ptr=0x%x\n",

5255 
pid
, 
size
, 
mask_±r
);

5258 i‡(!
	`IN_RANGE
(
size
, 0, 1 << 10))

5259 
	`Áèl
("%s: invÆidÑ™gêf‹ 'size' (%d)", 
__FUNCTION__
, 
size
);

5263 
èrgë_˘x
 = 
pid
 ? 
	`X86EmuGëC⁄ãxt
(
emu
,ÖidË: 
˘x
;

5264 i‡(!
èrgë_˘x
)

5265  -
ESRCH
;

5268 
mask
 = 
	`xˇŒoc
(1, 
size
);

5271 
node
 = 0;

5272 
num_nodes
 = 
x86_˝u_num_c‹es
 * 
x86_˝u_num_thªads
;

5273 
i
 = 0; i < 
size
 && 
node
 < 
num_nodes
; i++)

5274 
j
 = 0; j < 8 && 
node
 < 
num_nodes
; j++)

5275 
mask
[
i
] |
	`bô_m≠_gë
(
èrgë_˘x
->
afföôy
,

5276 
node
++, 1Ë<< 
j
;

5279 
	`mem_wrôe
(
mem
, 
mask_±r
, 
size
, 
mask
);

5280 
	`‰ì
(
mask
);

5284 
	}
}

5293 
	$x86_sys_£t_thªad_¨ó_im∂
(
X86C⁄ãxt
 *
˘x
)

5295 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

5296 
mem_t
 *
mem
 = 
˘x
->mem;

5298 
uöfo_±r
;

5300 
sim_u£r_desc
 
uöfo
;

5303 
uöfo_±r
 = 
ªgs
->
ebx
;

5304 
	`x86_sys_debug
(" uöfo_±r=0x%x\n", 
uöfo_±r
);

5307 
	`mem_ªad
(
mem
, 
uöfo_±r
,  
uöfo
, &uinfo);

5308 
	`x86_sys_debug
("Éntry_number=0x%x, base_addr=0x%x,Üimit=0x%x\n",

5309 
uöfo
.
íåy_numbî
, uöfo.
ba£_addr
, uöfo.
limô
);

5310 
	`x86_sys_debug
(" seg_32bit=0x%x, contents=0x%x,Ñead_exec_only=0x%x\n",

5311 
uöfo
.
£g_32bô
, uöfo.
c⁄ã¡s
, uöfo.
ªad_exec_⁄ly
);

5312 
	`x86_sys_debug
("Üimit_in_pages=0x%x, seg_not_present=0x%x, useable=0x%x\n",

5313 
uöfo
.
limô_ö_∑ges
, uöfo.
£g_nŸ_¥e£¡
, uöfo.
u£abÀ
);

5314 i‡(!
uöfo
.
£g_32bô
)

5315 
	`Áèl
("syscall set_thread_area: only 32-bit segments supported");

5318 i‡(
uöfo
.
limô_ö_∑ges
)

5319 
uöfo
.
limô
 <<= 12;

5321 i‡(
uöfo
.
íåy_numbî
 == -1)

5323 i‡(
˘x
->
glibc_£gmít_ba£
)

5324 
	`Áèl
("%s: glib¯£gmíàÆªady së", 
__FUNCTION__
);

5326 
˘x
->
glibc_£gmít_ba£
 = 
uöfo
.
ba£_addr
;

5327 
˘x
->
glibc_£gmít_limô
 = 
uöfo
.
limô
;

5328 
uöfo
.
íåy_numbî
 = 6;

5329 
	`mem_wrôe
(
mem
, 
uöfo_±r
, 4, &
uöfo
.
íåy_numbî
);

5333 i‡(
uöfo
.
íåy_numbî
 != 6)

5334 
	`Áèl
("%s: invÆidÉ¡ryÇumbî", 
__FUNCTION__
);

5335 i‡(!
˘x
->
glibc_£gmít_ba£
)

5336 
	`Áèl
("%s: glib¯£gmíànŸ së", 
__FUNCTION__
);

5337 
˘x
->
glibc_£gmít_ba£
 = 
uöfo
.
ba£_addr
;

5338 
˘x
->
glibc_£gmít_limô
 = 
uöfo
.
limô
;

5343 
	}
}

5352 
	$x86_sys_Ádvi£64_im∂
(
X86C⁄ãxt
 *
˘x
)

5354 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

5356 
fd
;

5357 
advi˚
;

5359 
off_hi
;

5360 
off_lo
;

5361 
Àn
;

5364 
fd
 = 
ªgs
->
ebx
;

5365 
off_lo
 = 
ªgs
->
ecx
;

5366 
off_hi
 = 
ªgs
->
edx
;

5367 
Àn
 = 
ªgs
->
esi
;

5368 
advi˚
 = 
ªgs
->
edi
;

5369 
	`x86_sys_debug
(" fd=%d, off={0x%x, 0x%x},Üen=%d,ádvice=%d\n",

5370 
fd
, 
off_hi
, 
off_lo
, 
Àn
, 
advi˚
);

5374 
	}
}

5383 
	$x86_sys_exô_group_im∂
(
X86C⁄ãxt
 *
˘x
)

5385 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

5387 
°©us
;

5390 
°©us
 = 
ªgs
->
ebx
;

5391 
	`x86_sys_debug
(" sètus=%d\n", 
°©us
);

5394 
	`X86C⁄ãxtFöishGroup
(
˘x
, 
°©us
);

5396 
	}
}

5405 
	$x86_sys_£t_tid_addªss_im∂
(
X86C⁄ãxt
 *
˘x
)

5407 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

5409 
tid±r
;

5412 
tid±r
 = 
ªgs
->
ebx
;

5413 
	`x86_sys_debug
("Åid±r=0x%x\n", 
tid±r
);

5415 
˘x
->
˛ór_chûd_tid
 = 
tid±r
;

5416  
˘x
->
pid
;

5417 
	}
}

5426 
	$x86_sys_˛ock_gëªs_im∂
(
X86C⁄ãxt
 *
˘x
)

5428 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

5429 
mem_t
 *
mem
 = 
˘x
->mem;

5431 
˛k_id
;

5432 
¥es
;

5433 
tv_£c
;

5434 
tv_n£c
;

5437 
˛k_id
 = 
ªgs
->
ebx
;

5438 
¥es
 = 
ªgs
->
ecx
;

5439 
	`x86_sys_debug
(" clk_id=%d\n", 
˛k_id
);

5440 
	`x86_sys_debug
("Öªs=0x%x\n", 
¥es
);

5443 
tv_£c
 = 0;

5444 
tv_n£c
 = 1;

5445 
	`mem_wrôe
(
mem
, 
¥es
, 4, &
tv_£c
);

5446 
	`mem_wrôe
(
mem
, 
¥es
 + 4, 4, &
tv_n£c
);

5448 
	}
}

5457 
	ssim_°©fs64_t


5459 
	mty≥
;

5460 
	mbsize
;

5461 
	mblocks
;

5462 
	mb‰ì
;

5463 
	mbavaû
;

5464 
	mfûes
;

5465 
	mf‰ì
;

5466 
	mfsid
[2];

5467 
	m«mñí
;

5468 
	m‰size
;

5469 
	mÊags
;

5470 
	m•¨e
[4];

5471 } 
__©åibuã__
((
∑cked
));

5473 
	$sim_°©fs64_ho°_to_gue°
(
sim_°©fs64_t
 *
ho°
, 
°©fs
 *
gue°
)

5475 
	`M2S_HOST_GUEST_MATCH
((*
ho°
), 84);

5476 
	`mem£t
(
ho°
, 0, (*host));

5477 
ho°
->
ty≥
 = 
gue°
->
f_ty≥
;

5478 
ho°
->
bsize
 = 
gue°
->
f_bsize
;

5479 
ho°
->
blocks
 = 
gue°
->
f_blocks
;

5480 
ho°
->
b‰ì
 = 
gue°
->
f_b‰ì
;

5481 
ho°
->
bavaû
 = 
gue°
->
f_bavaû
;

5482 
ho°
->
fûes
 = 
gue°
->
f_fûes
;

5483 
ho°
->
f‰ì
 = 
gue°
->
f_f‰ì
;

5484 
	`mem˝y
(&
ho°
->
fsid
, &
gue°
->
f_fsid
, 
	`MIN
( host->fsid,  guest->f_fsid));

5485 
ho°
->
«mñí
 = 
gue°
->
f_«mñí
;

5486 
ho°
->
‰size
 = 
gue°
->
f_‰size
;

5487 
	}
}

5489 
	$x86_sys_°©fs64_im∂
(
X86C⁄ãxt
 *
˘x
)

5491 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

5492 
mem_t
 *
mem
 = 
˘x
->mem;

5494 
∑th_±r
;

5495 
sz
;

5496 
°©fs_buf_±r
;

5498 
∑th
[
MAX_PATH_SIZE
];

5500 
°©fs
 
°©fs_buf
;

5501 
sim_°©fs64_t
 
sim_°©fs_buf
;

5503 
Àngth
;

5504 
îr
;

5507 
∑th_±r
 = 
ªgs
->
ebx
;

5508 
sz
 = 
ªgs
->
ecx
;

5509 
°©fs_buf_±r
 = 
ªgs
->
edx
;

5510 
	`x86_sys_debug
("Öath_ptr=0x%x, sz=%d, statsf_buf_ptr=0x%x\n",

5511 
∑th_±r
, 
sz
, 
°©fs_buf_±r
);

5514 i‡(
sz
 ! 
sim_°©fs_buf
)

5515 
	`Áèl
("%s: incompatible size of 'statfs' structure (sz = %d != %d)\n",

5516 
__FUNCTION__
, 
sz
, (Ë 
sim_°©fs_buf
);

5519 
Àngth
 = 
	`mem_ªad_°rög
(
mem
, 
∑th_±r
,  
∑th
,Öath);

5520 i‡(
Àngth
 = 
∑th
)

5521 
	`Áèl
("%s: buf„∏toÿsmÆl", 
__FUNCTION__
);

5522 
	`x86_sys_debug
("Ö©h='%s'\n", 
∑th
);

5525 
îr
 = 
	`°©fs
(
∑th
, &
°©fs_buf
);

5526 i‡(
îr
 == -1)

5527  -
î∫o
;

5530 
	`sim_°©fs64_ho°_to_gue°
(&
sim_°©fs_buf
, &
°©fs_buf
);

5531 
	`mem_wrôe
(
mem
, 
°©fs_buf_±r
,  
sim_°©fs_buf
, &sim_statfs_buf);

5533 
	}
}

5541 
	$x86_sys_tgkûl_im∂
(
X86C⁄ãxt
 *
˘x
)

5543 
X86Emu
 *
emu
 = 
˘x
->emu;

5545 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

5547 
tgid
;

5548 
pid
;

5549 
sig
;

5551 
X86C⁄ãxt
 *
ãmp_˘x
;

5554 
tgid
 = 
ªgs
->
ebx
;

5555 
pid
 = 
ªgs
->
ecx
;

5556 
sig
 = 
ªgs
->
edx
;

5557 
	`x86_sys_debug
("Ågid=%d,Öid=%d, sig=%d (%s)\n",

5558 
tgid
, 
pid
, 
sig
, 
	`x86_sig«l_«me
(sig));

5561 i‡(
tgid
 == -1)

5562 
	`Áèl
("%s:Çot supported forÅgid = -1\n%s",

5563 
__FUNCTION__
, 
îr_x86_sys_nŸe
);

5566 
ãmp_˘x
 = 
	`X86EmuGëC⁄ãxt
(
emu
, 
pid
);

5567 i‡(!
ãmp_˘x
)

5568 
	`Áèl
("%s: invÆidÖid (%d)", 
__FUNCTION__
, 
pid
);

5571 
	`x86_sig£t_add
(&
ãmp_˘x
->
sig«l_mask_èbÀ
->
≥ndög
, 
sig
);

5572 
	`X86C⁄ãxtHo°ThªadSu•ídC™˚l
(
ãmp_˘x
);

5573 
	`X86EmuPro˚ssEvítsScheduÀ
(
emu
);

5574 
	`X86EmuPro˚ssEvíts
(
emu
);

5576 
	}
}

5585 
	$x86_sys_›í©_im∂
(
X86C⁄ãxt
 *
˘x
)

5587 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

5588 
mem_t
 *
mem
 = 
˘x
->mem;

5589 
x86_fûe_desc_t
 *
desc
;

5591 
∑th_±r
;

5593 
∑th
[
MAX_STRING_SIZE
];

5594 
fuŒ_∑th
[
MAX_STRING_SIZE
];

5595 
ãmp_∑th
[
MAX_STRING_SIZE
];

5596 
Êags_°r
[
MAX_STRING_SIZE
];

5598 
dúfd
;

5599 
Êags
;

5600 
mode
;

5601 
Àngth
;

5602 
ho°_fd
;

5605 
dúfd
 = 
ªgs
->
ebx
;

5606 
∑th_±r
 = 
ªgs
->
ecx
;

5607 
Êags
 = 
ªgs
->
edx
;

5608 
mode
 = 
ªgs
->
esi
;

5611 
	`°r_m≠_Êags
(&
sys_›í_Êags_m≠
, 
Êags
, 
Êags_°r
,  flags_str);

5612 
	`x86_sys_debug
(" dirfd=%d,Öath_ptr=0x%x, flags=0x%x %s, mode=0x%x\n",

5613 
dúfd
, 
∑th_±r
, 
Êags
, 
Êags_°r
, 
mode
);

5616 
Àngth
 = 
	`mem_ªad_°rög
(
mem
, 
∑th_±r
,  
∑th
,Öath);

5617 i‡(
Àngth
 = 
∑th
)

5618 
	`Áèl
("%s: buf„∏toÿsmÆl", 
__FUNCTION__
);

5619 
	`x86_sys_debug
("Ö©h='%s'\n", 
∑th
);

5626 i‡(
dúfd
 !-100 && 
∑th
[0] != '/')

5627 
	`Áèl
("%s: difd !AT_FDCWD wôhÑñ©ivê∑thÇŸ im∂emíãd", 
__FUNCTION__
);

5630 
	`X86C⁄ãxtGëFuŒP©h
(
˘x
, 
∑th
, 
fuŒ_∑th
,  full_path);

5631 
	`x86_sys_debug
(" fuŒ_∑th='%s'\n", 
fuŒ_∑th
);

5636 i‡(
	`ru¡ime_ªdúe˘
(
fuŒ_∑th
, 
ãmp_∑th
, Åemp_path))

5637 
	`¢¥ötf
(
fuŒ_∑th
,  fuŒ_∑th, "%s", 
ãmp_∑th
);

5640 i‡(!
	`°∫cmp
(
fuŒ_∑th
, "/proc/", 6))

5641 
	`Áèl
("%s: vútuÆ fûe†nŸ suµ‹ãd", 
__FUNCTION__
);

5644 
ho°_fd
 = 
	`›í
(
fuŒ_∑th
, 
Êags
, 
mode
);

5645 i‡(
ho°_fd
 == -1)

5646  -
î∫o
;

5649 
desc
 = 
	`x86_fûe_desc_èbÀ_íåy_√w
(
˘x
->
fûe_desc_èbÀ
,

5650 
fûe_desc_ªguœr
, 
ho°_fd
, 
fuŒ_∑th
, 
Êags
);

5651 
	`x86_sys_debug
(" file descriptor opened: guest_fd=%d, host_fd=%d\n",

5652 
desc
->
gue°_fd
, desc->
ho°_fd
);

5655  
desc
->
gue°_fd
;

5656 
	}
}

5665 
	$x86_sys_£t_robu°_li°_im∂
(
X86C⁄ãxt
 *
˘x
)

5667 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs;

5669 
hód
;

5670 
Àn
;

5673 
hód
 = 
ªgs
->
ebx
;

5674 
Àn
 = 
ªgs
->
ecx
;

5675 
	`x86_sys_debug
(" hód=0x%x,Üí=%d\n", 
hód
, 
Àn
);

5678 i‡(
Àn
 != 12)

5679 
	`Áèl
("%s:Çot supported forÜen != 12\n%s",

5680 
__FUNCTION__
, 
îr_x86_sys_nŸe
);

5683 
˘x
->
robu°_li°_hód
 = 
hód
;

5685 
	}
}

5694 
	#SYS_NOT_IMPL
(
NAME
) \

5695 
x86_sys_
##
NAME
##
	`_im∂
(
X86C⁄ãxt
 *
˘x
) \

5697 
X86Emu
 *
emu
 = 
˘x
->emu; \

5698 
x86_ªgs_t
 *
ªgs
 = 
˘x
->regs; \

5699 
	`Áèl
("%s: system callÇot implemented (code %d, inst %lld,Öid %d).\n%s", \

5700 
__FUNCTION__
, 
ªgs
->
óx
, 
	`asEmu
(
emu
)->
ö°ru˘i⁄s
, 
˘x
->
pid
, \

5701 
îr_x86_sys_nŸe
); \

5703 }

	)

5705 
	$SYS_NOT_IMPL
(
ª°¨t_sysˇŒ
)

5706 
	$SYS_NOT_IMPL
(
f‹k
)

5707 
	$SYS_NOT_IMPL
(
¸ót
)

5708 
	$SYS_NOT_IMPL
(
lök
)

5709 
	$SYS_NOT_IMPL
(
mknod
)

5710 
	$SYS_NOT_IMPL
(
lchown16
)

5711 
	$SYS_NOT_IMPL
(
ni_sysˇŒ_17
)

5712 
	$SYS_NOT_IMPL
(
°©
)

5713 
	$SYS_NOT_IMPL
(
mou¡
)

5714 
	$SYS_NOT_IMPL
(
ﬁdumou¡
)

5715 
	$SYS_NOT_IMPL
(
£tuid16
)

5716 
	$SYS_NOT_IMPL
(
gëuid16
)

5717 
	$SYS_NOT_IMPL
(
°ime
)

5718 
	$SYS_NOT_IMPL
(
±ø˚
)

5719 
	$SYS_NOT_IMPL
(
Æ¨m
)

5720 
	$SYS_NOT_IMPL
(
f°©
)

5721 
	$SYS_NOT_IMPL
(
∑u£
)

5722 
	$SYS_NOT_IMPL
(
ni_sysˇŒ_31
)

5723 
	$SYS_NOT_IMPL
(
ni_sysˇŒ_32
)

5724 
	$SYS_NOT_IMPL
(
ni˚
)

5725 
	$SYS_NOT_IMPL
(
ni_sysˇŒ_35
)

5726 
	$SYS_NOT_IMPL
(
sync
)

5727 
	$SYS_NOT_IMPL
(
rmdú
)

5728 
	$SYS_NOT_IMPL
(
ni_sysˇŒ_44
)

5729 
	$SYS_NOT_IMPL
(
£tgid16
)

5730 
	$SYS_NOT_IMPL
(
gëgid16
)

5731 
	$SYS_NOT_IMPL
(
sig«l
)

5732 
	$SYS_NOT_IMPL
(
gëeuid16
)

5733 
	$SYS_NOT_IMPL
(
gëegid16
)

5734 
	$SYS_NOT_IMPL
(
ac˘
)

5735 
	$SYS_NOT_IMPL
(
umou¡
)

5736 
	$SYS_NOT_IMPL
(
ni_sysˇŒ_53
)

5737 
	$SYS_NOT_IMPL
(
f˙é
)

5738 
	$SYS_NOT_IMPL
(
ni_sysˇŒ_56
)

5739 
	$SYS_NOT_IMPL
(
£çgid
)

5740 
	$SYS_NOT_IMPL
(
ni_sysˇŒ_58
)

5741 
	$SYS_NOT_IMPL
(
ﬁdu«me
)

5742 
	$SYS_NOT_IMPL
(
umask
)

5743 
	$SYS_NOT_IMPL
(
chroŸ
)

5744 
	$SYS_NOT_IMPL
(
u°©
)

5745 
	$SYS_NOT_IMPL
(
dup2
)

5746 
	$SYS_NOT_IMPL
(
gëpgΩ
)

5747 
	$SYS_NOT_IMPL
(
£tsid
)

5748 
	$SYS_NOT_IMPL
(
siga˘i⁄
)

5749 
	$SYS_NOT_IMPL
(
sgëmask
)

5750 
	$SYS_NOT_IMPL
(
s£tmask
)

5751 
	$SYS_NOT_IMPL
(
£åeuid16
)

5752 
	$SYS_NOT_IMPL
(
£åegid16
)

5753 
	$SYS_NOT_IMPL
(
sigsu•íd
)

5754 
	$SYS_NOT_IMPL
(
sig≥ndög
)

5755 
	$SYS_NOT_IMPL
(
£tho°«me
)

5756 
	$SYS_NOT_IMPL
(
ﬁd_gëæimô
)

5757 
	$SYS_NOT_IMPL
(
£âimeofday
)

5758 
	$SYS_NOT_IMPL
(
gëgroups16
)

5759 
	$SYS_NOT_IMPL
(
£tgroups16
)

5760 
	$SYS_NOT_IMPL
(
ﬁd£À˘
)

5761 
	$SYS_NOT_IMPL
(
symlök
)

5762 
	$SYS_NOT_IMPL
(
l°©
)

5763 
	$SYS_NOT_IMPL
(
u£lib
)

5764 
	$SYS_NOT_IMPL
(
sw≠⁄
)

5765 
	$SYS_NOT_IMPL
(
ªboŸ
)

5766 
	$SYS_NOT_IMPL
(
ªaddú
)

5767 
	$SYS_NOT_IMPL
(
åunˇã
)

5768 
	$SYS_NOT_IMPL
(
·runˇã
)

5769 
	$SYS_NOT_IMPL
(
fchown16
)

5770 
	$SYS_NOT_IMPL
(
gë¥i‹ôy
)

5771 
	$SYS_NOT_IMPL
(
£çri‹ôy
)

5772 
	$SYS_NOT_IMPL
(
ni_sysˇŒ_98
)

5773 
	$SYS_NOT_IMPL
(
f°©fs
)

5774 
	$SYS_NOT_IMPL
(
i›îm
)

5775 
	$SYS_NOT_IMPL
(
sy¶og
)

5776 
	$SYS_NOT_IMPL
(
√w°©
)

5777 
	$SYS_NOT_IMPL
(
√wl°©
)

5778 
	$SYS_NOT_IMPL
(
√wf°©
)

5779 
	$SYS_NOT_IMPL
(
u«me
)

5780 
	$SYS_NOT_IMPL
(
i›l
)

5781 
	$SYS_NOT_IMPL
(
vh™gup
)

5782 
	$SYS_NOT_IMPL
(
ni_sysˇŒ_112
)

5783 
	$SYS_NOT_IMPL
(
vm86ﬁd
)

5784 
	$SYS_NOT_IMPL
(
waô4
)

5785 
	$SYS_NOT_IMPL
(
sw≠off
)

5786 
	$SYS_NOT_IMPL
(
sysöfo
)

5787 
	$SYS_NOT_IMPL
(
ùc
)

5788 
	$SYS_NOT_IMPL
(
fsync
)

5789 
	$SYS_NOT_IMPL
(
£tdomaö«me
)

5790 
	$SYS_NOT_IMPL
(
modify_ldt
)

5791 
	$SYS_NOT_IMPL
(
adjtimex
)

5792 
	$SYS_NOT_IMPL
(
sig¥ocmask
)

5793 
	$SYS_NOT_IMPL
(
ni_sysˇŒ_127
)

5794 
	$SYS_NOT_IMPL
(
öô_moduÀ
)

5795 
	$SYS_NOT_IMPL
(
dñëe_moduÀ
)

5796 
	$SYS_NOT_IMPL
(
ni_sysˇŒ_130
)

5797 
	$SYS_NOT_IMPL
(
quŸa˘l
)

5798 
	$SYS_NOT_IMPL
(
gëpgid
)

5799 
	$SYS_NOT_IMPL
(
fchdú
)

5800 
	$SYS_NOT_IMPL
(
bdÊush
)

5801 
	$SYS_NOT_IMPL
(
sysfs
)

5802 
	$SYS_NOT_IMPL
(
≥rs⁄Æôy
)

5803 
	$SYS_NOT_IMPL
(
ni_sysˇŒ_137
)

5804 
	$SYS_NOT_IMPL
(
£tfsuid16
)

5805 
	$SYS_NOT_IMPL
(
£tfsgid16
)

5806 
	$SYS_NOT_IMPL
(
Êock
)

5807 
	$SYS_NOT_IMPL
(
ªadv
)

5808 
	$SYS_NOT_IMPL
(
gësid
)

5809 
	$SYS_NOT_IMPL
(
fd©async
)

5810 
	$SYS_NOT_IMPL
(
mlock
)

5811 
	$SYS_NOT_IMPL
(
mu∆ock
)

5812 
	$SYS_NOT_IMPL
(
mlockÆl
)

5813 
	$SYS_NOT_IMPL
(
mu∆ockÆl
)

5814 
	$SYS_NOT_IMPL
(
sched_£tscheduÀr
)

5815 
	$SYS_NOT_IMPL
(
sched_yõld
)

5816 
	$SYS_NOT_IMPL
(
sched_º_gë_öãrvÆ
)

5817 
	$SYS_NOT_IMPL
(
£åesuid16
)

5818 
	$SYS_NOT_IMPL
(
gëªsuid16
)

5819 
	$SYS_NOT_IMPL
(
vm86
)

5820 
	$SYS_NOT_IMPL
(
ni_sysˇŒ_167
)

5821 
	$SYS_NOT_IMPL
(
nfs£rv˘l
)

5822 
	$SYS_NOT_IMPL
(
£åesgid16
)

5823 
	$SYS_NOT_IMPL
(
gëªsgid16
)

5824 
	$SYS_NOT_IMPL
(
¥˘l
)

5825 
	$SYS_NOT_IMPL
(
π_sigªtu∫
)

5826 
	$SYS_NOT_IMPL
(
π_sig≥ndög
)

5827 
	$SYS_NOT_IMPL
(
π_sigtimedwaô
)

5828 
	$SYS_NOT_IMPL
(
π_sigqueueöfo
)

5829 
	$SYS_NOT_IMPL
(
¥ód64
)

5830 
	$SYS_NOT_IMPL
(
pwrôe64
)

5831 
	$SYS_NOT_IMPL
(
chown16
)

5832 
	$SYS_NOT_IMPL
(
ˇpgë
)

5833 
	$SYS_NOT_IMPL
(
ˇp£t
)

5834 
	$SYS_NOT_IMPL
(
sigÆt°ack
)

5835 
	$SYS_NOT_IMPL
(
£ndfûe
)

5836 
	$SYS_NOT_IMPL
(
ni_sysˇŒ_188
)

5837 
	$SYS_NOT_IMPL
(
ni_sysˇŒ_189
)

5838 
	$SYS_NOT_IMPL
(
vf‹k
)

5839 
	$SYS_NOT_IMPL
(
åunˇã64
)

5840 
	$SYS_NOT_IMPL
(
lchown
)

5841 
	$SYS_NOT_IMPL
(
£åeuid
)

5842 
	$SYS_NOT_IMPL
(
£åegid
)

5843 
	$SYS_NOT_IMPL
(
gëgroups
)

5844 
	$SYS_NOT_IMPL
(
£tgroups
)

5845 
	$SYS_NOT_IMPL
(
fchown
)

5846 
	$SYS_NOT_IMPL
(
£åesuid
)

5847 
	$SYS_NOT_IMPL
(
gëªsuid
)

5848 
	$SYS_NOT_IMPL
(
£åesgid
)

5849 
	$SYS_NOT_IMPL
(
gëªsgid
)

5850 
	$SYS_NOT_IMPL
(
£tuid
)

5851 
	$SYS_NOT_IMPL
(
£tgid
)

5852 
	$SYS_NOT_IMPL
(
£tfsuid
)

5853 
	$SYS_NOT_IMPL
(
£tfsgid
)

5854 
	$SYS_NOT_IMPL
(
pivŸ_roŸ
)

5855 
	$SYS_NOT_IMPL
(
möc‹e
)

5856 
	$SYS_NOT_IMPL
(
ni_sysˇŒ_222
)

5857 
	$SYS_NOT_IMPL
(
ni_sysˇŒ_223
)

5858 
	$SYS_NOT_IMPL
(
ªadahód
)

5859 
	$SYS_NOT_IMPL
(
£tx©å
)

5860 
	$SYS_NOT_IMPL
(
l£tx©å
)

5861 
	$SYS_NOT_IMPL
(
f£tx©å
)

5862 
	$SYS_NOT_IMPL
(
gëx©å
)

5863 
	$SYS_NOT_IMPL
(
lgëx©å
)

5864 
	$SYS_NOT_IMPL
(
fgëx©å
)

5865 
	$SYS_NOT_IMPL
(
li°x©å
)

5866 
	$SYS_NOT_IMPL
(
Œi°x©å
)

5867 
	$SYS_NOT_IMPL
(
Êi°x©å
)

5868 
	$SYS_NOT_IMPL
(
ªmovex©å
)

5869 
	$SYS_NOT_IMPL
(
Ãemovex©å
)

5870 
	$SYS_NOT_IMPL
(
‰emovex©å
)

5871 
	$SYS_NOT_IMPL
(
tkûl
)

5872 
	$SYS_NOT_IMPL
(
£ndfûe64
)

5873 
	$SYS_NOT_IMPL
(
gë_thªad_¨ó
)

5874 
	$SYS_NOT_IMPL
(
io_£tup
)

5875 
	$SYS_NOT_IMPL
(
io_de°roy
)

5876 
	$SYS_NOT_IMPL
(
io_gëevíts
)

5877 
	$SYS_NOT_IMPL
(
io_submô
)

5878 
	$SYS_NOT_IMPL
(
io_ˇn˚l
)

5879 
	$SYS_NOT_IMPL
(
ni_sysˇŒ_251
)

5880 
	$SYS_NOT_IMPL
(
lookup_dcookõ
)

5881 
	$SYS_NOT_IMPL
(
ïﬁl_¸óã
)

5882 
	$SYS_NOT_IMPL
(
ïﬁl_˘l
)

5883 
	$SYS_NOT_IMPL
(
ïﬁl_waô
)

5884 
	$SYS_NOT_IMPL
(
ªm≠_fûe_∑ges
)

5885 
	$SYS_NOT_IMPL
(
timî_¸óã
)

5886 
	$SYS_NOT_IMPL
(
timî_£âime
)

5887 
	$SYS_NOT_IMPL
(
timî_gëtime
)

5888 
	$SYS_NOT_IMPL
(
timî_gëovîrun
)

5889 
	$SYS_NOT_IMPL
(
timî_dñëe
)

5890 
	$SYS_NOT_IMPL
(
˛ock_£âime
)

5891 
	$SYS_NOT_IMPL
(
˛ock_«no¶ìp
)

5892 
	$SYS_NOT_IMPL
(
f°©fs64
)

5893 
	$SYS_NOT_IMPL
(
utimes
)

5894 
	$SYS_NOT_IMPL
(
Ádvi£64_64
)

5895 
	$SYS_NOT_IMPL
(
ni_sysˇŒ_273
)

5896 
	$SYS_NOT_IMPL
(
mböd
)

5897 
	$SYS_NOT_IMPL
(
gë_mempﬁicy
)

5898 
	$SYS_NOT_IMPL
(
£t_mempﬁicy
)

5899 
	$SYS_NOT_IMPL
(
mq_›í
)

5900 
	$SYS_NOT_IMPL
(
mq_u∆ök
)

5901 
	$SYS_NOT_IMPL
(
mq_timed£nd
)

5902 
	$SYS_NOT_IMPL
(
mq_timedª˚ive
)

5903 
	$SYS_NOT_IMPL
(
mq_nŸify
)

5904 
	$SYS_NOT_IMPL
(
mq_gë£èâr
)

5905 
	$SYS_NOT_IMPL
(
kexec_lﬂd
)

5906 
	$SYS_NOT_IMPL
(
waôid
)

5907 
	$SYS_NOT_IMPL
(
ni_sysˇŒ_285
)

5908 
	$SYS_NOT_IMPL
(
add_key
)

5909 
	$SYS_NOT_IMPL
(
ªque°_key
)

5910 
	$SYS_NOT_IMPL
(
key˘l
)

5911 
	$SYS_NOT_IMPL
(
i›rio_£t
)

5912 
	$SYS_NOT_IMPL
(
i›rio_gë
)

5913 
	$SYS_NOT_IMPL
(
öŸify_öô
)

5914 
	$SYS_NOT_IMPL
(
öŸify_add_w©ch
)

5915 
	$SYS_NOT_IMPL
(
öŸify_rm_w©ch
)

5916 
	$SYS_NOT_IMPL
(
migøã_∑ges
)

5917 
	$SYS_NOT_IMPL
(
mkdú©
)

5918 
	$SYS_NOT_IMPL
(
mknod©
)

5919 
	$SYS_NOT_IMPL
(
fchow«t
)

5920 
	$SYS_NOT_IMPL
(
futimeßt
)

5921 
	$SYS_NOT_IMPL
(
f°©©64
)

5922 
	$SYS_NOT_IMPL
(
u∆ök©
)

5923 
	$SYS_NOT_IMPL
(
ª«mót
)

5924 
	$SYS_NOT_IMPL
(
lök©
)

5925 
	$SYS_NOT_IMPL
(
symlök©
)

5926 
	$SYS_NOT_IMPL
(
ªadlök©
)

5927 
	$SYS_NOT_IMPL
(
fchmod©
)

5928 
	$SYS_NOT_IMPL
(
Ác˚sßt
)

5929 
	$SYS_NOT_IMPL
(
p£À˘6
)

5930 
	$SYS_NOT_IMPL
(
µﬁl
)

5931 
	$SYS_NOT_IMPL
(
unsh¨e
)

5932 
	$SYS_NOT_IMPL
(
gë_robu°_li°
)

5933 
	$SYS_NOT_IMPL
(
•li˚
)

5934 
	$SYS_NOT_IMPL
(
sync_fûe_ønge
)

5935 
	$SYS_NOT_IMPL
(
ãe
)

5936 
	$SYS_NOT_IMPL
(
vm•li˚
)

5937 
	$SYS_NOT_IMPL
(
move_∑ges
)

5938 
	$SYS_NOT_IMPL
(
gë˝u
)

5939 
	$SYS_NOT_IMPL
(
ïﬁl_pwaô
)

5940 
	$SYS_NOT_IMPL
(
utimíßt
)

5941 
	$SYS_NOT_IMPL
(
sig«lfd
)

5942 
	$SYS_NOT_IMPL
(
timîfd
)

5943 
	$SYS_NOT_IMPL
(
evítfd
)

5944 
	`SYS_NOT_IMPL
(
ÁŒoˇã
)

	@emu/syscall.h

20 #i‚de‡
ARCH_X86_EMU_SYSCALL_H


21 
	#ARCH_X86_EMU_SYSCALL_H


	)

23 
	~<°dio.h
>

25 
	~<lib/utû/˛ass.h
>

34 
X86C⁄ãxtSysˇŒ
(
X86C⁄ãxt
 *
£lf
);

43 
	#x86_sys_debug
(...Ë
	`debug
(
x86_sys_debug_ˇãg‹y
, 
__VA_ARGS__
)

	)

44 
	#x86_sys_debug_buf„r
(...Ë
	`debug_buf„r
(
x86_sys_debug_ˇãg‹y
, 
__VA_ARGS__
)

	)

45 
x86_sys_debug_ˇãg‹y
;

47 
x86_sys_dump_°©s
(
FILE
 *
f
);

	@emu/uinst.c

21 
	~<¨ch/comm⁄/¨ch.h
>

22 
	~<lib/mh™dÀ/mh™dÀ.h
>

23 
	~<lib/utû/debug.h
>

24 
	~<lib/utû/li°.h
>

25 
	~<lib/utû/misc.h
>

26 
	~<lib/utû/°rög.h
>

28 
	~"c⁄ãxt.h
"

29 
	~"uö°.h
"

36 
li°_t
 *
	gx86_uö°_li°
;

37 
	gx86_uö°_a˘ive
;

41 *
	gx86_uö°_dï_«me
[] =

97 
°r_m≠_t
 
	gx86_uö°_dï_m≠
 =

100 { "*RM8*", 
x86_dï_rm8
 },

101 { "*RM16*", 
x86_dï_rm16
 },

102 { "*RM32*", 
x86_dï_rm32
 },

104 { "*IR8*", 
x86_dï_ú8
 },

105 { "*IR16*", 
x86_dï_ú16
 },

106 { "*IR32*", 
x86_dï_ú32
 },

108 { "*R8*", 
x86_dï_r8
 },

109 { "*R16*", 
x86_dï_r16
 },

110 { "*R32*", 
x86_dï_r32
 },

112 { "*EASEG*", 
x86_dï_ó£g
 },

113 { "*EABAS*", 
x86_dï_óbas
 },

114 { "*EAIDX*", 
x86_dï_óidx
 },

116 { "*STI*", 
x86_dï_°i
 },

122 
x86_uö°_öfo_t
 
	gx86_uö°_öfo
[
x86_uö°_›code_cou¡
] =

127 { "move", 
X86_UINST_INT
 },

128 { "add", 
X86_UINST_INT
 },

129 { "sub", 
X86_UINST_INT
 },

130 { "mu…", 
X86_UINST_INT
 },

131 { "div", 
X86_UINST_INT
 },

132 { "efÁddr", 
X86_UINST_INT
 },

134 { "™d", 
X86_UINST_LOGIC
 },

135 { "‹", 
X86_UINST_LOGIC
 },

136 { "x‹", 
X86_UINST_LOGIC
 },

137 { "nŸ", 
X86_UINST_LOGIC
 },

138 { "shi·", 
X86_UINST_LOGIC
 },

139 { "sign", 
X86_UINST_LOGIC
 },

141 { "fmove", 
X86_UINST_FP
 },

142 { "fsign", 
X86_UINST_FP
 },

143 { "‰ound", 
X86_UINST_FP
 },

145 { "Ádd", 
X86_UINST_FP
 },

146 { "fsub", 
X86_UINST_FP
 },

147 { "fcomp", 
X86_UINST_FP
 },

148 { "fmu…", 
X86_UINST_FP
 },

149 { "fdiv", 
X86_UINST_FP
 },

151 { "„xp", 
X86_UINST_FP
 },

152 { "Êog", 
X86_UINST_FP
 },

153 { "fsö", 
X86_UINST_FP
 },

154 { "fcos", 
X86_UINST_FP
 },

155 { "fsöcos", 
X86_UINST_FP
 },

156 { "·™", 
X86_UINST_FP
 },

157 { "Áèn", 
X86_UINST_FP
 },

158 { "fsqπ", 
X86_UINST_FP
 },

160 { "Âush", 
X86_UINST_FP
 },

161 { "Â›", 
X86_UINST_FP
 },

163 { "x-™d", 
X86_UINST_XMM
 },

164 { "x-‹", 
X86_UINST_XMM
 },

165 { "x-x‹", 
X86_UINST_XMM
 },

166 { "x-nŸ", 
X86_UINST_XMM
 },

167 { "x-«nd", 
X86_UINST_XMM
 },

168 { "x-shi·", 
X86_UINST_XMM
 },

169 { "x-sign", 
X86_UINST_XMM
 },

171 { "x-add", 
X86_UINST_XMM
 },

172 { "x-sub", 
X86_UINST_XMM
 },

173 { "x-comp", 
X86_UINST_XMM
 },

174 { "x-mu…", 
X86_UINST_XMM
 },

175 { "x-div", 
X86_UINST_XMM
 },

177 { "x-Ádd", 
X86_UINST_XMM
 },

178 { "x-fsub", 
X86_UINST_XMM
 },

179 { "x-fcomp", 
X86_UINST_XMM
 },

180 { "x-fmu…", 
X86_UINST_XMM
 },

181 { "x-fdiv", 
X86_UINST_XMM
 },

183 { "x-fsqπ", 
X86_UINST_XMM
 },

185 { "x-move", 
X86_UINST_XMM
 },

186 { "x-shuf", 
X86_UINST_XMM
 },

187 { "x-c⁄v", 
X86_UINST_XMM
 },

189 { "lﬂd", 
X86_UINST_MEM
 },

190 { "°‹e", 
X86_UINST_MEM
 },

191 { "¥e„tch", 
X86_UINST_MEM
 },

193 { "ˇŒ", 
X86_UINST_CTRL
 | 
X86_UINST_UNCOND
 },

194 { "ªt", 
X86_UINST_CTRL
 | 
X86_UINST_UNCOND
 },

195 { "jump", 
X86_UINST_CTRL
 | 
X86_UINST_UNCOND
 },

196 { "bønch", 
X86_UINST_CTRL
 | 
X86_UINST_COND
 },

197 { "ibønch", 
X86_UINST_CTRL
 | 
X86_UINST_COND
 },

213 
	gx86_uö°_efÁddr_emôãd
;

219 
	$x86_uö°_mem_dï_size
(
x86_uö°_t
 *
uö°
, 
ödex
,

220 
X86C⁄ãxt
 *
˘x
, 
x86_dï_t
 *
mem_ªguœr_dï
)

222 
dï
;

224 
	`as£π
(
ödex
 >0 && index < 
X86_UINST_MAX_DEPS
);

225 
dï
 = 
uö°
->dï[
ödex
];

227 
dï
)

230 
x86_dï_rm8
:

231 
x86_dï_rm16
:

232 
x86_dï_rm32
:

236 i‡(
˘x
->
ö°
.
modrm_mod
 == 3)

239 
	`PTR_ASSIGN
(
mem_ªguœr_dï
, 
x86_dï_d©a
);

240  1 << (
dï
 - 
x86_dï_rm8
);

242 
x86_dï_mem8
:

243 
x86_dï_mem16
:

244 
x86_dï_mem32
:

245 
x86_dï_mem64
:

246 
x86_dï_mem128
:

248 
	`PTR_ASSIGN
(
mem_ªguœr_dï
, 
x86_dï_d©a
);

249  1 << (
dï
 - 
x86_dï_mem8
);

251 
x86_dï_mem80
:

253 
	`PTR_ASSIGN
(
mem_ªguœr_dï
, 
x86_dï_d©a
);

256 
x86_dï_xmmm32
:

257 
x86_dï_xmmm64
:

258 
x86_dï_xmmm128
:

262 if(
˘x
->
ö°
.
modrm_mod
 == 3)

265 
	`PTR_ASSIGN
(
mem_ªguœr_dï
, 
x86_dï_xmm_d©a
);

266  1 << (
dï
 - 
x86_dï_xmmm32
 + 2);

271 
	}
}

274 
	$x86_uö°_emô_efÁddr
(
x86_uö°_t
 *
uö°
, 
ödex
, 
X86C⁄ãxt
 *
˘x
)

276 
x86_uö°_t
 *
√w_uö°
;

279 i‡(!
	`x86_uö°_mem_dï_size
(
uö°
, 
ödex
, 
˘x
, 
NULL
))

283 
x86_uö°_efÁddr_emôãd
 = 1;

286 
√w_uö°
 = 
	`x86_uö°_¸óã
();

287 
√w_uö°
->
›code
 = 
x86_uö°_efÁddr
;

288 
√w_uö°
->
idï
[0] = 
˘x
->
ö°
.
£gmít
 ? ctx->ö°.£gmíà- 
x86_ö°_ªg_es
 + 
x86_dï_es
 : 
x86_dï_n⁄e
;

289 
√w_uö°
->
idï
[1] = 
˘x
->
ö°
.
ó_ba£
 ? ctx->ö°.ó_ba£ - 
x86_ö°_ªg_óx
 + 
x86_dï_óx
 : 
x86_dï_n⁄e
;

290 
√w_uö°
->
idï
[2] = 
˘x
->
ö°
.
ó_ödex
 ? ctx->ö°.ó_ödex - 
x86_ö°_ªg_óx
 + 
x86_dï_óx
 : 
x86_dï_n⁄e
;

291 
√w_uö°
->
odï
[0] = 
x86_dï_ó
;

292 
	`li°_add
(
x86_uö°_li°
, 
√w_uö°
);

293 
	}
}

296 
	$x86_uö°_∑r£_dï
(
x86_uö°_t
 *
uö°
, 
ödex
, 
X86C⁄ãxt
 *
˘x
)

298 
dï
;

301 
	`as£π
(
ödex
 >0 && index < 
X86_UINST_MAX_DEPS
);

302 
dï
 = 
uö°
->dï[
ödex
];

303 i‡(
	`X86_DEP_IS_VALID
(
dï
))

307 
dï
) {

309 
x86_dï_n⁄e
:

313 
x86_dï_ó£g
:

315 
uö°
->
dï
[
ödex
] = 
˘x
->
ö°
.
£gmít
 ? ctx->inst.segment

316 - 
x86_ö°_ªg_es
 + 
x86_dï_es
 : 
x86_dï_n⁄e
;

319 
x86_dï_óbas
:

321 
uö°
->
dï
[
ödex
] = 
˘x
->
ö°
.
ó_ba£
 ? ctx->inst.ea_base

322 - 
x86_ö°_ªg_óx
 + 
x86_dï_óx
 : 
x86_dï_n⁄e
;

325 
x86_dï_óidx
:

327 
uö°
->
dï
[
ödex
] = 
˘x
->
ö°
.
ó_ödex
 ? ctx->inst.ea_index

328 - 
x86_ö°_ªg_óx
 + 
x86_dï_óx
 : 
x86_dï_n⁄e
;

333 
x86_dï_rm8
:

335 
	`as£π
(
˘x
->
ö°
.
modrm_mod
 == 3);

336 
uö°
->
dï
[
ödex
] = 
˘x
->
ö°
.
modrm_rm
 < 4 ? 
x86_dï_óx
 + ctx->inst.modrm_rm

337 : 
x86_dï_óx
 + 
˘x
->
ö°
.
modrm_rm
 - 4;

340 
x86_dï_rm16
:

341 
x86_dï_rm32
:

343 
	`as£π
(
˘x
->
ö°
.
modrm_mod
 == 3);

344 
uö°
->
dï
[
ödex
] = 
x86_dï_óx
 + 
˘x
->
ö°
.
modrm_rm
;

347 
x86_dï_r8
:

349 
uö°
->
dï
[
ödex
] = 
˘x
->
ö°
.
ªg
 < 4 ? 
x86_dï_óx
 + ctx->inst.reg

350 : 
x86_dï_óx
 + 
˘x
->
ö°
.
ªg
 - 4;

353 
x86_dï_r16
:

354 
x86_dï_r32
:

356 
uö°
->
dï
[
ödex
] = 
x86_dï_óx
 + 
˘x
->
ö°
.
ªg
;

359 
x86_dï_ú8
:

361 
uö°
->
dï
[
ödex
] = 
˘x
->
ö°
.
›ödex
 < 4 ? 
x86_dï_óx
 + ctx->inst.opindex

362 : 
x86_dï_óx
 + 
˘x
->
ö°
.
›ödex
 - 4;

365 
x86_dï_ú16
:

366 
x86_dï_ú32
:

368 
uö°
->
dï
[
ödex
] = 
x86_dï_óx
 + 
˘x
->
ö°
.
›ödex
;

371 
x86_dï_§eg
:

373 
uö°
->
dï
[
ödex
] = 
x86_dï_es
 + 
˘x
->
ö°
.
ªg
;

376 
x86_dï_°i
:

378 
uö°
->
dï
[
ödex
] = 
x86_dï_°0
 + 
˘x
->
ö°
.
›ödex
;

381 
x86_dï_xmmm32
:

382 
x86_dï_xmmm64
:

383 
x86_dï_xmmm128
:

385 
	`as£π
(
˘x
->
ö°
.
modrm_mod
 == 3);

386 
uö°
->
dï
[
ödex
] = 
x86_dï_xmm0
 + 
˘x
->
ö°
.
modrm_rm
;

389 
x86_dï_xmm
:

391 
uö°
->
dï
[
ödex
] = 
x86_dï_xmm0
 + 
˘x
->
ö°
.
ªg
;

396 
	`∑nic
("%s: unknow¿dï: %d\n", 
__FUNCTION__
, 
dï
);

398 
	}
}

403 
	$x86_uö°_add_idï
(
x86_uö°_t
 *
uö°
, 
x86_dï_t
 
dï
)

405 
i
;

407 
i
 = 0; i < 
X86_UINST_MAX_IDEPS
; i++)

408 i‡(!
uö°
->
idï
[
i
])

410 i‡(
i
 =
X86_UINST_MAX_IDEPS
)

412 
uö°
->
idï
[
i
] = 
dï
;

414 
	}
}

417 
	$x86_uö°_∑r£_odï
(
x86_uö°_t
 *
uö°
, 
ödex
, 
X86C⁄ãxt
 *
˘x
)

419 
x86_uö°_t
 *
√w_uö°
;

420 
x86_dï_t
 
mem_ªguœr_dï
;

421 
mem_dï_size
;

422 
dï
;

425 
	`as£π
(
ödex
 >
X86_UINST_MAX_IDEPS
 && index < 
X86_UINST_MAX_DEPS
);

426 
dï
 = 
uö°
->dï[
ödex
];

427 i‡(!
dï
)

431 
mem_dï_size
 = 
	`x86_uö°_mem_dï_size
(
uö°
, 
ödex
, 
˘x
, &
mem_ªguœr_dï
);

432 i‡(
mem_dï_size
)

435 i‡(
uö°
->
›code
 =
x86_uö°_move
)

438 i‡(
	`x86_uö°_add_idï
(
uö°
, 
x86_dï_ó
))

440 
uö°
->
›code
 = 
x86_uö°_°‹e
;

441 
uö°
->
dï
[
ödex
] = 
x86_dï_n⁄e
;

442 
uö°
->
addªss
 = 
˘x
->
ef„˘ive_addªss
;

443 
uö°
->
size
 = 
mem_dï_size
;

449 
√w_uö°
 = 
	`x86_uö°_¸óã
();

450 
√w_uö°
->
›code
 = 
x86_uö°_°‹e
;

451 
√w_uö°
->
idï
[0] = 
x86_dï_ó
;

452 
√w_uö°
->
idï
[1] = 
mem_ªguœr_dï
;

453 
√w_uö°
->
addªss
 = 
˘x
->
ef„˘ive_addªss
;

454 
√w_uö°
->
size
 = 
mem_dï_size
;

455 
	`li°_add
(
x86_uö°_li°
, 
√w_uö°
);

458 
uö°
->
dï
[
ödex
] = 
mem_ªguœr_dï
;

463 
	`x86_uö°_∑r£_dï
(
uö°
, 
ödex
, 
˘x
);

464 
	}
}

467 
	$x86_uö°_∑r£_idï
(
x86_uö°_t
 *
uö°
, 
ödex
, 
X86C⁄ãxt
 *
˘x
)

469 
x86_uö°_t
 *
√w_uö°
;

470 
x86_dï_t
 
mem_ªguœr_dï
;

471 
mem_dï_size
;

472 
dï
;

475 
	`as£π
(
ödex
 >0 && index < 
X86_UINST_MAX_IDEPS
);

476 
dï
 = 
uö°
->dï[
ödex
];

477 i‡(!
dï
)

481 
mem_dï_size
 = 
	`x86_uö°_mem_dï_size
(
uö°
, 
ödex
, 
˘x
, &
mem_ªguœr_dï
);

482 i‡(
mem_dï_size
)

486 i‡(
uö°
->
›code
 =
x86_uö°_move
)

488 
uö°
->
›code
 = 
x86_uö°_lﬂd
;

489 
uö°
->
dï
[
ödex
] = 
x86_dï_ó
;

490 
uö°
->
addªss
 = 
˘x
->
ef„˘ive_addªss
;

491 
uö°
->
size
 = 
mem_dï_size
;

496 
√w_uö°
 = 
	`x86_uö°_¸óã
();

497 
√w_uö°
->
›code
 = 
x86_uö°_lﬂd
;

498 
√w_uö°
->
idï
[0] = 
x86_dï_ó
;

499 
√w_uö°
->
odï
[0] = 
mem_ªguœr_dï
;

500 
√w_uö°
->
addªss
 = 
˘x
->
ef„˘ive_addªss
;

501 
√w_uö°
->
size
 = 
mem_dï_size
;

502 
	`li°_add
(
x86_uö°_li°
, 
√w_uö°
);

505 
uö°
->
dï
[
ödex
] = 
mem_ªguœr_dï
;

510 
	`x86_uö°_∑r£_dï
(
uö°
, 
ödex
, 
˘x
);

511 
	}
}

514 *
	$x86_uö°_dï_«me_gë
(
dï
)

516 i‡(
	`X86_DEP_IS_VALID
(
dï
))

517  
x86_uö°_dï_«me
[
dï
];

519  
	`°r_m≠_vÆue
(&
x86_uö°_dï_m≠
, 
dï
);

520 
	}
}

530 
	$x86_uö°_öô
()

532 
x86_uö°_li°
 = 
	`li°_¸óã
();

533 
x86_uö°_a˘ive
 = 
¨ch_x86
->
sim_köd
 =
¨ch_sim_köd_dëaûed
;

534 
	}
}

537 
	$x86_uö°_d⁄e
()

539 
	`x86_uö°_˛ór
();

540 
	`li°_‰ì
(
x86_uö°_li°
);

541 
	}
}

544 
x86_uö°_t
 *
	$x86_uö°_¸óã
()

546 
x86_uö°_t
 *
uö°
;

548 
uö°
 = 
	`xˇŒoc
(1, (
x86_uö°_t
));

549 
uö°
->
idï
 = uö°->
dï
;

550 
uö°
->
odï
 = &uö°->
dï
[
X86_UINST_MAX_IDEPS
];

551  
uö°
;

552 
	}
}

555 
	$x86_uö°_‰ì
(
x86_uö°_t
 *
uö°
)

557 
	`‰ì
(
uö°
);

558 
	}
}

561 
	$__x86_uö°_√w_mem
(
X86C⁄ãxt
 *
˘x
,

562 
x86_uö°_›code_t
 
›code
, 
addªss
, 
size
,

563 
x86_dï_t
 
idï0
, x86_dï_à
idï1
, x86_dï_à
idï2
,

564 
x86_dï_t
 
odï0
, x86_dï_à
odï1
, x86_dï_à
odï2
,

565 
x86_dï_t
 
odï3
)

567 
x86_uö°_t
 *
uö°
;

568 
i
;

571 
	`as£π
(
¨ch_x86
->
sim_köd
 =
¨ch_sim_köd_dëaûed
);

572 
uö°
 = 
	`x86_uö°_¸óã
();

573 
uö°
->
›code
 = opcode;

574 
uö°
->
idï
[0] = 
idï0
;

575 
uö°
->
idï
[1] = 
idï1
;

576 
uö°
->
idï
[2] = 
idï2
;

577 
uö°
->
odï
[0] = 
odï0
;

578 
uö°
->
odï
[1] = 
odï1
;

579 
uö°
->
odï
[2] = 
odï2
;

580 
uö°
->
odï
[3] = 
odï3
;

581 
uö°
->
addªss
 =áddress;

582 
uö°
->
size
 = size;

585 
i
 = 0; !
x86_uö°_efÁddr_emôãd
 && i < 
X86_UINST_MAX_DEPS
; i++)

586 
	`x86_uö°_emô_efÁddr
(
uö°
, 
i
, 
˘x
);

589 
i
 = 0; i < 
X86_UINST_MAX_IDEPS
; i++)

590 
	`x86_uö°_∑r£_idï
(
uö°
, 
i
, 
˘x
);

593 
	`li°_add
(
x86_uö°_li°
, 
uö°
);

596 
i
 = 0; i < 
X86_UINST_MAX_ODEPS
; i++)

597 
	`x86_uö°_∑r£_odï
(
uö°
, 
i
 + 
X86_UINST_MAX_IDEPS
, 
˘x
);

598 
	}
}

601 
	$__x86_uö°_√w
(
X86C⁄ãxt
 *
˘x
,

602 
x86_uö°_›code_t
 
›code
, 
x86_dï_t
 
idï0
, x86_dï_à
idï1
,

603 
x86_dï_t
 
idï2
, x86_dï_à
odï0
, x86_dï_à
odï1
, x86_dï_à
odï2
,

604 
x86_dï_t
 
odï3
)

606 
	`__x86_uö°_√w_mem
(
˘x
, 
›code
, 0, 0, 
idï0
, 
idï1
, 
idï2
,

607 
odï0
, 
odï1
, 
odï2
, 
odï3
);

608 
	}
}

611 
	$x86_uö°_˛ór
()

614 
	`li°_cou¡
(
x86_uö°_li°
))

615 
	`x86_uö°_‰ì
(
	`li°_ªmove_©
(
x86_uö°_li°
, 0));

618 
x86_uö°_efÁddr_emôãd
 = 0;

619 
	}
}

622 
	$x86_uö°_dump_buf
(
x86_uö°_t
 *
uö°
, *
buf
, 
size
)

624 *
comma
;

625 
x86_dï_t
 
dï
;

626 
dï_cou¡
;

627 
i
;

630 
	`°r_¥ötf
(&
buf
, &
size
, "%†", 
x86_uö°_öfo
[
uö°
->
›code
].
«me
);

633 
comma
 = "";

634 
dï_cou¡
 = 0;

635 
i
 = 0; i < 
X86_UINST_MAX_ODEPS
; i++)

637 
dï
 = 
uö°
->
odï
[
i
];

638 i‡(!
dï
)

640 
dï_cou¡
++;

641 
	`°r_¥ötf
(&
buf
, &
size
, "%s%s", 
comma
, 
	`x86_uö°_dï_«me_gë
(
dï
));

642 
comma
 = ",";

644 i‡(!
dï_cou¡
)

645 
	`°r_¥ötf
(&
buf
, &
size
, "-");

648 
	`°r_¥ötf
(&
buf
, &
size
, "/");

651 
comma
 = "";

652 
dï_cou¡
 = 0;

653 
i
 = 0; i < 
X86_UINST_MAX_IDEPS
; i++)

655 
dï
 = 
uö°
->
idï
[
i
];

656 i‡(!
dï
)

658 
dï_cou¡
++;

659 
	`°r_¥ötf
(&
buf
, &
size
, "%s%s", 
comma
, 
	`x86_uö°_dï_«me_gë
(
dï
));

660 
comma
 = ",";

662 i‡(!
dï_cou¡
)

663 
	`°r_¥ötf
(&
buf
, &
size
, "-");

666 i‡(
uö°
->
size
)

667 
	`°r_¥ötf
(&
buf
, &
size
, " [0x%x,%d]", 
uö°
->
addªss
, uinst->size);

668 
	}
}

671 
	$x86_uö°_dump
(
x86_uö°_t
 *
uö°
, 
FILE
 *
f
)

673 
buf
[
MAX_STRING_SIZE
];

675 
	`x86_uö°_dump_buf
(
uö°
, 
buf
, (buf));

676 
	`Ârötf
(
f
, "%s", 
buf
);

677 
	}
}

680 
	$x86_uö°_li°_dump
(
FILE
 *
f
)

682 
x86_uö°_t
 *
uö°
;

683 
i
;

685 
i
 = 0; i < 
	`li°_cou¡
(
x86_uö°_li°
); i++)

687 
uö°
 = 
	`li°_gë
(
x86_uö°_li°
, 
i
);

688 
	`Ârötf
(
f
, " ");

689 
	`x86_uö°_dump
(
uö°
, 
f
);

691 
	}
}

	@emu/uinst.h

20 #i‚de‡
ARCH_X86_EMU_UINST_H


21 
	#ARCH_X86_EMU_UINST_H


	)

23 
	~<lib/utû/˛ass.h
>

29 
	ex86_dï_t


31 
	mx86_dï_n⁄e
 = 0,

35 
	mx86_dï_óx
 = 1,

36 
	mx86_dï_ecx
 = 2,

37 
	mx86_dï_edx
 = 3,

38 
	mx86_dï_ebx
 = 4,

39 
	mx86_dï_e•
 = 5,

40 
	mx86_dï_ebp
 = 6,

41 
	mx86_dï_esi
 = 7,

42 
	mx86_dï_edi
 = 8,

44 
	mx86_dï_es
 = 9,

45 
	mx86_dï_cs
 = 10,

46 
	mx86_dï_ss
 = 11,

47 
	mx86_dï_ds
 = 12,

48 
	mx86_dï_fs
 = 13,

49 
	mx86_dï_gs
 = 14,

51 
	mx86_dï_zps
 = 15,

52 
	mx86_dï_of
 = 16,

53 
	mx86_dï_cf
 = 17,

54 
	mx86_dï_df
 = 18,

56 
	mx86_dï_aux
 = 19,

57 
	mx86_dï_aux2
 = 20,

58 
	mx86_dï_ó
 = 21,

59 
	mx86_dï_d©a
 = 22,

61 
	mx86_dï_öt_fú°
 = 
x86_dï_óx
,

62 
	mx86_dï_öt_œ°
 = 
x86_dï_d©a
,

63 
	mx86_dï_öt_cou¡
 = 
x86_dï_öt_œ°
 - 
x86_dï_öt_fú°
 + 1,

65 
	mx86_dï_Êag_fú°
 = 
x86_dï_zps
,

66 
	mx86_dï_Êag_œ°
 = 
x86_dï_df
,

67 
	mx86_dï_Êag_cou¡
 = 
x86_dï_Êag_œ°
 - 
x86_dï_Êag_fú°
 + 1,

72 
	mx86_dï_°0
 = 23,

73 
	mx86_dï_°1
 = 24,

74 
	mx86_dï_°2
 = 25,

75 
	mx86_dï_°3
 = 26,

76 
	mx86_dï_°4
 = 27,

77 
	mx86_dï_°5
 = 28,

78 
	mx86_dï_°6
 = 29,

79 
	mx86_dï_°7
 = 30,

80 
	mx86_dï_Â°
 = 31,

81 
	mx86_dï_Âcw
 = 32,

82 
	mx86_dï_Âaux
 = 33,

84 
	mx86_dï_Â_fú°
 = 
x86_dï_°0
,

85 
	mx86_dï_Â_œ°
 = 
x86_dï_Âaux
,

86 
	mx86_dï_Â_cou¡
 = 
x86_dï_Â_œ°
 - 
x86_dï_Â_fú°
 + 1,

88 
	mx86_dï_Â_°ack_fú°
 = 
x86_dï_°0
,

89 
	mx86_dï_Â_°ack_œ°
 = 
x86_dï_°7
,

90 
	mx86_dï_Â_°ack_cou¡
 = 
x86_dï_Â_°ack_œ°
 - 
x86_dï_Â_°ack_fú°
 + 1,

95 
	mx86_dï_xmm0
 = 34,

96 
	mx86_dï_xmm1
 = 35,

97 
	mx86_dï_xmm2
 = 36,

98 
	mx86_dï_xmm3
 = 37,

99 
	mx86_dï_xmm4
 = 38,

100 
	mx86_dï_xmm5
 = 39,

101 
	mx86_dï_xmm6
 = 40,

102 
	mx86_dï_xmm7
 = 41,

103 
	mx86_dï_xmm_d©a
 = 42,

105 
	mx86_dï_xmm_fú°
 = 
x86_dï_xmm0
,

106 
	mx86_dï_xmm_œ°
 = 
x86_dï_xmm_d©a
,

107 
	mx86_dï_xmm_cou¡
 = 
x86_dï_xmm_œ°
 - 
x86_dï_xmm_fú°
 + 1,

112 
	mx86_dï_rm8
 = 0x100,

113 
	mx86_dï_rm16
 = 0x101,

114 
	mx86_dï_rm32
 = 0x102,

116 
	mx86_dï_ú8
 = 0x200,

117 
	mx86_dï_ú16
 = 0x201,

118 
	mx86_dï_ú32
 = 0x202,

120 
	mx86_dï_r8
 = 0x300,

121 
	mx86_dï_r16
 = 0x301,

122 
	mx86_dï_r32
 = 0x302,

123 
	mx86_dï_§eg
 = 0x400,

125 
	mx86_dï_mem8
 = 0x500,

126 
	mx86_dï_mem16
 = 0x501,

127 
	mx86_dï_mem32
 = 0x502,

128 
	mx86_dï_mem64
 = 0x503,

129 
	mx86_dï_mem80
 = 0x504,

130 
	mx86_dï_mem128
 = 0x505,

132 
	mx86_dï_ó£g
 = 0x601,

133 
	mx86_dï_óbas
 = 0x602,

134 
	mx86_dï_óidx
 = 0x603,

136 
	mx86_dï_°i
 = 0x700,

138 
	mx86_dï_xmmm32
 = 0x800,

139 
	mx86_dï_xmmm64
 = 0x801,

140 
	mx86_dï_xmmm128
 = 0x802,

142 
	mx86_dï_xmm
 = 0x900

145 
	#X86_DEP_IS_INT_REG
(
dï
Ë((dïË>
x86_dï_öt_fú°
 && (dïË<
x86_dï_öt_œ°
)

	)

146 
	#X86_DEP_IS_FP_REG
(
dï
Ë((dïË>
x86_dï_Â_fú°
 && (dïË<
x86_dï_Â_œ°
)

	)

147 
	#X86_DEP_IS_XMM_REG
(
dï
Ë((dïË>
x86_dï_xmm_fú°
 && (dïË<
x86_dï_xmm_œ°
)

	)

148 
	#X86_DEP_IS_FLAG
(
dï
Ë((dïË>
x86_dï_Êag_fú°
 && (dïË<
x86_dï_Êag_œ°
)

	)

149 
	#X86_DEP_IS_VALID
(
dï
Ë(
	`X86_DEP_IS_INT_REG
(dïË|| 
	`X86_DEP_IS_FP_REG
(dïË|| 
	`X86_DEP_IS_XMM_REG
(dï))

	)

152 
	ex86_uö°_Êag_t


154 
	mX86_UINST_INT
 = 0x001,

155 
	mX86_UINST_LOGIC
 = 0x002,

156 
	mX86_UINST_FP
 = 0x004,

157 
	mX86_UINST_MEM
 = 0x008,

158 
	mX86_UINST_CTRL
 = 0x010,

159 
	mX86_UINST_COND
 = 0x020,

160 
	mX86_UINST_UNCOND
 = 0x040,

161 
	mX86_UINST_XMM
 = 0x080

170 
	ex86_uö°_›code_t


172 
	mx86_uö°_n›
 = 0,

174 
	mx86_uö°_move
,

175 
	mx86_uö°_add
,

176 
	mx86_uö°_sub
,

177 
	mx86_uö°_mu…
,

178 
	mx86_uö°_div
,

179 
	mx86_uö°_efÁddr
,

181 
	mx86_uö°_™d
,

182 
	mx86_uö°_‹
,

183 
	mx86_uö°_x‹
,

184 
	mx86_uö°_nŸ
,

185 
	mx86_uö°_shi·
,

186 
	mx86_uö°_sign
,

188 
	mx86_uö°_Â_move
,

189 
	mx86_uö°_Â_sign
,

190 
	mx86_uö°_Â_round
,

192 
	mx86_uö°_Â_add
,

193 
	mx86_uö°_Â_sub
,

194 
	mx86_uö°_Â_comp
,

195 
	mx86_uö°_Â_mu…
,

196 
	mx86_uö°_Â_div
,

198 
	mx86_uö°_Â_exp
,

199 
	mx86_uö°_Â_log
,

200 
	mx86_uö°_Â_sö
,

201 
	mx86_uö°_Â_cos
,

202 
	mx86_uö°_Â_söcos
,

203 
	mx86_uö°_Â_èn
,

204 
	mx86_uö°_Â_©™
,

205 
	mx86_uö°_Â_sqπ
,

207 
	mx86_uö°_Â_push
,

208 
	mx86_uö°_Â_p›
,

210 
	mx86_uö°_xmm_™d
,

211 
	mx86_uö°_xmm_‹
,

212 
	mx86_uö°_xmm_x‹
,

213 
	mx86_uö°_xmm_nŸ
,

214 
	mx86_uö°_xmm_«nd
,

215 
	mx86_uö°_xmm_shi·
,

216 
	mx86_uö°_xmm_sign
,

218 
	mx86_uö°_xmm_add
,

219 
	mx86_uö°_xmm_sub
,

220 
	mx86_uö°_xmm_comp
,

221 
	mx86_uö°_xmm_mu…
,

222 
	mx86_uö°_xmm_div
,

224 
	mx86_uö°_xmm_Â_add
,

225 
	mx86_uö°_xmm_Â_sub
,

226 
	mx86_uö°_xmm_Â_comp
,

227 
	mx86_uö°_xmm_Â_mu…
,

228 
	mx86_uö°_xmm_Â_div
,

230 
	mx86_uö°_xmm_Â_sqπ
,

232 
	mx86_uö°_xmm_move
,

233 
	mx86_uö°_xmm_shuf
,

234 
	mx86_uö°_xmm_c⁄v
,

236 
	mx86_uö°_lﬂd
,

237 
	mx86_uö°_°‹e
,

238 
	mx86_uö°_¥e„tch
,

240 
	mx86_uö°_ˇŒ
,

241 
	mx86_uö°_ªt
,

242 
	mx86_uö°_jump
,

243 
	mx86_uö°_bønch
,

244 
	mx86_uö°_ibønch
,

246 
	mx86_uö°_sysˇŒ
,

248 
	mx86_uö°_›code_cou¡


252 
	sx86_uö°_öfo_t


254 *
«me
;

255 
x86_uö°_Êag_t
 
Êags
;

256 } 
x86_uö°_öfo
[
x86_uö°_›code_cou¡
];

259 
	#X86_UINST_MAX_IDEPS
 3

	)

260 
	#X86_UINST_MAX_ODEPS
 4

	)

261 
	#X86_UINST_MAX_DEPS
 (
X86_UINST_MAX_IDEPS
 + 
X86_UINST_MAX_ODEPS
)

	)

263 
	sx86_uö°_t


266 
x86_uö°_›code_t
 
	m›code
;

269 
x86_dï_t
 
	mdï
[
X86_UINST_MAX_IDEPS
 + 
X86_UINST_MAX_ODEPS
];

270 
x86_dï_t
 *
	midï
;

271 
x86_dï_t
 *
	modï
;

274 
	maddªss
;

275 
	msize
;

282 
x86_uö°_a˘ive
;

284 
li°_t
 *
x86_uö°_li°
;

286 
x86_uö°_öô
();

287 
x86_uö°_d⁄e
();

289 
x86_uö°_t
 *
x86_uö°_¸óã
();

290 
x86_uö°_‰ì
(
x86_uö°_t
 *
uö°
);

294 
	#x86_uö°_√w
(
˘x
, 
›code
, 
idï0
, 
idï1
, 
idï2
, 
odï0
, 
odï1
, 
odï2
, 
odï3
) \

295 { i‡(
x86_uö°_a˘ive
) \

296 
	`__x86_uö°_√w
(
˘x
, 
›code
, 
idï0
, 
idï1
, 
idï2
, 
odï0
, 
odï1
, 
odï2
, 
odï3
); }

	)

297 
	#x86_uö°_√w_mem
(
˘x
, 
›code
, 
addr
, 
size
, 
idï0
, 
idï1
, 
idï2
, 
odï0
, 
odï1
, 
odï2
, 
odï3
) \

298 { i‡(
x86_uö°_a˘ive
) \

299 
	`__x86_uö°_√w_mem
(
˘x
, 
›code
, 
addr
, 
size
, 
idï0
, 
idï1
, 
idï2
, 
odï0
, 
odï1
, 
odï2
, 
odï3
); }

	)

301 
__x86_uö°_√w
(
X86C⁄ãxt
 *
˘x
, 
x86_uö°_›code_t
 
›code
,

302 
x86_dï_t
 
idï0
, x86_dï_à
idï1
, x86_dï_à
idï2
,

303 
x86_dï_t
 
odï0
, x86_dï_à
odï1
, x86_dï_à
odï2
,

304 
x86_dï_t
 
odï3
);

305 
__x86_uö°_√w_mem
(
X86C⁄ãxt
 *
˘x
,

306 
x86_uö°_›code_t
 
›code
, 
addr
, 
size
,

307 
x86_dï_t
 
idï0
, x86_dï_à
idï1
, x86_dï_à
idï2
,

308 
x86_dï_t
 
odï0
, x86_dï_à
odï1
, x86_dï_à
odï2
,

309 
x86_dï_t
 
odï3
);

310 
x86_uö°_˛ór
();

312 
x86_uö°_dump_buf
(
x86_uö°_t
 *
uö°
, *
buf
, 
size
);

313 
x86_uö°_dump
(
x86_uö°_t
 *
uö°
, 
FILE
 *
f
);

314 
x86_uö°_li°_dump
(
FILE
 *
f
);

	@timing/bpred.c

21 
	~<lib/mh™dÀ/mh™dÀ.h
>

22 
	~<lib/utû/c⁄fig.h
>

23 
	~<lib/utû/debug.h
>

24 
	~<lib/utû/misc.h
>

25 
	~<lib/utû/°rög.h
>

27 
	~"b¥ed.h
"

28 
	~"thªad.h
"

29 
	~"u›.h
"

39 
	$X86ThªadInôBønchPªd
(
X86Thªad
 *
£lf
)

41 
«me
[
MAX_STRING_SIZE
];

43 
	`¢¥ötf
(
«me
, Çame, "%s.b¥ed", 
£lf
->name);

44 
£lf
->
b¥ed
 = 
	`x86_b¥ed_¸óã
(
«me
);

45 
	}
}

48 
	$X86ThªadFªeBønchPªd
(
X86Thªad
 *
£lf
)

50 
	`x86_b¥ed_‰ì
(
£lf
->
b¥ed
);

51 
	}
}

55 
	$X86ThªadLookupBønchPªd
(
X86Thªad
 *
£lf
, 
x86_u›_t
 *
u›
)

57 
x86_b¥ed_t
 *
b¥ed
 = 
£lf
->bpred;

63 
	`as£π
(
u›
->
Êags
 & 
X86_UINST_CTRL
);

64 i‡(
u›
->
Êags
 & 
X86_UINST_UNCOND
)

66 
u›
->
¥ed
 = 1;

71 i‡(
u›
->
uö°
->
›code
 =
x86_uö°_ibønch
)

73 
u›
->
¥ed
 = 1;

78 i‡(
x86_b¥ed_köd
 =
x86_b¥ed_köd_≥r„˘
)

79 
u›
->
¥ed
 = u›->
√ù
 !u›->
eù
 + u›->
m›_size
;

82 i‡(
x86_b¥ed_köd
 =
x86_b¥ed_köd_èkí
)

83 
u›
->
¥ed
 = 1;

86 i‡(
x86_b¥ed_köd
 =
x86_b¥ed_köd_nŸèkí
)

87 
u›
->
¥ed
 = 0;

90 i‡(
x86_b¥ed_köd
 =
x86_b¥ed_köd_bimod
 || x86_b¥ed_köd =
x86_b¥ed_köd_comb
)

92 
u›
->
bimod_ödex
 = u›->
eù
 & (
x86_b¥ed_bimod_size
 - 1);

93 
u›
->
bimod_¥ed
 = 
b¥ed
->
bimod
[u›->
bimod_ödex
] > 1;

94 
u›
->
¥ed
 = u›->
bimod_¥ed
;

98 i‡(
x86_b¥ed_köd
 =
x86_b¥ed_köd_twﬁevñ
 || x86_b¥ed_köd =
x86_b¥ed_köd_comb
)

100 
u›
->
twﬁevñ_bht_ödex
 = u›->
eù
 & (
x86_b¥ed_twﬁevñ_l1size
 - 1);

101 
u›
->
twﬁevñ_pht_row
 = 
b¥ed
->
twﬁevñ_bht
[u›->
twﬁevñ_bht_ödex
];

102 
	`as£π
(
u›
->
twﬁevñ_pht_row
 < 
x86_b¥ed_twﬁevñ_l2height
);

103 
u›
->
twﬁevñ_pht_cﬁ
 = u›->
eù
 & (
x86_b¥ed_twﬁevñ_l2size
 - 1);

104 
u›
->
twﬁevñ_¥ed
 = 
b¥ed
->
twﬁevñ_pht
[u›->
twﬁevñ_pht_row
 *

105 
x86_b¥ed_twﬁevñ_l2size
 + 
u›
->
twﬁevñ_pht_cﬁ
] > 1;

106 
u›
->
¥ed
 = u›->
twﬁevñ_¥ed
;

110 i‡(
x86_b¥ed_köd
 =
x86_b¥ed_köd_comb
)

112 
u›
->
choi˚_ödex
 = u›->
eù
 & (
x86_b¥ed_choi˚_size
 - 1);

113 
u›
->
choi˚_¥ed
 = 
b¥ed
->
choi˚
[u›->
choi˚_ödex
] > 1;

114 
u›
->
¥ed
 = u›->
choi˚_¥ed
 ? u›->
twﬁevñ_¥ed
 : u›->
bimod_¥ed
;

118 
	`as£π
(!
u›
->
¥ed
 || uop->pred == 1);

119  
u›
->
¥ed
;

120 
	}
}

127 
	$X86ThªadLookupBønchPªdMu…ùÀ
(
X86Thªad
 *
£lf
, 
eù
, 
cou¡
)

129 
x86_b¥ed_t
 *
b¥ed
 = 
£lf
->bpred;

131 
i
, 
¥ed
, 
ãmp_¥ed
;

132 
bht_ödex
, 
pht_cﬁ
;

133 
bhr
;

138 
	`as£π
(
x86_b¥ed_köd
 =
x86_b¥ed_köd_twﬁevñ
);

139 
bht_ödex
 = 
eù
 & (
x86_b¥ed_twﬁevñ_l1size
 - 1);

140 
bhr
 = 
b¥ed
->
twﬁevñ_bht
[
bht_ödex
];

141 
	`as£π
(
bhr
 < 
x86_b¥ed_twﬁevñ_l2height
);

142 
pht_cﬁ
 = 
eù
 & (
x86_b¥ed_twﬁevñ_l2size
 - 1);

143 
¥ed
 = 
ãmp_¥ed
 = 
b¥ed
->
twﬁevñ_pht
[
bhr
 * 
x86_b¥ed_twﬁevñ_l2size
 + 
pht_cﬁ
] > 1;

146 
i
 = 1; i < 
cou¡
; i++)

148 
bhr
 = ((bh∏<< 1Ë| 
ãmp_¥ed
Ë& (
x86_b¥ed_twﬁevñ_l2height
 - 1);

149 
ãmp_¥ed
 = 
b¥ed
->
twﬁevñ_pht
[
bhr
 * 
x86_b¥ed_twﬁevñ_l2size
 + 
pht_cﬁ
] > 1;

150 
	`as£π
(!
ãmp_¥ed
 ||Åemp_pred == 1);

151 
¥ed
 |
ãmp_¥ed
 << 
i
;

155  
¥ed
;

156 
	}
}

159 
	$X86ThªadUpd©eBønchPªd
(
X86Thªad
 *
£lf
, 
x86_u›_t
 *
u›
)

161 
x86_b¥ed_t
 *
b¥ed
 = 
£lf
->bpred;

162 
èkí
;

163 *
p˘r
;

164 *
pbhr
;

166 
	`as£π
(!
u›
->
•ecmode
);

167 
	`as£π
(
u›
->
Êags
 & 
X86_UINST_CTRL
);

168 
èkí
 = 
u›
->
√ù
 !u›->
eù
 + u›->
m›_size
;

171 
b¥ed
->
ac˚s£s
++;

172 i‡(
u›
->
√ù
 =u›->
¥ed_√ù
)

173 
b¥ed
->
hôs
++;

178 i‡(
x86_b¥ed_köd
 =
x86_b¥ed_köd_≥r„˘
)

180 i‡(
u›
->
Êags
 & 
X86_UINST_UNCOND
)

184 i‡(
x86_b¥ed_köd
 =
x86_b¥ed_köd_bimod
 ||

185 (
x86_b¥ed_köd
 =
x86_b¥ed_köd_comb
 && !
u›
->
choi˚_¥ed
))

187 
p˘r
 = &
b¥ed
->
bimod
[
u›
->
bimod_ödex
];

188 *
p˘r
 = 
èkí
 ? 
	`MIN
(*p˘∏+ 1, 3Ë: 
	`MAX
(*pctr - 1, 0);

192 i‡(
x86_b¥ed_köd
 =
x86_b¥ed_köd_twﬁevñ
 ||

193 (
x86_b¥ed_köd
 =
x86_b¥ed_köd_comb
 && 
u›
->
choi˚_¥ed
))

196 
pbhr
 = &
b¥ed
->
twﬁevñ_bht
[
u›
->
twﬁevñ_bht_ödex
];

197 *
pbhr
 = ((*pbh∏<< 1Ë| 
èkí
Ë& (
x86_b¥ed_twﬁevñ_l2height
 - 1);

200 
p˘r
 = &
b¥ed
->
twﬁevñ_pht
[
u›
->
twﬁevñ_pht_row
 *

201 
x86_b¥ed_twﬁevñ_l2size
 + 
u›
->
twﬁevñ_pht_cﬁ
];

202 *
p˘r
 = 
èkí
 ? 
	`MIN
(*p˘∏+ 1, 3Ë: 
	`MAX
(*pctr - 1, 0);

207 i‡(
x86_b¥ed_köd
 =
x86_b¥ed_köd_comb
 && 
u›
->
bimod_¥ed
 !u›->
twﬁevñ_¥ed
) {

208 
p˘r
 = &
b¥ed
->
choi˚
[
u›
->
choi˚_ödex
];

209 *
p˘r
 = 
u›
->
bimod_¥ed
 =
èkí
 ? 
	`MAX
(*p˘∏- 1, 0Ë: 
	`MIN
(*pctr + 1, 3);

211 
	}
}

217 
	$X86ThªadLookupBTB
(
X86Thªad
 *
£lf
, 
x86_u›_t
 *
u›
)

219 
x86_b¥ed_t
 *
b¥ed
 = 
£lf
->bpred;

220 
x86_b¥ed_btb_íåy_t
 *
íåy
;

221 
way
, 
£t
, 
èrgë
 = 0;

222 
hô
 = 0;

224 
	`as£π
(
u›
->
Êags
 & 
X86_UINST_CTRL
);

227 i‡(
x86_b¥ed_köd
 =
x86_b¥ed_köd_≥r„˘
)

228  
u›
->
√ù
;

231 i‡(
u›
->
uö°
->
›code
 =
x86_uö°_ibønch
)

232  
u›
->
eù
;

235 
£t
 = 
u›
->
eù
 & (
x86_b¥ed_btb_£ts
 - 1);

236 
way
 = 0; way < 
x86_b¥ed_btb_assoc
; way++)

238 
íåy
 = 
	`X86_BPRED_BTB_ENTRY
(
£t
, 
way
);

239 i‡(
íåy
->
sour˚
 !
u›
->
eù
)

241 
èrgë
 = 
íåy
->target;

242 
hô
 = 1;

249 i‡(
hô
 && 
u›
->
uö°
->
›code
 =
x86_uö°_ˇŒ
 && !u›->
•ecmode
)

251 
b¥ed
->
øs
[b¥ed->
øs_ödex
] = 
u›
->
eù
 + u›->
m›_size
;

252 
b¥ed
->
øs_ödex
 = (b¥ed->øs_ödex + 1Ë% 
x86_b¥ed_øs_size
;

257 i‡(
hô
 && 
u›
->
uö°
->
›code
 =
x86_uö°_ªt
 && !u›->
•ecmode
)

259 
b¥ed
->
øs_ödex
 = (b¥ed->øs_ödex + 
x86_b¥ed_øs_size
 - 1) % x86_bpred_ras_size;

260 
èrgë
 = 
b¥ed
->
øs
[b¥ed->
øs_ödex
];

264  
èrgë
;

265 
	}
}

269 
	$X86ThªadUpd©eBTB
(
X86Thªad
 *
£lf
, 
x86_u›_t
 *
u›
)

271 
x86_b¥ed_t
 *
b¥ed
 = 
£lf
->bpred;

272 
x86_b¥ed_btb_íåy_t
 *
íåy
, *
found
 = 
NULL
;

273 
way
, 
£t
;

276 i‡(
x86_b¥ed_köd
 =
x86_b¥ed_köd_≥r„˘
)

280 
£t
 = 
u›
->
eù
 & (
x86_b¥ed_btb_£ts
 - 1);

281 
way
 = 0; way < 
x86_b¥ed_btb_assoc
; way++)

283 
íåy
 = 
	`X86_BPRED_BTB_ENTRY
(
£t
, 
way
);

284 i‡(
íåy
->
sour˚
 =
u›
->
eù
)

286 
found
 = 
íåy
;

292 i‡(!
found
)

294 
way
 = 0; way < 
x86_b¥ed_btb_assoc
; way++)

296 
íåy
 = 
	`X86_BPRED_BTB_ENTRY
(
£t
, 
way
);

297 
íåy
->
cou¡î
--;

298 i‡(
íåy
->
cou¡î
 < 0) {

299 
íåy
->
cou¡î
 = 
x86_b¥ed_btb_assoc
 - 1;

300 
íåy
->
sour˚
 = 
u›
->
eù
;

301 
íåy
->
èrgë
 = 
u›
->
√ù
;

307 i‡(
found
)

309 
way
 = 0; way < 
x86_b¥ed_btb_assoc
; way++)

311 
íåy
 = 
	`X86_BPRED_BTB_ENTRY
(
£t
, 
way
);

312 i‡(
íåy
->
cou¡î
 > 
found
->counter)

313 
íåy
->
cou¡î
--;

315 
found
->
cou¡î
 = 
x86_b¥ed_btb_assoc
 - 1;

316 
found
->
èrgë
 = 
u›
->
√ù
;

318 
	}
}

325 
	$X86ThªadGëNextBønch
(
X86Thªad
 *
£lf
, 
eù
, 
bsize
)

327 
x86_b¥ed_t
 *
b¥ed
 = 
£lf
->bpred;

328 
x86_b¥ed_btb_íåy_t
 *
íåy
;

329 
limô
;

330 
£t
, 
way
;

332 
	`as£π
(!(
bsize
 & (bsize - 1)));

333 
limô
 = (
eù
 + 
bsize
) & ~(bsize - 1);

334 
eù
 < 
limô
)

336 
£t
 = 
eù
 & (
x86_b¥ed_btb_£ts
 - 1);

337 
way
 = 0; way < 
x86_b¥ed_btb_assoc
; way++)

339 
íåy
 = 
	`X86_BPRED_BTB_ENTRY
(
£t
, 
way
);

340 i‡(
íåy
->
sour˚
 =
eù
)

341  
eù
;

343 
eù
++;

346 
	}
}

355 
x86_b¥ed_t
 *
	$x86_b¥ed_¸óã
(*
«me
)

357 
x86_b¥ed_t
 *
b¥ed
;

359 
i
;

360 
j
;

363 
b¥ed
 = 
	`xˇŒoc
(1, (
x86_b¥ed_t
));

364 
b¥ed
->
«me
 = 
	`x°rdup
(name);

365 
b¥ed
->
øs
 = 
	`xˇŒoc
(
x86_b¥ed_øs_size
, ());

368 i‡(
x86_b¥ed_köd
 =
x86_b¥ed_köd_bimod
 || x86_b¥ed_köd =
x86_b¥ed_köd_comb
)

370 
b¥ed
->
bimod
 = 
	`xˇŒoc
(
x86_b¥ed_bimod_size
, ());

371 
i
 = 0; i < 
x86_b¥ed_bimod_size
; i++)

372 
b¥ed
->
bimod
[
i
] = 2;

376 i‡(
x86_b¥ed_köd
 =
x86_b¥ed_köd_twﬁevñ
 || x86_b¥ed_köd =
x86_b¥ed_köd_comb
)

378 
b¥ed
->
twﬁevñ_bht
 = 
	`xˇŒoc
(
x86_b¥ed_twﬁevñ_l1size
, ());

379 
b¥ed
->
twﬁevñ_pht
 = 
	`xˇŒoc
(
x86_b¥ed_twﬁevñ_l2size
 * 
x86_b¥ed_twﬁevñ_l2height
, ());

380 
i
 = 0; i < 
x86_b¥ed_twﬁevñ_l2size
 * 
x86_b¥ed_twﬁevñ_l2height
; i++)

381 
b¥ed
->
twﬁevñ_pht
[
i
] = 2;

385 i‡(
x86_b¥ed_köd
 =
x86_b¥ed_köd_comb
)

387 
b¥ed
->
choi˚
 = 
	`xˇŒoc
(
x86_b¥ed_choi˚_size
, ());

388 
i
 = 0; i < 
x86_b¥ed_choi˚_size
; i++)

389 
b¥ed
->
choi˚
[
i
] = 2;

393 
b¥ed
->
btb
 = 
	`xˇŒoc
(
x86_b¥ed_btb_£ts
 * 
x86_b¥ed_btb_assoc
, (
x86_b¥ed_btb_íåy_t
));

394 
i
 = 0; i < 
x86_b¥ed_btb_£ts
; i++)

395 
j
 = 0; j < 
x86_b¥ed_btb_assoc
; j++)

396 
	`X86_BPRED_BTB_ENTRY
(
i
, 
j
)->
cou¡î
 = j;

399  
b¥ed
;

400 
	}
}

403 
	$x86_b¥ed_‰ì
(
x86_b¥ed_t
 *
b¥ed
)

406 i‡(
x86_b¥ed_köd
 =
x86_b¥ed_köd_bimod
 || x86_b¥ed_köd =
x86_b¥ed_köd_comb
)

407 
	`‰ì
(
b¥ed
->
bimod
);

410 i‡(
x86_b¥ed_köd
 =
x86_b¥ed_köd_twﬁevñ
 || x86_b¥ed_köd =
x86_b¥ed_köd_comb
) {

411 
	`‰ì
(
b¥ed
->
twﬁevñ_bht
);

412 
	`‰ì
(
b¥ed
->
twﬁevñ_pht
);

416 i‡(
x86_b¥ed_köd
 =
x86_b¥ed_köd_comb
)

417 
	`‰ì
(
b¥ed
->
choi˚
);

420 
	`‰ì
(
b¥ed
->
«me
);

421 
	`‰ì
(
b¥ed
->
btb
);

422 
	`‰ì
(
b¥ed
->
øs
);

423 
	`‰ì
(
b¥ed
);

424 
	}
}

432 *
	gx86_b¥ed_köd_m≠
[] = { "Perfect", "Taken", "NotTaken", "Bimodal", "TwoLevel", "Combined" };

433 
x86_b¥ed_köd_t
 
	gx86_b¥ed_köd
;

434 
	gx86_b¥ed_btb_£ts
;

435 
	gx86_b¥ed_btb_assoc
;

436 
	gx86_b¥ed_øs_size
;

437 
	gx86_b¥ed_bimod_size
;

438 
	gx86_b¥ed_choi˚_size
;

440 
	gx86_b¥ed_twﬁevñ_l1size
;

441 
	gx86_b¥ed_twﬁevñ_l2size
;

442 
	gx86_b¥ed_twﬁevñ_hi°_size
;

443 
	gx86_b¥ed_twﬁevñ_l2height
;

446 
	$X86RódBønchPªdC⁄fig
(
c⁄fig_t
 *
c⁄fig
)

448 *
£˘i⁄
;

450 
£˘i⁄
 = "BranchPredictor";

452 
x86_b¥ed_köd
 = 
	`c⁄fig_ªad_íum
(
c⁄fig
, 
£˘i⁄
, "Kind",

453 
x86_b¥ed_köd_twﬁevñ
, 
x86_b¥ed_köd_m≠
, 6);

454 
x86_b¥ed_btb_£ts
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "BTB.Sets", 256);

455 
x86_b¥ed_btb_assoc
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "BTB.Assoc", 4);

456 
x86_b¥ed_bimod_size
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "Bimod.Size", 1024);

457 
x86_b¥ed_choi˚_size
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "Choice.Size", 1024);

458 
x86_b¥ed_øs_size
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "RAS.Size", 32);

459 
x86_b¥ed_twﬁevñ_l1size
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "TwoLevel.L1Size", 1);

460 
x86_b¥ed_twﬁevñ_l2size
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "TwoLevel.L2Size", 1024);

461 
x86_b¥ed_twﬁevñ_hi°_size
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "TwoLevel.HistorySize", 8);

464 
x86_b¥ed_twﬁevñ_l2height
 = 1 << 
x86_b¥ed_twﬁevñ_hi°_size
;

467 i‡(
x86_b¥ed_bimod_size
 & (x86_bpred_bimod_size - 1))

468 
	`Áèl
("number ofÉntries in bimodalÖrecitor must beáÖower of 2");

469 i‡(
x86_b¥ed_choi˚_size
 & (x86_bpred_choice_size - 1))

470 
	`Áèl
("number ofÉntries in choiceÖredictor must beÖower of 2");

471 i‡(
x86_b¥ed_btb_£ts
 & (x86_bpred_btb_sets - 1))

472 
	`Áèl
("number of BTB sets must beáÖower of 2");

473 i‡(
x86_b¥ed_btb_assoc
 & (x86_bpred_btb_assoc - 1))

474 
	`Áèl
("BTBássociativity must beáÖower of 2");

476 i‡(
x86_b¥ed_twﬁevñ_hi°_size
 < 1 || x86_bpred_twolevel_hist_size > 30)

477 
	`Áèl
("predictor history size must be >=1ánd <=30");

478 i‡(
x86_b¥ed_twﬁevñ_l1size
 & (x86_bpred_twolevel_l1size - 1))

479 
	`Áèl
("two-levelÖredictor sizes must beÖower of 2");

480 i‡(
x86_b¥ed_twﬁevñ_l2size
 & (x86_bpred_twolevel_l2size - 1))

481 
	`Áèl
("two-levelÖredictor sizes must beÖower of 2");

482 
	}
}

	@timing/bpred.h

20 #i‚de‡
X86_ARCH_TIMING_BPRED_H


21 
	#X86_ARCH_TIMING_BPRED_H


	)

23 
	~<lib/utû/˛ass.h
>

26 
	gx86_u›_t
;

27 
	gc⁄fig_t
;

34 
X86ThªadInôBønchPªd
(
X86Thªad
 *
£lf
);

35 
X86ThªadFªeBønchPªd
(
X86Thªad
 *
£lf
);

37 
X86ThªadLookupBønchPªd
(
X86Thªad
 *
£lf
, 
x86_u›_t
 *
u›
);

38 
X86ThªadLookupBønchPªdMu…ùÀ
(
X86Thªad
 *
£lf
, 
eù
, 
cou¡
);

39 
X86ThªadUpd©eBønchPªd
(
X86Thªad
 *
£lf
, 
x86_u›_t
 *
u›
);

41 
X86ThªadLookupBTB
(
X86Thªad
 *
£lf
, 
x86_u›_t
 *
u›
);

42 
X86ThªadUpd©eBTB
(
X86Thªad
 *
£lf
, 
x86_u›_t
 *
u›
);

43 
X86ThªadGëNextBønch
(
X86Thªad
 *
£lf
, 
eù
,

44 
bsize
);

53 
	#X86_BPRED_BTB_ENTRY
(
SET
, 
WAY
) \

54 (&
b¥ed
->
btb
[(
SET
Ë* 
x86_b¥ed_btb_assoc
 + (
WAY
)])

	)

57 
	sx86_b¥ed_btb_íåy_t


59 
	msour˚
;

60 
	mèrgë
;

61 
	mcou¡î
;

66 
	sx86_b¥ed_t


68 *
	m«me
;

71 *
	møs
;

72 
	møs_ödex
;

76 
x86_b¥ed_btb_íåy_t
 *
	mbtb
;

81 *
	mbimod
;

85 *
	mtwﬁevñ_bht
;

86 *
	mtwﬁevñ_pht
;

91 *
	mchoi˚
;

94 
	mac˚s£s
;

95 
	mhôs
;

98 
x86_b¥ed_t
 *
x86_b¥ed_¸óã
(*
«me
);

99 
x86_b¥ed_‰ì
(
x86_b¥ed_t
 *
b¥ed
);

109 *
x86_b¥ed_köd_m≠
[];

110 
	ex86_b¥ed_köd_t


112 
x86_b¥ed_köd_≥r„˘
 = 0,

113 
x86_b¥ed_köd_èkí
,

114 
x86_b¥ed_köd_nŸèkí
,

115 
x86_b¥ed_köd_bimod
,

116 
x86_b¥ed_köd_twﬁevñ
,

117 
x86_b¥ed_köd_comb


118 } 
x86_b¥ed_köd
;

120 
x86_b¥ed_btb_£ts
;

121 
x86_b¥ed_btb_assoc
;

122 
x86_b¥ed_øs_size
;

123 
x86_b¥ed_bimod_size
;

124 
x86_b¥ed_choi˚_size
;

126 
x86_b¥ed_twﬁevñ_l1size
;

127 
x86_b¥ed_twﬁevñ_l2size
;

128 
x86_b¥ed_twﬁevñ_hi°_size
;

129 
x86_b¥ed_twﬁevñ_l2height
;

132 
X86RódBønchPªdC⁄fig
(
c⁄fig_t
 *
c⁄fig
);

	@timing/commit.c

21 
	~<¨ch/x86/emu/c⁄ãxt.h
>

22 
	~<lib/esim/esim.h
>

23 
	~<lib/esim/åa˚.h
>

24 
	~<lib/utû/debug.h
>

26 
	~"b¥ed.h
"

27 
	~"commô.h
"

28 
	~"c‹e.h
"

29 
	~"˝u.h
"

30 
	~"fu.h
"

31 
	~"ªcovî.h
"

32 
	~"ªg-fûe.h
"

33 
	~"rob.h
"

34 
	~"sched.h
"

35 
	~"thªad.h
"

36 
	~"åa˚-ˇche.h
"

39 *
	gîr_commô_°Æl
 =

51 
	$X86ThªadC™Commô
(
X86Thªad
 *
£lf
)

53 
X86Cpu
 *
˝u
 = 
£lf
->cpu;

54 
X86C⁄ãxt
 *
˘x
 = 
£lf
->ctx;

55 
x86_u›_t
 *
u›
;

59 i‡(!
˘x
 || !
	`X86C⁄ãxtGëSèã
(˘x, 
X86C⁄ãxtRu¬ög
))

60 
£lf
->
œ°_commô_cy˛e
 = 
	`asTimög
(
˝u
)->
cy˛e
;

61 i‡(
	`asTimög
(
˝u
)->
cy˛e
 - 
£lf
->
œ°_commô_cy˛e
 > 1000000)

63 
	`w¨nög
("thread %s: simulationÉnded dueÅo commit stall.\n%s",

64 
£lf
->
«me
, 
îr_commô_°Æl
);

65 
esim_föish
 = 
esim_föish_°Æl
;

70 i‡(!
	`X86ThªadC™DequeueFromROB
(
£lf
))

74 
u›
 = 
	`X86ThªadGëROBHód
(
£lf
);

75 
	`as£π
(
	`x86_u›_exi°s
(
u›
));

76 
	`as£π
(
u›
->
thªad
 =
£lf
);

80 i‡(
u›
->
uö°
->
›code
 =
x86_uö°_°‹e
)

82 i‡(!
u›
->
ªady
 && 
	`X86ThªadIsU›Ródy
(
£lf
, uop))

83 
u›
->
ªady
 = 1;

84  
u›
->
ªady
;

88  
u›
->
com∂ëed
;

89 
	}
}

92 
	$X86ThªadCommô
(
X86Thªad
 *
£lf
, 
qu™t
)

94 
X86Cpu
 *
˝u
 = 
£lf
->cpu;

95 
X86C‹e
 *
c‹e
 = 
£lf
->core;

96 
X86C⁄ãxt
 *
˘x
 = 
£lf
->ctx;

98 
x86_u›_t
 *
u›
;

99 
ªcovî
 = 0;

102 
	`as£π
(
˘x
);

103 
qu™t
 && 
	`X86ThªadC™Commô
(
£lf
))

106 
u›
 = 
	`X86ThªadGëROBHód
(
£lf
);

107 
	`as£π
(
	`x86_u›_exi°s
(
u›
));

108 
	`as£π
(
u›
->
thªad
 =
£lf
);

109 
	`as£π
(!
ªcovî
);

112 i‡(
x86_˝u_ªcovî_köd
 =
x86_˝u_ªcovî_köd_commô
 &&

113 (
u›
->
Êags
 & 
X86_UINST_CTRL
Ë&& u›->
√ù
 !u›->
¥ed_√ù
)

114 
ªcovî
 = 1;

117 
	`as£π
(!
u›
->
•ecmode
);

118 
	`X86ThªadCommôU›
(
£lf
, 
u›
);

121 i‡(
u›
->
Êags
 & 
X86_UINST_CTRL
)

123 
	`X86ThªadUpd©eBønchPªd
(
£lf
, 
u›
);

124 
	`X86ThªadUpd©eBTB
(
£lf
, 
u›
);

125 
£lf
->
btb_wrôes
++;

129 i‡(
x86_åa˚_ˇche_¥e£¡
)

130 
	`X86ThªadRec‹dU›InTø˚Cache
(
£lf
, 
u›
);

133 
£lf
->
œ°_commô_cy˛e
 = 
	`asTimög
(
˝u
)->
cy˛e
;

134 
£lf
->
num_commôãd_uö°_¨øy
[
u›
->
uö°
->
›code
]++;

135 
c‹e
->
num_commôãd_uö°_¨øy
[
u›
->
uö°
->
›code
]++;

136 
˝u
->
num_commôãd_uö°_¨øy
[
u›
->
uö°
->
›code
]++;

137 
˝u
->
num_commôãd_uö°
++;

138 
˘x
->
ö°_cou¡
++;

139 i‡(
u›
->
åa˚_ˇche
)

140 
£lf
->
åa˚_ˇche
->
num_commôãd_uö°
++;

141 i‡(!
u›
->
m›_ödex
)

142 
˝u
->
num_commôãd_ö°
++;

143 i‡(
u›
->
Êags
 & 
X86_UINST_CTRL
)

145 
£lf
->
num_bønch_uö°
++;

146 
c‹e
->
num_bønch_uö°
++;

147 
˝u
->
num_bønch_uö°
++;

148 i‡(
u›
->
√ù
 !u›->
¥ed_√ù
)

150 
£lf
->
num_mi•ªd_bønch_uö°
++;

151 
c‹e
->
num_mi•ªd_bønch_uö°
++;

152 
˝u
->
num_mi•ªd_bønch_uö°
++;

157 i‡(
	`x86_åacög
())

159 
	`x86_åa˚
("x86.inst id=%lld core=%d stg=\"co\"\n",

160 
u›
->
id_ö_c‹e
, 
c‹e
->
id
);

161 
	`X86CpuAddToTø˚Li°
(
˝u
, 
u›
);

165 
	`X86ThªadRemoveROBHód
(
£lf
);

166 
c‹e
->
rob_ªads
++;

167 
£lf
->
rob_ªads
++;

168 
qu™t
--;

172 i‡(
ªcovî
)

174 
	`X86ThªadRecovî
(
£lf
);

175 
	`X86C‹eRñó£AŒFun˘i⁄ÆUnôs
(
c‹e
);

181 i‡(
˘x
->
evi˘_sig«l
 && 
	`X86ThªadIsPùñöeEm±y
(
£lf
))

182 
	`X86ThªadEvi˘C⁄ãxt
(
£lf
, 
˘x
);

183 
	}
}

192 
	$X86C‹eCommô
(
X86C‹e
 *
£lf
)

194 
∑ss
;

195 
qu™tum
;

196 
√w
;

199 
x86_˝u_commô_köd
)

202 
x86_˝u_commô_köd_sh¨ed
:

204 
∑ss
 = 
x86_˝u_num_thªads
;

205 
qu™tum
 = 
x86_˝u_commô_width
;

206 
qu™tum
 && 
∑ss
)

208 
£lf
->
commô_cuºít
 = (£lf->commô_cuºíà+ 1Ë% 
x86_˝u_num_thªads
;

209 i‡(
	`X86ThªadC™Commô
(
£lf
->
thªads
[£lf->
commô_cuºít
]))

211 
	`X86ThªadCommô
(
£lf
->
thªads
[£lf->
commô_cuºít
], 1);

212 
qu™tum
--;

213 
∑ss
 = 
x86_˝u_num_thªads
;

216 
∑ss
--;

220 
x86_˝u_commô_köd_time¶i˚
:

223 
√w
 = (
£lf
->
commô_cuºít
 + 1Ë% 
x86_˝u_num_thªads
;

224 
√w
 !
£lf
->
commô_cuºít
 &&

225 !
	`X86ThªadC™Commô
(
£lf
->
thªads
[
√w
]))

226 
√w
 = (√w + 1Ë% 
x86_˝u_num_thªads
;

229 
£lf
->
commô_cuºít
 = 
√w
;

230 
	`X86ThªadCommô
(
£lf
->
thªads
[
√w
], 
x86_˝u_commô_width
);

234 
	}
}

243 
	$X86CpuCommô
(
X86Cpu
 *
£lf
)

245 
i
;

247 
£lf
->
°age
 = "commit";

248 
i
 = 0; i < 
x86_˝u_num_c‹es
; i++)

249 
	`X86C‹eCommô
(
£lf
->
c‹es
[
i
]);

250 
	}
}

	@timing/commit.h

20 #i‚de‡
ARCH_X86_TIMING_COMMIT_H


21 
	#ARCH_X86_TIMING_COMMIT_H


	)

23 
	~<lib/utû/˛ass.h
>

29 
X86ThªadC™Commô
(
X86Thªad
 *
£lf
);

30 
X86ThªadCommô
(
X86Thªad
 *
£lf
, 
qu™tum
);

37 
X86C‹eCommô
(
X86C‹e
 *
£lf
);

43 
X86CpuCommô
(
X86Cpu
 *
£lf
);

	@timing/core.c

20 
	~<lib/mh™dÀ/mh™dÀ.h
>

21 
	~<lib/utû/°rög.h
>

23 
	~"c‹e.h
"

24 
	~"˝u.h
"

25 
	~"evít-queue.h
"

26 
	~"fu.h
"

27 
	~"rob.h
"

28 
	~"thªad.h
"

35 
CLASS_IMPLEMENTATION
(
X86C‹e
);

37 
	$X86C‹eCª©e
(
X86C‹e
 *
£lf
, 
X86Cpu
 *
˝u
)

39 
i
;

42 
£lf
->
˝u
 = cpu;

45 
£lf
->
thªads
 = 
	`xˇŒoc
(
x86_˝u_num_thªads
, (
X86Thªad
 *));

46 
i
 = 0; i < 
x86_˝u_num_thªads
; i++)

47 
£lf
->
thªads
[
i
] = 
	`√w
(
X86Thªad
, self);

50 
£lf
->
¥e„tch_hi°‹y
 = 
	`¥e„tch_hi°‹y_¸óã
();

53 
	`X86C‹eInôROB
(
£lf
);

54 
	`X86C‹eInôEvítQueue
(
£lf
);

55 
	`X86C‹eInôFun˘i⁄ÆUnôs
(
£lf
);

56 
	}
}

59 
	$X86C‹eDe°roy
(
X86C‹e
 *
£lf
)

61 
i
;

64 
£lf
->
«me
 = 
	`°r_‰ì
(self->name);

67 
i
 = 0; i < 
x86_˝u_num_thªads
; i++)

68 
	`dñëe
(
£lf
->
thªads
[
i
]);

69 
	`‰ì
(
£lf
->
thªads
);

72 
	`¥e„tch_hi°‹y_‰ì
(
£lf
->
¥e„tch_hi°‹y
);

75 
	`X86C‹eFªeROB
(
£lf
);

76 
	`X86C‹eFªeEvítQueue
(
£lf
);

77 
	`X86C‹eFªeFun˘i⁄ÆUnôs
(
£lf
);

78 
	}
}

81 
	$X86C‹eSëName
(
X86C‹e
 *
£lf
, *
«me
)

83 
£lf
->
«me
 = 
	`°r_£t
(self->name,Çame);

84 
	}
}

	@timing/core.h

20 #i‚de‡
X86_ARCH_TIMING_CORE_H


21 
	#X86_ARCH_TIMING_CORE_H


	)

23 
	~<¨ch/x86/emu/uö°.h
>

24 
	~<lib/utû/˛ass.h
>

25 
	~<mem-sy°em/¥e„tch-hi°‹y.h
>

34 
	ex86_di•©ch_°Æl_t


36 
	mx86_di•©ch_°Æl_u£d
 = 0,

37 
	mx86_di•©ch_°Æl_•ec
,

38 
	mx86_di•©ch_°Æl_u›_queue
,

39 
	mx86_di•©ch_°Æl_rob
,

40 
	mx86_di•©ch_°Æl_iq
,

41 
	mx86_di•©ch_°Æl_lsq
,

42 
	mx86_di•©ch_°Æl_ª«me
,

43 
	mx86_di•©ch_°Æl_˘x
,

44 
	mx86_di•©ch_°Æl_max


48 
	$CLASS_BEGIN
(
X86C‹e
, 
Obje˘
)

51 
X86Cpu
 *
˝u
;

54 
X86Thªad
 **
thªads
;

56 *
«me
;

59 
id
;

62 
löked_li°_t
 *
evít_queue
;

63 
x86_fu_t
 *
fu
;

64 
¥e„tch_hi°‹y_t
 *
¥e„tch_hi°‹y
;

67 
u›_id_cou¡î
;

68 
di•©ch_£q
;

69 
iq_cou¡
;

70 
lsq_cou¡
;

71 
ªg_fûe_öt_cou¡
;

72 
ªg_fûe_Â_cou¡
;

73 
ªg_fûe_xmm_cou¡
;

76 
li°_t
 *
rob
;

77 
rob_cou¡
;

78 
rob_hód
;

79 
rob_èû
;

82 
„tch_cuºít
;

83 
„tch_swôch_whí
;

84 
decode_cuºít
;

85 
di•©ch_cuºít
;

86 
issue_cuºít
;

87 
commô_cuºít
;

90 
di•©ch_°Æl
[
x86_di•©ch_°Æl_max
];

91 
num_di•©ched_uö°_¨øy
[
x86_uö°_›code_cou¡
];

92 
num_issued_uö°_¨øy
[
x86_uö°_›code_cou¡
];

93 
num_commôãd_uö°_¨øy
[
x86_uö°_›code_cou¡
];

94 
num_squashed_uö°
;

95 
num_bønch_uö°
;

96 
num_mi•ªd_bønch_uö°
;

99 
rob_occu∑ncy
;

100 
rob_fuŒ
;

101 
rob_ªads
;

102 
rob_wrôes
;

104 
iq_occu∑ncy
;

105 
iq_fuŒ
;

106 
iq_ªads
;

107 
iq_wrôes
;

108 
iq_wakeup_ac˚s£s
;

110 
lsq_occu∑ncy
;

111 
lsq_fuŒ
;

112 
lsq_ªads
;

113 
lsq_wrôes
;

114 
lsq_wakeup_ac˚s£s
;

116 
ªg_fûe_öt_occu∑ncy
;

117 
ªg_fûe_öt_fuŒ
;

118 
ªg_fûe_öt_ªads
;

119 
ªg_fûe_öt_wrôes
;

121 
ªg_fûe_Â_occu∑ncy
;

122 
ªg_fûe_Â_fuŒ
;

123 
ªg_fûe_Â_ªads
;

124 
ªg_fûe_Â_wrôes
;

126 
ªg_fûe_xmm_occu∑ncy
;

127 
ªg_fûe_xmm_fuŒ
;

128 
ªg_fûe_xmm_ªads
;

129 
ªg_fûe_xmm_wrôes
;

131 
	$CLASS_END
(
X86C‹e
)

134 
	`X86C‹eCª©e
(
X86C‹e
 *
£lf
, 
X86Cpu
 *
˝u
);

135 
	`X86C‹eDe°roy
(
X86C‹e
 *
£lf
);

137 
	`X86C‹eSëName
(
X86C‹e
 *
£lf
, *
«me
);

	@timing/cpu.c

21 
	~<¨ch/x86/emu/c⁄ãxt.h
>

22 
	~<¨ch/x86/emu/emu.h
>

23 
	~<lib/esim/esim.h
>

24 
	~<lib/esim/åa˚.h
>

25 
	~<lib/mh™dÀ/mh™dÀ.h
>

26 
	~<lib/utû/c⁄fig.h
>

27 
	~<lib/utû/debug.h
>

28 
	~<lib/utû/fûe.h
>

29 
	~<lib/utû/löked-li°.h
>

30 
	~<lib/utû/misc.h
>

31 
	~<lib/utû/°rög.h
>

32 
	~<lib/utû/timî.h
>

33 
	~<mem-sy°em/mem‹y.h
>

35 
	~"b¥ed.h
"

36 
	~"commô.h
"

37 
	~"c‹e.h
"

38 
	~"˝u.h
"

39 
	~"decode.h
"

40 
	~"di•©ch.h
"

41 
	~"„tch.h
"

42 
	~"„tch-queue.h
"

43 
	~"fu.h
"

44 
	~"ö°-queue.h
"

45 
	~"issue.h
"

46 
	~"lﬂd-°‹e-queue.h
"

47 
	~"mem-c⁄fig.h
"

48 
	~"ªg-fûe.h
"

49 
	~"rob.h
"

50 
	~"sched.h
"

51 
	~"thªad.h
"

52 
	~"åa˚-ˇche.h
"

53 
	~"u›-queue.h
"

54 
	~"wrôeback.h
"

64 *
	gx86_c⁄fig_hñp
 =

255 
	gx86_åa˚_ˇãg‹y
;

260 *
	gx86_c⁄fig_fûe_«me
 = "";

261 *
	gx86_˝u_ªp‹t_fûe_«me
 = "";

263 
	gx86_˝u_‰equícy
 = 1000;

264 
	gx86_˝u_num_c‹es
 = 1;

265 
	gx86_˝u_num_thªads
 = 1;

267 
	gx86_˝u_Á°_f‹w¨d_cou¡
;

269 
	gx86_˝u_c⁄ãxt_qu™tum
;

270 
	gx86_˝u_thªad_qu™tum
;

271 
	gx86_˝u_thªad_swôch_≥«…y
;

273 *
	gx86_˝u_ªcovî_köd_m≠
[] = { "Writeback", "Commit" };

274 
x86_˝u_ªcovî_köd_t
 
	gx86_˝u_ªcovî_köd
;

275 
	gx86_˝u_ªcovî_≥«…y
;

277 *
	gx86_˝u_„tch_köd_m≠
[] = { "Shared", "TimeSlice", "SwitchOnEvent" };

278 
x86_˝u_„tch_köd_t
 
	gx86_˝u_„tch_köd
;

280 
	gx86_˝u_decode_width
;

282 *
	gx86_˝u_di•©ch_köd_m≠
[] = { "Shared", "TimeSlice" };

283 
x86_˝u_di•©ch_köd_t
 
	gx86_˝u_di•©ch_köd
;

284 
	gx86_˝u_di•©ch_width
;

286 *
	gx86_˝u_issue_köd_m≠
[] = { "Shared", "TimeSlice" };

287 
x86_˝u_issue_köd_t
 
	gx86_˝u_issue_köd
;

288 
	gx86_˝u_issue_width
;

290 *
	gx86_˝u_commô_köd_m≠
[] = { "Shared", "TimeSlice" };

291 
x86_˝u_commô_köd_t
 
	gx86_˝u_commô_köd
;

292 
	gx86_˝u_commô_width
;

294 
	gx86_˝u_occu∑ncy_°©s
;

303 *
	gx86_˝u_îr_Á°_f‹w¨d
 =

319 
	#X86_TRACE_VERSION_MAJOR
 1

	)

320 
	#X86_TRACE_VERSION_MINOR
 671

	)

323 
	$X86CpuRódC⁄fig
()

325 
c⁄fig_t
 *
c⁄fig
;

326 *
£˘i⁄
;

329 
c⁄fig
 = 
	`c⁄fig_¸óã
(
x86_c⁄fig_fûe_«me
);

330 i‡(*
x86_c⁄fig_fûe_«me
)

331 
	`c⁄fig_lﬂd
(
c⁄fig
);

336 
£˘i⁄
 = "General";

338 
x86_˝u_‰equícy
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "Frequency", x86_cpu_frequency);

339 i‡(!
	`IN_RANGE
(
x86_˝u_‰equícy
, 1, 
ESIM_MAX_FREQUENCY
))

340 
	`Áèl
("%s: invÆid vÆuêf‹ 'Fªquícy'.", 
x86_c⁄fig_fûe_«me
);

342 
x86_˝u_num_c‹es
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "Cores", x86_cpu_num_cores);

343 
x86_˝u_num_thªads
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "Threads", x86_cpu_num_threads);

345 
x86_˝u_Á°_f‹w¨d_cou¡
 = 
	`c⁄fig_ªad_Œöt
(
c⁄fig
, 
£˘i⁄
, "FastForward", 0);

347 
x86_˝u_c⁄ãxt_qu™tum
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "ContextQuantum", 100000);

348 
x86_˝u_thªad_qu™tum
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "ThreadQuantum", 1000);

349 
x86_˝u_thªad_swôch_≥«…y
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "ThreadSwitchPenalty", 0);

351 
x86_˝u_ªcovî_köd
 = 
	`c⁄fig_ªad_íum
(
c⁄fig
, 
£˘i⁄
, "RecovîKöd", 
x86_˝u_ªcovî_köd_wrôeback
, 
x86_˝u_ªcovî_köd_m≠
, 2);

352 
x86_˝u_ªcovî_≥«…y
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "RecoverPenalty", 0);

354 
x86_emu_¥o˚ss_¥e„tch_höts
 = 
	`c⁄fig_ªad_boﬁ
(
c⁄fig
, 
£˘i⁄
, "ProcessPrefetchHints", 1);

355 
¥e„tch_hi°‹y_size
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "PrefetchHistorySize", 10);

360 
£˘i⁄
 = "Pipeline";

362 
x86_˝u_„tch_köd
 = 
	`c⁄fig_ªad_íum
(
c⁄fig
, 
£˘i⁄
, "FëchKöd", 
x86_˝u_„tch_köd_time¶i˚
, 
x86_˝u_„tch_köd_m≠
, 3);

364 
x86_˝u_decode_width
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "DecodeWidth", 4);

366 
x86_˝u_di•©ch_köd
 = 
	`c⁄fig_ªad_íum
(
c⁄fig
, 
£˘i⁄
, "Di•©chKöd", 
x86_˝u_di•©ch_köd_time¶i˚
, 
x86_˝u_di•©ch_köd_m≠
, 2);

367 
x86_˝u_di•©ch_width
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "DispatchWidth", 4);

369 
x86_˝u_issue_köd
 = 
	`c⁄fig_ªad_íum
(
c⁄fig
, 
£˘i⁄
, "IssueKöd", 
x86_˝u_issue_köd_time¶i˚
, 
x86_˝u_issue_köd_m≠
, 2);

370 
x86_˝u_issue_width
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "IssueWidth", 4);

372 
x86_˝u_commô_köd
 = 
	`c⁄fig_ªad_íum
(
c⁄fig
, 
£˘i⁄
, "CommôKöd", 
x86_˝u_commô_köd_sh¨ed
, 
x86_˝u_commô_köd_m≠
, 2);

373 
x86_˝u_commô_width
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "CommitWidth", 4);

375 
x86_˝u_occu∑ncy_°©s
 = 
	`c⁄fig_ªad_boﬁ
(
c⁄fig
, 
£˘i⁄
, "OccupancyStats", 0);

380 
£˘i⁄
 = "Queues";

382 
x86_„tch_queue_size
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "FetchQueueSize", 64);

384 
x86_u›_queue_size
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "UopQueueSize", 32);

386 
x86_rob_köd
 = 
	`c⁄fig_ªad_íum
(
c⁄fig
, 
£˘i⁄
, "RobKind",

387 
x86_rob_köd_¥iv©e
, 
x86_rob_köd_m≠
, 2);

388 
x86_rob_size
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "RobSize", 64);

390 
x86_iq_köd
 = 
	`c⁄fig_ªad_íum
(
c⁄fig
, 
£˘i⁄
, "IqKind",

391 
x86_iq_köd_¥iv©e
, 
x86_iq_köd_m≠
, 2);

392 
x86_iq_size
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "IqSize", 40);

394 
x86_lsq_köd
 = 
	`c⁄fig_ªad_íum
(
c⁄fig
, 
£˘i⁄
, "LsqKind",

395 
x86_lsq_köd_¥iv©e
, 
x86_lsq_köd_m≠
, 2);

396 
x86_lsq_size
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "LsqSize", 20);

399 
	`X86RódRegFûeC⁄fig
(
c⁄fig
);

402 
	`X86RódFun˘i⁄ÆUnôsC⁄fig
(
c⁄fig
);

405 
	`X86RódBønchPªdC⁄fig
(
c⁄fig
);

408 
	`X86RódTø˚CacheC⁄fig
(
c⁄fig
);

411 
	`c⁄fig_check
(
c⁄fig
);

412 
	`c⁄fig_‰ì
(
c⁄fig
);

413 
	}
}

416 
	$X86CpuInô
()

419 
	`CLASS_REGISTER
(
X86Cpu
);

420 
	`CLASS_REGISTER
(
X86C‹e
);

421 
	`CLASS_REGISTER
(
X86Thªad
);

424 
x86_åa˚_ˇãg‹y
 = 
	`åa˚_√w_ˇãg‹y
();

425 
	}
}

429 
	$X86CpuD⁄e
()

431 
	}
}

441 
CLASS_IMPLEMENTATION
(
X86Cpu
);

444 
	$X86CpuCª©e
(
X86Cpu
 *
£lf
, 
X86Emu
 *
emu
)

446 
X86C‹e
 *
c‹e
;

447 
X86Thªad
 *
thªad
;

449 
«me
[
MAX_STRING_SIZE
];

451 
i
;

452 
j
;

455 
	`TimögCª©e
(
	`asTimög
(
£lf
));

458 
	`asTimög
(
£lf
)->
‰equícy
 = 
x86_˝u_‰equícy
;

459 
	`asTimög
(
£lf
)->
‰equícy_domaö
 = 
	`esim_√w_domaö
(
x86_˝u_‰equícy
);

462 
£lf
->
emu
 =Ému;

463 
£lf
->
u›_åa˚_li°
 = 
	`löked_li°_¸óã
();

466 
£lf
->
c‹es
 = 
	`xˇŒoc
(
x86_˝u_num_c‹es
, (
X86C‹e
 *));

467 
i
 = 0; i < 
x86_˝u_num_c‹es
; i++)

468 
£lf
->
c‹es
[
i
] = 
	`√w
(
X86C‹e
, self);

471 
i
 = 0; i < 
x86_˝u_num_c‹es
; i++)

473 
c‹e
 = 
£lf
->
c‹es
[
i
];

474 
	`¢¥ötf
(
«me
, Çame, "c%d", 
i
);

475 
	`X86C‹eSëName
(
c‹e
, 
«me
);

476 
c‹e
->
id
 = 
i
;

477 
j
 = 0; j < 
x86_˝u_num_thªads
; j++)

479 
thªad
 = 
c‹e
->
thªads
[
j
];

480 
	`¢¥ötf
(
«me
, Çame, "c%dt%d", 
i
, 
j
);

481 
	`X86ThªadSëName
(
thªad
, 
«me
);

482 
thªad
->
id_ö_c‹e
 = 
j
;

483 
thªad
->
id_ö_˝u
 = 
i
 * 
x86_˝u_num_thªads
 + 
j
;

488 
	`asObje˘
(
£lf
)->
Dump
 = 
X86CpuDump
;

489 
	`asTimög
(
£lf
)->
DumpSumm¨y
 = 
X86CpuDumpSumm¨y
;

490 
	`asTimög
(
£lf
)->
Run
 = 
X86CpuRun
;

491 
	`asTimög
(
£lf
)->
MemC⁄figCheck
 = 
X86CpuMemC⁄figCheck
;

492 
	`asTimög
(
£lf
)->
MemC⁄figDeÁu…
 = 
X86CpuMemC⁄figDeÁu…
;

493 
	`asTimög
(
£lf
)->
MemC⁄figP¨£E¡ry
 = 
X86CpuMemC⁄figP¨£E¡ry
;

496 
	`x86_åa˚_hódî
("x86.init version=\"%d.%d\"Çum_cores=%dÇum_threads=%d\n",

497 
X86_TRACE_VERSION_MAJOR
, 
X86_TRACE_VERSION_MINOR
,

498 
x86_˝u_num_c‹es
, 
x86_˝u_num_thªads
);

499 
	}
}

502 
	$X86CpuDe°roy
(
X86Cpu
 *
£lf
)

504 
i
;

505 
FILE
 *
f
;

508 
f
 = 
	`fûe_›í_f‹_wrôe
(
x86_˝u_ªp‹t_fûe_«me
);

509 i‡(
f
)

511 
	`X86CpuDumpRï‹t
(
£lf
, 
f
);

512 
	`f˛o£
(
f
);

516 
	`X86CpuEm±yTø˚Li°
(
£lf
);

517 
	`löked_li°_‰ì
(
£lf
->
u›_åa˚_li°
);

520 
i
 = 0; i < 
x86_˝u_num_c‹es
; i++)

521 
	`dñëe
(
£lf
->
c‹es
[
i
]);

522 
	`‰ì
(
£lf
->
c‹es
);

523 
	}
}

526 
	$X86CpuDump
(
Obje˘
 *
£lf
, 
FILE
 *
f
)

528 
X86Cpu
 *
˝u
 = 
	`asX86Cpu
(
£lf
);

529 
X86C‹e
 *
c‹e
;

530 
X86Thªad
 *
thªad
;

532 
i
;

533 
j
;

536 
	`Ârötf
(
f
, "\n");

537 
	`Ârötf
(
f
, "La°Dum∞%Œd ; Cy˛êo‡œ° dump\n", 
˝u
->
œ°_dump
);

538 
	`Ârötf
(
f
, "IPCLastDump = %.4g ; IPC sinceÜast dump\n",

539 
	`asTimög
(
˝u
)->
cy˛e
 - cpu->
œ°_dump
 > 0 ?

540 (Ë(
˝u
->
num_commôãd_uö°
 - cpu->
œ°_commôãd
)

541 / (
	`asTimög
(
˝u
)->
cy˛e
 - cpu->
œ°_dump
) : 0);

542 
	`Ârötf
(
f
, "\n");

545 
i
 = 0; i < 
x86_˝u_num_c‹es
; i++)

547 
c‹e
 = 
˝u
->
c‹es
[
i
];

548 
	`Ârötf
(
f
, "-------\n");

549 
	`Ârötf
(
f
, "C‹ê%d\n", 
c‹e
->
id
);

550 
	`Ârötf
(
f
, "-------\n\n");

552 
	`Ârötf
(
f
, "Event Queue:\n");

553 
	`x86_u›_löked_li°_dump
(
c‹e
->
evít_queue
, 
f
);

555 
	`Ârötf
(
f
, "Reorder Buffer:\n");

556 
	`X86C‹eDumpROB
(
c‹e
, 
f
);

558 
j
 = 0; j < 
x86_˝u_num_thªads
; j++)

560 
thªad
 = 
c‹e
->
thªads
[
j
];

562 
	`Ârötf
(
f
, "----------------------\n");

563 
	`Ârötf
(
f
, "Thªad %d (ö c‹ê%d)\n", 
j
, 
i
);

564 
	`Ârötf
(
f
, "----------------------\n\n");

566 
	`Ârötf
(
f
, "Fetch queue:\n");

567 
	`x86_u›_li°_dump
(
thªad
->
„tch_queue
, 
f
);

569 
	`Ârötf
(
f
, "Uop queue:\n");

570 
	`x86_u›_li°_dump
(
thªad
->
u›_queue
, 
f
);

572 
	`Ârötf
(
f
, "Instruction Queue:\n");

573 
	`x86_u›_löked_li°_dump
(
thªad
->
iq
, 
f
);

575 
	`Ârötf
(
f
, "Load Queue:\n");

576 
	`x86_u›_löked_li°_dump
(
thªad
->
lq
, 
f
);

578 
	`Ârötf
(
f
, "Store Queue:\n");

579 
	`x86_u›_löked_li°_dump
(
thªad
->
sq
, 
f
);

581 
	`X86ThªadDumpRegFûe
(
thªad
, 
f
);

582 i‡(
thªad
->
˘x
)

583 
	`Ârötf
(
f
, "M≠≥dC⁄ãxà%d\n", 
thªad
->
˘x
->
pid
);

585 
	`Ârötf
(
f
, "\n");

590 
˝u
->
œ°_dump
 = 
	`asTimög
(˝u)->
cy˛e
;

591 
˝u
->
œ°_commôãd
 = cpu->
num_commôãd_uö°
;

594 
	`Ârötf
(
f
, "\n\n");

595 
	}
}

598 
	$X86CpuDumpSumm¨y
(
Timög
 *
£lf
, 
FILE
 *
f
)

600 
X86Cpu
 *
˝u
 = 
	`asX86Cpu
(
£lf
);

602 
ö°_≥r_cy˛e
;

603 
uö°_≥r_cy˛e
;

604 
bønch_acc
;

607 
ö°_≥r_cy˛e
 = 
	`asTimög
(
˝u
)->
cy˛e
 ? (Ë˝u->
num_commôãd_ö°


608 / 
	`asTimög
(
˝u
)->
cy˛e
 : 0.0;

609 
uö°_≥r_cy˛e
 = 
	`asTimög
(
˝u
)->
cy˛e
 ? (Ë˝u->
num_commôãd_uö°


610 / 
	`asTimög
(
˝u
)->
cy˛e
 : 0.0;

611 
bønch_acc
 = 
˝u
->
num_bønch_uö°
 ? () (cpu->num_branch_uinst -

612 
˝u
->
num_mi•ªd_bønch_uö°
Ë/ cpu->
num_bønch_uö°
 : 0.0;

615 
	`Ârötf
(
f
, "Fa°F‹w¨dIn°ru˘i⁄†%Œd\n", 
˝u
->
num_Á°_f‹w¨d_ö°
);

616 
	`Ârötf
(
f
, "CommôãdIn°ru˘i⁄†%Œd\n", 
˝u
->
num_commôãd_ö°
);

617 
	`Ârötf
(
f
, "CommôãdIn°ru˘i⁄sPîCy˛ê%.4g\n", 
ö°_≥r_cy˛e
);

618 
	`Ârötf
(
f
, "CommôãdMi¸oIn°ru˘i⁄†%Œd\n", 
˝u
->
num_commôãd_uö°
);

619 
	`Ârötf
(
f
, "CommôãdMi¸oIn°ru˘i⁄sPîCy˛ê%.4g\n", 
uö°_≥r_cy˛e
);

620 
	`Ârötf
(
f
, "BønchPªdi˘i⁄Accuøcy = %.4g\n", 
bønch_acc
);

623 
	`TimögDumpSumm¨y
(
£lf
, 
f
);

624 
	}
}

627 
	#DUMP_DISPATCH_STAT
(
NAME
) { \

628 
	`Ârötf
(
f
, "Dispatch.Stall." #NAME " = %lld\n", \

629 
c‹e
->
di•©ch_°Æl
[
x86_di•©ch_°Æl_
##
NAME
]); \

630 }

	)

632 
	#DUMP_CORE_STRUCT_STATS
(
NAME
, 
ITEM
) { \

633 
	`Ârötf
(
f
, #NAME ".Sizê%d\n", (Ë
x86_
##
ITEM
##
_size
 * 
x86_˝u_num_thªads
); \

634 i‡(
x86_˝u_occu∑ncy_°©s
) \

635 
	`Ârötf
(
f
, #NAME ".Occu∑ncy = %.2f\n", 
	`asTimög
(
£lf
)->
cy˛e
 ? \

636 (Ë
c‹e
->
ITEM
##
_occu∑ncy
 / 
	`asTimög
(
£lf
)->
cy˛e
 : 0.0); \

637 
	`Ârötf
(
f
, #NAME ".FuŒ = %Œd\n", 
c‹e
->
ITEM
##
_fuŒ
); \

638 
	`Ârötf
(
f
, #NAME ".Ród†%Œd\n", 
c‹e
->
ITEM
##
_ªads
); \

639 
	`Ârötf
(
f
, #NAME ".Wrôe†%Œd\n", 
c‹e
->
ITEM
##
_wrôes
); \

640 }

	)

642 
	#DUMP_THREAD_STRUCT_STATS
(
NAME
, 
ITEM
) { \

643 
	`Ârötf
(
f
, #NAME ".Sizê%d\n", (Ë
x86_
##
ITEM
##
_size
); \

644 i‡(
x86_˝u_occu∑ncy_°©s
) \

645 
	`Ârötf
(
f
, #NAME ".Occu∑ncy = %.2f\n", 
	`asTimög
(
£lf
)->
cy˛e
 ? \

646 (Ë
thªad
->
ITEM
##
_occu∑ncy
 / 
	`asTimög
(
£lf
)->
cy˛e
 : 0.0); \

647 
	`Ârötf
(
f
, #NAME ".FuŒ = %Œd\n", 
thªad
->
ITEM
##
_fuŒ
); \

648 
	`Ârötf
(
f
, #NAME ".Ród†%Œd\n", 
thªad
->
ITEM
##
_ªads
); \

649 
	`Ârötf
(
f
, #NAME ".Wrôe†%Œd\n", 
thªad
->
ITEM
##
_wrôes
); \

650 }

	)

654 
	$X86DumpCpuC⁄fig
(
FILE
 *
f
)

657 
	`Ârötf
(
f
, "[ Config.General ]\n");

658 
	`Ârötf
(
f
, "Fªquícy = %d\n", 
x86_˝u_‰equícy
);

659 
	`Ârötf
(
f
, "C‹e†%d\n", 
x86_˝u_num_c‹es
);

660 
	`Ârötf
(
f
, "Thªad†%d\n", 
x86_˝u_num_thªads
);

661 
	`Ârötf
(
f
, "Fa°F‹w¨d = %Œd\n", 
x86_˝u_Á°_f‹w¨d_cou¡
);

662 
	`Ârötf
(
f
, "C⁄ãxtQu™tum = %d\n", 
x86_˝u_c⁄ãxt_qu™tum
);

663 
	`Ârötf
(
f
, "ThªadQu™tum = %d\n", 
x86_˝u_thªad_qu™tum
);

664 
	`Ârötf
(
f
, "ThªadSwôchPíÆty = %d\n", 
x86_˝u_thªad_swôch_≥«…y
);

665 
	`Ârötf
(
f
, "RecovîKöd = %s\n", 
x86_˝u_ªcovî_köd_m≠
[
x86_˝u_ªcovî_köd
]);

666 
	`Ârötf
(
f
, "RecovîPíÆty = %d\n", 
x86_˝u_ªcovî_≥«…y
);

667 
	`Ârötf
(
f
, "Pro˚ssPª„tchHöt†%d\n", 
x86_emu_¥o˚ss_¥e„tch_höts
);

668 
	`Ârötf
(
f
, "Pª„tchHi°‹ySizê%d\n", 
¥e„tch_hi°‹y_size
);

669 
	`Ârötf
(
f
, "\n");

672 
	`Ârötf
(
f
, "[ Config.Pipeline ]\n");

673 
	`Ârötf
(
f
, "FëchKöd = %s\n", 
x86_˝u_„tch_köd_m≠
[
x86_˝u_„tch_köd
]);

674 
	`Ârötf
(
f
, "DecodeWidth = %d\n", 
x86_˝u_decode_width
);

675 
	`Ârötf
(
f
, "Di•©chKöd = %s\n", 
x86_˝u_di•©ch_köd_m≠
[
x86_˝u_di•©ch_köd
]);

676 
	`Ârötf
(
f
, "Di•©chWidth = %d\n", 
x86_˝u_di•©ch_width
);

677 
	`Ârötf
(
f
, "IssueKöd = %s\n", 
x86_˝u_issue_köd_m≠
[
x86_˝u_issue_köd
]);

678 
	`Ârötf
(
f
, "IssueWidth = %d\n", 
x86_˝u_issue_width
);

679 
	`Ârötf
(
f
, "CommôKöd = %s\n", 
x86_˝u_commô_köd_m≠
[
x86_˝u_commô_köd
]);

680 
	`Ârötf
(
f
, "CommôWidth = %d\n", 
x86_˝u_commô_width
);

681 
	`Ârötf
(
f
, "Occu∑ncySèt†%s\n", 
x86_˝u_occu∑ncy_°©s
 ? "True" : "False");

682 
	`Ârötf
(
f
, "\n");

685 
	`Ârötf
(
f
, "[ Config.Queues ]\n");

686 
	`Ârötf
(
f
, "FëchQueueSizê%d\n", 
x86_„tch_queue_size
);

687 
	`Ârötf
(
f
, "U›QueueSizê%d\n", 
x86_u›_queue_size
);

688 
	`Ârötf
(
f
, "RobKöd = %s\n", 
x86_rob_köd_m≠
[
x86_rob_köd
]);

689 
	`Ârötf
(
f
, "RobSizê%d\n", 
x86_rob_size
);

690 
	`Ârötf
(
f
, "IqKöd = %s\n", 
x86_iq_köd_m≠
[
x86_iq_köd
]);

691 
	`Ârötf
(
f
, "IqSizê%d\n", 
x86_iq_size
);

692 
	`Ârötf
(
f
, "LsqKöd = %s\n", 
x86_lsq_köd_m≠
[
x86_lsq_köd
]);

693 
	`Ârötf
(
f
, "LsqSizê%d\n", 
x86_lsq_size
);

694 
	`Ârötf
(
f
, "RfKöd = %s\n", 
x86_ªg_fûe_köd_m≠
[
x86_ªg_fûe_köd
]);

695 
	`Ârötf
(
f
, "RfI¡Sizê%d\n", 
x86_ªg_fûe_öt_size
);

696 
	`Ârötf
(
f
, "RfFpSizê%d\n", 
x86_ªg_fûe_Â_size
);

697 
	`Ârötf
(
f
, "\n");

700 
	`Ârötf
(
f
, "[ Config.TraceCache ]\n");

701 
	`Ârötf
(
f
, "Pª£¡ = %s\n", 
x86_åa˚_ˇche_¥e£¡
 ? "True" : "False");

702 
	`Ârötf
(
f
, "Së†%d\n", 
x86_åa˚_ˇche_num_£ts
);

703 
	`Ârötf
(
f
, "Asso¯%d\n", 
x86_åa˚_ˇche_assoc
);

704 
	`Ârötf
(
f
, "Tø˚Sizê%d\n", 
x86_åa˚_ˇche_åa˚_size
);

705 
	`Ârötf
(
f
, "BønchMax = %d\n", 
x86_åa˚_ˇche_bønch_max
);

706 
	`Ârötf
(
f
, "QueueSizê%d\n", 
x86_åa˚_ˇche_queue_size
);

707 
	`Ârötf
(
f
, "\n");

710 
	`X86DumpFun˘i⁄ÆUnôsC⁄fig
(
f
);

713 
	`Ârötf
(
f
, "[ Config.BranchPredictor ]\n");

714 
	`Ârötf
(
f
, "Köd = %s\n", 
x86_b¥ed_köd_m≠
[
x86_b¥ed_köd
]);

715 
	`Ârötf
(
f
, "BTB.Së†%d\n", 
x86_b¥ed_btb_£ts
);

716 
	`Ârötf
(
f
, "BTB.Asso¯%d\n", 
x86_b¥ed_btb_assoc
);

717 
	`Ârötf
(
f
, "Bimod.Sizê%d\n", 
x86_b¥ed_bimod_size
);

718 
	`Ârötf
(
f
, "Choi˚.Sizê%d\n", 
x86_b¥ed_choi˚_size
);

719 
	`Ârötf
(
f
, "RAS.Sizê%d\n", 
x86_b¥ed_øs_size
);

720 
	`Ârötf
(
f
, "TwoLevñ.L1Sizê%d\n", 
x86_b¥ed_twﬁevñ_l1size
);

721 
	`Ârötf
(
f
, "TwoLevñ.L2Sizê%d\n", 
x86_b¥ed_twﬁevñ_l2size
);

722 
	`Ârötf
(
f
, "TwoLevñ.Hi°‹ySizê%d\n", 
x86_b¥ed_twﬁevñ_hi°_size
);

723 
	`Ârötf
(
f
, "\n");

726 
	`Ârötf
(
f
, "\n");

728 
	}
}

731 
	$X86CpuDumpRï‹t
(
X86Cpu
 *
£lf
, 
FILE
 *
f
)

733 
X86Emu
 *
emu
 = 
£lf
->emu;

734 
X86C‹e
 *
c‹e
;

735 
X86Thªad
 *
thªad
;

737 
now
;

739 
i
;

740 
j
;

743 
now
 = 
	`m2s_timî_gë_vÆue
(
	`asEmu
(
emu
)->
timî
);

746 
	`Ârötf
(
f
, ";\n; CPU Configuration\n;\n\n");

747 
	`X86DumpCpuC⁄fig
(
f
);

750 
	`Ârötf
(
f
, ";\n; Simulation Statistics\n;\n\n");

751 
	`Ârötf
(
f
, "; Global statistics\n");

752 
	`Ârötf
(
f
, "[ Global ]\n\n");

753 
	`Ârötf
(
f
, "Cy˛e†%Œd\n", 
	`asTimög
(
£lf
)->
cy˛e
);

754 
	`Ârötf
(
f
, "Timê%.2f\n", (Ë
now
 / 1000000);

755 
	`Ârötf
(
f
, "Cy˛esPîSec⁄d = %.0f\n", 
now
 ?

756 (Ë
	`asTimög
(
£lf
)->
cy˛e
 / 
now
 * 1000000 : 0.0);

757 
	`Ârötf
(
f
, "Mem‹yU£d = %lu\n", (Ë
mem_m≠≥d_•a˚
);

758 
	`Ârötf
(
f
, "Mem‹yU£dMax = %lu\n", (Ë
mem_max_m≠≥d_•a˚
);

759 
	`Ârötf
(
f
, "\n");

762 
	`Ârötf
(
f
, "; Dispatch stage\n");

763 
	`X86CpuDumpU›Rï‹t
(
£lf
, 
f
, sñf->
num_di•©ched_uö°_¨øy
,

764 "Di•©ch", 
x86_˝u_di•©ch_width
);

767 
	`Ârötf
(
f
, "; Issue stage\n");

768 
	`X86CpuDumpU›Rï‹t
(
£lf
, 
f
, sñf->
num_issued_uö°_¨øy
,

769 "Issue", 
x86_˝u_issue_width
);

772 
	`Ârötf
(
f
, "; Commit stage\n");

773 
	`X86CpuDumpU›Rï‹t
(
£lf
, 
f
, sñf->
num_commôãd_uö°_¨øy
,

774 "Commô", 
x86_˝u_commô_width
);

777 
	`Ârötf
(
f
, "; Committed branches\n");

778 
	`Ârötf
(
f
, "; Branches - Number of committed control uops\n");

779 
	`Ârötf
(
f
, "; Squashed - Number of mispredicted uops squashed fromÅhe ROB\n");

780 
	`Ârötf
(
f
, "; Mispred - Number of mispredicted branches inÅhe correctÖath\n");

781 
	`Ârötf
(
f
, "; PredAcc - Predictionáccuracy\n");

782 
	`Ârötf
(
f
, "Commô.Bønche†%Œd\n", 
£lf
->
num_bønch_uö°
);

783 
	`Ârötf
(
f
, "Commô.Squashed = %Œd\n", 
£lf
->
num_squashed_uö°
);

784 
	`Ârötf
(
f
, "Commô.Mi•ªd = %Œd\n", 
£lf
->
num_mi•ªd_bønch_uö°
);

785 
	`Ârötf
(
f
, "Commô.PªdAc¯%.4g\n", 
£lf
->
num_bønch_uö°
 ?

786 (Ë(
£lf
->
num_bønch_uö°
 - sñf->
num_mi•ªd_bønch_uö°
) / self->num_branch_uinst : 0.0);

787 
	`Ârötf
(
f
, "\n");

790 
i
 = 0; i < 
x86_˝u_num_c‹es
; i++)

793 
c‹e
 = 
£lf
->
c‹es
[
i
];

794 
	`Ârötf
(
f
, "\n; Sèti°ic†f‹ c‹ê%d\n", 
c‹e
->
id
);

795 
	`Ârötf
(
f
, "[ c%d ]\n\n", 
c‹e
->
id
);

798 
	`X86C‹eDumpFun˘i⁄ÆUnôsRï‹t
(
c‹e
, 
f
);

801 i‡(
x86_˝u_di•©ch_köd
 =
x86_˝u_di•©ch_köd_time¶i˚
)

803 
	`Ârötf
(
f
, "; Dispatch slots usage (sum = cycles * dispatch width)\n");

804 
	`Ârötf
(
f
, "; used - dispatch slot was used byáÇon-spec uop\n");

805 
	`Ârötf
(
f
, "; spec - used byá mispeculated uop\n");

806 
	`Ârötf
(
f
, "; ctx -Ço contextállocatedÅoÅhread\n");

807 
	`Ârötf
(
f
, "; uopq,rob,iq,lsq,rename -Ço space in structure\n");

808 
	`DUMP_DISPATCH_STAT
(
u£d
);

809 
	`DUMP_DISPATCH_STAT
(
•ec
);

810 
	`DUMP_DISPATCH_STAT
(
u›_queue
);

811 
	`DUMP_DISPATCH_STAT
(
rob
);

812 
	`DUMP_DISPATCH_STAT
(
iq
);

813 
	`DUMP_DISPATCH_STAT
(
lsq
);

814 
	`DUMP_DISPATCH_STAT
(
ª«me
);

815 
	`DUMP_DISPATCH_STAT
(
˘x
);

816 
	`Ârötf
(
f
, "\n");

820 
	`Ârötf
(
f
, "; Dispatch stage\n");

821 
	`X86CpuDumpU›Rï‹t
(
£lf
, 
f
, 
c‹e
->
num_di•©ched_uö°_¨øy
,

822 "Di•©ch", 
x86_˝u_di•©ch_width
);

825 
	`Ârötf
(
f
, "; Issue stage\n");

826 
	`X86CpuDumpU›Rï‹t
(
£lf
, 
f
, 
c‹e
->
num_issued_uö°_¨øy
,

827 "Issue", 
x86_˝u_issue_width
);

830 
	`Ârötf
(
f
, "; Commit stage\n");

831 
	`X86CpuDumpU›Rï‹t
(
£lf
, 
f
, 
c‹e
->
num_commôãd_uö°_¨øy
,

832 "Commô", 
x86_˝u_commô_width
);

835 
	`Ârötf
(
f
, "; Committed branches\n");

836 
	`Ârötf
(
f
, "Commô.Bønche†%Œd\n", 
c‹e
->
num_bønch_uö°
);

837 
	`Ârötf
(
f
, "Commô.Squashed = %Œd\n", 
c‹e
->
num_squashed_uö°
);

838 
	`Ârötf
(
f
, "Commô.Mi•ªd = %Œd\n", 
c‹e
->
num_mi•ªd_bønch_uö°
);

839 
	`Ârötf
(
f
, "Commô.PªdAc¯%.4g\n", 
c‹e
->
num_bønch_uö°
 ?

840 (Ë(
c‹e
->
num_bønch_uö°
 -

841 
c‹e
->
num_mi•ªd_bønch_uö°
)

842 / 
c‹e
->
num_bønch_uö°
 : 0.0);

843 
	`Ârötf
(
f
, "\n");

846 
	`Ârötf
(
f
, "; Structure statistics (reorder buffer, instruction queue,\n");

847 
	`Ârötf
(
f
, ";Üoad-store queue,ánd integer/floating-pointÑegister file)\n");

848 
	`Ârötf
(
f
, "; Size - Available size\n");

849 
	`Ârötf
(
f
, "; Occupancy - AverageÇumber of occupiedÉntries\n");

850 
	`Ârötf
(
f
, "; Full - Number of cycles whenÅhe structure was full\n");

851 
	`Ârötf
(
f
, "; Reads, Writes - AccessesÅoÅhe structure\n");

852 i‡(
x86_rob_köd
 =
x86_rob_köd_sh¨ed
)

853 
	`DUMP_CORE_STRUCT_STATS
(
ROB
, 
rob
);

854 i‡(
x86_iq_köd
 =
x86_iq_köd_sh¨ed
)

856 
	`DUMP_CORE_STRUCT_STATS
(
IQ
, 
iq
);

857 
	`Ârötf
(
f
, "IQ.WakeupAc˚s£†%Œd\n", 
c‹e
->
iq_wakeup_ac˚s£s
);

859 i‡(
x86_lsq_köd
 =
x86_lsq_köd_sh¨ed
)

860 
	`DUMP_CORE_STRUCT_STATS
(
LSQ
, 
lsq
);

861 i‡(
x86_ªg_fûe_köd
 =
x86_ªg_fûe_köd_sh¨ed
)

863 
	`DUMP_CORE_STRUCT_STATS
(
RF_I¡
, 
ªg_fûe_öt
);

864 
	`DUMP_CORE_STRUCT_STATS
(
RF_Fp
, 
ªg_fûe_Â
);

866 
	`Ârötf
(
f
, "\n");

869 
j
 = 0; j < 
x86_˝u_num_thªads
; j++)

871 
thªad
 = 
c‹e
->
thªads
[
j
];

872 
	`Ârötf
(
f
, "\n; Statistics for core %d -Åhread %d\n",

873 
c‹e
->
id
, 
thªad
->
id_ö_c‹e
);

874 
	`Ârötf
(
f
, "[ %†]\n\n", 
thªad
->
«me
);

877 
	`Ârötf
(
f
, "; Dispatch stage\n");

878 
	`X86CpuDumpU›Rï‹t
(
£lf
, 
f
, 
thªad
->
num_di•©ched_uö°_¨øy
,

879 "Di•©ch", 
x86_˝u_di•©ch_width
);

882 
	`Ârötf
(
f
, "; Issue stage\n");

883 
	`X86CpuDumpU›Rï‹t
(
£lf
, 
f
, 
thªad
->
num_issued_uö°_¨øy
,

884 "Issue", 
x86_˝u_issue_width
);

887 
	`Ârötf
(
f
, "; Commit stage\n");

888 
	`X86CpuDumpU›Rï‹t
(
£lf
, 
f
, 
thªad
->
num_commôãd_uö°_¨øy
,

889 "Commô", 
x86_˝u_commô_width
);

892 
	`Ârötf
(
f
, "; Committed branches\n");

893 
	`Ârötf
(
f
, "Commô.Bønche†%Œd\n", 
thªad
->
num_bønch_uö°
);

894 
	`Ârötf
(
f
, "Commô.Squashed = %Œd\n", 
thªad
->
num_squashed_uö°
);

895 
	`Ârötf
(
f
, "Commô.Mi•ªd = %Œd\n", 
thªad
->
num_mi•ªd_bønch_uö°
);

896 
	`Ârötf
(
f
, "Commô.PªdAc¯%.4g\n", 
thªad
->
num_bønch_uö°
 ?

897 (Ë(
thªad
->
num_bønch_uö°
 -Åhªad->
num_mi•ªd_bønch_uö°
) /Åhread->num_branch_uinst : 0.0);

898 
	`Ârötf
(
f
, "\n");

901 
	`Ârötf
(
f
, "; Structure statistics (reorder buffer, instruction queue,Üoad-store queue,\n");

902 
	`Ârötf
(
f
, "; integer/floating-pointÑegister file,ándÑenamingÅable)\n");

903 i‡(
x86_rob_köd
 =
x86_rob_köd_¥iv©e
)

904 
	`DUMP_THREAD_STRUCT_STATS
(
ROB
, 
rob
);

905 i‡(
x86_iq_köd
 =
x86_iq_köd_¥iv©e
)

907 
	`DUMP_THREAD_STRUCT_STATS
(
IQ
, 
iq
);

908 
	`Ârötf
(
f
, "IQ.WakeupAc˚s£†%Œd\n", 
thªad
->
iq_wakeup_ac˚s£s
);

910 i‡(
x86_lsq_köd
 =
x86_lsq_köd_¥iv©e
)

911 
	`DUMP_THREAD_STRUCT_STATS
(
LSQ
, 
lsq
);

912 i‡(
x86_ªg_fûe_köd
 =
x86_ªg_fûe_köd_¥iv©e
)

914 
	`DUMP_THREAD_STRUCT_STATS
(
RF_I¡
, 
ªg_fûe_öt
);

915 
	`DUMP_THREAD_STRUCT_STATS
(
RF_Fp
, 
ªg_fûe_Â
);

917 
	`Ârötf
(
f
, "RAT.I¡Ród†%Œd\n", 
thªad
->
øt_öt_ªads
);

918 
	`Ârötf
(
f
, "RAT.I¡Wrôe†%Œd\n", 
thªad
->
øt_öt_wrôes
);

919 
	`Ârötf
(
f
, "RAT.FpRód†%Œd\n", 
thªad
->
øt_Â_ªads
);

920 
	`Ârötf
(
f
, "RAT.FpWrôe†%Œd\n", 
thªad
->
øt_Â_wrôes
);

921 
	`Ârötf
(
f
, "BTB.Ród†%Œd\n", 
thªad
->
btb_ªads
);

922 
	`Ârötf
(
f
, "BTB.Wrôe†%Œd\n", 
thªad
->
btb_wrôes
);

923 
	`Ârötf
(
f
, "\n");

926 i‡(
thªad
->
åa˚_ˇche
)

927 
	`X86ThªadDumpTø˚CacheRï‹t
(
thªad
, 
f
);

930 
	}
}

933 
	$X86CpuDumpU›Rï‹t
(
X86Cpu
 *
£lf
, 
FILE
 *
f
, *
u›_°©s
,

934 *
¥efix
, 
≥ak_ùc
)

936 
uö°_öt_cou¡
 = 0;

937 
uö°_logic_cou¡
 = 0;

938 
uö°_Â_cou¡
 = 0;

939 
uö°_mem_cou¡
 = 0;

940 
uö°_˘æ_cou¡
 = 0;

941 
uö°_tŸÆ
 = 0;

943 *
«me
;

944 
x86_uö°_Êag_t
 
Êags
;

945 
i
;

947 
i
 = 0; i < 
x86_uö°_›code_cou¡
; i++)

949 
«me
 = 
x86_uö°_öfo
[
i
].name;

950 
Êags
 = 
x86_uö°_öfo
[
i
].flags;

952 
	`Ârötf
(
f
, "%s.U›.%†%Œd\n", 
¥efix
, 
«me
, 
u›_°©s
[
i
]);

953 i‡(
Êags
 & 
X86_UINST_INT
)

954 
uö°_öt_cou¡
 +
u›_°©s
[
i
];

955 i‡(
Êags
 & 
X86_UINST_LOGIC
)

956 
uö°_logic_cou¡
 +
u›_°©s
[
i
];

957 i‡(
Êags
 & 
X86_UINST_FP
)

958 
uö°_Â_cou¡
 +
u›_°©s
[
i
];

959 i‡(
Êags
 & 
X86_UINST_MEM
)

960 
uö°_mem_cou¡
 +
u›_°©s
[
i
];

961 i‡(
Êags
 & 
X86_UINST_CTRL
)

962 
uö°_˘æ_cou¡
 +
u›_°©s
[
i
];

963 
uö°_tŸÆ
 +
u›_°©s
[
i
];

965 
	`Ârötf
(
f
, "%s.I¡egî = %Œd\n", 
¥efix
, 
uö°_öt_cou¡
);

966 
	`Ârötf
(
f
, "%s.Logi¯%Œd\n", 
¥efix
, 
uö°_logic_cou¡
);

967 
	`Ârötf
(
f
, "%s.FlﬂtögPoöà%Œd\n", 
¥efix
, 
uö°_Â_cou¡
);

968 
	`Ârötf
(
f
, "%s.Mem‹y = %Œd\n", 
¥efix
, 
uö°_mem_cou¡
);

969 
	`Ârötf
(
f
, "%s.Cå»%Œd\n", 
¥efix
, 
uö°_˘æ_cou¡
);

970 
	`Ârötf
(
f
, "%s.WndSwôch = %Œd\n", 
¥efix
,

971 
u›_°©s
[
x86_uö°_ˇŒ
] + u›_°©s[
x86_uö°_ªt
]);

972 
	`Ârötf
(
f
, "%s.TŸÆ = %Œd\n", 
¥efix
, 
uö°_tŸÆ
);

973 
	`Ârötf
(
f
, "%s.IPC = %.4g\n", 
¥efix
, 
	`asTimög
(
£lf
)->
cy˛e
 ?

974 (Ë
uö°_tŸÆ
 / 
	`asTimög
(
£lf
)->
cy˛e
 : 0.0);

975 
	`Ârötf
(
f
, "%s.DutyCy˛ê%.4g\n", 
¥efix
,

976 
	`asTimög
(
£lf
)->
cy˛e
 && 
≥ak_ùc
 ?

977 (Ë
uö°_tŸÆ
 / 
	`asTimög
(
£lf
)->
cy˛e
 / 
≥ak_ùc
 : 0.0);

978 
	`Ârötf
(
f
, "\n");

979 
	}
}

982 
	$X86CpuRun
(
Timög
 *
£lf
)

984 
X86Cpu
 *
˝u
 = 
	`asX86Cpu
(
£lf
);

985 
X86Emu
 *
emu
 = 
˝u
->emu;

988 i‡(
emu
->
föished_li°_cou¡
 >emu->
c⁄ãxt_li°_cou¡
)

989  
FALSE
;

992 i‡(
x86_˝u_Á°_f‹w¨d_cou¡
 && 
	`asEmu
(
emu
)->
ö°ru˘i⁄s


993 < 
x86_˝u_Á°_f‹w¨d_cou¡
)

994 
	`X86CpuFa°F‹w¨d
(
˝u
);

997 i‡(
x86_emu_max_ö°
 && 
˝u
->
num_commôãd_ö°
 >=

998 
x86_emu_max_ö°
 - 
x86_˝u_Á°_f‹w¨d_cou¡
)

999 
esim_föish
 = 
esim_föish_x86_max_ö°
;

1002 i‡(
x86_emu_max_cy˛es
 && 
£lf
->
cy˛e
 >= x86_emu_max_cycles)

1003 
esim_föish
 = 
esim_föish_x86_max_cy˛es
;

1006 i‡(
esim_föish
)

1007  
TRUE
;

1010 
£lf
->
cy˛e
++;

1014 
	`X86CpuEm±yTø˚Li°
(
˝u
);

1017 
	`X86CpuRunSèges
(
˝u
);

1020 
	`X86EmuPro˚ssEvíts
(
emu
);

1023  
TRUE
;

1024 
	}
}

1027 
	$X86CpuRunSèges
(
X86Cpu
 *
£lf
)

1030 
	`X86CpuScheduÀ
(
£lf
);

1033 
	`X86CpuCommô
(
£lf
);

1034 
	`X86CpuWrôeback
(
£lf
);

1035 
	`X86CpuIssue
(
£lf
);

1036 
	`X86CpuDi•©ch
(
£lf
);

1037 
	`X86CpuDecode
(
£lf
);

1038 
	`X86CpuFëch
(
£lf
);

1041 i‡(
x86_˝u_occu∑ncy_°©s
)

1042 
	`X86CpuUpd©eOccu∑ncySèts
(
£lf
);

1043 
	}
}

1047 
	$X86CpuFa°F‹w¨d
(
X86Cpu
 *
£lf
)

1049 
X86Emu
 *
emu
 = 
£lf
->emu;

1053 
	`asEmu
(
emu
)->
ö°ru˘i⁄s
 < 
x86_˝u_Á°_f‹w¨d_cou¡
 && !
esim_föish
)

1054 
	`X86EmuRun
(
	`asEmu
(
emu
));

1057 
£lf
->
num_Á°_f‹w¨d_ö°
 = 
	`asEmu
(
emu
)->
ö°ru˘i⁄s
;

1060 i‡(
esim_föish
)

1061 
	`w¨nög
("x86 fast-forwarding finished simulation.\n%s",

1062 
x86_˝u_îr_Á°_f‹w¨d
);

1063 
	}
}

1066 
	$X86CpuAddToTø˚Li°
(
X86Cpu
 *
£lf
, 
x86_u›_t
 *
u›
)

1068 
	`as£π
(
	`x86_åacög
());

1069 
	`as£π
(!
u›
->
ö_u›_åa˚_li°
);

1071 
u›
->
ö_u›_åa˚_li°
 = 1;

1072 
	`löked_li°_add
(
£lf
->
u›_åa˚_li°
, 
u›
);

1073 
	}
}

1076 
	$X86CpuEm±yTø˚Li°
(
X86Cpu
 *
£lf
)

1078 
X86Thªad
 *
thªad
;

1079 
X86C‹e
 *
c‹e
;

1080 
löked_li°_t
 *
u›_åa˚_li°
;

1081 
x86_u›_t
 *
u›
;

1083 
u›_åa˚_li°
 = 
£lf
->uop_trace_list;

1084 
u›_åa˚_li°
->
cou¡
)

1087 
	`löked_li°_hód
(
u›_åa˚_li°
);

1088 
u›
 = 
	`löked_li°_gë
(
u›_åa˚_li°
);

1089 
thªad
 = 
u›
->thread;

1090 
c‹e
 = 
thªad
->core;

1091 
	`löked_li°_ªmove
(
u›_åa˚_li°
);

1092 
	`as£π
(
u›
->
ö_u›_åa˚_li°
);

1095 
	`x86_åa˚
("x86.end_inst id=%lld core=%d\n",

1096 
u›
->
id_ö_c‹e
, 
c‹e
->
id
);

1099 
u›
->
ö_u›_åa˚_li°
 = 0;

1100 
	`x86_u›_‰ì_if_nŸ_queued
(
u›
);

1102 
	}
}

1105 
	#UPDATE_THREAD_OCCUPANCY_STATS
(
ITEM
) { \

1106 
thªad
->
ITEM
##
_occu∑ncy
 +thªad->ITEM##
_cou¡
; \

1107 i‡(
thªad
->
ITEM
##
_cou¡
 =
x86_
##ITEM##
_size
) \

1108 
thªad
->
ITEM
##
_fuŒ
++; \

1109 }

	)

1112 
	#UPDATE_CORE_OCCUPANCY_STATS
(
ITEM
) { \

1113 
c‹e
->
ITEM
##
_occu∑ncy
 +c‹e->ITEM##
_cou¡
; \

1114 i‡(
c‹e
->
ITEM
##
_cou¡
 =
x86_
##ITEM##
_size
 * 
x86_˝u_num_thªads
) \

1115 
c‹e
->
ITEM
##
_fuŒ
++; \

1116 }

	)

1119 
	$X86CpuUpd©eOccu∑ncySèts
(
X86Cpu
 *
£lf
)

1121 
X86C‹e
 *
c‹e
;

1122 
X86Thªad
 *
thªad
;

1124 
i
;

1125 
j
;

1127 
i
 = 0; i < 
x86_˝u_num_c‹es
; i++)

1129 
c‹e
 = 
£lf
->
c‹es
[
i
];

1132 i‡(
x86_rob_köd
 =
x86_rob_köd_sh¨ed
)

1133 
	`UPDATE_CORE_OCCUPANCY_STATS
(
rob
);

1134 i‡(
x86_iq_köd
 =
x86_iq_köd_sh¨ed
)

1135 
	`UPDATE_CORE_OCCUPANCY_STATS
(
iq
);

1136 i‡(
x86_lsq_köd
 =
x86_lsq_köd_sh¨ed
)

1137 
	`UPDATE_CORE_OCCUPANCY_STATS
(
lsq
);

1138 i‡(
x86_ªg_fûe_köd
 =
x86_ªg_fûe_köd_sh¨ed
)

1140 
	`UPDATE_CORE_OCCUPANCY_STATS
(
ªg_fûe_öt
);

1141 
	`UPDATE_CORE_OCCUPANCY_STATS
(
ªg_fûe_Â
);

1145 
j
 = 0; j < 
x86_˝u_num_thªads
; j++)

1147 
thªad
 = 
c‹e
->
thªads
[
j
];

1148 i‡(
x86_rob_köd
 =
x86_rob_köd_¥iv©e
)

1149 
	`UPDATE_THREAD_OCCUPANCY_STATS
(
rob
);

1150 i‡(
x86_iq_köd
 =
x86_iq_köd_¥iv©e
)

1151 
	`UPDATE_THREAD_OCCUPANCY_STATS
(
iq
);

1152 i‡(
x86_lsq_köd
 =
x86_lsq_köd_¥iv©e
)

1153 
	`UPDATE_THREAD_OCCUPANCY_STATS
(
lsq
);

1154 i‡(
x86_ªg_fûe_köd
 =
x86_ªg_fûe_köd_¥iv©e
)

1156 
	`UPDATE_THREAD_OCCUPANCY_STATS
(
ªg_fûe_öt
);

1157 
	`UPDATE_THREAD_OCCUPANCY_STATS
(
ªg_fûe_Â
);

1161 
	}
}

	@timing/cpu.h

20 #i‚de‡
X86_ARCH_TIMING_CPU_H


21 
	#X86_ARCH_TIMING_CPU_H


	)

23 
	~<¨ch/comm⁄/timög.h
>

24 
	~<¨ch/x86/emu/uö°.h
>

25 
	~<lib/utû/˛ass.h
>

29 
	gx86_u›_t
;

38 
	$CLASS_BEGIN
(
X86Cpu
, 
Timög
)

41 
X86Emu
 *
emu
;

44 
X86C‹e
 **
c‹es
;

47 
u›_id_cou¡î
;

48 *
°age
;

55 
mö_Æloc_cy˛e
;

58 
löked_li°_t
 *
u›_åa˚_li°
;

61 
num_Á°_f‹w¨d_ö°
;

62 
num_„tched_uö°
;

63 
num_di•©ched_uö°_¨øy
[
x86_uö°_›code_cou¡
];

64 
num_issued_uö°_¨øy
[
x86_uö°_›code_cou¡
];

65 
num_commôãd_uö°_¨øy
[
x86_uö°_›code_cou¡
];

66 
num_commôãd_uö°
;

67 
num_commôãd_ö°
;

68 
num_squashed_uö°
;

69 
num_bønch_uö°
;

70 
num_mi•ªd_bønch_uö°
;

71 
time
;

74 
œ°_commôãd
;

75 
œ°_dump
;

77 
	$CLASS_END
(
X86Cpu
)

80 
	`X86CpuCª©e
(
X86Cpu
 *
£lf
, 
X86Emu
 *
emu
);

81 
	`X86CpuDe°roy
(
X86Cpu
 *
£lf
);

83 
	`X86CpuDump
(
Obje˘
 *
£lf
, 
FILE
 *
f
);

84 
	`X86CpuDumpSumm¨y
(
Timög
 *
£lf
, 
FILE
 *
f
);

85 
	`X86CpuDumpRï‹t
(
X86Cpu
 *
£lf
, 
FILE
 *
f
);

86 
	`X86CpuDumpU›Rï‹t
(
X86Cpu
 *
£lf
, 
FILE
 *
f
, *
u›_°©s
,

87 *
¥efix
, 
≥ak_ùc
);

89 
	`X86CpuRun
(
Timög
 *
£lf
);

90 
	`X86CpuRunSèges
(
X86Cpu
 *
£lf
);

91 
	`X86CpuFa°F‹w¨d
(
X86Cpu
 *
£lf
);

93 
	`X86CpuAddToTø˚Li°
(
X86Cpu
 *
£lf
, 
x86_u›_t
 *
u›
);

94 
	`X86CpuEm±yTø˚Li°
(
X86Cpu
 *
£lf
);

96 
	`X86CpuUpd©eOccu∑ncySèts
(
X86Cpu
 *
£lf
);

105 
	#x86_˝u_îr‹_debug
(...Ë
	`debug
(
x86_˝u_îr‹_debug_ˇãg‹y
, 
__VA_ARGS__
)

	)

106 
x86_˝u_îr‹_debug_ˇãg‹y
;

108 *
x86_c⁄fig_hñp
;

110 *
x86_c⁄fig_fûe_«me
;

111 *
x86_˝u_ªp‹t_fûe_«me
;

113 
x86_˝u_num_c‹es
;

114 
x86_˝u_num_thªads
;

116 
x86_˝u_c⁄ãxt_qu™tum
;

118 
x86_˝u_thªad_qu™tum
;

119 
x86_˝u_thªad_swôch_≥«…y
;

122 *
x86_˝u_ªcovî_köd_m≠
[];

123 
	ex86_˝u_ªcovî_köd_t


125 
x86_˝u_ªcovî_köd_wrôeback
 = 0,

126 
x86_˝u_ªcovî_köd_commô


127 } 
x86_˝u_ªcovî_köd
;

128 
x86_˝u_ªcovî_≥«…y
;

131 *
x86_˝u_„tch_köd_m≠
[];

132 
	ex86_˝u_„tch_köd_t


134 
x86_˝u_„tch_köd_sh¨ed
 = 0,

135 
x86_˝u_„tch_köd_time¶i˚
,

136 
x86_˝u_„tch_köd_swôch⁄evít


137 } 
x86_˝u_„tch_köd
;

140 
x86_˝u_decode_width
;

143 *
x86_˝u_di•©ch_köd_m≠
[];

144 
	ex86_˝u_di•©ch_köd_t


146 
x86_˝u_di•©ch_köd_sh¨ed
 = 0,

147 
x86_˝u_di•©ch_köd_time¶i˚
,

148 } 
x86_˝u_di•©ch_köd
;

149 
x86_˝u_di•©ch_width
;

152 *
x86_˝u_issue_köd_m≠
[];

153 
	ex86_˝u_issue_köd_t


155 
x86_˝u_issue_köd_sh¨ed
 = 0,

156 
x86_˝u_issue_köd_time¶i˚
,

157 } 
x86_˝u_issue_köd
;

158 
x86_˝u_issue_width
;

161 *
x86_˝u_commô_köd_m≠
[];

162 
	ex86_˝u_commô_köd_t


164 
x86_˝u_commô_köd_sh¨ed
 = 0,

165 
x86_˝u_commô_köd_time¶i˚


166 } 
x86_˝u_commô_köd
;

167 
x86_˝u_commô_width
;

171 
	#x86_åacög
(Ë
	`åa˚_°©us
(
x86_åa˚_ˇãg‹y
)

	)

172 
	#x86_åa˚
(...Ë
	`åa˚
(
x86_åa˚_ˇãg‹y
, 
__VA_ARGS__
)

	)

173 
	#x86_åa˚_hódî
(...Ë
	`åa˚_hódî
(
x86_åa˚_ˇãg‹y
, 
__VA_ARGS__
)

	)

174 
x86_åa˚_ˇãg‹y
;

177 
	`X86CpuRódC⁄fig
();

178 
	`X86CpuInô
();

179 
	`X86CpuD⁄e
();

	@timing/decode.c

21 
	~<lib/esim/åa˚.h
>

22 
	~<lib/utû/li°.h
>

23 
	~<mem-sy°em/moduÀ.h
>

25 
	~"c‹e.h
"

26 
	~"˝u.h
"

27 
	~"decode.h
"

28 
	~"„tch-queue.h
"

29 
	~"thªad.h
"

30 
	~"u›.h
"

31 
	~"u›-queue.h
"

39 
	$X86ThªadDecode
(
X86Thªad
 *
£lf
)

41 
X86C‹e
 *
c‹e
 = 
£lf
->core;

43 
li°_t
 *
„tchq
 = 
£lf
->
„tch_queue
;

44 
li°_t
 *
u›q
 = 
£lf
->
u›_queue
;

45 
x86_u›_t
 *
u›
;

46 
i
;

48 
i
 = 0; i < 
x86_˝u_decode_width
; i++)

51 i‡(!
	`li°_cou¡
(
„tchq
))

53 i‡(
	`li°_cou¡
(
u›q
Ë>
x86_u›_queue_size
)

55 
u›
 = 
	`li°_gë
(
„tchq
, 0);

56 
	`as£π
(
	`x86_u›_exi°s
(
u›
));

61 i‡(
u›
->
åa˚_ˇche
)

65 
	`X86ThªadRemoveFromFëchQueue
(
£lf
, 0);

66 
	`li°_add
(
u›q
, 
u›
);

67 
u›
->
ö_u›_queue
 = 1;

68 
u›
 = 
	`li°_gë
(
„tchq
, 0);

69 } 
u›
 && u›->
åa˚_ˇche
);

75 
	`as£π
(!
u›
->
m›_ödex
);

76 i‡(!
	`mod_ö_Êight_ac˚ss
(
£lf
->
ö°_mod
, 
u›
->
„tch_ac˚ss
, u›->
„tch_addªss
))

81 
	`X86ThªadRemoveFromFëchQueue
(
£lf
, 0);

82 
	`li°_add
(
u›q
, 
u›
);

83 
u›
->
ö_u›_queue
 = 1;

86 
	`x86_åa˚
("x86.inst id=%lld core=%d stg=\"dec\"\n",

87 
u›
->
id_ö_c‹e
, 
c‹e
->
id
);

90 
u›
 = 
	`li°_gë
(
„tchq
, 0);

92 } 
u›
 && u›->
m›_ödex
);

95 
	}
}

104 
	$X86CpuDecode
(
X86Cpu
 *
£lf
)

106 
i
;

107 
j
;

109 
£lf
->
°age
 = "decode";

110 
i
 = 0; i < 
x86_˝u_num_c‹es
; i++)

111 
j
 = 0; j < 
x86_˝u_num_thªads
; j++)

112 
	`X86ThªadDecode
(
£lf
->
c‹es
[
i
]->
thªads
[
j
]);

113 
	}
}

	@timing/decode.h

20 #i‚de‡
ARCH_X86_TIMING_DECODE_H


21 
	#ARCH_X86_TIMING_DECODE_H


	)

23 
	~<lib/utû/˛ass.h
>

29 
X86CpuDecode
(
X86Cpu
 *
£lf
);

	@timing/dispatch.c

21 
	~<¨ch/x86/emu/c⁄ãxt.h
>

22 
	~<lib/esim/åa˚.h
>

23 
	~<lib/utû/li°.h
>

25 
	~"c‹e.h
"

26 
	~"˝u.h
"

27 
	~"di•©ch.h
"

28 
	~"ö°-queue.h
"

29 
	~"lﬂd-°‹e-queue.h
"

30 
	~"ªg-fûe.h
"

31 
	~"rob.h
"

32 
	~"thªad.h
"

33 
	~"åa˚-ˇche.h
"

38 
x86_di•©ch_°Æl_t
 
	$X86ThªadC™Di•©ch
(
X86Thªad
 *
£lf
)

40 
X86C‹e
 *
c‹e
 = 
£lf
->core;

41 
li°_t
 *
u›q
 = 
£lf
->
u›_queue
;

42 
x86_u›_t
 *
u›
;

45 
u›
 = 
	`li°_gë
(
u›q
, 0);

46 i‡(!
u›
)

47  !
£lf
->
˘x
 || !
	`X86C⁄ãxtGëSèã
(£lf->˘x, 
X86C⁄ãxtRu¬ög
) ?

48 
x86_di•©ch_°Æl_˘x
 : 
x86_di•©ch_°Æl_u›_queue
;

51 i‡(!
	`X86C‹eC™EnqueueInROB
(
c‹e
, 
u›
))

52  
x86_di•©ch_°Æl_rob
;

53 i‡(!(
u›
->
Êags
 & 
X86_UINST_MEM
Ë&& !
	`X86ThªadC™In£πInIQ
(
£lf
, uop))

54  
x86_di•©ch_°Æl_iq
;

55 i‡((
u›
->
Êags
 & 
X86_UINST_MEM
Ë&& !
	`X86ThªadC™In£πInLSQ
(
£lf
, uop))

56  
x86_di•©ch_°Æl_lsq
;

57 i‡(!
	`X86ThªadC™RíameU›
(
£lf
, 
u›
))

58  
x86_di•©ch_°Æl_ª«me
;

60  
x86_di•©ch_°Æl_u£d
;

61 
	}
}

64 
	$X86ThªadDi•©ch
(
X86Thªad
 *
£lf
, 
qu™tum
)

66 
X86C‹e
 *
c‹e
 = 
£lf
->core;

67 
X86Cpu
 *
˝u
 = 
£lf
->cpu;

69 
x86_u›_t
 *
u›
;

70 
x86_di•©ch_°Æl_t
 
°Æl
;

72 
qu™tum
)

75 
°Æl
 = 
	`X86ThªadC™Di•©ch
(
£lf
);

76 i‡(
°Æl
 !
x86_di•©ch_°Æl_u£d
)

78 
c‹e
->
di•©ch_°Æl
[
°Æl
] +
qu™tum
;

83 
u›
 = 
	`li°_ªmove_©
(
£lf
->
u›_queue
, 0);

84 
	`as£π
(
	`x86_u›_exi°s
(
u›
));

85 
u›
->
ö_u›_queue
 = 0;

88 
	`X86ThªadRíameU›
(
£lf
, 
u›
);

91 
	`X86C‹eEnqueueInROB
(
c‹e
, 
u›
);

92 
c‹e
->
rob_wrôes
++;

93 
£lf
->
rob_wrôes
++;

96 i‡(!(
u›
->
Êags
 & 
X86_UINST_MEM
))

98 
	`X86ThªadIn£πInIQ
(
£lf
, 
u›
);

99 
c‹e
->
iq_wrôes
++;

100 
£lf
->
iq_wrôes
++;

104 i‡(
u›
->
Êags
 & 
X86_UINST_MEM
)

106 
	`X86ThªadIn£πInLSQ
(
£lf
, 
u›
);

107 
c‹e
->
lsq_wrôes
++;

108 
£lf
->
lsq_wrôes
++;

112 
c‹e
->
di•©ch_°Æl
[
u›
->
•ecmode
 ? 
x86_di•©ch_°Æl_•ec
 : 
x86_di•©ch_°Æl_u£d
]++;

113 
£lf
->
num_di•©ched_uö°_¨øy
[
u›
->
uö°
->
›code
]++;

114 
c‹e
->
num_di•©ched_uö°_¨øy
[
u›
->
uö°
->
›code
]++;

115 
˝u
->
num_di•©ched_uö°_¨øy
[
u›
->
uö°
->
›code
]++;

116 i‡(
u›
->
åa˚_ˇche
)

117 
£lf
->
åa˚_ˇche
->
num_di•©ched_uö°
++;

120 
qu™tum
--;

123 
	`x86_åa˚
("x86.inst id=%lld core=%d stg=\"di\"\n",

124 
u›
->
id_ö_c‹e
, 
c‹e
->
id
);

128  
qu™tum
;

129 
	}
}

132 
	$X86C‹eDi•©ch
(
X86C‹e
 *
£lf
)

134 
X86Thªad
 *
thªad
;

136 
skù
 = 
x86_˝u_num_thªads
;

137 
qu™tum
 = 
x86_˝u_di•©ch_width
;

138 
ªmaö
;

140 
x86_˝u_di•©ch_köd
)

143 
x86_˝u_di•©ch_köd_sh¨ed
:

147 
£lf
->
di•©ch_cuºít
 = (£lf->di•©ch_cuºíà+ 1Ë% 
x86_˝u_num_thªads
;

148 
thªad
 = 
£lf
->
thªads
[£lf->
di•©ch_cuºít
];

149 
ªmaö
 = 
	`X86ThªadDi•©ch
(
thªad
, 1);

150 
skù
 = 
ªmaö
 ? skù - 1 : 
x86_˝u_num_thªads
;

151 
qu™tum
 = 
ªmaö
 ? quantum : quantum - 1;

152 } 
qu™tum
 && 
skù
);

155 
x86_˝u_di•©ch_köd_time¶i˚
:

159 
£lf
->
di•©ch_cuºít
 = (£lf->di•©ch_cuºíà+ 1Ë% 
x86_˝u_num_thªads
;

160 
thªad
 = 
£lf
->
thªads
[£lf->
di•©ch_cuºít
];

161 
skù
--;

162 } 
skù
 && 
	`X86ThªadC™Di•©ch
(
thªad
Ë!
x86_di•©ch_°Æl_u£d
);

163 
	`X86ThªadDi•©ch
(
thªad
, 
qu™tum
);

166 
	}
}

169 
	$X86CpuDi•©ch
(
X86Cpu
 *
£lf
)

171 
i
;

173 
£lf
->
°age
 = "dispatch";

174 
i
 = 0; i < 
x86_˝u_num_c‹es
; i++)

175 
	`X86C‹eDi•©ch
(
£lf
->
c‹es
[
i
]);

176 
	}
}

	@timing/dispatch.h

20 #i‚de‡
ARCH_X86_TIMING_DISPATCH_H


21 
	#ARCH_X86_TIMING_DISPATCH_H


	)

23 
	~<lib/utû/˛ass.h
>

30 
X86CpuDi•©ch
(
X86Cpu
 *
£lf
);

	@timing/event-queue.c

21 
	~<lib/utû/löked-li°.h
>

23 
	~"c‹e.h
"

24 
	~"˝u.h
"

25 
	~"evít-queue.h
"

26 
	~"thªad.h
"

27 
	~"u›.h
"

35 
	$X86C‹eInôEvítQueue
(
X86C‹e
 *
£lf
)

37 
£lf
->
evít_queue
 = 
	`löked_li°_¸óã
();

38 
	}
}

41 
	$X86C‹eFªeEvítQueue
(
X86C‹e
 *
£lf
)

43 
x86_u›_t
 *
u›
;

45 
	`löked_li°_cou¡
(
£lf
->
evít_queue
))

47 
u›
 = 
	`X86C‹eExåa˘FromEvítQueue
(
£lf
);

48 
	`x86_u›_‰ì_if_nŸ_queued
(
u›
);

50 
	`löked_li°_‰ì
(
£lf
->
evít_queue
);

51 
	}
}

54 
	$evítq_com∑ª
(c⁄° *
ôem1
, c⁄° *
ôem2
)

56 c⁄° 
x86_u›_t
 *
u›1
 = 
ôem1
;

57 c⁄° 
x86_u›_t
 *
u›2
 = 
ôem2
;

58  
u›1
->
whí
 !
u›2
->when ? uop1->when - uop2->when

59 : 
u›1
->
id
 - 
u›2
->id;

60 
	}
}

63 
	$X86C‹eIn£πInEvítQueue
(
X86C‹e
 *
£lf
, 
x86_u›_t
 *
u›
)

65 
löked_li°_t
 *
evít_queue
 = 
£lf
->event_queue;

66 
x86_u›_t
 *
ôem
;

68 
	`as£π
(!
u›
->
ö_evít_queue
);

69 
	`löked_li°_hód
(
evít_queue
);

72 
ôem
 = 
	`löked_li°_gë
(
evít_queue
);

73 i‡(!
ôem
 || 
	`evítq_com∑ª
(
u›
, item) < 0)

75 
	`löked_li°_√xt
(
evít_queue
);

77 
	`löked_li°_ö£π
(
evít_queue
, 
u›
);

78 
u›
->
ö_evít_queue
 = 1;

79 
	}
}

82 
x86_u›_t
 *
	$X86C‹eExåa˘FromEvítQueue
(
X86C‹e
 *
£lf
)

84 
löked_li°_t
 *
evít_queue
 = 
£lf
->event_queue;

85 
x86_u›_t
 *
u›
;

87 i‡(!
	`löked_li°_cou¡
(
evít_queue
))

88  
NULL
;

90 
	`löked_li°_hód
(
evít_queue
);

91 
u›
 = 
	`löked_li°_gë
(
evít_queue
);

92 
	`as£π
(
	`x86_u›_exi°s
(
u›
));

93 
	`as£π
(
u›
->
ö_evít_queue
);

94 
	`löked_li°_ªmove
(
evít_queue
);

95 
u›
->
ö_evít_queue
 = 0;

96  
u›
;

97 
	}
}

106 
	$X86ThªadL⁄gL©ícyInEvítQueue
(
X86Thªad
 *
£lf
)

108 
X86Cpu
 *
˝u
 = 
£lf
->cpu;

109 
X86C‹e
 *
c‹e
 = 
£lf
->core;

111 
löked_li°_t
 *
evít_queue
 = 
c‹e
->event_queue;

112 
x86_u›_t
 *
u›
;

114 
	`LINKED_LIST_FOR_EACH
(
evít_queue
)

116 
u›
 = 
	`löked_li°_gë
(
evít_queue
);

117 i‡(
u›
->
thªad
 !
£lf
)

119 i‡(
	`asTimög
(
˝u
)->
cy˛e
 - 
u›
->
issue_whí
 > 20)

123 
	}
}

126 
	$X86ThªadCacheMissInEvítQueue
(
X86Thªad
 *
£lf
)

128 
X86Cpu
 *
˝u
 = 
£lf
->cpu;

129 
X86C‹e
 *
c‹e
 = 
£lf
->core;

131 
löked_li°_t
 *
evít_queue
 = 
c‹e
->event_queue;

132 
x86_u›_t
 *
u›
;

134 
	`LINKED_LIST_FOR_EACH
(
evít_queue
)

136 
u›
 = 
	`löked_li°_gë
(
evít_queue
);

137 i‡(
u›
->
thªad
 !
£lf
 || u›->
uö°
->
›code
 !
x86_uö°_lﬂd
)

139 i‡(
	`asTimög
(
˝u
)->
cy˛e
 - 
u›
->
issue_whí
 > 5)

143 
	}
}

146 
	$X86ThªadRecovîEvítQueue
(
X86Thªad
 *
£lf
)

148 
X86C‹e
 *
c‹e
 = 
£lf
->core;

150 
löked_li°_t
 *
evít_queue
 = 
c‹e
->event_queue;

151 
x86_u›_t
 *
u›
;

153 
	`löked_li°_hód
(
evít_queue
);

154 !
	`löked_li°_is_íd
(
evít_queue
))

156 
u›
 = 
	`löked_li°_gë
(
evít_queue
);

157 i‡(
u›
->
thªad
 =
£lf
 && u›->
•ecmode
)

159 
	`löked_li°_ªmove
(
evít_queue
);

160 
u›
->
ö_evít_queue
 = 0;

161 
	`x86_u›_‰ì_if_nŸ_queued
(
u›
);

164 
	`löked_li°_√xt
(
evít_queue
);

166 
	}
}

	@timing/event-queue.h

20 #i‚de‡
X86_ARCH_TIMING_EVENT_QUEUE_H


21 
	#X86_ARCH_TIMING_EVENT_QUEUE_H


	)

28 
X86C‹eInôEvítQueue
(
X86C‹e
 *
£lf
);

29 
X86C‹eFªeEvítQueue
(
X86C‹e
 *
£lf
);

31 
X86C‹eIn£πInEvítQueue
(
X86C‹e
 *
£lf
, 
x86_u›_t
 *
u›
);

32 
x86_u›_t
 *
X86C‹eExåa˘FromEvítQueue
(
X86C‹e
 *
£lf
);

40 
X86ThªadL⁄gL©ícyInEvítQueue
(
X86Thªad
 *
£lf
);

41 
X86ThªadCacheMissInEvítQueue
(
X86Thªad
 *
£lf
);

42 
X86ThªadRecovîEvítQueue
(
X86Thªad
 *
£lf
);

	@timing/fetch-queue.c

21 
	~<lib/esim/åa˚.h
>

22 
	~<lib/utû/li°.h
>

24 
	~"c‹e.h
"

25 
	~"˝u.h
"

26 
	~"„tch-queue.h
"

27 
	~"u›.h
"

28 
	~"thªad.h
"

31 
	$X86ThªadInôFëchQueue
(
X86Thªad
 *
£lf
)

33 
£lf
->
„tch_queue
 = 
	`li°_¸óã_wôh_size
(
x86_„tch_queue_size
);

34 
	}
}

37 
	$X86ThªadFªeFëchQueue
(
X86Thªad
 *
£lf
)

39 
li°_t
 *
„tchq
;

40 
x86_u›_t
 *
u›
;

42 
„tchq
 = 
£lf
->
„tch_queue
;

43 
	`li°_cou¡
(
„tchq
)) {

44 
u›
 = 
	`li°_ªmove_©
(
„tchq
, 0);

45 
u›
->
ö_„tch_queue
 = 0;

46 
	`x86_u›_‰ì_if_nŸ_queued
(
u›
);

48 
	`li°_‰ì
(
„tchq
);

49 
	}
}

52 
x86_u›_t
 *
	$X86ThªadRemoveFromFëchQueue
(
X86Thªad
 *
£lf
, 
ödex
)

54 
li°_t
 *
„tchq
 = 
£lf
->
„tch_queue
;

55 
x86_u›_t
 *
u›
;

56 
	`as£π
(
ödex
 >0 && index < 
	`li°_cou¡
(
„tchq
));

57 
u›
 = 
	`li°_ªmove_©
(
„tchq
, 
ödex
);

58 
u›
->
ö_„tch_queue
 = 0;

59 i‡(!
u›
->
åa˚_ˇche
 && !u›->
m›_ödex
)

61 
£lf
->
„tchq_occ
 -
u›
->
m›_size
;

62 
	`as£π
(
£lf
->
„tchq_occ
 >= 0);

64 i‡(
u›
->
åa˚_ˇche
)

66 
£lf
->
åa˚_ˇche_queue_occ
--;

67 
	`as£π
(
£lf
->
åa˚_ˇche_queue_occ
 >= 0);

69 i‡(!
	`li°_cou¡
(
„tchq
))

71 
	`as£π
(!
£lf
->
„tchq_occ
);

72 
	`as£π
(!
£lf
->
åa˚_ˇche_queue_occ
);

74  
u›
;

75 
	}
}

78 
	$X86ThªadRecovîFëchQueue
(
X86Thªad
 *
£lf
)

80 
X86C‹e
 *
c‹e
 = 
£lf
->core;

81 
X86Cpu
 *
˝u
 = 
£lf
->cpu;

83 
li°_t
 *
„tchq
 = 
£lf
->
„tch_queue
;

84 
x86_u›_t
 *
u›
;

86 
	`li°_cou¡
(
„tchq
))

88 
u›
 = 
	`li°_gë
(
„tchq
, 
	`li°_cou¡
(fetchq) - 1);

89 
	`as£π
(
u›
->
thªad
 =
£lf
);

90 i‡(!
u›
->
•ecmode
)

92 
u›
 = 
	`X86ThªadRemoveFromFëchQueue
(
£lf
, 
	`li°_cou¡
(
„tchq
) - 1);

95 i‡(
	`x86_åacög
())

97 
	`x86_åa˚
("x86.inst id=%lld core=%d stg=\"sq\"\n",

98 
u›
->
id_ö_c‹e
, 
c‹e
->
id
);

99 
	`X86CpuAddToTø˚Li°
(
˝u
, 
u›
);

103 
	`x86_u›_‰ì_if_nŸ_queued
(
u›
);

105 
	}
}

114 
	gx86_„tch_queue_size
;

	@timing/fetch-queue.h

20 #i‚de‡
X86_ARCH_TIMING_FETCH_QUEUE_H


21 
	#X86_ARCH_TIMING_FETCH_QUEUE_H


	)

28 
X86ThªadInôFëchQueue
(
X86Thªad
 *
£lf
);

29 
X86ThªadFªeFëchQueue
(
X86Thªad
 *
£lf
);

31 
X86ThªadRecovîFëchQueue
(
X86Thªad
 *
£lf
);

32 
x86_u›_t
 *
X86ThªadRemoveFromFëchQueue
(
X86Thªad
 *
£lf
, 
ödex
);

40 
x86_„tch_queue_size
;

	@timing/fetch.c

21 
	~<¨ch/x86/emu/c⁄ãxt.h
>

22 
	~<¨ch/x86/emu/ªgs.h
>

23 
	~<lib/esim/åa˚.h
>

24 
	~<lib/utû/debug.h
>

25 
	~<lib/utû/li°.h
>

26 
	~<lib/utû/°rög.h
>

27 
	~<mem-sy°em/mmu.h
>

28 
	~<mem-sy°em/moduÀ.h
>

30 
	~"b¥ed.h
"

31 
	~"c‹e.h
"

32 
	~"˝u.h
"

33 
	~"evít-queue.h
"

34 
	~"„tch.h
"

35 
	~"„tch-queue.h
"

36 
	~"thªad.h
"

37 
	~"åa˚-ˇche.h
"

38 
	~"u›.h
"

47 
	$X86ThªadC™Fëch
(
X86Thªad
 *
£lf
)

49 
X86Cpu
 *
˝u
 = 
£lf
->cpu;

50 
X86C⁄ãxt
 *
˘x
 = 
£lf
->ctx;

52 
phy_addr
;

53 
block
;

56 i‡(!
˘x
 || !
	`X86C⁄ãxtGëSèã
(˘x, 
X86C⁄ãxtRu¬ög
))

60 i‡(
£lf
->
„tch_°Æl_u¡û
 >
	`asTimög
(
˝u
)->
cy˛e
 || 
˘x
->
evi˘_sig«l
)

65 i‡(
£lf
->
„tchq_occ
 >
x86_„tch_queue_size
)

70 
block
 = 
£lf
->
„tch_√ù
 & ~(£lf->
ö°_mod
->
block_size
 - 1);

71 i‡(
block
 !
£lf
->
„tch_block
)

73 
phy_addr
 = 
	`mmu_å™¶©e
(
£lf
->
˘x
->
addªss_•a˚_ödex
,

74 
£lf
->
„tch_√ù
);

75 i‡(!
	`mod_ˇn_ac˚ss
(
£lf
->
ö°_mod
, 
phy_addr
))

81 
	}
}

87 
x86_u›_t
 *
	$X86ThªadFëchIn°
(
X86Thªad
 *
£lf
, 
„tch_åa˚_ˇche
)

89 
X86Cpu
 *
˝u
 = 
£lf
->cpu;

90 
X86C‹e
 *
c‹e
 = 
£lf
->core;

91 
X86C⁄ãxt
 *
˘x
 = 
£lf
->ctx;

93 
x86_u›_t
 *
u›
;

94 
x86_u›_t
 *
ªt_u›
;

96 
x86_uö°_t
 *
uö°
;

97 
uö°_cou¡
;

98 
uö°_ödex
;

101 
£lf
->
„tch_eù
 = sñf->
„tch_√ù
;

102 
	`X86C⁄ãxtSëEù
(
˘x
, 
£lf
->
„tch_eù
);

103 
	`X86C⁄ãxtExecuã
(
˘x
);

104 
£lf
->
„tch_√ù
 = sñf->
„tch_eù
 + 
˘x
->
ö°
.
size
;

111 i‡(!
x86_uö°_li°
->
cou¡
)

112 
	`x86_uö°_√w
(
˘x
, 
x86_uö°_n›
, 0, 0, 0, 0, 0, 0, 0);

116 
uö°_cou¡
 = 
	`li°_cou¡
(
x86_uö°_li°
);

117 
uö°_ödex
 = 0;

118 
ªt_u›
 = 
NULL
;

119 
	`li°_cou¡
(
x86_uö°_li°
))

122 
uö°
 = 
	`li°_ªmove_©
(
x86_uö°_li°
, 0);

125 
u›
 = 
	`x86_u›_¸óã
();

126 
u›
->
uö°
 = uinst;

127 
	`as£π
(
uö°
->
›code
 >0 && uö°->›codê< 
x86_uö°_›code_cou¡
);

128 
u›
->
Êags
 = 
x86_uö°_öfo
[
uö°
->
›code
].flags;

129 
u›
->
id
 = 
˝u
->
u›_id_cou¡î
++;

130 
u›
->
id_ö_c‹e
 = 
c‹e
->
u›_id_cou¡î
++;

132 
u›
->
˘x
 = ctx;

133 
u›
->
thªad
 = 
£lf
;

135 
u›
->
m›_cou¡
 = 
uö°_cou¡
;

136 
u›
->
m›_size
 = 
˘x
->
ö°
.
size
;

137 
u›
->
m›_id
 = u›->
id
 - 
uö°_ödex
;

138 
u›
->
m›_ödex
 = 
uö°_ödex
;

140 
u›
->
eù
 = 
£lf
->
„tch_eù
;

141 
u›
->
ö_„tch_queue
 = 1;

142 
u›
->
åa˚_ˇche
 = 
„tch_åa˚_ˇche
;

143 
u›
->
•ecmode
 = 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtS≥cMode
);

144 
u›
->
„tch_addªss
 = 
£lf
->fetch_address;

145 
u›
->
„tch_ac˚ss
 = 
£lf
->fetch_access;

146 
u›
->
√ù
 = 
˘x
->
ªgs
->
eù
;

147 
u›
->
¥ed_√ù
 = 
£lf
->
„tch_√ù
;

148 
u›
->
èrgë_√ù
 = 
˘x
->
èrgë_eù
;

152 
	`x86_u›_cou¡_dïs
(
u›
);

155 i‡(
u›
->
Êags
 & 
X86_UINST_MEM
)

156 
u›
->
phy_addr
 = 
	`mmu_å™¶©e
(
£lf
->
˘x
->
addªss_•a˚_ödex
,

157 
uö°
->
addªss
);

160 i‡(
	`x86_åacög
())

162 
°r
[
MAX_STRING_SIZE
];

163 
ö°_«me
[
MAX_STRING_SIZE
];

164 
uö°_«me
[
MAX_STRING_SIZE
];

166 *
°r_±r
;

168 
°r_size
;

170 
°r_±r
 = 
°r
;

171 
°r_size
 =  
°r
;

174 
	`°r_¥ötf
(&
°r_±r
, &
°r_size
, "x86.new_inst id=%lld core=%d",

175 
u›
->
id_ö_c‹e
, 
c‹e
->
id
);

178 i‡(
u›
->
•ecmode
)

179 
	`°r_¥ötf
(&
°r_±r
, &
°r_size
, " spec=\"t\"");

182 i‡(!
uö°_ödex
)

184 
	`x86_ö°_dump_buf
(&
˘x
->
ö°
, 
ö°_«me
,  inst_name);

185 
	`°r_¥ötf
(&
°r_±r
, &
°r_size
, "ásm=\"%s\"", 
ö°_«me
);

189 
	`x86_uö°_dump_buf
(
uö°
, 
uö°_«me
,  uinst_name);

190 
	`°r_¥ötf
(&
°r_±r
, &
°r_size
, " uasm=\"%s\" stg=\"„\"", 
uö°_«me
);

193 
	`x86_åa˚
("%s\n", 
°r
);

197 i‡(!
ªt_u›
 || (
u›
->
Êags
 & 
X86_UINST_CTRL
))

198 
ªt_u›
 = 
u›
;

201 
	`li°_add
(
£lf
->
„tch_queue
, 
u›
);

202 i‡(
„tch_åa˚_ˇche
)

203 
£lf
->
åa˚_ˇche_queue_occ
++;

206 
˝u
->
num_„tched_uö°
++;

207 
£lf
->
num_„tched_uö°
++;

208 i‡(
„tch_åa˚_ˇche
)

209 
£lf
->
åa˚_ˇche
->
num_„tched_uö°
++;

212 
uö°_ödex
++;

217 i‡(
ªt_u›
 && !
„tch_åa˚_ˇche
)

218 
£lf
->
„tchq_occ
 +
ªt_u›
->
m›_size
;

219  
ªt_u›
;

220 
	}
}

225 
	$X86ThªadFëchTø˚Cache
(
X86Thªad
 *
£lf
)

227 
x86_u›_t
 *
u›
;

229 
m¥ed
;

230 
hô
;

231 
m›_cou¡
;

232 
i
;

234 
eù_bønch
;

235 *
m›_¨øy
;

236 
√ù
;

239 
	`as£π
(
x86_åa˚_ˇche_¥e£¡
);

240 i‡(
£lf
->
åa˚_ˇche_queue_occ
 >
x86_åa˚_ˇche_queue_size
)

244 
eù_bønch
 = 
	`X86ThªadGëNextBønch
(
£lf
,

245 
£lf
->
„tch_√ù
, sñf->
ö°_mod
->
block_size
);

246 
m¥ed
 = 
eù_bønch
 ? 
	`X86ThªadLookupBønchPªdMu…ùÀ
(
£lf
,

247 
eù_bønch
, 
x86_åa˚_ˇche_bønch_max
) : 0;

248 
hô
 = 
	`X86ThªadLookupTø˚Cache
(
£lf
, sñf->
„tch_√ù
, 
m¥ed
,

249 &
m›_cou¡
, &
m›_¨øy
, &
√ù
);

250 i‡(!
hô
)

254 
i
 = 0; i < 
m›_cou¡
; i++)

257 i‡(!
	`X86C⁄ãxtGëSèã
(
£lf
->
˘x
, 
X86C⁄ãxtRu¬ög
))

263 
£lf
->
„tch_√ù
 = 
m›_¨øy
[
i
];

264 
u›
 = 
	`X86ThªadFëchIn°
(
£lf
, 1);

265 i‡(!
u›
)

270 i‡(
u›
->
Êags
 & 
X86_UINST_CTRL
)

272 
	`X86ThªadLookupBønchPªd
(
£lf
, 
u›
);

273 
u›
->
¥ed_√ù
 = 
i
 =
m›_cou¡
 - 1 ? 
√ù
 :

274 
m›_¨øy
[
i
 + 1];

279 
£lf
->
„tch_√ù
 = 
√ù
;

281 
	}
}

284 
	$X86ThªadFëch
(
X86Thªad
 *
£lf
)

286 
X86C⁄ãxt
 *
˘x
 = 
£lf
->ctx;

287 
x86_u›_t
 *
u›
;

289 
phy_addr
;

290 
block
;

291 
èrgë
;

293 
èkí
;

296 i‡(
x86_åa˚_ˇche_¥e£¡
 && 
	`X86ThªadFëchTø˚Cache
(
£lf
))

301 
block
 = 
£lf
->
„tch_√ù
 & ~(£lf->
ö°_mod
->
block_size
 - 1);

302 i‡(
block
 !
£lf
->
„tch_block
)

304 
phy_addr
 = 
	`mmu_å™¶©e
(
£lf
->
˘x
->
addªss_•a˚_ödex
, sñf->
„tch_√ù
);

305 
£lf
->
„tch_block
 = 
block
;

306 
£lf
->
„tch_addªss
 = 
phy_addr
;

307 
£lf
->
„tch_ac˚ss
 = 
	`mod_ac˚ss
(£lf->
ö°_mod
,

308 
mod_ac˚ss_lﬂd
, 
phy_addr
, 
NULL
, NULL, NULL, NULL);

309 
£lf
->
btb_ªads
++;

312 i‡(*
mmu_ªp‹t_fûe_«me
)

313 
	`mmu_ac˚ss_∑ge
(
phy_addr
, 
mmu_ac˚ss_execuã
);

317 (
£lf
->
„tch_√ù
 & ~(£lf->
ö°_mod
->
block_size
 - 1)Ë=
block
)

320 i‡(!
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtRu¬ög
))

324 i‡(
£lf
->
„tchq_occ
 >
x86_„tch_queue_size
)

331 
u›
 = 
	`X86ThªadFëchIn°
(
£lf
, 0);

332 i‡(!
˘x
->
ö°
.
size
)

334 i‡(!
u›
)

340 i‡(
u›
->
Êags
 & 
X86_UINST_CTRL
)

342 
èrgë
 = 
	`X86ThªadLookupBTB
(
£lf
, 
u›
);

343 
èkí
 = 
èrgë
 && 
	`X86ThªadLookupBønchPªd
(
£lf
, 
u›
);

344 i‡(
èkí
)

346 
£lf
->
„tch_√ù
 = 
èrgë
;

347 
u›
->
¥ed_√ù
 = 
èrgë
;

352 
	}
}

361 
	$X86C‹eFëch
(
X86C‹e
 *
£lf
)

363 
X86Cpu
 *
˝u
 = 
£lf
->cpu;

364 
X86Thªad
 *
thªad
;

366 
i
;

368 
x86_˝u_„tch_köd
)

371 
x86_˝u_„tch_köd_sh¨ed
:

374 
i
 = 0; i < 
x86_˝u_num_thªads
; i++)

375 i‡(
	`X86ThªadC™Fëch
(
£lf
->
thªads
[
i
]))

376 
	`X86ThªadFëch
(
£lf
->
thªads
[
i
]);

380 
x86_˝u_„tch_köd_time¶i˚
:

383 
i
 = 0; i < 
x86_˝u_num_thªads
; i++)

385 
£lf
->
„tch_cuºít
 = (£lf->„tch_cuºíà+ 1Ë% 
x86_˝u_num_thªads
;

386 
thªad
 = 
£lf
->
thªads
[£lf->
„tch_cuºít
];

387 i‡(
	`X86ThªadC™Fëch
(
thªad
))

389 
	`X86ThªadFëch
(
thªad
);

396 
x86_˝u_„tch_köd_swôch⁄evít
:

398 
mu°_swôch
;

399 
√w_ödex
;

401 
X86Thªad
 *
√w_thªad
;

405 
thªad
 = 
£lf
->
thªads
[£lf->
„tch_cuºít
];

406 i‡(
thªad
->
„tch_°Æl_u¡û
 >
	`asTimög
(
˝u
)->
cy˛e
)

412 
mu°_swôch
 = !
	`X86ThªadC™Fëch
(
thªad
);

413 
mu°_swôch
 = mu°_swôch || 
	`asTimög
(
˝u
)->
cy˛e
 - 
£lf
->
„tch_swôch_whí
 >

414 
x86_˝u_thªad_qu™tum
 + 
x86_˝u_thªad_swôch_≥«…y
;

415 
mu°_swôch
 = mu°_swôch || 
	`X86ThªadL⁄gL©ícyInEvítQueue
(
thªad
);

418 i‡(
mu°_swôch
)

421 
√w_ödex
 = (
thªad
->
id_ö_c‹e
 + 1Ë% 
x86_˝u_num_thªads
;

422 
√w_ödex
 !
thªad
->
id_ö_c‹e
;

423 
√w_ödex
 = (√w_ödex + 1Ë% 
x86_˝u_num_thªads
)

426 
√w_thªad
 = 
£lf
->
thªads
[
√w_ödex
];

427 i‡(!
	`X86ThªadC™Fëch
(
√w_thªad
))

431 i‡(
mu°_swôch
)

435 i‡(
√w_thªad
->
num_commôãd_uö°_¨øy
 >

436 
thªad
->
num_commôãd_uö°_¨øy
 + 100000)

440 i‡(!
	`X86ThªadL⁄gL©ícyInEvítQueue
(
√w_thªad
))

445 i‡(
√w_ödex
 !
thªad
->
id_ö_c‹e
)

447 
£lf
->
„tch_cuºít
 = 
√w_ödex
;

448 
£lf
->
„tch_swôch_whí
 = 
	`asTimög
(
˝u
)->
cy˛e
;

449 
√w_thªad
->
„tch_°Æl_u¡û
 = 
	`asTimög
(
˝u
)->
cy˛e
 +

450 
x86_˝u_thªad_swôch_≥«…y
 - 1;

455 
thªad
 = 
£lf
->
thªads
[£lf->
„tch_cuºít
];

456 i‡(
	`X86ThªadC™Fëch
(
thªad
))

457 
	`X86ThªadFëch
(
thªad
);

463 
	`∑nic
("%s: wr⁄g fëchÖﬁicy", 
__FUNCTION__
);

465 
	}
}

474 
	$X86CpuFëch
(
X86Cpu
 *
£lf
)

476 
i
;

478 
£lf
->
°age
 = "fetch";

479 
i
 = 0; i < 
x86_˝u_num_c‹es
; i++)

480 
	`X86C‹eFëch
(
£lf
->
c‹es
[
i
]);

481 
	}
}

	@timing/fetch.h

20 #i‚de‡
ARCH_X86_TIMING_FETCH_H


21 
	#ARCH_X86_TIMING_FETCH_H


	)

23 
	~<lib/utû/˛ass.h
>

30 
X86CpuFëch
(
X86Cpu
 *
£lf
);

	@timing/fu.c

21 
	~<lib/mh™dÀ/mh™dÀ.h
>

22 
	~<lib/utû/c⁄fig.h
>

23 
	~<lib/utû/°rög.h
>

25 
	~"c‹e.h
"

26 
	~"˝u.h
"

27 
	~"fu.h
"

37 
	$X86C‹eInôFun˘i⁄ÆUnôs
(
X86C‹e
 *
£lf
)

39 
£lf
->
fu
 = 
	`xˇŒoc
(1, (
x86_fu_t
));

40 
	}
}

43 
	$X86C‹eFªeFun˘i⁄ÆUnôs
(
X86C‹e
 *
£lf
)

45 
	`‰ì
(
£lf
->
fu
);

46 
	}
}

49 
	$X86C‹eDumpFun˘i⁄ÆUnôsRï‹t
(
X86C‹e
 *
£lf
, 
FILE
 *
f
)

51 
x86_fu_t
 *
fu
 = 
£lf
->fu;

52 
i
;

54 
	`Ârötf
(
f
, "; Functional unitÖool\n");

55 
	`Ârötf
(
f
, "; Accesses - Number of uops issuedÅoá f.u.\n");

56 
	`Ârötf
(
f
, "; Denied - Number ofÑequests denied dueÅo busy f.u.\n");

57 
	`Ârötf
(
f
, "; WaitingTime - AverageÇumber of waiting cyclesÅoÑeserve f.u.\n");

59 
i
 = 1; i < 
x86_fu_cou¡
; i++)

61 
	`Ârötf
(
f
, "fu.%s.Ac˚s£†%Œd\n", 
x86_fu_«me
[
i
], 
fu
->
ac˚s£s
[i]);

62 
	`Ârötf
(
f
, "fu.%s.Díõd = %Œd\n", 
x86_fu_«me
[
i
], 
fu
->
ac˚s£s
[i]);

63 
	`Ârötf
(
f
, "fu.%s.WaôögTimê%.4g\n", 
x86_fu_«me
[
i
], 
fu
->
ac˚s£s
[i] ?

64 (Ë
fu
->
waôög_time
[
i
] / fu->
ac˚s£s
[i] : 0.0);

68 
	`Ârötf
(
f
, "\n");

69 
	}
}

75 
	$X86C‹eRe£rveFun˘i⁄ÆUnô
(
X86C‹e
 *
£lf
, 
x86_u›_t
 *
u›
)

77 
X86Cpu
 *
˝u
 = 
£lf
->cpu;

79 
x86_fu_˛ass_t
 
fu_˛ass
;

80 
x86_fu_t
 *
fu
 = 
£lf
->fu;

82 
i
;

87 
fu_˛ass
 = 
x86_fu_˛ass_èbÀ
[
u›
->
uö°
->
›code
];

88 i‡(!
fu_˛ass
)

92 i‡(!
u›
->
issue_åy_whí
)

93 
u›
->
issue_åy_whí
 = 
	`asTimög
(
˝u
)->
cy˛e
;

96 
	`as£π
(
fu_˛ass
 > 
x86_fu_n⁄e
 && fu_˛as†< 
x86_fu_cou¡
);

97 
	`as£π
(
x86_fu_ªs_poﬁ
[
fu_˛ass
].
cou¡
 <
X86_FU_RES_MAX
);

98 
i
 = 0; i < 
x86_fu_ªs_poﬁ
[
fu_˛ass
].
cou¡
; i++)

100 i‡(
fu
->
cy˛e_whí_‰ì
[
fu_˛ass
][
i
] <
	`asTimög
(
˝u
)->
cy˛e
)

102 
	`as£π
(
x86_fu_ªs_poﬁ
[
fu_˛ass
].
issuñ©
 > 0);

103 
	`as£π
(
x86_fu_ªs_poﬁ
[
fu_˛ass
].
›œt
 > 0);

104 
fu
->
cy˛e_whí_‰ì
[
fu_˛ass
][
i
] = 
	`asTimög
(
˝u
)->
cy˛e


105 + 
x86_fu_ªs_poﬁ
[
fu_˛ass
].
issuñ©
;

106 
fu
->
ac˚s£s
[
fu_˛ass
]++;

107 
fu
->
waôög_time
[
fu_˛ass
] +
	`asTimög
(
˝u
)->
cy˛e
 - 
u›
->
issue_åy_whí
;

108  
x86_fu_ªs_poﬁ
[
fu_˛ass
].
›œt
;

113 
fu
->
díõd
[
fu_˛ass
]++;

115 
	}
}

119 
	$X86C‹eRñó£AŒFun˘i⁄ÆUnôs
(
X86C‹e
 *
£lf
)

121 
i
;

122 
j
;

124 
i
 = 0; i < 
x86_fu_cou¡
; i++)

125 
j
 = 0; j < 
x86_fu_ªs_poﬁ
[
i
].
cou¡
; j++)

126 
£lf
->
fu
->
cy˛e_whí_‰ì
[
i
][
j
] = 0;

127 
	}
}

141 
x86_fu_ªs_t
 
	gx86_fu_ªs_poﬁ
[
x86_fu_cou¡
] =

173 *
	gx86_fu_«me
[
x86_fu_cou¡
] =

208 
x86_fu_˛ass_t
 
	gx86_fu_˛ass_èbÀ
[
x86_uö°_›code_cou¡
] =

210 
x86_fu_n⁄e
,

212 
x86_fu_n⁄e
,

213 
x86_fu_öt_add
,

214 
x86_fu_öt_add
,

215 
x86_fu_öt_mu…
,

216 
x86_fu_öt_div
,

217 
x86_fu_efÁddr
,

219 
x86_fu_logic
,

220 
x86_fu_logic
,

221 
x86_fu_logic
,

222 
x86_fu_logic
,

223 
x86_fu_logic
,

224 
x86_fu_logic
,

226 
x86_fu_n⁄e
,

227 
x86_fu_Êﬂt_sim∂e
,

228 
x86_fu_Êﬂt_sim∂e
,

230 
x86_fu_Êﬂt_add
,

231 
x86_fu_Êﬂt_add
,

232 
x86_fu_Êﬂt_comp
,

233 
x86_fu_Êﬂt_mu…
,

234 
x86_fu_Êﬂt_div
,

236 
x86_fu_Êﬂt_com∂ex
,

237 
x86_fu_Êﬂt_com∂ex
,

238 
x86_fu_Êﬂt_com∂ex
,

239 
x86_fu_Êﬂt_com∂ex
,

240 
x86_fu_Êﬂt_com∂ex
,

241 
x86_fu_Êﬂt_com∂ex
,

242 
x86_fu_Êﬂt_com∂ex
,

243 
x86_fu_Êﬂt_com∂ex
,

245 
x86_fu_n⁄e
,

246 
x86_fu_n⁄e
,

248 
x86_fu_xmm_logic
,

249 
x86_fu_xmm_logic
,

250 
x86_fu_xmm_logic
,

251 
x86_fu_xmm_logic
,

252 
x86_fu_xmm_logic
,

253 
x86_fu_xmm_logic
,

254 
x86_fu_xmm_logic
,

256 
x86_fu_xmm_öt_add
,

257 
x86_fu_xmm_öt_add
,

258 
x86_fu_xmm_öt_add
,

259 
x86_fu_xmm_öt_mu…
,

260 
x86_fu_xmm_öt_div
,

262 
x86_fu_xmm_Êﬂt_add
,

263 
x86_fu_xmm_Êﬂt_add
,

264 
x86_fu_xmm_Êﬂt_comp
,

265 
x86_fu_xmm_Êﬂt_mu…
,

266 
x86_fu_xmm_Êﬂt_div
,

268 
x86_fu_xmm_Êﬂt_com∂ex
,

270 
x86_fu_xmm_logic
,

271 
x86_fu_xmm_logic
,

272 
x86_fu_xmm_Êﬂt_c⁄v
,

274 
x86_fu_n⁄e
,

275 
x86_fu_n⁄e
,

276 
x86_fu_n⁄e
,

278 
x86_fu_n⁄e
,

279 
x86_fu_n⁄e
,

280 
x86_fu_n⁄e
,

281 
x86_fu_n⁄e
,

282 
x86_fu_n⁄e
,

284 
x86_fu_n⁄e


288 
	$X86RódFun˘i⁄ÆUnôsC⁄fig
(
c⁄fig_t
 *
c⁄fig
)

290 
x86_fu_ªs_t
 *
fu_ªs
;

292 
buf
[
MAX_STRING_SIZE
];

293 *
£˘i⁄
;

295 
i
;

297 
£˘i⁄
 = "FunctionalUnits";

298 
i
 = 1; i < 
x86_fu_cou¡
; i++)

300 
fu_ªs
 = &
x86_fu_ªs_poﬁ
[
i
];

302 
	`¢¥ötf
(
buf
,  buf, "%s.Cou¡", 
x86_fu_«me
[
i
]);

303 
fu_ªs
->
cou¡
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, 
buf
, fu_res->count);

305 
	`¢¥ötf
(
buf
,  buf, "%s.OpL©", 
x86_fu_«me
[
i
]);

306 
fu_ªs
->
›œt
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, 
buf
, fu_res->oplat);

308 
	`¢¥ötf
(
buf
,  buf, "%s.IssueL©", 
x86_fu_«me
[
i
]);

309 
fu_ªs
->
issuñ©
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, 
buf
, fu_res->issuelat);

311 
	}
}

314 
	$X86DumpFun˘i⁄ÆUnôsC⁄fig
(
FILE
 *
f
)

316 
x86_fu_ªs_t
 *
fu_ªs
;

317 
i
;

319 
	`Ârötf
(
f
, "[ Config.FunctionalUnits ]\n");

320 
i
 = 1; i < 
x86_fu_cou¡
; i++)

322 
fu_ªs
 = &
x86_fu_ªs_poﬁ
[
i
];

323 
	`Ârötf
(
f
, "%s.Cou¡ = %d\n", 
x86_fu_«me
[
i
], 
fu_ªs
->
cou¡
);

324 
	`Ârötf
(
f
, "%s.OpL© = %d\n", 
x86_fu_«me
[
i
], 
fu_ªs
->
›œt
);

325 
	`Ârötf
(
f
, "%s.IssueL© = %d\n", 
x86_fu_«me
[
i
], 
fu_ªs
->
issuñ©
);

328 
	`Ârötf
(
f
, "\n");

329 
	}
}

	@timing/fu.h

20 #i‚de‡
X86_ARCH_TIMING_FU_H


21 
	#X86_ARCH_TIMING_FU_H


	)

23 
	~<lib/utû/˛ass.h
>

25 
	~"u›.h
"

29 
	gc⁄fig_t
;

36 
X86C‹eInôFun˘i⁄ÆUnôs
(
X86C‹e
 *
£lf
);

37 
X86C‹eFªeFun˘i⁄ÆUnôs
(
X86C‹e
 *
£lf
);

39 
X86C‹eDumpFun˘i⁄ÆUnôsRï‹t
(
X86C‹e
 *
£lf
, 
FILE
 *
f
);

41 
X86C‹eRe£rveFun˘i⁄ÆUnô
(
X86C‹e
 *
£lf
, 
x86_u›_t
 *
u›
);

42 
X86C‹eRñó£AŒFun˘i⁄ÆUnôs
(
X86C‹e
 *
£lf
);

51 
	#X86_FU_RES_MAX
 10

	)

57 
	ex86_fu_˛ass_t


59 
	mx86_fu_n⁄e
 = 0,

61 
	mx86_fu_öt_add
,

62 
	mx86_fu_öt_mu…
,

63 
	mx86_fu_öt_div
,

65 
	mx86_fu_efÁddr
,

66 
	mx86_fu_logic
,

68 
	mx86_fu_Êﬂt_sim∂e
,

69 
	mx86_fu_Êﬂt_add
,

70 
	mx86_fu_Êﬂt_comp
,

71 
	mx86_fu_Êﬂt_mu…
,

72 
	mx86_fu_Êﬂt_div
,

73 
	mx86_fu_Êﬂt_com∂ex
,

75 
	mx86_fu_xmm_öt_add
,

76 
	mx86_fu_xmm_öt_mu…
,

77 
	mx86_fu_xmm_öt_div
,

79 
	mx86_fu_xmm_logic
,

81 
	mx86_fu_xmm_Êﬂt_add
,

82 
	mx86_fu_xmm_Êﬂt_comp
,

83 
	mx86_fu_xmm_Êﬂt_mu…
,

84 
	mx86_fu_xmm_Êﬂt_div
,

85 
	mx86_fu_xmm_Êﬂt_c⁄v
,

86 
	mx86_fu_xmm_Êﬂt_com∂ex
,

88 
	mx86_fu_cou¡


91 
	sx86_fu_t


93 
	mcy˛e_whí_‰ì
[
x86_fu_cou¡
][
X86_FU_RES_MAX
];

94 
	mac˚s£s
[
x86_fu_cou¡
];

95 
	mdíõd
[
x86_fu_cou¡
];

96 
	mwaôög_time
[
x86_fu_cou¡
];

99 
	sx86_fu_ªs_t


101 
	mcou¡
;

102 
	m›œt
;

103 
	missuñ©
;

106 *
x86_fu_«me
[
x86_fu_cou¡
];

107 
x86_fu_ªs_t
 
x86_fu_ªs_poﬁ
[
x86_fu_cou¡
];

108 
x86_fu_˛ass_t
 
x86_fu_˛ass_èbÀ
[
x86_uö°_›code_cou¡
];

110 
X86RódFun˘i⁄ÆUnôsC⁄fig
(
c⁄fig_t
 *
c⁄fig
);

111 
X86DumpFun˘i⁄ÆUnôsC⁄fig
(
FILE
 *
f
);

	@timing/inst-queue.c

21 
	~<lib/utû/löked-li°.h
>

23 
	~"c‹e.h
"

24 
	~"˝u.h
"

25 
	~"ö°-queue.h
"

26 
	~"thªad.h
"

29 *
	gx86_iq_köd_m≠
[] = { "Shared", "Private" };

30 
x86_iq_köd_t
 
	gx86_iq_köd
;

31 
	gx86_iq_size
;

34 
	$X86ThªadInôIQ
(
X86Thªad
 *
£lf
)

36 
£lf
->
iq
 = 
	`löked_li°_¸óã
();

37 
	}
}

40 
	$X86ThªadFªeIQ
(
X86Thªad
 *
£lf
)

42 
löked_li°_t
 *
iq
;

43 
x86_u›_t
 *
u›
;

45 
iq
 = 
£lf
->iq;

46 
	`löked_li°_hód
(
iq
);

47 
	`löked_li°_cou¡
(
iq
))

49 
u›
 = 
	`löked_li°_gë
(
iq
);

50 
u›
->
ö_iq
 = 0;

51 
	`löked_li°_ªmove
(
iq
);

52 
	`x86_u›_‰ì_if_nŸ_queued
(
u›
);

54 
	`löked_li°_‰ì
(
iq
);

55 
	}
}

58 
	$X86ThªadC™In£πInIQ
(
X86Thªad
 *
£lf
, 
x86_u›_t
 *
u›
)

60 
X86C‹e
 *
c‹e
 = 
£lf
->core;

62 
cou¡
;

63 
size
;

65 
size
 = 
x86_iq_köd
 =
x86_iq_köd_¥iv©e
 ? 
x86_iq_size
 : x86_iq_sizê* 
x86_˝u_num_thªads
;

66 
cou¡
 = 
x86_iq_köd
 =
x86_iq_köd_¥iv©e
 ? 
£lf
->
iq_cou¡
 : 
c‹e
->iq_count;

67  
cou¡
 < 
size
;

68 
	}
}

73 
	$X86ThªadIn£πInIQ
(
X86Thªad
 *
£lf
, 
x86_u›_t
 *
u›
)

75 
X86C‹e
 *
c‹e
 = 
£lf
->core;

76 
löked_li°_t
 *
iq
 = 
£lf
->iq;

78 
	`as£π
(!
u›
->
ö_iq
);

79 
	`löked_li°_out
(
iq
);

80 
	`löked_li°_ö£π
(
iq
, 
u›
);

81 
u›
->
ö_iq
 = 1;

83 
c‹e
->
iq_cou¡
++;

84 
£lf
->
iq_cou¡
++;

85 
	}
}

90 
	$X86ThªadRemoveFromIQ
(
X86Thªad
 *
£lf
)

92 
X86C‹e
 *
c‹e
 = 
£lf
->core;

93 
löked_li°_t
 *
iq
 = 
£lf
->iq;

94 
x86_u›_t
 *
u›
;

96 
u›
 = 
	`löked_li°_gë
(
iq
);

97 
	`as£π
(
	`x86_u›_exi°s
(
u›
));

98 
	`löked_li°_ªmove
(
iq
);

99 
u›
->
ö_iq
 = 0;

101 
	`as£π
(
c‹e
->
iq_cou¡
 && 
£lf
->iq_count);

102 
c‹e
->
iq_cou¡
--;

103 
£lf
->
iq_cou¡
--;

104 
	}
}

108 
	$X86ThªadRecovîIQ
(
X86Thªad
 *
£lf
)

110 
löked_li°_t
 *
iq
 = 
£lf
->iq;

111 
x86_u›_t
 *
u›
;

113 
	`löked_li°_hód
(
iq
);

114 !
	`löked_li°_is_íd
(
iq
))

116 
u›
 = 
	`löked_li°_gë
(
iq
);

117 i‡(
u›
->
•ecmode
) {

118 
	`X86ThªadRemoveFromIQ
(
£lf
);

119 
	`x86_u›_‰ì_if_nŸ_queued
(
u›
);

122 
	`löked_li°_√xt
(
iq
);

124 
	}
}

	@timing/inst-queue.h

20 #i‚de‡
X86_ARCH_TIMING_INST_QUEUE_H


21 
	#X86_ARCH_TIMING_INST_QUEUE_H


	)

23 
	~"u›.h
"

30 *
x86_iq_köd_m≠
[];

31 
	ex86_iq_köd_t


33 
x86_iq_köd_sh¨ed
 = 0,

34 
x86_iq_köd_¥iv©e


35 } 
x86_iq_köd
;

36 
x86_iq_size
;

43 
X86ThªadInôIQ
(
X86Thªad
 *
£lf
);

44 
X86ThªadFªeIQ
(
X86Thªad
 *
£lf
);

46 
X86ThªadC™In£πInIQ
(
X86Thªad
 *
£lf
, 
x86_u›_t
 *
u›
);

47 
X86ThªadIn£πInIQ
(
X86Thªad
 *
£lf
, 
x86_u›_t
 *
u›
);

48 
X86ThªadRemoveFromIQ
(
X86Thªad
 *
£lf
);

49 
X86ThªadRecovîIQ
(
X86Thªad
 *
£lf
);

	@timing/issue.c

21 
	~<lib/esim/åa˚.h
>

22 
	~<lib/utû/debug.h
>

23 
	~<lib/utû/löked-li°.h
>

24 
	~<mem-sy°em/mmu.h
>

25 
	~<mem-sy°em/moduÀ.h
>

27 
	~"c‹e.h
"

28 
	~"˝u.h
"

29 
	~"evít-queue.h
"

30 
	~"fu.h
"

31 
	~"ö°-queue.h
"

32 
	~"issue.h
"

33 
	~"lﬂd-°‹e-queue.h
"

34 
	~"ªg-fûe.h
"

35 
	~"thªad.h
"

36 
	~"åa˚-ˇche.h
"

43 
	$X86ThªadIssueSQ
(
X86Thªad
 *
£lf
, 
qu™tum
)

45 
X86Cpu
 *
˝u
 = 
£lf
->cpu;

46 
X86C‹e
 *
c‹e
 = 
£lf
->core;

48 
x86_u›_t
 *
°‹e
;

49 
löked_li°_t
 *
sq
 = 
£lf
->sq;

50 
mod_˛õ¡_öfo_t
 *
˛õ¡_öfo
;

53 
	`löked_li°_hód
(
sq
);

54 !
	`löked_li°_is_íd
(
sq
Ë&& 
qu™tum
)

57 
°‹e
 = 
	`löked_li°_gë
(
sq
);

58 
	`as£π
(
°‹e
->
uö°
->
›code
 =
x86_uö°_°‹e
);

61 i‡(
°‹e
->
ö_rob
)

65 i‡(!
	`mod_ˇn_ac˚ss
(
£lf
->
d©a_mod
, 
°‹e
->
phy_addr
))

69 
	`X86ThªadRemoveFromSQ
(
£lf
);

72 
˛õ¡_öfo
 = 
	`mod_˛õ¡_öfo_¸óã
(
£lf
->
d©a_mod
);

73 
˛õ¡_öfo
->
¥e„tchî_eù
 = 
°‹e
->
eù
;

76 
	`mod_ac˚ss
(
£lf
->
d©a_mod
, 
mod_ac˚ss_°‹e
,

77 
°‹e
->
phy_addr
, 
NULL
, 
c‹e
->
evít_queue
, st‹e, 
˛õ¡_öfo
);

82 
°‹e
->
ö_evít_queue
 = 1;

83 
°‹e
->
issued
 = 1;

84 
°‹e
->
issue_whí
 = 
	`asTimög
(
˝u
)->
cy˛e
;

87 
c‹e
->
num_issued_uö°_¨øy
[
°‹e
->
uö°
->
›code
]++;

88 
c‹e
->
lsq_ªads
++;

89 
c‹e
->
ªg_fûe_öt_ªads
 +
°‹e
->
ph_öt_idï_cou¡
;

90 
c‹e
->
ªg_fûe_Â_ªads
 +
°‹e
->
ph_Â_idï_cou¡
;

91 
£lf
->
num_issued_uö°_¨øy
[
°‹e
->
uö°
->
›code
]++;

92 
£lf
->
lsq_ªads
++;

93 
£lf
->
ªg_fûe_öt_ªads
 +
°‹e
->
ph_öt_idï_cou¡
;

94 
£lf
->
ªg_fûe_Â_ªads
 +
°‹e
->
ph_Â_idï_cou¡
;

95 
˝u
->
num_issued_uö°_¨øy
[
°‹e
->
uö°
->
›code
]++;

96 i‡(
°‹e
->
åa˚_ˇche
)

97 
£lf
->
åa˚_ˇche
->
num_issued_uö°
++;

100 
qu™tum
--;

103 i‡(*
mmu_ªp‹t_fûe_«me
)

104 
	`mmu_ac˚ss_∑ge
(
°‹e
->
phy_addr
, 
mmu_ac˚ss_wrôe
);

106  
qu™tum
;

107 
	}
}

110 
	$X86ThªadIssueLQ
(
X86Thªad
 *
£lf
, 
qu™t
)

112 
X86C‹e
 *
c‹e
 = 
£lf
->core;

113 
X86Cpu
 *
˝u
 = 
£lf
->cpu;

115 
löked_li°_t
 *
lq
 = 
£lf
->lq;

116 
x86_u›_t
 *
lﬂd
;

117 
mod_˛õ¡_öfo_t
 *
˛õ¡_öfo
;

120 
	`löked_li°_hód
(
lq
);

121 !
	`löked_li°_is_íd
(
lq
Ë&& 
qu™t
)

124 
lﬂd
 = 
	`löked_li°_gë
(
lq
);

125 i‡(!
lﬂd
->
ªady
 && !
	`X86ThªadIsU›Ródy
(
£lf
,Üoad))

127 
	`löked_li°_√xt
(
lq
);

130 
lﬂd
->
ªady
 = 1;

133 i‡(!
	`mod_ˇn_ac˚ss
(
£lf
->
d©a_mod
, 
lﬂd
->
phy_addr
))

135 
	`löked_li°_√xt
(
lq
);

140 
	`as£π
(
lﬂd
->
uö°
->
›code
 =
x86_uö°_lﬂd
);

141 
	`X86ThªadRemoveFromLQ
(
£lf
);

144 
˛õ¡_öfo
 = 
	`mod_˛õ¡_öfo_¸óã
(
£lf
->
d©a_mod
);

145 
˛õ¡_öfo
->
¥e„tchî_eù
 = 
lﬂd
->
eù
;

148 
	`mod_ac˚ss
(
£lf
->
d©a_mod
, 
mod_ac˚ss_lﬂd
,

149 
lﬂd
->
phy_addr
, 
NULL
, 
c‹e
->
evít_queue
,Üﬂd, 
˛õ¡_öfo
);

154 
lﬂd
->
ö_evít_queue
 = 1;

155 
lﬂd
->
issued
 = 1;

156 
lﬂd
->
issue_whí
 = 
	`asTimög
(
˝u
)->
cy˛e
;

159 
c‹e
->
num_issued_uö°_¨øy
[
lﬂd
->
uö°
->
›code
]++;

160 
c‹e
->
lsq_ªads
++;

161 
c‹e
->
ªg_fûe_öt_ªads
 +
lﬂd
->
ph_öt_idï_cou¡
;

162 
c‹e
->
ªg_fûe_Â_ªads
 +
lﬂd
->
ph_Â_idï_cou¡
;

163 
£lf
->
num_issued_uö°_¨øy
[
lﬂd
->
uö°
->
›code
]++;

164 
£lf
->
lsq_ªads
++;

165 
£lf
->
ªg_fûe_öt_ªads
 +
lﬂd
->
ph_öt_idï_cou¡
;

166 
£lf
->
ªg_fûe_Â_ªads
 +
lﬂd
->
ph_Â_idï_cou¡
;

167 
˝u
->
num_issued_uö°_¨øy
[
lﬂd
->
uö°
->
›code
]++;

168 i‡(
lﬂd
->
åa˚_ˇche
)

169 
£lf
->
åa˚_ˇche
->
num_issued_uö°
++;

172 
qu™t
--;

175 i‡(*
mmu_ªp‹t_fûe_«me
)

176 
	`mmu_ac˚ss_∑ge
(
lﬂd
->
phy_addr
, 
mmu_ac˚ss_ªad
);

179 
	`x86_åa˚
("x86.inst id=%lld core=%d stg=\"i\"\n",

180 
lﬂd
->
id_ö_c‹e
, 
c‹e
->
id
);

183  
qu™t
;

184 
	}
}

187 
	$X86ThªadIssuePªQ
(
X86Thªad
 *
£lf
, 
qu™tum
)

189 
X86C‹e
 *
c‹e
 = 
£lf
->core;

190 
X86Cpu
 *
˝u
 = 
£lf
->cpu;

192 
löked_li°_t
 *
¥eq
 = 
£lf
->preq;

193 
x86_u›_t
 *
¥e„tch
;

196 
	`löked_li°_hód
(
¥eq
);

197 !
	`löked_li°_is_íd
(
¥eq
Ë&& 
qu™tum
)

200 
¥e„tch
 = 
	`löked_li°_gë
(
¥eq
);

201 i‡(!
¥e„tch
->
ªady
 && !
	`X86ThªadIsU›Ródy
(
£lf
,Örefetch))

203 
	`löked_li°_√xt
(
¥eq
);

212 i‡(
	`¥e„tch_hi°‹y_is_ªdund™t
(
c‹e
->
¥e„tch_hi°‹y
,

213 
£lf
->
d©a_mod
, 
¥e„tch
->
phy_addr
))

216 
	`as£π
(
¥e„tch
->
uö°
->
›code
 =
x86_uö°_¥e„tch
);

217 
	`X86ThªadRemovePªQ
(
£lf
);

218 
¥e„tch
->
com∂ëed
 = 1;

219 
	`x86_u›_‰ì_if_nŸ_queued
(
¥e„tch
);

223 
¥e„tch
->
ªady
 = 1;

226 i‡(!
	`mod_ˇn_ac˚ss
(
£lf
->
d©a_mod
, 
¥e„tch
->
phy_addr
))

228 
	`löked_li°_√xt
(
¥eq
);

233 
	`as£π
(
¥e„tch
->
uö°
->
›code
 =
x86_uö°_¥e„tch
);

234 
	`X86ThªadRemovePªQ
(
£lf
);

237 
	`mod_ac˚ss
(
£lf
->
d©a_mod
, 
mod_ac˚ss_¥e„tch
,

238 
¥e„tch
->
phy_addr
, 
NULL
, 
c‹e
->
evít_queue
,Örefetch, NULL);

241 
	`¥e„tch_hi°‹y_ªc‹d
(
c‹e
->
¥e„tch_hi°‹y
, 
¥e„tch
->
phy_addr
);

246 
¥e„tch
->
ö_evít_queue
 = 1;

247 
¥e„tch
->
issued
 = 1;

248 
¥e„tch
->
issue_whí
 = 
	`asTimög
(
˝u
)->
cy˛e
;

251 
c‹e
->
num_issued_uö°_¨øy
[
¥e„tch
->
uö°
->
›code
]++;

252 
c‹e
->
lsq_ªads
++;

253 
c‹e
->
ªg_fûe_öt_ªads
 +
¥e„tch
->
ph_öt_idï_cou¡
;

254 
c‹e
->
ªg_fûe_Â_ªads
 +
¥e„tch
->
ph_Â_idï_cou¡
;

255 
£lf
->
num_issued_uö°_¨øy
[
¥e„tch
->
uö°
->
›code
]++;

256 
£lf
->
lsq_ªads
++;

257 
£lf
->
ªg_fûe_öt_ªads
 +
¥e„tch
->
ph_öt_idï_cou¡
;

258 
£lf
->
ªg_fûe_Â_ªads
 +
¥e„tch
->
ph_Â_idï_cou¡
;

259 
˝u
->
num_issued_uö°_¨øy
[
¥e„tch
->
uö°
->
›code
]++;

260 i‡(
¥e„tch
->
åa˚_ˇche
)

261 
£lf
->
åa˚_ˇche
->
num_issued_uö°
++;

264 
qu™tum
--;

267 i‡(*
mmu_ªp‹t_fûe_«me
)

268 
	`mmu_ac˚ss_∑ge
(
¥e„tch
->
phy_addr
, 
mmu_ac˚ss_ªad
);

271 
	`x86_åa˚
("x86.inst id=%lld core=%d stg=\"i\"\n",

272 
¥e„tch
->
id_ö_c‹e
, 
c‹e
->
id
);

275  
qu™tum
;

276 
	}
}

279 
	$X86ThªadIssueIQ
(
X86Thªad
 *
£lf
, 
qu™t
)

281 
X86Cpu
 *
˝u
 = 
£lf
->cpu;

282 
X86C‹e
 *
c‹e
 = 
£lf
->core;

284 
löked_li°_t
 *
iq
 = 
£lf
->iq;

285 
x86_u›_t
 *
u›
;

286 
œt
;

289 
	`löked_li°_hód
(
iq
);

290 !
	`löked_li°_is_íd
(
iq
Ë&& 
qu™t
)

293 
u›
 = 
	`löked_li°_gë
(
iq
);

294 
	`as£π
(
	`x86_u›_exi°s
(
u›
));

295 
	`as£π
(!(
u›
->
Êags
 & 
X86_UINST_MEM
));

296 i‡(!
u›
->
ªady
 && !
	`X86ThªadIsU›Ródy
(
£lf
, uop))

298 
	`löked_li°_√xt
(
iq
);

301 
u›
->
ªady
 = 1;

307 
œt
 = 
	`X86C‹eRe£rveFun˘i⁄ÆUnô
(
c‹e
, 
u›
);

308 i‡(!
œt
)

310 
	`löked_li°_√xt
(
iq
);

316 
	`X86ThªadRemoveFromIQ
(
£lf
);

319 
	`as£π
(!
u›
->
ö_evít_queue
);

320 
	`as£π
(
œt
 > 0);

321 
u›
->
issued
 = 1;

322 
u›
->
issue_whí
 = 
	`asTimög
(
˝u
)->
cy˛e
;

323 
u›
->
whí
 = 
	`asTimög
(
˝u
)->
cy˛e
 + 
œt
;

324 
	`X86C‹eIn£πInEvítQueue
(
c‹e
, 
u›
);

327 
c‹e
->
num_issued_uö°_¨øy
[
u›
->
uö°
->
›code
]++;

328 
c‹e
->
iq_ªads
++;

329 
c‹e
->
ªg_fûe_öt_ªads
 +
u›
->
ph_öt_idï_cou¡
;

330 
c‹e
->
ªg_fûe_Â_ªads
 +
u›
->
ph_Â_idï_cou¡
;

331 
£lf
->
num_issued_uö°_¨øy
[
u›
->
uö°
->
›code
]++;

332 
£lf
->
iq_ªads
++;

333 
£lf
->
ªg_fûe_öt_ªads
 +
u›
->
ph_öt_idï_cou¡
;

334 
£lf
->
ªg_fûe_Â_ªads
 +
u›
->
ph_Â_idï_cou¡
;

335 
˝u
->
num_issued_uö°_¨øy
[
u›
->
uö°
->
›code
]++;

336 i‡(
u›
->
åa˚_ˇche
)

337 
£lf
->
åa˚_ˇche
->
num_issued_uö°
++;

340 
qu™t
--;

343 
	`x86_åa˚
("x86.inst id=%lld core=%d stg=\"i\"\n",

344 
u›
->
id_ö_c‹e
, 
c‹e
->
id
);

347  
qu™t
;

348 
	}
}

351 
	$X86ThªadIssueLSQ
(
X86Thªad
 *
£lf
, 
qu™tum
)

353 
qu™tum
 = 
	`X86ThªadIssueLQ
(
£lf
, quantum);

354 
qu™tum
 = 
	`X86ThªadIssueSQ
(
£lf
, quantum);

355 
qu™tum
 = 
	`X86ThªadIssuePªQ
(
£lf
, quantum);

357  
qu™tum
;

358 
	}
}

368 
	$X86C‹eIssue
(
X86C‹e
 *
£lf
)

370 
X86Thªad
 *
thªad
;

372 
skù
;

373 
qu™tum
;

375 
x86_˝u_issue_köd
)

378 
x86_˝u_issue_köd_sh¨ed
:

381 
qu™tum
 = 
x86_˝u_issue_width
;

382 
skù
 = 
x86_˝u_num_thªads
;

385 
£lf
->
issue_cuºít
 = (£lf->issue_cuºíà+ 1Ë% 
x86_˝u_num_thªads
;

386 
thªad
 = 
£lf
->
thªads
[£lf->
issue_cuºít
];

387 
qu™tum
 = 
	`X86ThªadIssueLSQ
(
thªad
, quantum);

388 
skù
--;

389 } 
skù
 && 
qu™tum
);

392 
qu™tum
 = 
x86_˝u_issue_width
;

393 
skù
 = 
x86_˝u_num_thªads
;

396 
£lf
->
issue_cuºít
 = (£lf->issue_cuºíà+ 1Ë% 
x86_˝u_num_thªads
;

397 
thªad
 = 
£lf
->
thªads
[£lf->
issue_cuºít
];

398 
qu™tum
 = 
	`X86ThªadIssueIQ
(
thªad
, quantum);

399 
skù
--;

400 } 
skù
 && 
qu™tum
);

405 
x86_˝u_issue_köd_time¶i˚
:

408 
qu™tum
 = 
x86_˝u_issue_width
;

409 
skù
 = 
x86_˝u_num_thªads
;

412 
£lf
->
issue_cuºít
 = (£lf->issue_cuºíà+ 1Ë% 
x86_˝u_num_thªads
;

413 
thªad
 = 
£lf
->
thªads
[£lf->
issue_cuºít
];

414 
qu™tum
 = 
	`X86ThªadIssueLSQ
(
thªad
, quantum);

415 
skù
--;

416 } 
skù
 && 
qu™tum
 =
x86_˝u_issue_width
);

419 
qu™tum
 = 
x86_˝u_issue_width
;

420 
skù
 = 
x86_˝u_num_thªads
;

423 
£lf
->
issue_cuºít
 = (£lf->issue_cuºíà+ 1Ë% 
x86_˝u_num_thªads
;

424 
thªad
 = 
£lf
->
thªads
[£lf->
issue_cuºít
];

425 
qu™tum
 = 
	`X86ThªadIssueIQ
(
thªad
, quantum);

426 
skù
--;

427 } 
skù
 && 
qu™tum
 =
x86_˝u_issue_width
);

433 
	`∑nic
("%s: invÆid issuêköd", 
__FUNCTION__
);

435 
	}
}

444 
	$X86CpuIssue
(
X86Cpu
 *
£lf
)

446 
i
;

448 
£lf
->
°age
 = "issue";

449 
i
 = 0; i < 
x86_˝u_num_c‹es
; i++)

450 
	`X86C‹eIssue
(
£lf
->
c‹es
[
i
]);

451 
	}
}

	@timing/issue.h

20 #i‚de‡
ARCH_X86_TIMING_ISSUE_H


21 
	#ARCH_X86_TIMING_ISSUE_H


	)

23 
	~<lib/utû/˛ass.h
>

30 
X86CpuIssue
(
X86Cpu
 *
£lf
);

	@timing/load-store-queue.c

21 
	~<lib/utû/löked-li°.h
>

23 
	~"c‹e.h
"

24 
	~"˝u.h
"

25 
	~"lﬂd-°‹e-queue.h
"

26 
	~"u›.h
"

27 
	~"thªad.h
"

30 *
	gx86_lsq_köd_m≠
[] = { "Shared", "Private" };

31 
x86_lsq_köd_t
 
	gx86_lsq_köd
;

32 
	gx86_lsq_size
;

40 
	$X86ThªadInôLSQ
(
X86Thªad
 *
£lf
)

42 
£lf
->
lq
 = 
	`löked_li°_¸óã
();

43 
£lf
->
sq
 = 
	`löked_li°_¸óã
();

44 
£lf
->
¥eq
 = 
	`löked_li°_¸óã
();

45 
	}
}

48 
	$X86ThªadFªeLSQ
(
X86Thªad
 *
£lf
)

50 
löked_li°_t
 *
lq
;

51 
löked_li°_t
 *
sq
;

52 
löked_li°_t
 *
¥eq
;

53 
x86_u›_t
 *
u›
;

56 
lq
 = 
£lf
->lq;

57 
	`löked_li°_hód
(
lq
);

58 
	`löked_li°_cou¡
(
lq
))

60 
u›
 = 
	`löked_li°_gë
(
lq
);

61 
u›
->
ö_lq
 = 0;

62 
	`löked_li°_ªmove
(
lq
);

63 
	`x86_u›_‰ì_if_nŸ_queued
(
u›
);

65 
	`löked_li°_‰ì
(
lq
);

68 
sq
 = 
£lf
->sq;

69 
	`löked_li°_hód
(
sq
);

70 
	`löked_li°_cou¡
(
sq
))

72 
u›
 = 
	`löked_li°_gë
(
sq
);

73 
u›
->
ö_sq
 = 0;

74 
	`löked_li°_ªmove
(
sq
);

75 
	`x86_u›_‰ì_if_nŸ_queued
(
u›
);

77 
	`löked_li°_‰ì
(
sq
);

80 
¥eq
 = 
£lf
->preq;

81 
	`löked_li°_hód
(
¥eq
);

82 
	`löked_li°_cou¡
(
¥eq
))

84 
u›
 = 
	`löked_li°_gë
(
¥eq
);

85 
u›
->
ö_¥eq
 = 0;

86 
	`löked_li°_ªmove
(
¥eq
);

87 
	`x86_u›_‰ì_if_nŸ_queued
(
u›
);

89 
	`löked_li°_‰ì
(
¥eq
);

90 
	}
}

93 
	$X86ThªadC™In£πInLSQ
(
X86Thªad
 *
£lf
, 
x86_u›_t
 *
u›
)

95 
X86C‹e
 *
c‹e
 = 
£lf
->core;

97 
cou¡
;

98 
size
;

100 
	`as£π
(
u›
->
thªad
 =
£lf
);

101 
size
 = 
x86_lsq_köd
 =
x86_lsq_köd_¥iv©e
 ? 
x86_lsq_size
 : x86_lsq_sizê* 
x86_˝u_num_thªads
;

102 
cou¡
 = 
x86_lsq_köd
 =
x86_lsq_köd_¥iv©e
 ? 
£lf
->
lsq_cou¡
 : 
c‹e
->lsq_count;

103  
cou¡
 < 
size
;

104 
	}
}

108 
	$X86ThªadIn£πInLSQ
(
X86Thªad
 *
£lf
, 
x86_u›_t
 *
u›
)

110 
X86C‹e
 *
c‹e
 = 
£lf
->core;

112 
löked_li°_t
 *
lq
 = 
£lf
->lq;

113 
löked_li°_t
 *
sq
 = 
£lf
->sq;

114 
löked_li°_t
 *
¥eq
 = 
£lf
->preq;

116 
	`as£π
(!
u›
->
ö_lq
 && !u›->
ö_sq
);

117 
	`as£π
(
u›
->
uö°
->
›code
 =
x86_uö°_lﬂd
 || u›->uö°->›codê=
x86_uö°_°‹e
 ||

118 
u›
->
uö°
->
›code
 =
x86_uö°_¥e„tch
);

120 i‡(
u›
->
uö°
->
›code
 =
x86_uö°_lﬂd
)

122 
	`löked_li°_out
(
lq
);

123 
	`löked_li°_ö£π
(
lq
, 
u›
);

124 
u›
->
ö_lq
 = 1;

126 i‡(
u›
->
uö°
->
›code
 =
x86_uö°_°‹e
)

128 
	`löked_li°_out
(
sq
);

129 
	`löked_li°_ö£π
(
sq
, 
u›
);

130 
u›
->
ö_sq
 = 1;

134 
	`löked_li°_out
(
¥eq
);

135 
	`löked_li°_ö£π
(
¥eq
, 
u›
);

136 
u›
->
ö_¥eq
 = 1;

138 
c‹e
->
lsq_cou¡
++;

139 
£lf
->
lsq_cou¡
++;

140 
	}
}

145 
	$X86ThªadRecovîLSQ
(
X86Thªad
 *
£lf
)

147 
löked_li°_t
 *
lq
 = 
£lf
->lq;

148 
löked_li°_t
 *
sq
 = 
£lf
->sq;

149 
x86_u›_t
 *
u›
;

152 
	`löked_li°_hód
(
lq
);

153 !
	`löked_li°_is_íd
(
lq
))

155 
u›
 = 
	`löked_li°_gë
(
lq
);

156 i‡(
u›
->
•ecmode
)

158 
	`X86ThªadRemoveFromLQ
(
£lf
);

159 
	`x86_u›_‰ì_if_nŸ_queued
(
u›
);

162 
	`löked_li°_√xt
(
lq
);

166 
	`löked_li°_hód
(
sq
);

167 !
	`löked_li°_is_íd
(
sq
))

169 
u›
 = 
	`löked_li°_gë
(
sq
);

170 i‡(
u›
->
•ecmode
)

172 
	`X86ThªadRemoveFromSQ
(
£lf
);

173 
	`x86_u›_‰ì_if_nŸ_queued
(
u›
);

176 
	`löked_li°_√xt
(
sq
);

178 
	}
}

183 
	$X86ThªadRemoveFromLQ
(
X86Thªad
 *
£lf
)

185 
X86C‹e
 *
c‹e
 = 
£lf
->core;

187 
löked_li°_t
 *
lq
 = 
£lf
->lq;

188 
x86_u›_t
 *
u›
;

190 
u›
 = 
	`löked_li°_gë
(
lq
);

191 
	`as£π
(
	`x86_u›_exi°s
(
u›
));

192 
	`löked_li°_ªmove
(
lq
);

193 
u›
->
ö_lq
 = 0;

195 
	`as£π
(
c‹e
->
lsq_cou¡
 && 
£lf
->lsq_count);

196 
c‹e
->
lsq_cou¡
--;

197 
£lf
->
lsq_cou¡
--;

198 
	}
}

202 
	$X86ThªadRemoveFromSQ
(
X86Thªad
 *
£lf
)

204 
X86C‹e
 *
c‹e
 = 
£lf
->core;

206 
löked_li°_t
 *
sq
 = 
£lf
->sq;

207 
x86_u›_t
 *
u›
;

209 
u›
 = 
	`löked_li°_gë
(
sq
);

210 
	`as£π
(
	`x86_u›_exi°s
(
u›
));

211 
	`as£π
(
u›
->
ö_sq
);

212 
	`löked_li°_ªmove
(
sq
);

213 
u›
->
ö_sq
 = 0;

215 
	`as£π
(
c‹e
->
lsq_cou¡
 && 
£lf
->lsq_count);

216 
c‹e
->
lsq_cou¡
--;

217 
£lf
->
lsq_cou¡
--;

218 
	}
}

221 
	$X86ThªadRemovePªQ
(
X86Thªad
 *
£lf
)

223 
X86C‹e
 *
c‹e
 = 
£lf
->core;

225 
löked_li°_t
 *
¥eq
 = 
£lf
->preq;

226 
x86_u›_t
 *
u›
;

228 
u›
 = 
	`löked_li°_gë
(
¥eq
);

229 
	`as£π
(
	`x86_u›_exi°s
(
u›
));

230 
	`as£π
(
u›
->
ö_¥eq
);

231 
	`löked_li°_ªmove
(
¥eq
);

232 
u›
->
ö_¥eq
 = 0;

234 
	`as£π
(
c‹e
->
lsq_cou¡
 && 
£lf
->lsq_count);

235 
c‹e
->
lsq_cou¡
--;

236 
£lf
->
lsq_cou¡
--;

237 
	}
}

	@timing/load-store-queue.h

20 #i‚de‡
X86_ARCH_TIMING_LOAD_STORE_QUEUE_H


21 
	#X86_ARCH_TIMING_LOAD_STORE_QUEUE_H


	)

28 *
x86_lsq_köd_m≠
[];

29 
	ex86_lsq_köd_t


31 
x86_lsq_köd_sh¨ed
 = 0,

32 
x86_lsq_köd_¥iv©e


33 } 
x86_lsq_köd
;

34 
x86_lsq_size
;

42 
X86ThªadInôLSQ
(
X86Thªad
 *
£lf
);

43 
X86ThªadFªeLSQ
(
X86Thªad
 *
£lf
);

45 
X86ThªadC™In£πInLSQ
(
X86Thªad
 *
£lf
, 
x86_u›_t
 *
u›
);

46 
X86ThªadIn£πInLSQ
(
X86Thªad
 *
£lf
, 
x86_u›_t
 *
u›
);

47 
X86ThªadRecovîLSQ
(
X86Thªad
 *
£lf
);

49 
X86ThªadRemoveFromLQ
(
X86Thªad
 *
£lf
);

50 
X86ThªadRemoveFromSQ
(
X86Thªad
 *
£lf
);

51 
X86ThªadRemovePªQ
(
X86Thªad
 *
£lf
);

	@timing/mem-config.c

21 
	~<¨ch/comm⁄/¨ch.h
>

22 
	~<lib/utû/c⁄fig.h
>

23 
	~<lib/utû/debug.h
>

24 
	~<lib/utû/löked-li°.h
>

25 
	~<lib/utû/°rög.h
>

26 
	~<mem-sy°em/mem-sy°em.h
>

27 
	~<mem-sy°em/moduÀ.h
>

29 
	~"c‹e.h
"

30 
	~"˝u.h
"

31 
	~"mem-c⁄fig.h
"

32 
	~"thªad.h
"

35 
	$X86CpuMemC⁄figDeÁu…
(
Timög
 *
£lf
, 
c⁄fig_t
 *
c⁄fig
)

37 
£˘i⁄
[
MAX_STRING_SIZE
];

38 
°r
[
MAX_STRING_SIZE
];

40 
i
;

41 
j
;

44 
	`¢¥ötf
(
£˘i⁄
,  section, "CacheGeometry x86-geo-l1");

45 
	`c⁄fig_wrôe_öt
(
c⁄fig
, 
£˘i⁄
, "Sets", 16);

46 
	`c⁄fig_wrôe_öt
(
c⁄fig
, 
£˘i⁄
, "Assoc", 2);

47 
	`c⁄fig_wrôe_öt
(
c⁄fig
, 
£˘i⁄
, "BlockSize", 64);

48 
	`c⁄fig_wrôe_öt
(
c⁄fig
, 
£˘i⁄
, "Latency", 1);

49 
	`c⁄fig_wrôe_°rög
(
c⁄fig
, 
£˘i⁄
, "Policy", "LRU");

52 
	`¢¥ötf
(
£˘i⁄
,  section, "CacheGeometry x86-geo-l2");

53 
	`c⁄fig_wrôe_öt
(
c⁄fig
, 
£˘i⁄
, "Sets", 64);

54 
	`c⁄fig_wrôe_öt
(
c⁄fig
, 
£˘i⁄
, "Assoc", 4);

55 
	`c⁄fig_wrôe_öt
(
c⁄fig
, 
£˘i⁄
, "BlockSize", 64);

56 
	`c⁄fig_wrôe_öt
(
c⁄fig
, 
£˘i⁄
, "Latency", 10);

57 
	`c⁄fig_wrôe_°rög
(
c⁄fig
, 
£˘i⁄
, "Policy", "LRU");

60 
i
 = 0; i < 
x86_˝u_num_c‹es
; i++)

63 
	`¢¥ötf
(
£˘i⁄
,  se˘i⁄, "ModuÀ x86-l1-%d", 
i
);

64 
	`c⁄fig_wrôe_°rög
(
c⁄fig
, 
£˘i⁄
, "Type", "Cache");

65 
	`c⁄fig_wrôe_°rög
(
c⁄fig
, 
£˘i⁄
, "Geometry", "x86-geo-l1");

66 
	`c⁄fig_wrôe_°rög
(
c⁄fig
, 
£˘i⁄
, "LowNetwork", "x86-net-l1-l2");

67 
	`c⁄fig_wrôe_°rög
(
c⁄fig
, 
£˘i⁄
, "LowModules", "x86-l2");

70 
	`¢¥ötf
(
°r
,  så, "x86-l1-%d", 
i
);

71 
j
 = 0; j < 
x86_˝u_num_thªads
; j++)

73 
	`¢¥ötf
(
£˘i⁄
,  section, "Entry x86-core-%d-thread-%d",

74 
i
, 
j
);

75 
	`c⁄fig_wrôe_°rög
(
c⁄fig
, 
£˘i⁄
, "Arch", "x86");

76 
	`c⁄fig_wrôe_öt
(
c⁄fig
, 
£˘i⁄
, "C‹e", 
i
);

77 
	`c⁄fig_wrôe_öt
(
c⁄fig
, 
£˘i⁄
, "Thªad", 
j
);

78 
	`c⁄fig_wrôe_°rög
(
c⁄fig
, 
£˘i⁄
, "ModuÀ", 
°r
);

83 
	`¢¥ötf
(
£˘i⁄
,  section, "Module x86-l2");

84 
	`c⁄fig_wrôe_°rög
(
c⁄fig
, 
£˘i⁄
, "Type", "Cache");

85 
	`c⁄fig_wrôe_°rög
(
c⁄fig
, 
£˘i⁄
, "Geometry", "x86-geo-l2");

86 
	`c⁄fig_wrôe_°rög
(
c⁄fig
, 
£˘i⁄
, "HighNetwork", "x86-net-l1-l2");

87 
	`c⁄fig_wrôe_°rög
(
c⁄fig
, 
£˘i⁄
, "LowNetwork", "x86-net-l2-mm");

88 
	`c⁄fig_wrôe_°rög
(
c⁄fig
, 
£˘i⁄
, "LowModules", "x86-mm");

91 
	`¢¥ötf
(
£˘i⁄
,  section, "Module x86-mm");

92 
	`c⁄fig_wrôe_°rög
(
c⁄fig
, 
£˘i⁄
, "Type", "MainMemory");

93 
	`c⁄fig_wrôe_°rög
(
c⁄fig
, 
£˘i⁄
, "HighNetwork", "x86-net-l2-mm");

94 
	`c⁄fig_wrôe_öt
(
c⁄fig
, 
£˘i⁄
, "BlockSize", 64);

95 
	`c⁄fig_wrôe_öt
(
c⁄fig
, 
£˘i⁄
, "Latency", 100);

98 
	`¢¥ötf
(
£˘i⁄
,  section, "Network x86-net-l1-l2");

99 
	`c⁄fig_wrôe_öt
(
c⁄fig
, 
£˘i⁄
, "DefaultInputBufferSize", 144);

100 
	`c⁄fig_wrôe_öt
(
c⁄fig
, 
£˘i⁄
, "DefaultOutputBufferSize", 144);

101 
	`c⁄fig_wrôe_öt
(
c⁄fig
, 
£˘i⁄
, "DefaultBandwidth", 72);

104 
	`¢¥ötf
(
£˘i⁄
,  section, "Network x86-net-l2-mm");

105 
	`c⁄fig_wrôe_öt
(
c⁄fig
, 
£˘i⁄
, "DefaultInputBufferSize", 528);

106 
	`c⁄fig_wrôe_öt
(
c⁄fig
, 
£˘i⁄
, "DefaultOutputBufferSize", 528);

107 
	`c⁄fig_wrôe_öt
(
c⁄fig
, 
£˘i⁄
, "DefaultBandwidth", 264);

108 
	}
}

111 
	$X86CpuMemC⁄figP¨£E¡ry
(
Timög
 *
£lf
, 
c⁄fig_t
 *
c⁄fig
, *
£˘i⁄
)

113 
X86Cpu
 *
˝u
 = 
	`asX86Cpu
(
£lf
);

114 
X86C‹e
 *
c‹e
;

115 
X86Thªad
 *
thªad
;

117 *
fûe_«me
;

119 
c‹e_ödex
;

120 
thªad_ödex
;

122 
unifõd_¥e£¡
;

123 
d©a_ö°_¥e£¡
;

125 *
d©a_moduÀ_«me
;

126 *
ö°_moduÀ_«me
;

129 
fûe_«me
 = 
	`c⁄fig_gë_fûe_«me
(
c⁄fig
);

132 
	`c⁄fig_v¨_Ælow
(
c⁄fig
, 
£˘i⁄
, "DataModule");

133 
	`c⁄fig_v¨_Ælow
(
c⁄fig
, 
£˘i⁄
, "InstModule");

134 
	`c⁄fig_v¨_Ælow
(
c⁄fig
, 
£˘i⁄
, "Module");

137 
unifõd_¥e£¡
 = 
	`c⁄fig_v¨_exi°s
(
c⁄fig
, 
£˘i⁄
, "Module");

138 
d©a_ö°_¥e£¡
 = 
	`c⁄fig_v¨_exi°s
(
c⁄fig
, 
£˘i⁄
, "DataModule") &&

139 
	`c⁄fig_v¨_exi°s
(
c⁄fig
, 
£˘i⁄
, "InstModule");

140 i‡(!(
unifõd_¥e£¡
 ^ 
d©a_ö°_¥e£¡
))

141 
	`Áèl
("%s: section [%s]: invalid combination of modules.\n"

146 
fûe_«me
, 
£˘i⁄
);

149 
c‹e_ödex
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "Core", -1);

150 i‡(
c‹e_ödex
 < 0)

151 
	`Áèl
("%s: section [%s]: invalid or missing value for 'Core'",

152 
fûe_«me
, 
£˘i⁄
);

155 
thªad_ödex
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "Thread", -1);

156 i‡(
thªad_ödex
 < 0)

157 
	`Áèl
("%s: section [%s]: invalid or missing value for 'Thread'",

158 
fûe_«me
, 
£˘i⁄
);

161 i‡(
c‹e_ödex
 >
x86_˝u_num_c‹es
 || 
thªad_ödex
 >
x86_˝u_num_thªads
)

163 
	`w¨nög
("%s: section [%s] ignored,ÑeferringÅo x86 Core %d, Thread %d.\n"

166 
fûe_«me
, 
£˘i⁄
, 
c‹e_ödex
, 
thªad_ödex
);

171 
c‹e
 = 
˝u
->
c‹es
[
c‹e_ödex
];

172 
thªad
 = 
c‹e
->
thªads
[
thªad_ödex
];

173 i‡(
thªad
->
d©a_mod
 ||Åhªad->
ö°_mod
)

175 
	`as£π
(
thªad
->
d©a_mod
 &&Åhªad->
ö°_mod
);

176 
	`Áèl
("%s: section [%s]:Éntry from Core %d, Thread %dálreadyássigned.\n"

180 
fûe_«me
, 
£˘i⁄
, 
c‹e_ödex
, 
thªad_ödex
);

184 i‡(
d©a_ö°_¥e£¡
)

186 
d©a_moduÀ_«me
 = 
	`c⁄fig_ªad_°rög
(
c⁄fig
, 
£˘i⁄
, "D©aModuÀ", 
NULL
);

187 
ö°_moduÀ_«me
 = 
	`c⁄fig_ªad_°rög
(
c⁄fig
, 
£˘i⁄
, "In°ModuÀ", 
NULL
);

188 
	`as£π
(
d©a_moduÀ_«me
);

189 
	`as£π
(
ö°_moduÀ_«me
);

193 
d©a_moduÀ_«me
 = 
ö°_moduÀ_«me
 =

194 
	`c⁄fig_ªad_°rög
(
c⁄fig
, 
£˘i⁄
, "ModuÀ", 
NULL
);

195 
	`as£π
(
d©a_moduÀ_«me
);

199 
thªad
->
d©a_mod
 = 
	`mem_sy°em_gë_mod
(
d©a_moduÀ_«me
);

200 i‡(!
thªad
->
d©a_mod
)

201 
	`Áèl
("%s: section [%s]: '%s' isÇotá valid moduleÇame.\n"

204 
fûe_«me
, 
£˘i⁄
, 
d©a_moduÀ_«me
);

207 
thªad
->
ö°_mod
 = 
	`mem_sy°em_gë_mod
(
ö°_moduÀ_«me
);

208 i‡(!
thªad
->
ö°_mod
)

209 
	`Áèl
("%s: section [%s]: '%s' isÇotá valid moduleÇame.\n"

212 
fûe_«me
, 
£˘i⁄
, 
ö°_moduÀ_«me
);

215 
	`löked_li°_add
(
¨ch_x86
->
mem_íåy_mod_li°
, 
thªad
->
d©a_mod
);

216 i‡(
thªad
->
d©a_mod
 !thªad->
ö°_mod
)

217 
	`löked_li°_add
(
¨ch_x86
->
mem_íåy_mod_li°
, 
thªad
->
ö°_mod
);

220 
	`mem_debug
("\tx86 C‹ê%d, Thªad %d\n", 
c‹e_ödex
, 
thªad_ödex
);

221 
	`mem_debug
("\t\tE¡ry f‹ in°ru˘i⁄†-> %s\n", 
thªad
->
ö°_mod
->
«me
);

222 
	`mem_debug
("\t\tE¡ry f‹ d©®-> %s\n", 
thªad
->
d©a_mod
->
«me
);

223 
	`mem_debug
("\n");

224 
	}
}

227 
	$X86CpuMemC⁄figCheck
(
Timög
 *
£lf
, 
c⁄fig_t
 *
c⁄fig
)

229 
X86Cpu
 *
˝u
 = 
	`asX86Cpu
(
£lf
);

230 
X86C‹e
 *
c‹e
;

231 
X86Thªad
 *
thªad
;

233 
i
;

234 
j
;

236 *
fûe_«me
;

239 
fûe_«me
 = 
	`c⁄fig_gë_fûe_«me
(
c⁄fig
);

240 
i
 = 0; i < 
x86_˝u_num_c‹es
; i++)

242 
c‹e
 = 
˝u
->
c‹es
[
i
];

243 
j
 = 0; j < 
x86_˝u_num_thªads
; j++)

245 
thªad
 = 
c‹e
->
thªads
[
j
];

246 i‡(!
thªad
->
d©a_mod
 || !thªad->
ö°_mod
)

247 
	`Áèl
("%s: x86 Core %d, Thread %dÜacksá data/instructionÉntryÅo memory.\n"

250 
fûe_«me
, 
i
, 
j
);

253 
	}
}

	@timing/mem-config.h

20 #i‚de‡
ARCH_X86_TIMING_MEM_CONFIG_H


21 
	#ARCH_X86_TIMING_MEM_CONFIG_H


	)

23 
	gc⁄fig_t
;

25 
X86CpuMemC⁄figDeÁu…
(
Timög
 *
£lf
, 
c⁄fig_t
 *
c⁄fig
);

26 
X86CpuMemC⁄figP¨£E¡ry
(
Timög
 *
£lf
, 
c⁄fig_t
 *
c⁄fig
, *
£˘i⁄
);

27 
X86CpuMemC⁄figCheck
(
Timög
 *
£lf
, 
c⁄fig_t
 *
c⁄fig
);

	@timing/recover.c

21 
	~<¨ch/x86/emu/c⁄ãxt.h
>

22 
	~<¨ch/x86/emu/ªgs.h
>

23 
	~<lib/esim/åa˚.h
>

24 
	~<lib/utû/misc.h
>

26 
	~"c‹e.h
"

27 
	~"˝u.h
"

28 
	~"evít-queue.h
"

29 
	~"„tch-queue.h
"

30 
	~"ö°-queue.h
"

31 
	~"lﬂd-°‹e-queue.h
"

32 
	~"ªcovî.h
"

33 
	~"ªg-fûe.h
"

34 
	~"rob.h
"

35 
	~"thªad.h
"

36 
	~"åa˚-ˇche.h
"

37 
	~"u›-queue.h
"

44 
	$X86ThªadRecovî
(
X86Thªad
 *
£lf
)

46 
X86Cpu
 *
˝u
 = 
£lf
->cpu;

47 
X86C‹e
 *
c‹e
 = 
£lf
->core;

49 
x86_u›_t
 *
u›
;

53 
	`X86ThªadRecovîFëchQueue
(
£lf
);

54 
	`X86ThªadRecovîU›Queue
(
£lf
);

55 
	`X86ThªadRecovîIQ
(
£lf
);

56 
	`X86ThªadRecovîLSQ
(
£lf
);

57 
	`X86ThªadRecovîEvítQueue
(
£lf
);

64 
u›
 = 
	`X86ThªadGëROBTaû
(
£lf
);

65 i‡(!
u›
)

70 
	`as£π
(
u›
->
thªad
 =
£lf
);

71 i‡(!
u›
->
•ecmode
)

75 i‡(
u›
->
åa˚_ˇche
)

76 
£lf
->
åa˚_ˇche
->
num_squashed_uö°
++;

77 
£lf
->
num_squashed_uö°
++;

78 
c‹e
->
num_squashed_uö°
++;

79 
˝u
->
num_squashed_uö°
++;

82 i‡(!
u›
->
com∂ëed
)

83 
	`X86ThªadWrôeU›
(
£lf
, 
u›
);

84 
	`X86ThªadUndoU›
(
£lf
, 
u›
);

87 i‡(
	`x86_åacög
())

89 
	`x86_åa˚
("x86.inst id=%lld core=%d stg=\"sq\"\n",

90 
u›
->
id_ö_c‹e
, 
c‹e
->
id
);

91 
	`X86CpuAddToTø˚Li°
(
˝u
, 
u›
);

95 
	`X86ThªadRemoveROBTaû
(
£lf
);

99 i‡(
£lf
->
˘x
)

102 i‡(
	`X86C⁄ãxtGëSèã
(
£lf
->
˘x
, 
X86C⁄ãxtS≥cMode
))

103 
	`X86C⁄ãxtRecovî
(
£lf
->
˘x
);

106 
£lf
->
„tch_°Æl_u¡û
 = 
	`MAX
(self->fetch_stall_until,

107 
	`asTimög
(
˝u
)->
cy˛e
 + 
x86_˝u_ªcovî_≥«…y
 - 1);

108 
£lf
->
„tch_√ù
 = sñf->
˘x
->
ªgs
->
eù
;

110 
	}
}

	@timing/recover.h

20 #i‚de‡
ARCH_X86_TIMING_RECOVER_H


21 
	#ARCH_X86_TIMING_RECOVER_H


	)

23 
	~<lib/utû/˛ass.h
>

29 
X86ThªadRecovî
(
X86Thªad
 *
£lf
);

	@timing/reg-file.c

21 
	~<lib/mh™dÀ/mh™dÀ.h
>

22 
	~<lib/utû/c⁄fig.h
>

23 
	~<lib/utû/debug.h
>

24 
	~<lib/utû/löked-li°.h
>

26 
	~"c‹e.h
"

27 
	~"˝u.h
"

28 
	~"ªg-fûe.h
"

29 
	~"rob.h
"

30 
	~"thªad.h
"

38 
	$X86ThªadInôRegFûe
(
X86Thªad
 *
£lf
)

40 
x86_ªg_fûe_t
 *
ªg_fûe
;

42 
dï
;

43 
phªg
;

44 
Âhªg
;

47 
£lf
->
ªg_fûe
 =Ñeg_fûê
	`x86_ªg_fûe_¸óã
(
x86_ªg_fûe_öt_loˇl_size
,

48 
x86_ªg_fûe_Â_loˇl_size
, 
x86_ªg_fûe_xmm_loˇl_size
);

53 
Âhªg
 = -1;

54 
dï
 = 0; dï < 
x86_dï_öt_cou¡
; dep++)

56 i‡(
	`X86_DEP_IS_FLAG
(
dï
 + 
x86_dï_öt_fú°
))

58 
	`as£π
(
Âhªg
 >= 0);

59 
phªg
 = 
Âhªg
;

63 
phªg
 = 
	`X86ThªadReque°I¡Reg
(
£lf
);

64 
Âhªg
 = 
phªg
;

66 
ªg_fûe
->
öt_phªg
[
phªg
].
busy
++;

67 
ªg_fûe
->
öt_øt
[
dï
] = 
phªg
;

71 
dï
 = 0; dï < 
x86_dï_Â_cou¡
; dep++)

73 
phªg
 = 
	`X86ThªadReque°FPReg
(
£lf
);

74 
ªg_fûe
->
Â_phªg
[
phªg
].
busy
++;

75 
ªg_fûe
->
Â_øt
[
dï
] = 
phªg
;

79 
dï
 = 0; dï < 
x86_dï_xmm_cou¡
; dep++)

81 
phªg
 = 
	`X86ThªadReque°XMMReg
(
£lf
);

82 
ªg_fûe
->
xmm_phªg
[
phªg
].
busy
++;

83 
ªg_fûe
->
xmm_øt
[
dï
] = 
phªg
;

85 
	}
}

88 
	$X86ThªadFªeRegFûe
(
X86Thªad
 *
£lf
)

90 
	`x86_ªg_fûe_‰ì
(
£lf
->
ªg_fûe
);

91 
	}
}

94 
	$X86ThªadDumpRegFûe
(
X86Thªad
 *
£lf
, 
FILE
 *
f
)

96 
i
;

99 
	`Ârötf
(
f
, "I¡egîÑegi°î fûêöÅhªad %s\n", 
£lf
->
«me
);

100 
	`Ârötf
(
f
, "Format is [busy,Öending], * = free\n");

101 
i
 = 0; i < 
x86_ªg_fûe_öt_loˇl_size
; i++)

103 
	`Ârötf
(
f
, " %3d%c[%d-%d]", 
i
, 
£lf
->
ªg_fûe
->
öt_phªg
[i].
busy
 ? ' ' : '*',

104 
£lf
->
ªg_fûe
->
öt_phªg
[
i
].
busy
,

105 
£lf
->
ªg_fûe
->
öt_phªg
[
i
].
≥ndög
);

106 i‡(
i
 % 5 =4 && i !
x86_ªg_fûe_öt_loˇl_size
 - 1)

107 
	`Ârötf
(
f
, "\n");

110 
	`Ârötf
(
f
, "\nInteger Register Aliasing Table:\n");

111 
i
 = 
x86_dï_öt_fú°
; i <
x86_dï_öt_œ°
; i++)

113 
	`Ârötf
(
f
, " %2d->%-3d", 
i
, 
£lf
->
ªg_fûe
->
öt_øt
[ò- 
x86_dï_öt_fú°
]);

114 i‡((
i
 - 
x86_dï_öt_fú°
) % 8 == 7)

115 
	`Ârötf
(
f
, "\n");

118 
	`Ârötf
(
f
, "\n");

119 
	`Ârötf
(
f
, "int_free_phreg_count %d # Number of free integerÑegisters\n",

120 
£lf
->
ªg_fûe
->
öt_‰ì_phªg_cou¡
);

121 
	`Ârötf
(
f
, "\n");

124 
	`Ârötf
(
f
, "Flﬂtög-poöàªgi°î fûê©Åhªad %s\n", 
£lf
->
«me
);

125 
	`Ârötf
(
f
, "Format is [busy,Öending], * = free\n");

126 
i
 = 0; i < 
x86_ªg_fûe_Â_loˇl_size
; i++)

128 
	`Ârötf
(
f
, " %3d%c[%d-%d]", 
i
, 
£lf
->
ªg_fûe
->
Â_phªg
[i].
busy
 ? ' ' : '*',

129 
£lf
->
ªg_fûe
->
Â_phªg
[
i
].
busy
,

130 
£lf
->
ªg_fûe
->
Â_phªg
[
i
].
≥ndög
);

131 i‡(
i
 % 5 =4 && i !
x86_ªg_fûe_Â_loˇl_size
 - 1)

132 
	`Ârötf
(
f
, "\n");

135 
	`Ârötf
(
f
, "\nIteger Register Aliasing Table:\n");

136 
i
 = 
x86_dï_Â_fú°
; i <
x86_dï_Â_œ°
; i++)

138 
	`Ârötf
(
f
, " %2d->%-3d", 
i
, 
£lf
->
ªg_fûe
->
Â_øt
[ò- 
x86_dï_Â_fú°
]);

139 i‡((
i
 - 
x86_dï_Â_fú°
) % 8 == 7)

140 
	`Ârötf
(
f
, "\n");

143 
	`Ârötf
(
f
, "\n");

144 
	`Ârötf
(
f
, "fp_free_phreg_count %d # Number of free floating-pointÑegisters\n",

145 
£lf
->
ªg_fûe
->
Â_‰ì_phªg_cou¡
);

146 
	`Ârötf
(
f
, "\n");

149 
	`Ârötf
(
f
, "XMMÑegi°î fûê©Åhªad %s\n", 
£lf
->
«me
);

150 
	`Ârötf
(
f
, "Format is [busy,Öending], * = free\n");

151 
i
 = 0; i < 
x86_ªg_fûe_xmm_loˇl_size
; i++)

153 
	`Ârötf
(
f
, " %3d%c[%d-%d]", 
i
, 
£lf
->
ªg_fûe
->
xmm_phªg
[i].
busy
 ? ' ' : '*',

154 
£lf
->
ªg_fûe
->
xmm_phªg
[
i
].
busy
,

155 
£lf
->
ªg_fûe
->
xmm_phªg
[
i
].
≥ndög
);

156 i‡(
i
 % 5 =4 && i !
x86_ªg_fûe_xmm_loˇl_size
 - 1)

157 
	`Ârötf
(
f
, "\n");

160 
	`Ârötf
(
f
, "\nXMM Register Aliasing Table:\n");

161 
i
 = 
x86_dï_xmm_fú°
; i <
x86_dï_xmm_œ°
; i++)

163 
	`Ârötf
(
f
, " %2d->%-3d", 
i
, 
£lf
->
ªg_fûe
->
xmm_øt
[ò- 
x86_dï_xmm_fú°
]);

164 i‡((
i
 - 
x86_dï_xmm_fú°
) % 8 == 7)

165 
	`Ârötf
(
f
, "\n");

168 
	`Ârötf
(
f
, "\n");

169 
	`Ârötf
(
f
, "xmm_free_phreg_count %d # Number of free integerÑegisters\n",

170 
£lf
->
ªg_fûe
->
xmm_‰ì_phªg_cou¡
);

171 
	`Ârötf
(
f
, "\n");

172 
	}
}

175 
	$X86ThªadC™RíameU›
(
X86Thªad
 *
£lf
, 
x86_u›_t
 *
u›
)

177 
X86C‹e
 *
c‹e
 = 
£lf
->core;

180 
	`as£π
(
u›
->
thªad
 =
£lf
);

181 i‡(
x86_ªg_fûe_köd
 =
x86_ªg_fûe_köd_¥iv©e
)

183 i‡(
£lf
->
ªg_fûe_öt_cou¡
 + 
u›
->
ph_öt_odï_cou¡
 > 
x86_ªg_fûe_öt_loˇl_size
)

185 i‡(
£lf
->
ªg_fûe_Â_cou¡
 + 
u›
->
ph_Â_odï_cou¡
 > 
x86_ªg_fûe_Â_loˇl_size
)

187 i‡(
£lf
->
ªg_fûe_xmm_cou¡
 + 
u›
->
ph_xmm_odï_cou¡
 > 
x86_ªg_fûe_xmm_loˇl_size
)

192 i‡(
c‹e
->
ªg_fûe_öt_cou¡
 + 
u›
->
ph_öt_odï_cou¡
 > 
x86_ªg_fûe_öt_loˇl_size
)

194 i‡(
c‹e
->
ªg_fûe_Â_cou¡
 + 
u›
->
ph_Â_odï_cou¡
 > 
x86_ªg_fûe_Â_loˇl_size
)

196 i‡(
c‹e
->
ªg_fûe_xmm_cou¡
 + 
u›
->
ph_xmm_odï_cou¡
 > 
x86_ªg_fûe_xmm_loˇl_size
)

202 
	}
}

206 
	$X86ThªadReque°I¡Reg
(
X86Thªad
 *
£lf
)

208 
X86C‹e
 *
c‹e
 = 
£lf
->core;

209 
x86_ªg_fûe_t
 *
ªg_fûe
 = 
£lf
->reg_file;

210 
phªg
;

213 
	`as£π
(
ªg_fûe
->
öt_‰ì_phªg_cou¡
 > 0);

214 
phªg
 = 
ªg_fûe
->
öt_‰ì_phªg
[ªg_fûe->
öt_‰ì_phªg_cou¡
 - 1];

215 
ªg_fûe
->
öt_‰ì_phªg_cou¡
--;

216 
c‹e
->
ªg_fûe_öt_cou¡
++;

217 
£lf
->
ªg_fûe_öt_cou¡
++;

218 
	`as£π
(!
ªg_fûe
->
öt_phªg
[
phªg
].
busy
);

219 
	`as£π
(!
ªg_fûe
->
öt_phªg
[
phªg
].
≥ndög
);

220  
phªg
;

221 
	}
}

225 
	$X86ThªadReque°FPReg
(
X86Thªad
 *
£lf
)

227 
X86C‹e
 *
c‹e
 = 
£lf
->core;

228 
x86_ªg_fûe_t
 *
ªg_fûe
 = 
£lf
->reg_file;

229 
phªg
;

232 
	`as£π
(
ªg_fûe
->
Â_‰ì_phªg_cou¡
 > 0);

233 
phªg
 = 
ªg_fûe
->
Â_‰ì_phªg
[ªg_fûe->
Â_‰ì_phªg_cou¡
 - 1];

234 
ªg_fûe
->
Â_‰ì_phªg_cou¡
--;

235 
c‹e
->
ªg_fûe_Â_cou¡
++;

236 
£lf
->
ªg_fûe_Â_cou¡
++;

237 
	`as£π
(!
ªg_fûe
->
Â_phªg
[
phªg
].
busy
);

238 
	`as£π
(!
ªg_fûe
->
Â_phªg
[
phªg
].
≥ndög
);

239  
phªg
;

240 
	}
}

244 
	$X86ThªadReque°XMMReg
(
X86Thªad
 *
£lf
)

246 
X86C‹e
 *
c‹e
 = 
£lf
->core;

247 
x86_ªg_fûe_t
 *
ªg_fûe
 = 
£lf
->reg_file;

248 
phªg
;

251 
	`as£π
(
ªg_fûe
->
xmm_‰ì_phªg_cou¡
 > 0);

252 
phªg
 = 
ªg_fûe
->
xmm_‰ì_phªg
[ªg_fûe->
xmm_‰ì_phªg_cou¡
 - 1];

253 
ªg_fûe
->
xmm_‰ì_phªg_cou¡
--;

254 
c‹e
->
ªg_fûe_xmm_cou¡
++;

255 
£lf
->
ªg_fûe_xmm_cou¡
++;

256 
	`as£π
(!
ªg_fûe
->
xmm_phªg
[
phªg
].
busy
);

257 
	`as£π
(!
ªg_fûe
->
xmm_phªg
[
phªg
].
≥ndög
);

258  
phªg
;

259 
	}
}

262 
	$X86ThªadRíameU›
(
X86Thªad
 *
£lf
, 
x86_u›_t
 *
u›
)

264 
dï
;

265 
l‹eg
, 
°ªg
, 
phªg
, 
›hªg
;

266 
Êag_phªg
, 
Êag_cou¡
;

267 
x86_ªg_fûe_t
 *
ªg_fûe
 = 
£lf
->reg_file;

270 
	`as£π
(
u›
->
thªad
 =
£lf
);

273 i‡(
u›
->
uö°
->
›code
 =
x86_uö°_Â_p›
)

276 
ªg_fûe
->
Â_t›_of_°ack
 = (reg_file->fp_top_of_stack + 1) % 8;

278 i‡(
u›
->
uö°
->
›code
 =
x86_uö°_Â_push
)

281 
ªg_fûe
->
Â_t›_of_°ack
 = (reg_file->fp_top_of_stack + 7) % 8;

285 
dï
 = 0; dï < 
X86_UINST_MAX_IDEPS
; dep++)

287 
l‹eg
 = 
u›
->
uö°
->
idï
[
dï
];

288 i‡(
	`X86_DEP_IS_INT_REG
(
l‹eg
))

290 
phªg
 = 
ªg_fûe
->
öt_øt
[
l‹eg
 - 
x86_dï_öt_fú°
];

291 
u›
->
ph_idï
[
dï
] = 
phªg
;

292 
£lf
->
øt_öt_ªads
++;

294 i‡(
	`X86_DEP_IS_FP_REG
(
l‹eg
))

297 
°ªg
 = (
l‹eg
 - 
x86_dï_Â_fú°
 + 
ªg_fûe
->
Â_t›_of_°ack
) % 8 + x86_dep_fp_first;

298 
	`as£π
(
	`X86_DEP_IS_FP_REG
(
°ªg
));

301 
phªg
 = 
ªg_fûe
->
Â_øt
[
°ªg
 - 
x86_dï_Â_fú°
];

302 
u›
->
ph_idï
[
dï
] = 
phªg
;

303 
£lf
->
øt_Â_ªads
++;

305 i‡(
	`X86_DEP_IS_XMM_REG
(
l‹eg
))

307 
phªg
 = 
ªg_fûe
->
xmm_øt
[
l‹eg
 - 
x86_dï_xmm_fú°
];

308 
u›
->
ph_idï
[
dï
] = 
phªg
;

309 
£lf
->
øt_xmm_ªads
++;

313 
u›
->
ph_idï
[
dï
] = -1;

318 
Êag_phªg
 = -1;

319 
Êag_cou¡
 = 0;

320 
dï
 = 0; dï < 
X86_UINST_MAX_ODEPS
; dep++)

322 
l‹eg
 = 
u›
->
uö°
->
odï
[
dï
];

323 i‡(
	`X86_DEP_IS_FLAG
(
l‹eg
))

326 
Êag_cou¡
++;

328 i‡(
	`X86_DEP_IS_INT_REG
(
l‹eg
))

331 
phªg
 = 
	`X86ThªadReque°I¡Reg
(
£lf
);

332 
ªg_fûe
->
öt_phªg
[
phªg
].
busy
++;

333 
ªg_fûe
->
öt_phªg
[
phªg
].
≥ndög
 = 1;

334 
›hªg
 = 
ªg_fûe
->
öt_øt
[
l‹eg
 - 
x86_dï_öt_fú°
];

335 i‡(
Êag_phªg
 < 0)

336 
Êag_phªg
 = 
phªg
;

339 
u›
->
ph_odï
[
dï
] = 
phªg
;

340 
u›
->
ph_oodï
[
dï
] = 
›hªg
;

341 
ªg_fûe
->
öt_øt
[
l‹eg
 - 
x86_dï_öt_fú°
] = 
phªg
;

342 
£lf
->
øt_öt_wrôes
++;

344 i‡(
	`X86_DEP_IS_FP_REG
(
l‹eg
))

347 
°ªg
 = (
l‹eg
 - 
x86_dï_Â_fú°
 + 
ªg_fûe
->
Â_t›_of_°ack
) % 8 + x86_dep_fp_first;

348 
	`as£π
(
	`X86_DEP_IS_FP_REG
(
°ªg
));

351 
phªg
 = 
	`X86ThªadReque°FPReg
(
£lf
);

352 
ªg_fûe
->
Â_phªg
[
phªg
].
busy
++;

353 
ªg_fûe
->
Â_phªg
[
phªg
].
≥ndög
 = 1;

354 
›hªg
 = 
ªg_fûe
->
Â_øt
[
°ªg
 - 
x86_dï_Â_fú°
];

357 
u›
->
ph_odï
[
dï
] = 
phªg
;

358 
u›
->
ph_oodï
[
dï
] = 
›hªg
;

359 
ªg_fûe
->
Â_øt
[
°ªg
 - 
x86_dï_Â_fú°
] = 
phªg
;

360 
£lf
->
øt_Â_wrôes
++;

362 i‡(
	`X86_DEP_IS_XMM_REG
(
l‹eg
))

365 
phªg
 = 
	`X86ThªadReque°XMMReg
(
£lf
);

366 
ªg_fûe
->
xmm_phªg
[
phªg
].
busy
++;

367 
ªg_fûe
->
xmm_phªg
[
phªg
].
≥ndög
 = 1;

368 
›hªg
 = 
ªg_fûe
->
xmm_øt
[
l‹eg
 - 
x86_dï_xmm_fú°
];

371 
u›
->
ph_odï
[
dï
] = 
phªg
;

372 
u›
->
ph_oodï
[
dï
] = 
›hªg
;

373 
ªg_fûe
->
xmm_øt
[
l‹eg
 - 
x86_dï_xmm_fú°
] = 
phªg
;

374 
£lf
->
øt_xmm_wrôes
++;

379 
u›
->
ph_odï
[
dï
] = -1;

380 
u›
->
ph_oodï
[
dï
] = -1;

385 i‡(
Êag_cou¡
 > 0) {

386 i‡(
Êag_phªg
 < 0)

387 
Êag_phªg
 = 
	`X86ThªadReque°I¡Reg
(
£lf
);

388 
dï
 = 0; dï < 
X86_UINST_MAX_ODEPS
; dep++)

390 
l‹eg
 = 
u›
->
uö°
->
odï
[
dï
];

391 i‡(!
	`X86_DEP_IS_FLAG
(
l‹eg
))

393 
ªg_fûe
->
öt_phªg
[
Êag_phªg
].
busy
++;

394 
ªg_fûe
->
öt_phªg
[
Êag_phªg
].
≥ndög
 = 1;

395 
›hªg
 = 
ªg_fûe
->
öt_øt
[
l‹eg
 - 
x86_dï_öt_fú°
];

396 
u›
->
ph_oodï
[
dï
] = 
›hªg
;

397 
u›
->
ph_odï
[
dï
] = 
Êag_phªg
;

398 
ªg_fûe
->
öt_øt
[
l‹eg
 - 
x86_dï_öt_fú°
] = 
Êag_phªg
;

401 
	}
}

405 
	$X86ThªadIsU›Ródy
(
X86Thªad
 *
£lf
, 
x86_u›_t
 *
u›
)

407 
x86_ªg_fûe_t
 *
ªg_fûe
 = 
£lf
->reg_file;

409 
l‹eg
;

410 
phªg
;

411 
dï
;

413 
	`as£π
(
u›
->
thªad
 =
£lf
);

414 
dï
 = 0; dï < 
X86_UINST_MAX_IDEPS
; dep++)

416 
l‹eg
 = 
u›
->
uö°
->
idï
[
dï
];

417 
phªg
 = 
u›
->
ph_idï
[
dï
];

418 i‡(
	`X86_DEP_IS_INT_REG
(
l‹eg
Ë&& 
ªg_fûe
->
öt_phªg
[
phªg
].
≥ndög
)

420 i‡(
	`X86_DEP_IS_FP_REG
(
l‹eg
Ë&& 
ªg_fûe
->
Â_phªg
[
phªg
].
≥ndög
)

422 i‡(
	`X86_DEP_IS_XMM_REG
(
l‹eg
Ë&& 
ªg_fûe
->
xmm_phªg
[
phªg
].
≥ndög
)

426 
	}
}

433 
	$X86ThªadIsU›Li°Ródy
(
X86Thªad
 *
£lf
, 
löked_li°_t
 *
u›_li°
)

435 
x86_u›_t
 *
u›
;

437 
	`LINKED_LIST_FOR_EACH
(
u›_li°
)

439 
u›
 = 
	`löked_li°_gë
(
u›_li°
);

440 i‡(
u›
->
ªady
 || !
	`X86ThªadIsU›Ródy
(
£lf
, uop))

442 
u›
->
ªady
 = 1;

444 
	}
}

447 
	$X86ThªadWrôeU›
(
X86Thªad
 *
£lf
, 
x86_u›_t
 *
u›
)

449 
x86_ªg_fûe_t
 *
ªg_fûe
 = 
£lf
->reg_file;

451 
dï
;

452 
l‹eg
;

453 
phªg
;

455 
	`as£π
(
u›
->
thªad
 =
£lf
);

456 
dï
 = 0; dï < 
X86_UINST_MAX_ODEPS
; dep++)

458 
l‹eg
 = 
u›
->
uö°
->
odï
[
dï
];

459 
phªg
 = 
u›
->
ph_odï
[
dï
];

460 i‡(
	`X86_DEP_IS_INT_REG
(
l‹eg
))

461 
ªg_fûe
->
öt_phªg
[
phªg
].
≥ndög
 = 0;

462 i‡(
	`X86_DEP_IS_FP_REG
(
l‹eg
))

463 
ªg_fûe
->
Â_phªg
[
phªg
].
≥ndög
 = 0;

464 i‡(
	`X86_DEP_IS_XMM_REG
(
l‹eg
))

465 
ªg_fûe
->
xmm_phªg
[
phªg
].
≥ndög
 = 0;

467 
	}
}

470 
	$X86ThªadUndoU›
(
X86Thªad
 *
£lf
, 
x86_u›_t
 *
u›
)

472 
X86C‹e
 *
c‹e
 = 
£lf
->core;

473 
x86_ªg_fûe_t
 *
ªg_fûe
 = 
£lf
->reg_file;

475 
dï
;

476 
l‹eg
;

477 
°ªg
;

478 
phªg
;

479 
›hªg
;

483 
	`as£π
(
u›
->
thªad
 =
£lf
);

484 
	`as£π
(
u›
->
•ecmode
);

485 
dï
 = 
X86_UINST_MAX_ODEPS
 - 1; dep >= 0; dep--)

487 
l‹eg
 = 
u›
->
uö°
->
odï
[
dï
];

488 
phªg
 = 
u›
->
ph_odï
[
dï
];

489 
›hªg
 = 
u›
->
ph_oodï
[
dï
];

490 i‡(
	`X86_DEP_IS_INT_REG
(
l‹eg
))

493 
	`as£π
(
ªg_fûe
->
öt_phªg
[
phªg
].
busy
 > 0);

494 
	`as£π
(!
ªg_fûe
->
öt_phªg
[
phªg
].
≥ndög
);

495 
ªg_fûe
->
öt_phªg
[
phªg
].
busy
--;

496 i‡(!
ªg_fûe
->
öt_phªg
[
phªg
].
busy
)

498 
	`as£π
(
ªg_fûe
->
öt_‰ì_phªg_cou¡
 < 
x86_ªg_fûe_öt_loˇl_size
);

499 
	`as£π
(
c‹e
->
ªg_fûe_öt_cou¡
 > 0 && 
£lf
->reg_file_int_count > 0);

500 
ªg_fûe
->
öt_‰ì_phªg
[ªg_fûe->
öt_‰ì_phªg_cou¡
] = 
phªg
;

501 
ªg_fûe
->
öt_‰ì_phªg_cou¡
++;

502 
c‹e
->
ªg_fûe_öt_cou¡
--;

503 
£lf
->
ªg_fûe_öt_cou¡
--;

507 
ªg_fûe
->
öt_øt
[
l‹eg
 - 
x86_dï_öt_fú°
] = 
›hªg
;

508 
	`as£π
(
ªg_fûe
->
öt_phªg
[
›hªg
].
busy
);

510 i‡(
	`X86_DEP_IS_FP_REG
(
l‹eg
))

513 
°ªg
 = (
l‹eg
 - 
x86_dï_Â_fú°
 + 
ªg_fûe
->
Â_t›_of_°ack
) % 8 + x86_dep_fp_first;

514 
	`as£π
(
	`X86_DEP_IS_FP_REG
(
°ªg
));

517 
	`as£π
(
ªg_fûe
->
Â_phªg
[
phªg
].
busy
 > 0);

518 
	`as£π
(!
ªg_fûe
->
Â_phªg
[
phªg
].
≥ndög
);

519 
ªg_fûe
->
Â_phªg
[
phªg
].
busy
--;

520 i‡(!
ªg_fûe
->
Â_phªg
[
phªg
].
busy
)

522 
	`as£π
(
ªg_fûe
->
Â_‰ì_phªg_cou¡
 < 
x86_ªg_fûe_Â_loˇl_size
);

523 
	`as£π
(
c‹e
->
ªg_fûe_Â_cou¡
 > 0 && 
£lf
->reg_file_fp_count > 0);

524 
ªg_fûe
->
Â_‰ì_phªg
[ªg_fûe->
Â_‰ì_phªg_cou¡
] = 
phªg
;

525 
ªg_fûe
->
Â_‰ì_phªg_cou¡
++;

526 
c‹e
->
ªg_fûe_Â_cou¡
--;

527 
£lf
->
ªg_fûe_Â_cou¡
--;

531 
ªg_fûe
->
Â_øt
[
°ªg
 - 
x86_dï_Â_fú°
] = 
›hªg
;

532 
	`as£π
(
ªg_fûe
->
Â_phªg
[
›hªg
].
busy
);

534 i‡(
	`X86_DEP_IS_XMM_REG
(
l‹eg
))

537 
	`as£π
(
ªg_fûe
->
xmm_phªg
[
phªg
].
busy
 > 0);

538 
	`as£π
(!
ªg_fûe
->
xmm_phªg
[
phªg
].
≥ndög
);

539 
ªg_fûe
->
xmm_phªg
[
phªg
].
busy
--;

540 i‡(!
ªg_fûe
->
xmm_phªg
[
phªg
].
busy
)

542 
	`as£π
(
ªg_fûe
->
xmm_‰ì_phªg_cou¡
 < 
x86_ªg_fûe_xmm_loˇl_size
);

543 
	`as£π
(
c‹e
->
ªg_fûe_xmm_cou¡
 > 0 && 
£lf
->reg_file_xmm_count > 0);

544 
ªg_fûe
->
xmm_‰ì_phªg
[ªg_fûe->
xmm_‰ì_phªg_cou¡
] = 
phªg
;

545 
ªg_fûe
->
xmm_‰ì_phªg_cou¡
++;

546 
c‹e
->
ªg_fûe_xmm_cou¡
--;

547 
£lf
->
ªg_fûe_xmm_cou¡
--;

551 
ªg_fûe
->
xmm_øt
[
l‹eg
 - 
x86_dï_xmm_fú°
] = 
›hªg
;

552 
	`as£π
(
ªg_fûe
->
xmm_phªg
[
›hªg
].
busy
);

557 
	`as£π
(
phªg
 == -1);

558 
	`as£π
(
›hªg
 == -1);

563 i‡(
u›
->
uö°
->
›code
 =
x86_uö°_Â_p›
)

566 
ªg_fûe
->
Â_t›_of_°ack
 = (reg_file->fp_top_of_stack + 7) % 8;

568 i‡(
u›
->
uö°
->
›code
 =
x86_uö°_Â_push
)

571 
ªg_fûe
->
Â_t›_of_°ack
 = (reg_file->fp_top_of_stack + 1) % 8;

573 
	}
}

576 
	$X86ThªadCommôU›
(
X86Thªad
 *
£lf
, 
x86_u›_t
 *
u›
)

578 
X86C‹e
 *
c‹e
 = 
£lf
->core;

580 
x86_ªg_fûe_t
 *
ªg_fûe
 = 
£lf
->reg_file;

582 
dï
, 
l‹eg
, 
phªg
, 
›hªg
;

584 
	`as£π
(!
u›
->
•ecmode
);

585 
	`as£π
(
u›
->
thªad
 =
£lf
);

586 
dï
 = 0; dï < 
X86_UINST_MAX_ODEPS
; dep++)

588 
l‹eg
 = 
u›
->
uö°
->
odï
[
dï
];

589 
phªg
 = 
u›
->
ph_odï
[
dï
];

590 
›hªg
 = 
u›
->
ph_oodï
[
dï
];

592 i‡(
	`X86_DEP_IS_INT_REG
(
l‹eg
))

595 
	`as£π
(
ªg_fûe
->
öt_phªg
[
›hªg
].
busy
 > 0);

596 
ªg_fûe
->
öt_phªg
[
›hªg
].
busy
--;

597 i‡(!
ªg_fûe
->
öt_phªg
[
›hªg
].
busy
)

599 
	`as£π
(!
ªg_fûe
->
öt_phªg
[
›hªg
].
≥ndög
);

600 
	`as£π
(
ªg_fûe
->
öt_‰ì_phªg_cou¡
 < 
x86_ªg_fûe_öt_loˇl_size
);

601 
	`as£π
(
c‹e
->
ªg_fûe_öt_cou¡
 > 0 && 
£lf
->reg_file_int_count > 0);

602 
ªg_fûe
->
öt_‰ì_phªg
[ªg_fûe->
öt_‰ì_phªg_cou¡
] = 
›hªg
;

603 
ªg_fûe
->
öt_‰ì_phªg_cou¡
++;

604 
c‹e
->
ªg_fûe_öt_cou¡
--;

605 
£lf
->
ªg_fûe_öt_cou¡
--;

608 i‡(
	`X86_DEP_IS_FP_REG
(
l‹eg
))

611 
	`as£π
(
ªg_fûe
->
Â_phªg
[
›hªg
].
busy
 > 0);

612 
ªg_fûe
->
Â_phªg
[
›hªg
].
busy
--;

613 i‡(!
ªg_fûe
->
Â_phªg
[
›hªg
].
busy
)

615 
	`as£π
(!
ªg_fûe
->
Â_phªg
[
›hªg
].
≥ndög
);

616 
	`as£π
(
ªg_fûe
->
Â_‰ì_phªg_cou¡
 < 
x86_ªg_fûe_Â_loˇl_size
);

617 
	`as£π
(
c‹e
->
ªg_fûe_Â_cou¡
 > 0 && 
£lf
->reg_file_fp_count > 0);

618 
ªg_fûe
->
Â_‰ì_phªg
[ªg_fûe->
Â_‰ì_phªg_cou¡
] = 
›hªg
;

619 
ªg_fûe
->
Â_‰ì_phªg_cou¡
++;

620 
c‹e
->
ªg_fûe_Â_cou¡
--;

621 
£lf
->
ªg_fûe_Â_cou¡
--;

624 i‡(
	`X86_DEP_IS_XMM_REG
(
l‹eg
))

627 
	`as£π
(
ªg_fûe
->
xmm_phªg
[
›hªg
].
busy
 > 0);

628 
ªg_fûe
->
xmm_phªg
[
›hªg
].
busy
--;

629 i‡(!
ªg_fûe
->
xmm_phªg
[
›hªg
].
busy
)

631 
	`as£π
(!
ªg_fûe
->
xmm_phªg
[
›hªg
].
≥ndög
);

632 
	`as£π
(
ªg_fûe
->
xmm_‰ì_phªg_cou¡
 < 
x86_ªg_fûe_xmm_loˇl_size
);

633 
	`as£π
(
c‹e
->
ªg_fûe_xmm_cou¡
 > 0 && 
£lf
->reg_file_xmm_count > 0);

634 
ªg_fûe
->
xmm_‰ì_phªg
[ªg_fûe->
xmm_‰ì_phªg_cou¡
] = 
›hªg
;

635 
ªg_fûe
->
xmm_‰ì_phªg_cou¡
++;

636 
c‹e
->
ªg_fûe_xmm_cou¡
--;

637 
£lf
->
ªg_fûe_xmm_cou¡
--;

643 
	`as£π
(
phªg
 == -1);

644 
	`as£π
(
›hªg
 == -1);

647 
	}
}

650 
	$X86ThªadCheckRegFûe
(
X86Thªad
 *
£lf
)

652 
x86_ªg_fûe_t
 *
ªg_fûe
 = 
£lf
->reg_file;

653 
x86_u›_t
 *
u›
;

655 
l‹eg
;

656 
phªg
;

657 
›hªg
;

658 
dï
;

659 
i
;

662 
i
 = 0; i < 
ªg_fûe
->
öt_‰ì_phªg_cou¡
; i++)

664 
phªg
 = 
ªg_fûe
->
öt_‰ì_phªg
[
i
];

665 
	`as£π
(!
ªg_fûe
->
öt_phªg
[
phªg
].
busy
);

666 
	`as£π
(!
ªg_fûe
->
öt_phªg
[
phªg
].
≥ndög
);

668 
i
 = 0; i < 
ªg_fûe
->
Â_‰ì_phªg_cou¡
; i++)

670 
phªg
 = 
ªg_fûe
->
Â_‰ì_phªg
[
i
];

671 
	`as£π
(!
ªg_fûe
->
Â_phªg
[
phªg
].
busy
);

672 
	`as£π
(!
ªg_fûe
->
Â_phªg
[
phªg
].
≥ndög
);

674 
i
 = 0; i < 
ªg_fûe
->
xmm_‰ì_phªg_cou¡
; i++)

676 
phªg
 = 
ªg_fûe
->
xmm_‰ì_phªg
[
i
];

677 
	`as£π
(!
ªg_fûe
->
xmm_phªg
[
phªg
].
busy
);

678 
	`as£π
(!
ªg_fûe
->
xmm_phªg
[
phªg
].
≥ndög
);

682 
l‹eg
 = 
x86_dï_öt_fú°
;Ü‹eg <
x86_dï_öt_œ°
;Üoreg++)

684 
phªg
 = 
ªg_fûe
->
öt_øt
[
l‹eg
 - 
x86_dï_öt_fú°
];

685 
	`as£π
(
ªg_fûe
->
öt_phªg
[
phªg
].
busy
);

687 
l‹eg
 = 
x86_dï_Â_fú°
;Ü‹eg <
x86_dï_Â_œ°
;Üoreg++)

689 
phªg
 = 
ªg_fûe
->
Â_øt
[
l‹eg
 - 
x86_dï_Â_fú°
];

690 
	`as£π
(
ªg_fûe
->
Â_phªg
[
phªg
].
busy
);

692 
l‹eg
 = 
x86_dï_xmm_fú°
;Ü‹eg <
x86_dï_xmm_œ°
;Üoreg++)

694 
phªg
 = 
ªg_fûe
->
xmm_øt
[
l‹eg
 - 
x86_dï_xmm_fú°
];

695 
	`as£π
(
ªg_fûe
->
xmm_phªg
[
phªg
].
busy
);

700 
i
 = 0; i < 
£lf
->
rob_cou¡
; i++)

702 
u›
 = 
	`X86GëROBE¡ry
(
£lf
, 
i
);

703 
	`as£π
(
u›
);

704 
dï
 = 0; dï < 
X86_UINST_MAX_ODEPS
; dep++)

706 
l‹eg
 = 
u›
->
uö°
->
odï
[
dï
];

707 
phªg
 = 
u›
->
ph_odï
[
dï
];

708 
›hªg
 = 
u›
->
ph_oodï
[
dï
];

709 i‡(
	`X86_DEP_IS_INT_REG
(
l‹eg
))

711 
	`as£π
(
ªg_fûe
->
öt_phªg
[
phªg
].
busy
);

712 
	`as£π
(
ªg_fûe
->
öt_phªg
[
›hªg
].
busy
);

714 i‡(
	`X86_DEP_IS_FP_REG
(
l‹eg
))

716 
	`as£π
(
ªg_fûe
->
Â_phªg
[
phªg
].
busy
);

717 
	`as£π
(
ªg_fûe
->
Â_phªg
[
›hªg
].
busy
);

719 i‡(
	`X86_DEP_IS_XMM_REG
(
l‹eg
))

721 
	`as£π
(
ªg_fûe
->
xmm_phªg
[
phªg
].
busy
);

722 
	`as£π
(
ªg_fûe
->
xmm_phªg
[
›hªg
].
busy
);

726 
	`as£π
(
phªg
 == -1);

727 
	`as£π
(
›hªg
 == -1);

731 
	}
}

739 
x86_ªg_fûe_t
 *
	$x86_ªg_fûe_¸óã
(
öt_size
, 
Â_size
, 
xmm_size
)

741 
x86_ªg_fûe_t
 *
ªg_fûe
;

742 
phªg
;

745 
ªg_fûe
 = 
	`xˇŒoc
(1, (
x86_ªg_fûe_t
));

746 
ªg_fûe
->
öt_phªg_cou¡
 = 
öt_size
;

747 
ªg_fûe
->
öt_phªg
 = 
	`xˇŒoc
(
öt_size
, (
x86_phªg_t
));

750 
ªg_fûe
->
öt_‰ì_phªg_cou¡
 = 
öt_size
;

751 
ªg_fûe
->
öt_‰ì_phªg
 = 
	`xˇŒoc
(
öt_size
, ());

752 
phªg
 = 0;Öhªg < 
öt_size
;Öhreg++)

753 
ªg_fûe
->
öt_‰ì_phªg
[
phªg
] =Öhreg;

756 
ªg_fûe
->
Â_phªg_cou¡
 = 
Â_size
;

757 
ªg_fûe
->
Â_phªg
 = 
	`xˇŒoc
(
Â_size
, (
x86_phªg_t
));

760 
ªg_fûe
->
Â_‰ì_phªg_cou¡
 = 
Â_size
;

761 
ªg_fûe
->
Â_‰ì_phªg
 = 
	`xˇŒoc
(
Â_size
, ());

764 
phªg
 = 0;Öhªg < 
Â_size
;Öhreg++)

765 
ªg_fûe
->
Â_‰ì_phªg
[
phªg
] =Öhreg;

768 
ªg_fûe
->
xmm_phªg_cou¡
 = 
xmm_size
;

769 
ªg_fûe
->
xmm_phªg
 = 
	`xˇŒoc
(
xmm_size
, (
x86_phªg_t
));

772 
ªg_fûe
->
xmm_‰ì_phªg_cou¡
 = 
xmm_size
;

773 
ªg_fûe
->
xmm_‰ì_phªg
 = 
	`xˇŒoc
(
xmm_size
, ());

776 
phªg
 = 0;Öhªg < 
xmm_size
;Öhreg++)

777 
ªg_fûe
->
xmm_‰ì_phªg
[
phªg
] =Öhreg;

780  
ªg_fûe
;

781 
	}
}

784 
	$x86_ªg_fûe_‰ì
(
x86_ªg_fûe_t
 *
ªg_fûe
)

786 
	`‰ì
(
ªg_fûe
->
öt_phªg
);

787 
	`‰ì
(
ªg_fûe
->
öt_‰ì_phªg
);

788 
	`‰ì
(
ªg_fûe
->
Â_phªg
);

789 
	`‰ì
(
ªg_fûe
->
Â_‰ì_phªg
);

790 
	`‰ì
(
ªg_fûe
->
xmm_phªg
);

791 
	`‰ì
(
ªg_fûe
->
xmm_‰ì_phªg
);

792 
	`‰ì
(
ªg_fûe
);

793 
	}
}

802 *
	gx86_ªg_fûe_köd_m≠
[] = { "Shared", "Private" };

803 
x86_ªg_fûe_köd_t
 
	gx86_ªg_fûe_köd
 = 
x86_ªg_fûe_köd_¥iv©e
;

804 
	gx86_ªg_fûe_öt_size
 = 80;

805 
	gx86_ªg_fûe_Â_size
 = 40;

806 
	gx86_ªg_fûe_xmm_size
 = 40;

809 
	gx86_ªg_fûe_öt_loˇl_size
;

810 
	gx86_ªg_fûe_Â_loˇl_size
;

811 
	gx86_ªg_fûe_xmm_loˇl_size
;

814 
	$X86RódRegFûeC⁄fig
(
c⁄fig_t
 *
c⁄fig
)

816 *
£˘i⁄
;

818 
£˘i⁄
 = "Queues";

820 
x86_ªg_fûe_köd
 = 
	`c⁄fig_ªad_íum
(
c⁄fig
, 
£˘i⁄
, "RfKind",

821 
x86_ªg_fûe_köd_¥iv©e
, 
x86_ªg_fûe_köd_m≠
, 2);

822 
x86_ªg_fûe_öt_size
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "RfIntSize", 80);

823 
x86_ªg_fûe_Â_size
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "RfFpSize", 40);

824 
x86_ªg_fûe_xmm_size
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "RfXmmSize", 40);

826 i‡(
x86_ªg_fûe_öt_size
 < 
X86_REG_FILE_MIN_INT_SIZE
)

827 
	`Áèl
("rf_öt_sizêmu° bê©Üó° %d", 
X86_REG_FILE_MIN_INT_SIZE
);

828 i‡(
x86_ªg_fûe_Â_size
 < 
X86_REG_FILE_MIN_FP_SIZE
)

829 
	`Áèl
("rf_Â_sizêmu° bê©Üó° %d", 
X86_REG_FILE_MIN_FP_SIZE
);

830 i‡(
x86_ªg_fûe_xmm_size
 < 
X86_REG_FILE_MIN_XMM_SIZE
)

831 
	`Áèl
("rf_xmm_sizêmu° bê©Üó° %d", 
X86_REG_FILE_MIN_XMM_SIZE
);

833 i‡(
x86_ªg_fûe_köd
 =
x86_ªg_fûe_köd_¥iv©e
)

835 
x86_ªg_fûe_öt_loˇl_size
 = 
x86_ªg_fûe_öt_size
;

836 
x86_ªg_fûe_Â_loˇl_size
 = 
x86_ªg_fûe_Â_size
;

837 
x86_ªg_fûe_xmm_loˇl_size
 = 
x86_ªg_fûe_xmm_size
;

841 
x86_ªg_fûe_öt_loˇl_size
 = 
x86_ªg_fûe_öt_size
 * 
x86_˝u_num_thªads
;

842 
x86_ªg_fûe_Â_loˇl_size
 = 
x86_ªg_fûe_Â_size
 * 
x86_˝u_num_thªads
;

843 
x86_ªg_fûe_xmm_loˇl_size
 = 
x86_ªg_fûe_xmm_size
 * 
x86_˝u_num_thªads
;

845 
	}
}

	@timing/reg-file.h

20 #i‚de‡
X86_ARCH_TIMING_REG_FILE_H


21 
	#X86_ARCH_TIMING_REG_FILE_H


	)

23 
	~<lib/utû/˛ass.h
>

25 
	~"u›.h
"

29 
	gc⁄fig_t
;

30 
	gx86_u›_t
;

37 
	#X86_REG_FILE_MIN_INT_SIZE
 (
x86_dï_öt_cou¡
 + 
X86_UINST_MAX_ODEPS
)

	)

38 
	#X86_REG_FILE_MIN_FP_SIZE
 (
x86_dï_Â_cou¡
 + 
X86_UINST_MAX_ODEPS
)

	)

39 
	#X86_REG_FILE_MIN_XMM_SIZE
 (
x86_dï_xmm_cou¡
 + 
X86_UINST_MAX_ODEPS
)

	)

41 *
x86_ªg_fûe_köd_m≠
[];

42 
	ex86_ªg_fûe_köd_t


44 
x86_ªg_fûe_köd_sh¨ed
 = 0,

45 
x86_ªg_fûe_köd_¥iv©e


46 } 
x86_ªg_fûe_köd
;

48 
x86_ªg_fûe_öt_size
;

49 
x86_ªg_fûe_Â_size
;

50 
x86_ªg_fûe_xmm_size
;

52 
x86_ªg_fûe_öt_loˇl_size
;

53 
x86_ªg_fûe_Â_loˇl_size
;

54 
x86_ªg_fûe_xmm_loˇl_size
;

63 
X86RódRegFûeC⁄fig
(
c⁄fig_t
 *
c⁄fig
);

71 
X86ThªadInôRegFûe
(
X86Thªad
 *
£lf
);

72 
X86ThªadFªeRegFûe
(
X86Thªad
 *
£lf
);

73 
X86ThªadDumpRegFûe
(
X86Thªad
 *
£lf
, 
FILE
 *
f
);

75 
X86ThªadReque°I¡Reg
(
X86Thªad
 *
£lf
);

76 
X86ThªadReque°FPReg
(
X86Thªad
 *
£lf
);

77 
X86ThªadReque°XMMReg
(
X86Thªad
 *
£lf
);

79 
X86ThªadC™RíameU›
(
X86Thªad
 *
£lf
, 
x86_u›_t
 *
u›
);

80 
X86ThªadRíameU›
(
X86Thªad
 *
£lf
, 
x86_u›_t
 *
u›
);

82 
X86ThªadIsU›Ródy
(
X86Thªad
 *
£lf
, 
x86_u›_t
 *
u›
);

83 
X86ThªadIsU›Li°Ródy
(
X86Thªad
 *
£lf
, 
löked_li°_t
 *
u›_li°
);

85 
X86ThªadWrôeU›
(
X86Thªad
 *
£lf
, 
x86_u›_t
 *
u›
);

86 
X86ThªadUndoU›
(
X86Thªad
 *
£lf
, 
x86_u›_t
 *
u›
);

87 
X86ThªadCommôU›
(
X86Thªad
 *
£lf
, 
x86_u›_t
 *
u›
);

89 
X86ThªadCheckRegFûe
(
X86Thªad
 *
£lf
);

98 
	sx86_phªg_t


100 
	m≥ndög
;

101 
	mbusy
;

104 
	sx86_ªg_fûe_t


107 
	möt_øt
[
x86_dï_öt_cou¡
];

108 
x86_phªg_t
 *
	möt_phªg
;

109 
	möt_phªg_cou¡
;

110 *
	möt_‰ì_phªg
;

111 
	möt_‰ì_phªg_cou¡
;

114 
	mÂ_t›_of_°ack
;

115 
	mÂ_øt
[
x86_dï_Â_cou¡
];

116 
x86_phªg_t
 *
	mÂ_phªg
;

117 
	mÂ_phªg_cou¡
;

118 *
	mÂ_‰ì_phªg
;

119 
	mÂ_‰ì_phªg_cou¡
;

122 
	mxmm_øt
[
x86_dï_xmm_cou¡
];

123 
x86_phªg_t
 *
	mxmm_phªg
;

124 
	mxmm_phªg_cou¡
;

125 *
	mxmm_‰ì_phªg
;

126 
	mxmm_‰ì_phªg_cou¡
;

129 
x86_ªg_fûe_t
 *
x86_ªg_fûe_¸óã
(
öt_size
, 
Â_size
, 
xmm_size
);

130 
x86_ªg_fûe_‰ì
(
x86_ªg_fûe_t
 *
ªg_fûe
);

	@timing/rob.c

21 
	~<lib/utû/debug.h
>

22 
	~<lib/utû/li°.h
>

24 
	~"c‹e.h
"

25 
	~"˝u.h
"

26 
	~"rob.h
"

27 
	~"u›.h
"

28 
	~"thªad.h
"

34 *
	gx86_rob_köd_m≠
[] = { "Private", "Shared" };

35 
x86_rob_köd_t
 
	gx86_rob_köd
;

36 
	gx86_rob_size
;

43 
	gx86_rob_tŸÆ_size
 = 0;

52 
	$X86C‹eInôROB
(
X86C‹e
 *
£lf
)

54 
X86Thªad
 *
thªad
;

55 
i
;

57 
x86_rob_köd
)

60 
x86_rob_köd_¥iv©e
:

63 
i
 = 0; i < 
x86_˝u_num_thªads
; i++)

65 
thªad
 = 
£lf
->
thªads
[
i
];

66 
thªad
->
rob_À·_bound
 = 
i
 * 
x86_rob_size
;

67 
thªad
->
rob_right_bound
 = (
i
 + 1Ë* 
x86_rob_size
 - 1;

68 
thªad
->
rob_hód
 =Åhªad->
rob_À·_bound
;

69 
thªad
->
rob_èû
 =Åhªad->
rob_À·_bound
;

74 
x86_rob_köd_sh¨ed
:

79 
x86_rob_tŸÆ_size
 = 
x86_rob_size
 * 
x86_˝u_num_thªads
;

80 
£lf
->
rob
 = 
	`li°_¸óã_wôh_size
(
x86_rob_tŸÆ_size
);

81 
i
 = 0; i < 
x86_rob_tŸÆ_size
; i++)

82 
	`li°_add
(
£lf
->
rob
, 
NULL
);

83 
	}
}

86 
	$X86C‹eFªeROB
(
X86C‹e
 *
£lf
)

88 
i
;

89 
x86_u›_t
 *
u›
;

91 
	`as£π
(
	`li°_cou¡
(
£lf
->
rob
Ë=
x86_rob_tŸÆ_size
);

92 
i
 = 0; i < 
x86_rob_tŸÆ_size
; i++)

94 
u›
 = 
	`li°_gë
(
£lf
->
rob
, 
i
);

95 i‡(
u›
)

97 
u›
->
ö_rob
 = 0;

98 
	`x86_u›_‰ì_if_nŸ_queued
(
u›
);

101 
	`li°_‰ì
(
£lf
->
rob
);

102 
	}
}

105 
	$X86C‹eTrimROB
(
X86C‹e
 *
£lf
)

107 
idx
;

108 
x86_u›_t
 *
u›
;

111 
£lf
->
rob_cou¡
)

113 
u›
 = 
	`li°_gë
(
£lf
->
rob
, sñf->
rob_hód
);

114 i‡(
u›
)

116 
£lf
->
rob_hód
 = sñf->rob_hód =
x86_rob_tŸÆ_size
 - 1 ?

117 0 : 
£lf
->
rob_hód
 + 1;

118 
£lf
->
rob_cou¡
--;

122 
£lf
->
rob_cou¡
)

124 
idx
 = 
£lf
->
rob_èû
 ? sñf->rob_èû - 1 : 
x86_rob_tŸÆ_size
 - 1;

125 
u›
 = 
	`li°_gë
(
£lf
->
rob
, 
idx
);

126 i‡(
u›
)

128 
£lf
->
rob_èû
 = 
idx
;

129 
£lf
->
rob_cou¡
--;

131 
	}
}

134 
	$X86C‹eDumpROB
(
X86C‹e
 *
£lf
, 
FILE
 *
f
)

136 
X86Thªad
 *
thªad
;

137 
i
, 
j
;

138 
x86_u›_t
 *
u›
;

140 
x86_rob_köd
)

143 
x86_rob_köd_¥iv©e
:

145 
i
 = 0; i < 
x86_˝u_num_thªads
; i++)

147 
thªad
 = 
£lf
->
thªads
[
i
];

148 
	`Ârötf
(
f
, "Ñob forÅhread %s (entries %dÅo %d), count=%d, size=%d\n",

149 
thªad
->
«me
,Åhªad->
rob_À·_bound
,Åhªad->
rob_right_bound
,

150 
thªad
->
rob_cou¡
, 
x86_rob_size
);

151 
j
 = 
thªad
->
rob_À·_bound
; j <thªad->
rob_right_bound
; j++)

153 
u›
 = 
	`li°_gë
(
£lf
->
rob
, 
j
);

154 
	`Ârötf
(
f
, " %c%c ",

155 
j
 =
thªad
->
rob_hód
 ? 'H' : ' ',

156 
j
 =
thªad
->
rob_èû
 ? 'T' : ' ');

157 i‡(
u›
)

159 
	`x86_uö°_dump
(
u›
->
uö°
, 
f
);

160 
	`Ârötf
(
f
, "\n");

164 
	`Ârötf
(
f
, "-\n");

171 
x86_rob_köd_sh¨ed
:

173 
	`X86C‹eTrimROB
(
£lf
);

174 
j
 = 0; j < 
x86_rob_tŸÆ_size
; j++)

176 
u›
 = 
	`li°_gë
(
£lf
->
rob
, 
j
);

177 
	`Ârötf
(
f
, " %c%c ",

178 
j
 =
£lf
->
rob_hód
 ? 'H' : ' ',

179 
j
 =
£lf
->
rob_èû
 ? 'T' : ' ');

180 i‡(
u›
)

182 
	`x86_uö°_dump
(
u›
->
uö°
, 
f
);

183 
	`Ârötf
(
f
, "\n");

187 
	`Ârötf
(
f
, "-\n");

194 
	`∑nic
("%s: invÆid ROBÅy≥", 
__FUNCTION__
);

196 
	}
}

205 
	$X86ThªadC™DequeueFromROB
(
X86Thªad
 *
£lf
)

207 
X86C‹e
 *
c‹e
 = 
£lf
->core;

208 
x86_u›_t
 *
u›
;

210 
x86_rob_köd
)

212 
x86_rob_köd_¥iv©e
:

214 i‡(
£lf
->
rob_cou¡
 > 0)

219 
x86_rob_köd_sh¨ed
:

221 
	`X86C‹eTrimROB
(
c‹e
);

222 i‡(!
c‹e
->
rob_cou¡
)

225 
u›
 = 
	`li°_gë
(
c‹e
->
rob
, c‹e->
rob_hód
);

226 
	`as£π
(
	`x86_u›_exi°s
(
u›
));

227 i‡(
u›
->
thªad
 =
£lf
)

232 
	}
}

235 
x86_u›_t
 *
	$X86ThªadGëROBHód
(
X86Thªad
 *
£lf
)

237 
X86C‹e
 *
c‹e
 = 
£lf
->core;

238 
x86_u›_t
 *
u›
;

239 
idx
;

240 
i
;

242 
x86_rob_köd
)

244 
x86_rob_köd_¥iv©e
:

246 i‡(
£lf
->
rob_cou¡
 > 0)

248 
u›
 = 
	`li°_gë
(
c‹e
->
rob
, 
£lf
->
rob_hód
);

249  
u›
;

253 
x86_rob_köd_sh¨ed
:

255 
	`X86C‹eTrimROB
(
c‹e
);

256 i‡(!
£lf
->
rob_cou¡
)

257  
NULL
;

259 
i
 = 0; i < 
c‹e
->
rob_cou¡
; i++)

261 
idx
 = (
c‹e
->
rob_hód
 + 
i
Ë% 
x86_rob_tŸÆ_size
;

262 
u›
 = 
	`li°_gë
(
c‹e
->
rob
, 
idx
);

263 i‡(
u›
 && u›->
thªad
 =
£lf
)

264  
u›
;

266 
	`∑nic
("%s:Çÿhód found", 
__FUNCTION__
);

269  
NULL
;

270 
	}
}

273 
	$X86ThªadRemoveROBHód
(
X86Thªad
 *
£lf
)

275 
X86C‹e
 *
c‹e
 = 
£lf
->core;

276 
x86_u›_t
 *
u›
 = 
NULL
;

277 
idx
, 
i
;

279 
x86_rob_köd
)

281 
x86_rob_köd_¥iv©e
:

283 
	`as£π
(
£lf
->
rob_cou¡
 > 0);

284 
u›
 = 
	`li°_gë
(
c‹e
->
rob
, 
£lf
->
rob_hód
);

285 
	`as£π
(
	`x86_u›_exi°s
(
u›
));

286 
	`as£π
(
u›
->
thªad
 =
£lf
);

287 
	`li°_£t
(
c‹e
->
rob
, 
£lf
->
rob_hód
, 
NULL
);

288 
£lf
->
rob_hód
 = sñf->rob_hód =£lf->
rob_right_bound
 ?

289 
£lf
->
rob_À·_bound
 : sñf->
rob_hód
 + 1;

290 
£lf
->
rob_cou¡
--;

293 
x86_rob_köd_sh¨ed
:

294 
	`X86C‹eTrimROB
(
c‹e
);

295 
	`as£π
(
£lf
->
rob_cou¡
);

296 
i
 = 0; i < 
c‹e
->
rob_cou¡
; i++)

298 
idx
 = (
c‹e
->
rob_hód
 + 
i
Ë% 
x86_rob_tŸÆ_size
;

299 
u›
 = 
	`li°_gë
(
c‹e
->
rob
, 
idx
);

300 i‡(
u›
 && u›->
thªad
 =
£lf
)

302 
	`li°_£t
(
c‹e
->
rob
, 
idx
, 
NULL
);

303 
£lf
->
rob_cou¡
--;

311 
u›
->
ö_rob
 = 0;

312 
	`x86_u›_‰ì_if_nŸ_queued
(
u›
);

313 
	}
}

316 
x86_u›_t
 *
	$X86ThªadGëROBTaû
(
X86Thªad
 *
£lf
)

318 
X86C‹e
 *
c‹e
 = 
£lf
->core;

319 
x86_u›_t
 *
u›
;

320 
idx
, 
i
;

322 
x86_rob_köd
)

324 
x86_rob_köd_¥iv©e
:

326 i‡(
£lf
->
rob_cou¡
 > 0)

328 
idx
 = 
£lf
->
rob_èû
 =£lf->
rob_À·_bound
 ?

329 
£lf
->
rob_right_bound
 : sñf->
rob_èû
 - 1;

330 
u›
 = 
	`li°_gë
(
c‹e
->
rob
, 
idx
);

331  
u›
;

335 
x86_rob_köd_sh¨ed
:

337 
	`X86C‹eTrimROB
(
c‹e
);

338 i‡(!
£lf
->
rob_cou¡
)

339  
NULL
;

340 
i
 = 
c‹e
->
rob_cou¡
 - 1; i >= 0; i--)

342 
idx
 = (
c‹e
->
rob_hód
 + 
i
Ë% 
x86_rob_tŸÆ_size
;

343 
u›
 = 
	`li°_gë
(
c‹e
->
rob
, 
idx
);

344 i‡(
u›
 && u›->
thªad
 =
£lf
)

345  
u›
;

347 
	`∑nic
("rob_tail:ÇoÅail found");

350  
NULL
;

351 
	}
}

354 
x86_u›_t
 *
	$X86GëROBE¡ry
(
X86Thªad
 *
£lf
, 
ödex
)

356 
X86C‹e
 *
c‹e
 = 
£lf
->core;

357 
x86_u›_t
 *
u›
;

360 i‡(
ödex
 < 0 || index >
£lf
->
rob_cou¡
)

361  
NULL
;

363 
x86_rob_köd
)

365 
x86_rob_köd_¥iv©e
:

366 
ödex
 +
£lf
->
rob_hód
;

367 i‡(
ödex
 > 
£lf
->
rob_right_bound
)

368 
ödex
 = index - 
£lf
->
rob_right_bound
 + sñf->
rob_À·_bound
 - 1;

369 
u›
 = 
	`li°_gë
(
c‹e
->
rob
, 
ödex
);

370 
	`as£π
(
u›
);

371  
u›
;

373 
x86_rob_köd_sh¨ed
:

374 
	`X86C‹eTrimROB
(
c‹e
);

375 
ödex
 = (
c‹e
->
rob_hód
 + indexË% 
x86_rob_tŸÆ_size
;

376 
u›
 = 
	`li°_gë
(
c‹e
->
rob
, 
ödex
);

377 
	`as£π
(
u›
);

378  
u›
;

380  
NULL
;

381 
	}
}

384 
	$X86ThªadRemoveROBTaû
(
X86Thªad
 *
£lf
)

386 
X86C‹e
 *
c‹e
 = 
£lf
->core;

387 
x86_u›_t
 *
u›
 = 
NULL
;

388 
idx
, 
i
;

390 
x86_rob_köd
)

393 
x86_rob_köd_¥iv©e
:

395 
	`as£π
(
£lf
->
rob_cou¡
 > 0);

396 
idx
 = 
£lf
->
rob_èû
 =£lf->
rob_À·_bound
 ?

397 
£lf
->
rob_right_bound
 : sñf->
rob_èû
 - 1;

398 
u›
 = 
	`li°_gë
(
c‹e
->
rob
, 
idx
);

399 
	`as£π
(
	`x86_u›_exi°s
(
u›
));

400 
	`as£π
(
u›
->
thªad
 =
£lf
);

401 
	`li°_£t
(
c‹e
->
rob
, 
idx
, 
NULL
);

402 
£lf
->
rob_èû
 = 
idx
;

403 
£lf
->
rob_cou¡
--;

406 
x86_rob_köd_sh¨ed
:

408 
	`X86C‹eTrimROB
(
c‹e
);

409 
	`as£π
(
£lf
->
rob_cou¡
);

410 
i
 = 
c‹e
->
rob_cou¡
 - 1; i >= 0; i--)

412 
idx
 = (
c‹e
->
rob_hód
 + 
i
Ë% 
x86_rob_tŸÆ_size
;

413 
u›
 = 
	`li°_gë
(
c‹e
->
rob
, 
idx
);

414 i‡(
u›
 && u›->
thªad
 =
£lf
)

416 
	`li°_£t
(
c‹e
->
rob
, 
idx
, 
NULL
);

417 
£lf
->
rob_cou¡
--;

425 
u›
->
ö_rob
 = 0;

426 
	`x86_u›_‰ì_if_nŸ_queued
(
u›
);

427 
	}
}

436 
	$X86C‹eC™EnqueueInROB
(
X86C‹e
 *
£lf
, 
x86_u›_t
 *
u›
)

438 
X86Thªad
 *
thªad
;

440 
x86_rob_köd
)

443 
x86_rob_köd_¥iv©e
:

445 
thªad
 = 
u›
->thread;

446 i‡(
thªad
->
rob_cou¡
 < 
x86_rob_size
)

450 
x86_rob_köd_sh¨ed
:

452 
	`X86C‹eTrimROB
(
£lf
);

453 i‡(
£lf
->
rob_cou¡
 < 
x86_rob_tŸÆ_size
)

459 
	}
}

462 
	$X86C‹eEnqueueInROB
(
X86C‹e
 *
£lf
, 
x86_u›_t
 *
u›
)

464 
X86Thªad
 *
thªad
;

466 
thªad
 = 
u›
->thread;

467 
x86_rob_köd
)

470 
x86_rob_köd_¥iv©e
:

472 
	`as£π
(
thªad
->
rob_cou¡
 < 
x86_rob_size
);

473 
	`as£π
(!
	`li°_gë
(
£lf
->
rob
, 
thªad
->
rob_èû
));

474 
	`li°_£t
(
£lf
->
rob
, 
thªad
->
rob_èû
, 
u›
);

475 
thªad
->
rob_èû
 =Åhªad->rob_èû =thªad->
rob_right_bound
 ?

476 
thªad
->
rob_À·_bound
 :Åhªad->
rob_èû
 + 1;

477 
thªad
->
rob_cou¡
++;

480 
x86_rob_köd_sh¨ed
:

482 
	`X86C‹eTrimROB
(
£lf
);

483 
	`as£π
(
£lf
->
rob_cou¡
 < 
x86_rob_tŸÆ_size
);

484 
	`as£π
(!
	`li°_gë
(
£lf
->
rob
, sñf->
rob_èû
));

485 
	`li°_£t
(
£lf
->
rob
, sñf->
rob_èû
, 
u›
);

486 
£lf
->
rob_èû
 = sñf->rob_èû =
x86_rob_tŸÆ_size
 - 1 ?

487 0 : 
£lf
->
rob_èû
 + 1;

488 
£lf
->
rob_cou¡
++;

489 
thªad
->
rob_cou¡
++;

494 
u›
->
ö_rob
 = 1;

495 
	}
}

	@timing/rob.h

20 #i‚de‡
X86_ARCH_TIMING_ROB_H


21 
	#X86_ARCH_TIMING_ROB_H


	)

23 
	~<lib/utû/˛ass.h
>

29 *
x86_rob_köd_m≠
[];

30 
	ex86_rob_köd_t


32 
x86_rob_köd_¥iv©e
 = 0,

33 
x86_rob_köd_sh¨ed


34 } 
x86_rob_köd
;

35 
x86_rob_size
;

43 
X86C‹eInôROB
(
X86C‹e
 *
£lf
);

44 
X86C‹eFªeROB
(
X86C‹e
 *
£lf
);

46 
X86C‹eDumpROB
(
X86C‹e
 *
£lf
, 
FILE
 *
f
);

47 
X86C‹eC™EnqueueInROB
(
X86C‹e
 *
£lf
, 
x86_u›_t
 *
u›
);

48 
X86C‹eEnqueueInROB
(
X86C‹e
 *
£lf
, 
x86_u›_t
 *
u›
);

55 
X86ThªadC™DequeueFromROB
(
X86Thªad
 *
£lf
);

56 
x86_u›_t
 *
X86ThªadGëROBHód
(
X86Thªad
 *
£lf
);

57 
X86ThªadRemoveROBHód
(
X86Thªad
 *
£lf
);

58 
x86_u›_t
 *
X86ThªadGëROBTaû
(
X86Thªad
 *
£lf
);

59 
X86ThªadRemoveROBTaû
(
X86Thªad
 *
£lf
);

60 
x86_u›_t
 *
X86GëROBE¡ry
(
X86Thªad
 *
£lf
, 
ödex
);

	@timing/sched.c

21 
	~<¨ch/x86/emu/c⁄ãxt.h
>

22 
	~<¨ch/x86/emu/emu.h
>

23 
	~<¨ch/x86/emu/ªgs.h
>

24 
	~<lib/esim/åa˚.h
>

25 
	~<lib/utû/bô-m≠.h
>

26 
	~<lib/utû/debug.h
>

27 
	~<lib/utû/misc.h
>

29 
	~"c‹e.h
"

30 
	~"˝u.h
"

31 
	~"sched.h
"

32 
	~"thªad.h
"

101 
	$X86ThªadUnm≠C⁄ãxt
(
X86Thªad
 *
£lf
, 
X86C⁄ãxt
 *
˘x
)

103 
X86Cpu
 *
˝u
 = 
£lf
->cpu;

105 
	`as£π
(
˘x
);

106 
	`as£π
(
	`DOUBLE_LINKED_LIST_MEMBER
(
£lf
, 
m≠≥d
, 
˘x
));

107 
	`as£π
(
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtM≠≥d
));

108 
	`as£π
(!
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtAŒoc
));

111 
	`X86C⁄ãxtCÀ¨Sèã
(
˘x
, 
X86C⁄ãxtM≠≥d
);

114 
	`DOUBLE_LINKED_LIST_REMOVE
(
£lf
, 
m≠≥d
, 
˘x
);

117 
	`X86C⁄ãxtDebug
("#%lld ctx %d unmapped fromÅhread %s\n",

118 
	`asTimög
(
˝u
)->
cy˛e
, 
˘x
->
pid
, 
£lf
->
«me
);

121 i‡(
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtFöished
))

124 
	`x86_åa˚
("x86.íd_˘x ctx=%d\n", 
˘x
->
pid
);

127 
	`dñëe
(
˘x
);

129 
	}
}

132 
	$X86ThªadEvi˘C⁄ãxtSig«l
(
X86Thªad
 *
£lf
, 
X86C⁄ãxt
 *
c⁄ãxt
)

134 
	`as£π
(
c⁄ãxt
);

135 
	`as£π
(
£lf
->
˘x
 =
c⁄ãxt
);

136 
	`as£π
(
	`X86C⁄ãxtGëSèã
(
c⁄ãxt
, 
X86C⁄ãxtAŒoc
));

137 
	`as£π
(
	`X86C⁄ãxtGëSèã
(
c⁄ãxt
, 
X86C⁄ãxtM≠≥d
));

138 
	`as£π
(
£lf
->
˘x
 =
c⁄ãxt
);

139 
	`as£π
(
	`DOUBLE_LINKED_LIST_MEMBER
(
£lf
, 
m≠≥d
, 
c⁄ãxt
));

140 
	`as£π
(!
c⁄ãxt
->
evi˘_sig«l
);

143 
c⁄ãxt
->
evi˘_sig«l
 = 1;

144 
	`X86C⁄ãxtDebug
("#%lld ctx %d signaled forÉviction fromÅhread %s\n",

145 
	`asTimög
(
£lf
)->
cy˛e
, 
c⁄ãxt
->
pid
, sñf->
«me
);

149 i‡(
	`X86ThªadIsPùñöeEm±y
(
£lf
))

150 
	`X86ThªadEvi˘C⁄ãxt
(
£lf
, 
c⁄ãxt
);

152 
	}
}

155 
	$X86ThªadEvi˘C⁄ãxt
(
X86Thªad
 *
£lf
, 
X86C⁄ãxt
 *
c⁄ãxt
)

157 
X86C‹e
 *
c‹e
 = 
£lf
->core;

158 
X86Cpu
 *
˝u
 = 
£lf
->cpu;

160 
	`as£π
(
c⁄ãxt
);

161 
	`as£π
(
£lf
->
˘x
 =
c⁄ãxt
);

162 
	`as£π
(
	`X86C⁄ãxtGëSèã
(
c⁄ãxt
, 
X86C⁄ãxtAŒoc
));

163 
	`as£π
(
	`X86C⁄ãxtGëSèã
(
c⁄ãxt
, 
X86C⁄ãxtM≠≥d
));

164 
	`as£π
(!
	`X86C⁄ãxtGëSèã
(
c⁄ãxt
, 
X86C⁄ãxtS≥cMode
));

165 
	`as£π
(!
£lf
->
rob_cou¡
);

166 
	`as£π
(
c⁄ãxt
->
evi˘_sig«l
);

169 
£lf
->
˘x
 = 
NULL
;

170 
£lf
->
„tch_√ù
 = 0;

173 
	`X86C⁄ãxtCÀ¨Sèã
(
c⁄ãxt
, 
X86C⁄ãxtAŒoc
);

174 
c⁄ãxt
->
evi˘_cy˛e
 = 
	`asTimög
(
˝u
)->
cy˛e
;

175 
c⁄ãxt
->
evi˘_sig«l
 = 0;

178 
	`X86C⁄ãxtDebug
("#%lld ctx %dÉvicted fromÅhread %s\n",

179 
	`asTimög
(
˝u
)->
cy˛e
, 
c⁄ãxt
->
pid
, 
£lf
->
«me
);

182 
	`x86_åa˚
("x86.unmap_ctx ctx=%d core=%dÅhread=%d\n",

183 
c⁄ãxt
->
pid
, 
c‹e
->
id
, 
£lf
->
id_ö_c‹e
);

184 
	}
}

187 
	$X86ThªadScheduÀ
(
X86Thªad
 *
£lf
)

189 
X86Cpu
 *
˝u
 = 
£lf
->cpu;

190 
X86C⁄ãxt
 *
˘x
;

191 
X86C⁄ãxt
 *
tmp_˘x
;

193 
node
;

196 
node
 = 
£lf
->
id_ö_˝u
;

197 
˘x
 = 
£lf
->ctx;

198 i‡(
˘x
)

200 
	`as£π
(
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtAŒoc
));

201 
	`as£π
(
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtM≠≥d
));

204 i‡(!
˘x
->
evi˘_sig«l
 && !
	`X86C⁄ãxtGëSèã
(˘x, 
X86C⁄ãxtRu¬ög
))

205 
	`X86ThªadEvi˘C⁄ãxtSig«l
(
£lf
, 
˘x
);

208 i‡(!
˘x
->
evi˘_sig«l
 && !
	`bô_m≠_gë
(˘x->
afföôy
, 
node
, 1))

209 
	`X86ThªadEvi˘C⁄ãxtSig«l
(
£lf
, 
˘x
);

212 i‡(!
˘x
->
evi˘_sig«l
 && 
	`asTimög
(
˝u
)->
cy˛e
 >˘x->
Æloc_cy˛e


213 + 
x86_˝u_c⁄ãxt_qu™tum
)

215 
found
 = 0;

218 
	`DOUBLE_LINKED_LIST_FOR_EACH
(
£lf
, 
m≠≥d
, 
tmp_˘x
)

220 i‡(
tmp_˘x
 !
˘x
 && 
	`X86C⁄ãxtGëSèã
(tmp_ctx,

221 
X86C⁄ãxtRu¬ög
))

223 
found
 = 1;

234 i‡(
found
)

235 
	`X86ThªadEvi˘C⁄ãxtSig«l
(
£lf
, 
˘x
);

237 
˘x
->
Æloc_cy˛e
 = 
	`asTimög
(
˝u
)->
cy˛e
;

242 
	`DOUBLE_LINKED_LIST_FOR_EACH
(
£lf
, 
m≠≥d
, 
˘x
)

245 i‡(
˘x
 =
£lf
->ctx)

250 i‡(!
	`bô_m≠_gë
(
˘x
->
afföôy
, 
node
, 1) ||

251 
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtFöished
))

252 
	`X86ThªadUnm≠C⁄ãxt
(
£lf
, 
˘x
);

256 i‡(!
£lf
->
˘x
)

260 
˘x
 = 
NULL
;

261 
	`DOUBLE_LINKED_LIST_FOR_EACH
(
£lf
, 
m≠≥d
, 
tmp_˘x
)

264 i‡(!
	`bô_m≠_gë
(
tmp_˘x
->
afföôy
, 
node
, 1))

268 i‡(!
	`X86C⁄ãxtGëSèã
(
tmp_˘x
, 
X86C⁄ãxtRu¬ög
))

272 i‡(!
˘x
 || ctx->
evi˘_cy˛e
 > 
tmp_˘x
->evict_cycle)

273 
˘x
 = 
tmp_˘x
;

277 i‡(
˘x
)

278 
	`X86CpuAŒoˇãC⁄ãxt
(
˝u
, 
˘x
);

280 
	}
}

291 
	$X86CpuAŒoˇãC⁄ãxt
(
X86Cpu
 *
£lf
, 
X86C⁄ãxt
 *
˘x
)

293 
c‹e_ödex
 = 
˘x
->core_index;

294 
thªad_ödex
 = 
˘x
->thread_index;

296 
X86C‹e
 *
c‹e
;

297 
X86Thªad
 *
thªad
;

299 
c‹e
 = 
£lf
->
c‹es
[
c‹e_ödex
];

300 
thªad
 = 
c‹e
->
thªads
[
thªad_ödex
];

302 
	`as£π
(!
thªad
->
˘x
);

303 
	`as£π
(
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtM≠≥d
));

304 
	`as£π
(!
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtAŒoc
));

305 
	`as£π
(!
˘x
->
evi˘_sig«l
);

308 
˘x
->
Æloc_cy˛e
 = 
	`asTimög
(
£lf
)->
cy˛e
;

309 
	`X86C⁄ãxtSëSèã
(
˘x
, 
X86C⁄ãxtAŒoc
);

312 
thªad
->
˘x
 = ctx;

313 
thªad
->
„tch_√ù
 = 
˘x
->
ªgs
->
eù
;

316 
	`X86C⁄ãxtDebug
("#%lld ctx %d inÅhread %sállocated\n",

317 
	`asTimög
(
£lf
)->
cy˛e
, 
˘x
->
pid
, 
thªad
->
«me
);

320 
	`x86_åa˚
("x86.map_ctx ctx=%d core=%dÅhread=%dÖpid=%d\n",

321 
˘x
->
pid
, 
c‹e_ödex
, 
thªad_ödex
,

322 
˘x
->
∑ª¡
 ? ctx->∑ª¡->
pid
 : 0);

323 
	}
}

326 
	$X86CpuM≠C⁄ãxt
(
X86Cpu
 *
£lf
, 
X86C⁄ãxt
 *
˘x
)

328 
mö_c‹e
;

329 
mö_thªad
;

331 
c‹e
;

332 
thªad
;

333 
node
;

335 
	`as£π
(!
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtAŒoc
));

336 
	`as£π
(!
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtM≠≥d
));

337 
	`as£π
(!
˘x
->
evi˘_sig«l
);

341 
mö_c‹e
 = -1;

342 
mö_thªad
 = -1;

343 
node
 = 0;

344 
c‹e
 = 0; c‹ê< 
x86_˝u_num_c‹es
; core++)

346 
thªad
 = 0;Åhªad < 
x86_˝u_num_thªads
;Åhread++)

349 
node
 = 
c‹e
 * 
x86_˝u_num_thªads
 + 
thªad
;

350 i‡(!
	`bô_m≠_gë
(
˘x
->
afföôy
, 
node
, 1))

354 i‡(
mö_c‹e
 < 0 ||

355 
£lf
->
c‹es
[
c‹e
]->
thªads
[
thªad
]

356 ->
m≠≥d_li°_cou¡
 <

357 
£lf
->
c‹es
[
mö_c‹e
]->
thªads
[
mö_thªad
]

358 ->
m≠≥d_li°_cou¡
)

360 
mö_c‹e
 = 
c‹e
;

361 
mö_thªad
 = 
thªad
;

367 
c‹e
 = 
mö_c‹e
;

368 
thªad
 = 
mö_thªad
;

369 i‡(
c‹e
 < 0 || 
thªad
 < 0)

370 
	`∑nic
("%s:Çÿnodêwôháfföôy found", 
__FUNCTION__
);

373 
˘x
->
c‹e_ödex
 = 
c‹e
;

374 
˘x
->
thªad_ödex
 = 
thªad
;

375 
	`X86C⁄ãxtSëSèã
(
˘x
, 
X86C⁄ãxtM≠≥d
);

378 
	`DOUBLE_LINKED_LIST_INSERT_TAIL
(
£lf
->
c‹es
[
c‹e
]->
thªads
[
thªad
],

379 
m≠≥d
, 
˘x
);

382 
	`X86C⁄ãxtDebug
("#%lld ctx %d mappedÅoÇode %d/%d\n",

383 
	`asTimög
(
£lf
)->
cy˛e
, 
˘x
->
pid
, 
c‹e
, 
thªad
);

384 
	}
}

387 
	$X86CpuUpd©eMöAŒocCy˛e
(
X86Cpu
 *
£lf
)

389 
X86C⁄ãxt
 *
˘x
;

391 
i
;

392 
j
;

394 
£lf
->
mö_Æloc_cy˛e
 = 
	`asTimög
(£lf)->
cy˛e
;

395 
i
 = 0; i < 
x86_˝u_num_c‹es
; i++)

397 
j
 = 0; j < 
x86_˝u_num_thªads
; j++)

399 
˘x
 = 
£lf
->
c‹es
[
i
]->
thªads
[
j
]->ctx;

400 i‡(
˘x
 && !˘x->
evi˘_sig«l
 &&

401 
˘x
->
Æloc_cy˛e
 < 
£lf
->
mö_Æloc_cy˛e
)

402 
£lf
->
mö_Æloc_cy˛e
 = 
˘x
->
Æloc_cy˛e
;

405 
	}
}

408 
	$X86CpuScheduÀ
(
X86Cpu
 *
£lf
)

410 
X86Emu
 *
emu
 = 
£lf
->emu;

411 
X86C⁄ãxt
 *
˘x
;

413 
qu™tum_expúed
;

415 
i
;

416 
j
;

419 
qu™tum_expúed
 = 
	`asTimög
(
£lf
)->
cy˛e
 >£lf->
mö_Æloc_cy˛e
 +

420 
x86_˝u_c⁄ãxt_qu™tum
;

425 i‡(!
qu™tum_expúed
 && !
emu
->
scheduÀ_sig«l
)

430 
emu
->
scheduÀ_sig«l
 = 0;

431 
	`X86C⁄ãxtDebug
("#%Œd scheduÀ\n", 
	`asTimög
(
£lf
)->
cy˛e
);

436 
	`DOUBLE_LINKED_LIST_FOR_EACH
(
emu
, 
ru¬ög
, 
˘x
)

437 i‡(!
	`X86C⁄ãxtGëSèã
(
˘x
, 
X86C⁄ãxtM≠≥d
))

438 
	`X86CpuM≠C⁄ãxt
(
£lf
, 
˘x
);

441 
i
 = 0; i < 
x86_˝u_num_c‹es
; i++)

442 
j
 = 0; j < 
x86_˝u_num_thªads
; j++)

443 
	`X86ThªadScheduÀ
(
£lf
->
c‹es
[
i
]->
thªads
[
j
]);

447 
	`X86CpuUpd©eMöAŒocCy˛e
(
£lf
);

448 
	}
}

	@timing/sched.h

20 #i‚de‡
ARCH_X86_TIMING_SCHED_H


21 
	#ARCH_X86_TIMING_SCHED_H


	)

33 
X86ThªadUnm≠C⁄ãxt
(
X86Thªad
 *
£lf
, 
X86C⁄ãxt
 *
˘x
);

38 
X86ThªadEvi˘C⁄ãxtSig«l
(
X86Thªad
 *
£lf
, 
X86C⁄ãxt
 *
c⁄ãxt
);

42 
X86ThªadEvi˘C⁄ãxt
(
X86Thªad
 *
£lf
, 
X86C⁄ãxt
 *
c⁄ãxt
);

45 
X86ThªadScheduÀ
(
X86Thªad
 *
£lf
);

57 
X86CpuAŒoˇãC⁄ãxt
(
X86Cpu
 *
£lf
, 
X86C⁄ãxt
 *
˘x
);

61 
X86CpuM≠C⁄ãxt
(
X86Cpu
 *
£lf
, 
X86C⁄ãxt
 *
˘x
);

69 
X86CpuUpd©eMöAŒocCy˛e
(
X86Cpu
 *
£lf
);

74 
X86CpuScheduÀ
(
X86Cpu
 *
£lf
);

	@timing/thread.c

20 
	~<lib/mh™dÀ/mh™dÀ.h
>

21 
	~<lib/utû/li°.h
>

22 
	~<lib/utû/°rög.h
>

24 
	~"b¥ed.h
"

25 
	~"c‹e.h
"

26 
	~"„tch-queue.h
"

27 
	~"ö°-queue.h
"

28 
	~"lﬂd-°‹e-queue.h
"

29 
	~"ªg-fûe.h
"

30 
	~"thªad.h
"

31 
	~"åa˚-ˇche.h
"

32 
	~"u›-queue.h
"

39 
CLASS_IMPLEMENTATION
(
X86Thªad
);

41 
	$X86ThªadCª©e
(
X86Thªad
 *
£lf
, 
X86C‹e
 *
c‹e
)

44 
£lf
->
c‹e
 = core;

45 
£lf
->
˝u
 = 
c‹e
->cpu;

48 
	`X86ThªadInôU›Queue
(
£lf
);

49 
	`X86ThªadInôLSQ
(
£lf
);

50 
	`X86ThªadInôIQ
(
£lf
);

51 
	`X86ThªadInôRegFûe
(
£lf
);

52 
	`X86ThªadInôFëchQueue
(
£lf
);

53 
	`X86ThªadInôBønchPªd
(
£lf
);

54 
	`X86ThªadInôTø˚Cache
(
£lf
);

55 
	}
}

58 
	$X86ThªadDe°roy
(
X86Thªad
 *
£lf
)

61 
	`X86ThªadFªeU›Queue
(
£lf
);

62 
	`X86ThªadFªeLSQ
(
£lf
);

63 
	`X86ThªadFªeIQ
(
£lf
);

64 
	`X86ThªadFªeRegFûe
(
£lf
);

65 
	`X86ThªadFªeFëchQueue
(
£lf
);

66 
	`X86ThªadFªeBønchPªd
(
£lf
);

67 
	`X86ThªadFªeTø˚Cache
(
£lf
);

70 
£lf
->
«me
 = 
	`°r_‰ì
(self->name);

71 
	}
}

74 
	$X86ThªadSëName
(
X86Thªad
 *
£lf
, *
«me
)

76 
£lf
->
«me
 = 
	`°r_£t
(self->name,Çame);

77 
	}
}

80 
	$X86ThªadIsPùñöeEm±y
(
X86Thªad
 *
£lf
)

82  !
£lf
->
rob_cou¡
 && !£lf->
„tch_queue
->
cou¡
 &&

83 !
£lf
->
u›_queue
->
cou¡
;

84 
	}
}

	@timing/thread.h

20 #i‚de‡
X86_ARCH_TIMING_THREAD_H


21 
	#X86_ARCH_TIMING_THREAD_H


	)

23 
	~<¨ch/x86/emu/uö°.h
>

24 
	~<lib/utû/˛ass.h
>

32 
	$CLASS_BEGIN
(
X86Thªad
, 
Obje˘
)

35 
X86C‹e
 *
c‹e
;

36 
X86Cpu
 *
˝u
;

39 
id_ö_c‹e
;

40 
id_ö_˝u
;

43 *
«me
;

47 
X86C⁄ãxt
 *
˘x
;

50 
X86C⁄ãxt
 *
m≠≥d_li°_hód
;

51 
X86C⁄ãxt
 *
m≠≥d_li°_èû
;

52 
m≠≥d_li°_cou¡
;

53 
m≠≥d_li°_max
;

56 
rob_cou¡
;

57 
rob_À·_bound
;

58 
rob_right_bound
;

59 
rob_hód
;

60 
rob_èû
;

63 
iq_cou¡
;

64 
lsq_cou¡
;

65 
ªg_fûe_öt_cou¡
;

66 
ªg_fûe_Â_cou¡
;

67 
ªg_fûe_xmm_cou¡
;

70 
li°_t
 *
„tch_queue
;

71 
li°_t
 *
u›_queue
;

72 
löked_li°_t
 *
iq
;

73 
löked_li°_t
 *
lq
;

74 
löked_li°_t
 *
sq
;

75 
löked_li°_t
 *
¥eq
;

76 
x86_b¥ed_t
 *
b¥ed
;

77 
x86_åa˚_ˇche_t
 *
åa˚_ˇche
;

78 
x86_ªg_fûe_t
 *
ªg_fûe
;

81 
„tch_eù
, 
„tch_√ù
;

82 
„tchq_occ
;

83 
åa˚_ˇche_queue_occ
;

84 
„tch_block
;

85 
„tch_addªss
;

86 
„tch_ac˚ss
;

87 
„tch_°Æl_u¡û
;

90 
mod_t
 *
d©a_mod
;

91 
mod_t
 *
ö°_mod
;

94 
œ°_commô_cy˛e
;

97 
num_„tched_uö°
;

98 
num_di•©ched_uö°_¨øy
[
x86_uö°_›code_cou¡
];

99 
num_issued_uö°_¨øy
[
x86_uö°_›code_cou¡
];

100 
num_commôãd_uö°_¨øy
[
x86_uö°_›code_cou¡
];

101 
num_squashed_uö°
;

102 
num_bønch_uö°
;

103 
num_mi•ªd_bønch_uö°
;

106 
rob_occu∑ncy
;

107 
rob_fuŒ
;

108 
rob_ªads
;

109 
rob_wrôes
;

111 
iq_occu∑ncy
;

112 
iq_fuŒ
;

113 
iq_ªads
;

114 
iq_wrôes
;

115 
iq_wakeup_ac˚s£s
;

117 
lsq_occu∑ncy
;

118 
lsq_fuŒ
;

119 
lsq_ªads
;

120 
lsq_wrôes
;

121 
lsq_wakeup_ac˚s£s
;

123 
ªg_fûe_öt_occu∑ncy
;

124 
ªg_fûe_öt_fuŒ
;

125 
ªg_fûe_öt_ªads
;

126 
ªg_fûe_öt_wrôes
;

128 
ªg_fûe_Â_occu∑ncy
;

129 
ªg_fûe_Â_fuŒ
;

130 
ªg_fûe_Â_ªads
;

131 
ªg_fûe_Â_wrôes
;

133 
ªg_fûe_xmm_occu∑ncy
;

134 
ªg_fûe_xmm_fuŒ
;

135 
ªg_fûe_xmm_ªads
;

136 
ªg_fûe_xmm_wrôes
;

138 
øt_öt_ªads
;

139 
øt_öt_wrôes
;

140 
øt_Â_ªads
;

141 
øt_Â_wrôes
;

142 
øt_xmm_ªads
;

143 
øt_xmm_wrôes
;

145 
btb_ªads
;

146 
btb_wrôes
;

148 
	$CLASS_END
(
X86Thªad
)

151 
	`X86ThªadCª©e
(
X86Thªad
 *
£lf
, 
X86C‹e
 *
c‹e
);

152 
	`X86ThªadDe°roy
(
X86Thªad
 *
£lf
);

154 
	`X86ThªadSëName
(
X86Thªad
 *
£lf
, *
«me
);

156 
	`X86ThªadIsPùñöeEm±y
(
X86Thªad
 *
£lf
);

	@timing/trace-cache.c

21 
	~<¨ch/x86/emu/c⁄ãxt.h
>

22 
	~<lib/mh™dÀ/mh™dÀ.h
>

23 
	~<lib/utû/c⁄fig.h
>

24 
	~<lib/utû/debug.h
>

25 
	~<lib/utû/misc.h
>

26 
	~<lib/utû/°rög.h
>

27 
	~<mem-sy°em/mem‹y.h
>

29 
	~"c‹e.h
"

30 
	~"˝u.h
"

31 
	~"åa˚-ˇche.h
"

32 
	~"u›.h
"

33 
	~"thªad.h
"

41 
	$X86ThªadInôTø˚Cache
(
X86Thªad
 *
£lf
)

43 
X86C‹e
 *
c‹e
 = 
£lf
->core;

44 
«me
[
MAX_STRING_SIZE
];

47 i‡(!
x86_åa˚_ˇche_¥e£¡
)

51 
	`¢¥ötf
(
«me
, Çame,"Core[%d].Thread[%d].TraceCache",

52 
c‹e
->
id
, 
£lf
->
id_ö_c‹e
);

53 
£lf
->
åa˚_ˇche
 = 
	`x86_åa˚_ˇche_¸óã
(
«me
);

54 
	}
}

57 
	$X86ThªadFªeTø˚Cache
(
X86Thªad
 *
£lf
)

60 i‡(!
x86_åa˚_ˇche_¥e£¡
)

64 
	`x86_åa˚_ˇche_‰ì
(
£lf
->
åa˚_ˇche
);

65 
	}
}

68 
	$X86ThªadDumpTø˚CacheRï‹t
(
X86Thªad
 *
£lf
, 
FILE
 *
f
)

70 
x86_åa˚_ˇche_t
 *
åa˚_ˇche
 = 
£lf
->trace_cache;

72 
	`Ârötf
(
f
, "; Trace cache -Öarameters\n");

73 
	`Ârötf
(
f
, "Tø˚Cache.Së†%d\n", 
x86_åa˚_ˇche_num_£ts
);

74 
	`Ârötf
(
f
, "Tø˚Cache.Asso¯%d\n", 
x86_åa˚_ˇche_assoc
);

75 
	`Ârötf
(
f
, "Tø˚Cache.Tø˚Sizê%d\n", 
x86_åa˚_ˇche_åa˚_size
);

76 
	`Ârötf
(
f
, "Tø˚Cache.BønchMax = %d\n", 
x86_åa˚_ˇche_bønch_max
);

77 
	`Ârötf
(
f
, "Tø˚Cache.QueueSizê%d\n", 
x86_åa˚_ˇche_queue_size
);

78 
	`Ârötf
(
f
, "\n");

80 
	`Ârötf
(
f
, "; Trace cache - statistics\n");

81 
	`Ârötf
(
f
, "Tø˚Cache.Ac˚s£†%Œd\n", 
åa˚_ˇche
->
ac˚s£s
);

82 
	`Ârötf
(
f
, "Tø˚Cache.Hô†%Œd\n", 
åa˚_ˇche
->
hôs
);

83 
	`Ârötf
(
f
, "Tø˚Cache.HôR©iÿ%.4g\n", 
åa˚_ˇche
->
ac˚s£s
 ? ()

84 
åa˚_ˇche
->
hôs
 /Åø˚_ˇche->
ac˚s£s
 : 0.0);

85 
	`Ârötf
(
f
, "Tø˚Cache.Fëched = %Œd\n", 
åa˚_ˇche
->
num_„tched_uö°
);

86 
	`Ârötf
(
f
, "Tø˚Cache.Di•©ched = %Œd\n", 
åa˚_ˇche
->
num_di•©ched_uö°
);

87 
	`Ârötf
(
f
, "Tø˚Cache.Issued = %Œd\n", 
åa˚_ˇche
->
num_issued_uö°
);

88 
	`Ârötf
(
f
, "Tø˚Cache.Commôãd = %Œd\n", 
åa˚_ˇche
->
num_commôãd_uö°
);

89 
	`Ârötf
(
f
, "Tø˚Cache.Squashed = %Œd\n", 
åa˚_ˇche
->
num_squashed_uö°
);

90 
	`Ârötf
(
f
, "TraceCache.TraceLength = %.2f\n",

91 
åa˚_ˇche
->
åa˚_Àngth_cou¡
 ? (Ëåa˚_ˇche->
åa˚_Àngth_acc
 /

92 
åa˚_ˇche
->
åa˚_Àngth_cou¡
 : 0);

93 
	`Ârötf
(
f
, "\n");

94 
	}
}

98 
	$x86_åa˚_ˇche_¥ed_dump
(
¥ed
, 
num
, 
FILE
 *
f
)

100 
i
;

101 *
comma
;

103 
comma
 = "";

104 
	`Ârötf
(
f
, "(");

105 
i
 = 0; i < 
num
; i++)

107 
	`Ârötf
(
f
, "%s%c", 
comma
, 
¥ed
 & (1 << 
i
) ? 'T' : 'n');

108 
comma
 = "-";

110 
	`Ârötf
(
f
, ")");

111 
	}
}

115 
	$X86Thø˚DumpTø˚CacheE¡ry
(
X86Thªad
 *
£lf
,

116 
x86_åa˚_ˇche_íåy_t
 *
íåy
, 
FILE
 *
f
)

118 
mem_t
 *
mem
;

119 *
comma
;

120 
i
;

123 
	`as£π
(
£lf
->
˘x
 && sñf->˘x->
mem
);

124 
mem
 = 
£lf
->
˘x
->mem;

127 
	`Ârötf
(
f
, "èg = 0x%x, ", 
íåy
->
èg
);

130 
	`Ârötf
(
f
, "branches = ");

131 
	`x86_åa˚_ˇche_¥ed_dump
(
íåy
->
bønch_Êags
,É¡ry->
bønch_cou¡
, 
f
);

132 
	`Ârötf
(
f
, "\n");

135 
	`Ârötf
(
f
, "ÁŒ_through = 0x%x, ", 
íåy
->
ÁŒ_through
);

136 
	`Ârötf
(
f
, "èrgë = 0x%x\n", 
íåy
->
èrgë
);

139 
	`Ârötf
(
f
, "u›†%d, ", 
íåy
->
u›_cou¡
);

140 
	`Ârötf
(
f
, "mops = {");

141 
comma
 = "";

142 
i
 = 0; i < 
íåy
->
m›_cou¡
; i++)

144 
m›_«me
[
MAX_STRING_SIZE
];

145 *
m›_«me_íd
;

146 
m›_byãs
[20];

148 
addr
;

150 
mem_ß„
;

151 
m›_«me_Àngth
;

153 
x86_ö°_t
 
ö°
;

156 
mem_ß„
 = 
mem
->
ß„
;

157 
mem
->
ß„
 = 0;

160 
addr
 = 
íåy
->
m›_¨øy
[
i
];

161 
	`mem_ªad
(
mem
, 
addr
,  
m›_byãs
, mop_bytes);

164 
	`x86_ö°_decode
(&
ö°
, 
addr
, 
m›_byãs
);

167 
m›_«me_íd
 = 
	`ödex
(
ö°
.
f‹m©
, '_');

168 
m›_«me_Àngth
 = 
m›_«me_íd
 ? m›_«me_íd - 
ö°
.
f‹m©
 : 
	`°æí
(inst.format);

169 
	`°r_sub°r
(
m›_«me
,  m›_«me, 
ö°
.
f‹m©
, 0, 
m›_«me_Àngth
);

170 
	`Ârötf
(
f
, "%s%s", 
comma
, 
m›_«me
);

171 
comma
 = ", ";

174 
mem
->
ß„
 = 
mem_ß„
;

176 
	`Ârötf
(
f
, "}\n");

177 
	}
}

181 
	$X86ThªadFlushTø˚Cache
(
X86Thªad
 *
£lf
)

183 
x86_åa˚_ˇche_t
 *
åa˚_ˇche
 = 
£lf
->trace_cache;

184 
x86_åa˚_ˇche_íåy_t
 *
íåy
;

185 
x86_åa˚_ˇche_íåy_t
 *
found_íåy
;

186 
x86_åa˚_ˇche_íåy_t
 *
åa˚
 = 
åa˚_ˇche
->
ãmp
;

188 
£t
;

189 
way
;

190 
found_way
;

193 i‡(!
åa˚
->
u›_cou¡
)

199 
	`as£π
(
åa˚
->
èg
);

200 i‡(
åa˚
->
èrgë
)

202 
	`as£π
(
åa˚
->
bønch_cou¡
);

203 
åa˚
->
bønch_cou¡
--;

204 
åa˚
->
bønch_mask
 &~(1 <<Åø˚->
bønch_cou¡
);

205 
åa˚
->
bønch_Êags
 &~(1 <<Åø˚->
bønch_cou¡
);

210 
found_íåy
 = 
NULL
;

211 
found_way
 = -1;

212 
£t
 = 
åa˚
->
èg
 % 
x86_åa˚_ˇche_num_£ts
;

213 
way
 = 0; way < 
x86_åa˚_ˇche_assoc
; way++)

218 
íåy
 = 
	`X86_TRACE_CACHE_ENTRY
(
£t
, 
way
);

219 i‡(!
íåy
->
èg
)

221 
found_íåy
 = 
íåy
;

222 
found_way
 = 
way
;

227 i‡(
íåy
->
èg
 =
åa˚
->èg &&É¡ry->
bønch_mask
 ==Årace->branch_mask

228 && 
íåy
->
bønch_Êags
 =
åa˚
->branch_flags)

230 
found_íåy
 = 
íåy
;

231 
found_way
 = 
way
;

237 i‡(!
found_íåy
)

239 
way
 = 0; way < 
x86_åa˚_ˇche_assoc
; way++)

241 
íåy
 = 
	`X86_TRACE_CACHE_ENTRY
(
£t
, 
way
);

242 
íåy
->
cou¡î
--;

243 i‡(
íåy
->
cou¡î
 < 0)

245 
íåy
->
cou¡î
 = 
x86_åa˚_ˇche_assoc
 - 1;

246 
found_íåy
 = 
íåy
;

247 
found_way
 = 
way
;

254 
	`as£π
(
found_íåy
);

255 
	`as£π
(
found_way
 >= 0);

256 
åa˚
->
cou¡î
 = 
found_íåy
->counter;

257 
	`mem˝y
(
found_íåy
, 
åa˚
, 
X86_TRACE_CACHE_ENTRY_SIZE
);

258 
	`mem£t
(
åa˚_ˇche
->
ãmp
, 0, 
X86_TRACE_CACHE_ENTRY_SIZE
);

261 i‡(
	`x86_åa˚_ˇche_debuggög
())

263 
FILE
 *
f
;

265 
f
 = 
	`debug_fûe
(
x86_åa˚_ˇche_debug_ˇãg‹y
);

266 
	`Ârötf
(
f
, "** CommitÅrace **\n");

267 
	`Ârötf
(
f
, "Së = %d, Way = %d\n", 
£t
, 
found_way
);

268 
	`X86Thø˚DumpTø˚CacheE¡ry
(
£lf
, 
found_íåy
, 
f
);

269 
	`Ârötf
(
f
, "\n");

273 
åa˚_ˇche
->
åa˚_Àngth_acc
 +
found_íåy
->
u›_cou¡
;

274 
åa˚_ˇche
->
åa˚_Àngth_cou¡
++;

275 
	}
}

278 
	$X86ThªadRec‹dU›InTø˚Cache
(
X86Thªad
 *
£lf
, 
x86_u›_t
 *
u›
)

280 
x86_åa˚_ˇche_t
 *
åa˚_ˇche
 = 
£lf
->trace_cache;

281 
x86_åa˚_ˇche_íåy_t
 *
åa˚
 = 
åa˚_ˇche
->
ãmp
;

282 
èkí
;

285 i‡(
u›
->
m›_ödex
)

289 
	`as£π
(!
u›
->
•ecmode
);

290 
	`as£π
(
u›
->
eù
);

291 
	`as£π
(
u›
->
id
 =u›->
m›_id
);

292 i‡(
åa˚
->
u›_cou¡
 + 
u›
->
m›_cou¡
 > 
x86_åa˚_ˇche_åa˚_size
)

293 
	`X86ThªadFlushTø˚Cache
(
£lf
);

297 i‡(
u›
->
m›_cou¡
 > 
x86_åa˚_ˇche_åa˚_size
)

301 i‡(!
åa˚
->
u›_cou¡
)

302 
åa˚
->
èg
 = 
u›
->
eù
;

305 
åa˚
->
m›_¨øy
[åa˚->
m›_cou¡
] = 
u›
->
eù
;

306 
åa˚
->
m›_cou¡
++;

307 
åa˚
->
u›_cou¡
 +
u›
->
m›_cou¡
;

308 
åa˚
->
èrgë
 = 0;

309 
åa˚
->
ÁŒ_through
 = 
u›
->
eù
 + u›->
m›_size
;

313 i‡(
u›
->
Êags
 & 
X86_UINST_CTRL
)

315 
èkí
 = 
u›
->
√ù
 !u›->
eù
 + u›->
m›_size
;

316 
åa˚
->
bønch_mask
 |1 <<Åø˚->
bønch_cou¡
;

317 
åa˚
->
bønch_Êags
 |
èkí
 <<Åø˚->
bønch_cou¡
;

318 
åa˚
->
bønch_cou¡
++;

319 
åa˚
->
èrgë
 = 
u›
->
èrgë_√ù
;

320 i‡(
åa˚
->
bønch_cou¡
 =
x86_åa˚_ˇche_bønch_max
)

321 
	`X86ThªadFlushTø˚Cache
(
£lf
);

323 
	}
}

326 
	$X86ThªadLookupTø˚Cache
(
X86Thªad
 *
£lf
, 
eù
, 
¥ed
,

327 *
±r_m›_cou¡
, **
±r_m›_¨øy
, *
±r_√ù
)

329 
x86_åa˚_ˇche_t
 *
åa˚_ˇche
 = 
£lf
->trace_cache;

330 
x86_åa˚_ˇche_íåy_t
 *
íåy
;

331 
x86_åa˚_ˇche_íåy_t
 *
found_íåy
;

333 
√ù
;

335 
£t
;

336 
way
;

337 
èkí
;

339 
FILE
 *
f
;

342 i‡(
	`x86_åa˚_ˇche_debuggög
())

344 
f
 = 
	`debug_fûe
(
x86_åa˚_ˇche_debug_ˇãg‹y
);

345 
	`Ârötf
(
f
, "** Lookup **\n");

346 
	`Ârötf
(
f
, "eù = 0x%x,Öªd = ", 
eù
);

347 
	`x86_åa˚_ˇche_¥ed_dump
(
¥ed
, 
x86_åa˚_ˇche_bønch_max
, 
f
);

348 
	`Ârötf
(
f
, "\n");

352 
found_íåy
 = 
NULL
;

353 
£t
 = 
eù
 % 
x86_åa˚_ˇche_num_£ts
;

354 
way
 = 0; way < 
x86_åa˚_ˇche_assoc
; way++)

356 
íåy
 = 
	`X86_TRACE_CACHE_ENTRY
(
£t
, 
way
);

357 i‡(
íåy
->
èg
 =
eù
 && ((
¥ed
 &É¡ry->
bønch_mask
Ë=íåy->
bønch_Êags
))

359 
found_íåy
 = 
íåy
;

365 
åa˚_ˇche
->
ac˚s£s
++;

366 i‡(
found_íåy
)

367 
åa˚_ˇche
->
hôs
++;

370 i‡(!
found_íåy
)

372 
	`x86_åa˚_ˇche_debug
("Miss\n");

373 
	`x86_åa˚_ˇche_debug
("\n");

380 
èkí
 = 
found_íåy
->
èrgë
 && (
¥ed
 & (1 << found_íåy->
bønch_cou¡
));

381 
√ù
 = 
èkí
 ? 
found_íåy
->
èrgë
 : found_íåy->
ÁŒ_through
;

384 i‡(
	`x86_åa˚_ˇche_debuggög
())

386 
f
 = 
	`debug_fûe
(
x86_åa˚_ˇche_debug_ˇãg‹y
);

387 
	`Ârötf
(
f
, "Hô - Së = %d, Way = %d\n", 
£t
, 
way
);

388 
	`X86Thø˚DumpTø˚CacheE¡ry
(
£lf
, 
found_íåy
, 
f
);

389 
	`Ârötf
(
f
, "Nexàåa˚Öªdi˘i⁄ = %c\n", 
èkí
 ? 'T' : 'n');

390 
	`Ârötf
(
f
, "Nexà„tcháddªs†0x%x\n", 
√ù
);

391 
	`Ârötf
(
f
, "\n");

395 
	`PTR_ASSIGN
(
±r_m›_cou¡
, 
found_íåy
->
m›_cou¡
);

396 
	`PTR_ASSIGN
(
±r_m›_¨øy
, 
found_íåy
->
m›_¨øy
);

397 
	`PTR_ASSIGN
(
±r_√ù
, 
√ù
);

401 
	}
}

410 
x86_åa˚_ˇche_t
 *
	$x86_åa˚_ˇche_¸óã
(*
«me
)

412 
x86_åa˚_ˇche_t
 *
åa˚_ˇche
;

413 
x86_åa˚_ˇche_íåy_t
 *
íåy
;

415 
£t
;

416 
way
;

419 
åa˚_ˇche
 = 
	`xˇŒoc
(1, (
x86_åa˚_ˇche_t
));

420 
åa˚_ˇche
->
«me
 = 
	`x°rdup
(name);

421 
åa˚_ˇche
->
íåy
 = 
	`xˇŒoc
(
x86_åa˚_ˇche_num_£ts
 * 
x86_åa˚_ˇche_assoc
,

422 
X86_TRACE_CACHE_ENTRY_SIZE
);

423 
åa˚_ˇche
->
ãmp
 = 
	`xˇŒoc
(1, 
X86_TRACE_CACHE_ENTRY_SIZE
);

426 
£t
 = 0; së < 
x86_åa˚_ˇche_num_£ts
; set++)

428 
way
 = 0; way < 
x86_åa˚_ˇche_assoc
; way++)

430 
íåy
 = 
	`X86_TRACE_CACHE_ENTRY
(
£t
, 
way
);

431 
íåy
->
cou¡î
 = 
way
;

436  
åa˚_ˇche
;

437 
	}
}

440 
	$x86_åa˚_ˇche_‰ì
(
x86_åa˚_ˇche_t
 *
åa˚_ˇche
)

442 
	`‰ì
(
åa˚_ˇche
->
«me
);

443 
	`‰ì
(
åa˚_ˇche
->
íåy
);

444 
	`‰ì
(
åa˚_ˇche
->
ãmp
);

445 
	`‰ì
(
åa˚_ˇche
);

446 
	}
}

456 
	gx86_åa˚_ˇche_debug_ˇãg‹y
;

459 
	gx86_åa˚_ˇche_¥e£¡
;

460 
	gx86_åa˚_ˇche_num_£ts
;

461 
	gx86_åa˚_ˇche_assoc
;

462 
	gx86_åa˚_ˇche_åa˚_size
;

463 
	gx86_åa˚_ˇche_bønch_max
;

464 
	gx86_åa˚_ˇche_queue_size
;

467 
	$X86RódTø˚CacheC⁄fig
(
c⁄fig_t
 *
c⁄fig
)

469 *
£˘i⁄
;

470 *
fûe_«me
;

473 
£˘i⁄
 = "TraceCache";

474 
fûe_«me
 = 
	`c⁄fig_gë_fûe_«me
(
c⁄fig
);

477 
x86_åa˚_ˇche_¥e£¡
 = 
	`c⁄fig_ªad_boﬁ
(
c⁄fig
, 
£˘i⁄
, "Present", 0);

478 
x86_åa˚_ˇche_num_£ts
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "Sets", 64);

479 
x86_åa˚_ˇche_assoc
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "Assoc", 4);

480 
x86_åa˚_ˇche_åa˚_size
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "TraceSize", 16);

481 
x86_åa˚_ˇche_bønch_max
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "BranchMax", 3);

482 
x86_åa˚_ˇche_queue_size
 = 
	`c⁄fig_ªad_öt
(
c⁄fig
, 
£˘i⁄
, "QueueSize", 32);

485 i‡((
x86_åa˚_ˇche_num_£ts
 & (x86_trace_cache_num_sets - 1)) || !x86_trace_cache_num_sets)

486 
	`Áèl
("%s: %s: 'Sets' must beáÖower of 2 greaterÅhan 0",

487 
fûe_«me
, 
£˘i⁄
);

488 i‡((
x86_åa˚_ˇche_assoc
 & (x86_trace_cache_assoc - 1)) || !x86_trace_cache_assoc)

489 
	`Áèl
("%s: %s: 'Assoc' must beáÖower of 2 greaterÅhan 0",

490 
fûe_«me
, 
£˘i⁄
);

491 i‡(!
x86_åa˚_ˇche_åa˚_size
)

492 
	`Áèl
("%s: %s: Invalid value for 'TraceSize'",

493 
fûe_«me
, 
£˘i⁄
);

494 i‡(!
x86_åa˚_ˇche_bønch_max
)

495 
	`Áèl
("%s: %s: Invalid value for 'BranchMax'",

496 
fûe_«me
, 
£˘i⁄
);

497 i‡(
x86_åa˚_ˇche_bønch_max
 > 
x86_åa˚_ˇche_åa˚_size
)

498 
	`Áèl
("%s: %s: 'BranchMax' must beÉqual orÜessÅhan 'TraceSize'",

499 
fûe_«me
, 
£˘i⁄
);

500 i‡(
x86_åa˚_ˇche_bønch_max
 > 31)

501 
	`Áèl
("%s: %s: Maximum value for 'BranchMax' is 31",

502 
fûe_«me
, 
£˘i⁄
);

503 
	}
}

	@timing/trace-cache.h

20 #i‚de‡
X86_ARCH_TIMING_TRACE_CACHE_H


21 
	#X86_ARCH_TIMING_TRACE_CACHE_H


	)

23 
	~<lib/utû/˛ass.h
>

27 
	gc⁄fig_t
;

35 
X86ThªadInôTø˚Cache
(
X86Thªad
 *
£lf
);

36 
X86ThªadFªeTø˚Cache
(
X86Thªad
 *
£lf
);

38 
X86ThªadDumpTø˚CacheRï‹t
(
X86Thªad
 *
£lf
, 
FILE
 *
f
);

40 
X86ThªadRec‹dU›InTø˚Cache
(
X86Thªad
 *
£lf
, 
x86_u›_t
 *
u›
);

41 
X86ThªadLookupTø˚Cache
(
X86Thªad
 *
£lf
, 
eù
, 
¥ed
,

42 *
±r_m›_cou¡
, **
±r_m›_¨øy
, *
±r_√ù
);

51 
x86_åa˚_ˇche_t
 *
x86_åa˚_ˇche_¸óã
(*
«me
);

52 
x86_åa˚_ˇche_‰ì
(
x86_åa˚_ˇche_t
 *
åa˚_ˇche
);

54 
	#X86_TRACE_CACHE_ENTRY_SIZE
 \

55 ((
x86_åa˚_ˇche_íåy_t
) + \

56 (Ë* 
x86_åa˚_ˇche_åa˚_size
)

	)

57 
	#X86_TRACE_CACHE_ENTRY
(
SET
, 
WAY
) \

58 ((
x86_åa˚_ˇche_íåy_t
 *Ë(((*Ë
åa˚_ˇche
->
íåy
) + \

59 
X86_TRACE_CACHE_ENTRY_SIZE
 * ((
SET
Ë* 
x86_åa˚_ˇche_assoc
 + (
WAY
))))

	)

61 
	sx86_åa˚_ˇche_íåy_t


64 
	mcou¡î
;

67 
	mèg
;

70 
	mu›_cou¡
;

71 
	mm›_cou¡
;

77 
	mbønch_cou¡
;

80 
	mbønch_mask
;

85 
	mbønch_Êags
;

89 
	mÁŒ_through
;

92 
	mèrgë
;

99 
	mm›_¨øy
[0];

102 
	sx86_åa˚_ˇche_t


104 *
	m«me
;

107 
x86_åa˚_ˇche_íåy_t
 *
	míåy
;

111 
x86_åa˚_ˇche_íåy_t
 *
	mãmp
;

114 
	mac˚s£s
;

115 
	mhôs
;

116 
	mnum_„tched_uö°
;

117 
	mnum_di•©ched_uö°
;

118 
	mnum_issued_uö°
;

119 
	mnum_commôãd_uö°
;

120 
	mnum_squashed_uö°
;

121 
	måa˚_Àngth_acc
;

122 
	måa˚_Àngth_cou¡
;

133 
	#x86_åa˚_ˇche_debuggög
(Ë
	`debug_°©us
(
x86_åa˚_ˇche_debug_ˇãg‹y
)

	)

134 
	#x86_åa˚_ˇche_debug
(...Ë
	`debug
(
x86_åa˚_ˇche_debug_ˇãg‹y
, 
__VA_ARGS__
)

	)

135 
x86_åa˚_ˇche_debug_ˇãg‹y
;

137 
x86_åa˚_ˇche_¥e£¡
;

138 
x86_åa˚_ˇche_num_£ts
;

139 
x86_åa˚_ˇche_assoc
;

140 
x86_åa˚_ˇche_åa˚_size
;

141 
x86_åa˚_ˇche_bønch_max
;

142 
x86_åa˚_ˇche_queue_size
;

145 
X86RódTø˚CacheC⁄fig
(
c⁄fig_t
 *
c⁄fig
);

	@timing/uop-queue.c

21 
	~<lib/esim/åa˚.h
>

22 
	~<lib/utû/li°.h
>

24 
	~"c‹e.h
"

25 
	~"˝u.h
"

26 
	~"u›.h
"

27 
	~"u›-queue.h
"

28 
	~"thªad.h
"

31 
	gx86_u›_queue_size
;

34 
	$X86ThªadInôU›Queue
(
X86Thªad
 *
£lf
)

36 
£lf
->
u›_queue
 = 
	`li°_¸óã_wôh_size
(
x86_u›_queue_size
);

37 
	}
}

40 
	$X86ThªadFªeU›Queue
(
X86Thªad
 *
£lf
)

42 
li°_t
 *
u›_queue
;

43 
x86_u›_t
 *
u›
;

45 
u›_queue
 = 
£lf
->uop_queue;

46 
	`li°_cou¡
(
u›_queue
))

48 
u›
 = 
	`li°_ªmove_©
(
u›_queue
, 0);

49 
u›
->
ö_u›_queue
 = 0;

50 
	`x86_u›_‰ì_if_nŸ_queued
(
u›
);

52 
	`li°_‰ì
(
u›_queue
);

53 
	}
}

56 
	$X86ThªadRecovîU›Queue
(
X86Thªad
 *
£lf
)

58 
X86C‹e
 *
c‹e
 = 
£lf
->core;

59 
X86Cpu
 *
˝u
 = 
£lf
->cpu;

61 
li°_t
 *
u›_queue
 = 
£lf
->uop_queue;

62 
x86_u›_t
 *
u›
;

64 
	`li°_cou¡
(
u›_queue
))

66 
u›
 = 
	`li°_gë
(
u›_queue
, 
	`li°_cou¡
(uop_queue) - 1);

67 
	`as£π
(
u›
->
thªad
 =
£lf
);

68 i‡(!
u›
->
•ecmode
)

70 
	`li°_ªmove_©
(
u›_queue
, 
	`li°_cou¡
(uop_queue) - 1);

71 
u›
->
ö_u›_queue
 = 0;

74 i‡(
	`x86_åacög
())

76 
	`x86_åa˚
("x86.inst id=%lld core=%d stg=\"sq\"\n",

77 
u›
->
id_ö_c‹e
, 
c‹e
->
id
);

78 
	`X86CpuAddToTø˚Li°
(
˝u
, 
u›
);

82 
	`x86_u›_‰ì_if_nŸ_queued
(
u›
);

84 
	}
}

	@timing/uop-queue.h

20 #i‚de‡
X86_ARCH_TIMING_UOP_QUEUE_H


21 
	#X86_ARCH_TIMING_UOP_QUEUE_H


	)

26 
x86_u›_queue_size
;

34 
X86ThªadInôU›Queue
(
X86Thªad
 *
£lf
);

35 
X86ThªadFªeU›Queue
(
X86Thªad
 *
£lf
);

36 
X86ThªadRecovîU›Queue
(
X86Thªad
 *
£lf
);

	@timing/uop.c

20 
	~<lib/mh™dÀ/mh™dÀ.h
>

21 
	~<lib/utû/li°.h
>

22 
	~<lib/utû/löked-li°.h
>

24 
	~"u›.h
"

27 
	#UOP_MAGIC
 0x10101010U

	)

30 
x86_u›_t
 *
	$x86_u›_¸óã
()

32 
x86_u›_t
 *
u›
;

35 
u›
 = 
	`xˇŒoc
(1, (
x86_u›_t
));

36 
u›
->
magic
 = 
UOP_MAGIC
;

39  
u›
;

40 
	}
}

43 
	$x86_u›_‰ì_if_nŸ_queued
(
x86_u›_t
 *
u›
)

46 i‡(
u›
->
ö_„tch_queue
 || u›->
ö_u›_queue
 || u›->
ö_iq
 ||

47 
u›
->
ö_lq
 || u›->
ö_sq
 || u›->
ö_¥eq
 ||

48 
u›
->
ö_rob
 || u›->
ö_evít_queue
 ||

49 
u›
->
ö_u›_åa˚_li°
)

55 
u›
->
magic
 = 0;

56 
	`x86_uö°_‰ì
(
u›
->
uö°
);

57 
	`‰ì
(
u›
);

58 
	}
}

61 
	$x86_u›_dump
(
x86_u›_t
 *
u›
, 
FILE
 *
f
)

64 
	`Ârötf
(
f
, "id=%Œd, ", 
u›
->
id
);

65 
	`Ârötf
(
f
, "eù=0x%x, ", 
u›
->
eù
);

66 
	`Ârötf
(
f
, "•ec_mode=%c, ", 
u›
->
•ecmode
 ? 't' : 'f');

67 
	`Ârötf
(
f
, "åa˚_ˇche=%c, ", 
u›
->
åa˚_ˇche
 ? 't' : 'f');

70 
	`Ârötf
(
f
, "uinst='");

71 
	`x86_uö°_dump
(
u›
->
uö°
, 
f
);

72 
	`Ârötf
(
f
, "'");

73 
	}
}

78 
	$x86_u›_exi°s
(
x86_u›_t
 *
u›
)

80  
u›
->
magic
 =
UOP_MAGIC
;

81 
	}
}

89 
	$x86_u›_cou¡_dïs
(
x86_u›_t
 *
u›
)

91 
dï
;

92 
l‹eg
;

94 
öt_cou¡
;

95 
Â_cou¡
;

96 
Êag_cou¡
;

97 
xmm_cou¡
;

100 
u›
->
idï_cou¡
 = 0;

101 
u›
->
odï_cou¡
 = 0;

102 
u›
->
ph_öt_idï_cou¡
 = 0;

103 
u›
->
ph_Â_idï_cou¡
 = 0;

104 
u›
->
ph_xmm_idï_cou¡
 = 0;

105 
u›
->
ph_öt_odï_cou¡
 = 0;

106 
u›
->
ph_Â_odï_cou¡
 = 0;

107 
u›
->
ph_xmm_odï_cou¡
 = 0;

110 
öt_cou¡
 = 
Â_cou¡
 = 
Êag_cou¡
 = 
xmm_cou¡
 = 0;

111 
dï
 = 0; dï < 
X86_UINST_MAX_ODEPS
; dep++)

113 
l‹eg
 = 
u›
->
uö°
->
odï
[
dï
];

114 i‡(
	`X86_DEP_IS_FLAG
(
l‹eg
))

115 
Êag_cou¡
++;

116 i‡(
	`X86_DEP_IS_INT_REG
(
l‹eg
))

117 
öt_cou¡
++;

118 i‡(
	`X86_DEP_IS_FP_REG
(
l‹eg
))

119 
Â_cou¡
++;

120 i‡(
	`X86_DEP_IS_XMM_REG
(
l‹eg
))

121 
xmm_cou¡
++;

123 
u›
->
odï_cou¡
 = 
Êag_cou¡
 + 
öt_cou¡
 + 
Â_cou¡
 + 
xmm_cou¡
;

124 
u›
->
ph_öt_odï_cou¡
 = 
Êag_cou¡
 && !
öt_cou¡
 ? 1 : int_count;

125 
u›
->
ph_Â_odï_cou¡
 = 
Â_cou¡
;

126 
u›
->
ph_xmm_odï_cou¡
 = 
xmm_cou¡
;

129 
öt_cou¡
 = 
Â_cou¡
 = 
Êag_cou¡
 = 
xmm_cou¡
 = 0;

130 
dï
 = 0; dï < 
X86_UINST_MAX_IDEPS
; dep++)

132 
l‹eg
 = 
u›
->
uö°
->
idï
[
dï
];

133 i‡(
	`X86_DEP_IS_FLAG
(
l‹eg
))

134 
Êag_cou¡
++;

135 i‡(
	`X86_DEP_IS_INT_REG
(
l‹eg
))

136 
öt_cou¡
++;

137 i‡(
	`X86_DEP_IS_FP_REG
(
l‹eg
))

138 
Â_cou¡
++;

139 i‡(
	`X86_DEP_IS_XMM_REG
(
l‹eg
))

140 
xmm_cou¡
++;

142 
u›
->
idï_cou¡
 = 
Êag_cou¡
 + 
öt_cou¡
 + 
Â_cou¡
 + 
xmm_cou¡
;

143 
u›
->
ph_öt_idï_cou¡
 = 
Êag_cou¡
 + 
öt_cou¡
;

144 
u›
->
ph_Â_idï_cou¡
 = 
Â_cou¡
;

145 
u›
->
ph_xmm_idï_cou¡
 = 
xmm_cou¡
;

146 
	}
}

149 
	$x86_u›_li°_dump
(
li°_t
 *
li°
, 
FILE
 *
f
)

151 
x86_u›_t
 *
u›
;

152 
i
;

154 
i
 = 0; i < 
	`li°_cou¡
(
li°
); i++)

156 
	`Ârötf
(
f
, "%3d. ", 
i
);

157 
u›
 = 
	`li°_gë
(
li°
, 
i
);

158 
	`x86_u›_dump
(
u›
, 
f
);

159 
	`Ârötf
(
f
, "\n");

161 
	}
}

164 
	$x86_u›_löked_li°_dump
(
löked_li°_t
 *
u›_li°
, 
FILE
 *
f
)

166 
x86_u›_t
 *
u›
;

168 
	`löked_li°_hód
(
u›_li°
);

169 !
	`löked_li°_is_íd
(
u›_li°
))

171 
u›
 = 
	`löked_li°_gë
(
u›_li°
);

172 
	`Ârötf
(
f
, "%3d. ", 
	`löked_li°_cuºít
(
u›_li°
));

173 
	`x86_uö°_dump
(
u›
->
uö°
, 
f
);

174 
	`Ârötf
(
f
, "\n");

175 
	`löked_li°_√xt
(
u›_li°
);

177 
	}
}

	@timing/uop.h

20 #i‚de‡
X86_ARCH_TIMING_UOP_H


21 
	#X86_ARCH_TIMING_UOP_H


	)

23 
	~<¨ch/x86/emu/uö°.h
>

24 
	~<lib/utû/˛ass.h
>

32 
	sx86_u›_t


35 
x86_uö°_t
 *
	muö°
;

36 
x86_uö°_Êag_t
 
	mÊags
;

39 
	mmagic
;

40 
	mid
;

41 
	mid_ö_c‹e
;

44 
X86C⁄ãxt
 *
	m˘x
;

45 
X86Thªad
 *
	mthªad
;

48 
	meù
;

49 
	m√ù
;

50 
	m¥ed_√ù
;

51 
	mèrgë_√ù
;

52 
	m•ecmode
;

53 
	m„tch_addªss
;

54 
	m„tch_ac˚ss
;

55 
	måa˚_ˇche
;

58 
	mm›_«me
[40];

59 
	mm›_ödex
;

60 
	mm›_cou¡
;

61 
	mm›_size
;

62 
	mm›_id
;

65 
	midï_cou¡
;

66 
	modï_cou¡
;

69 
	mph_öt_idï_cou¡
, 
	mph_Â_idï_cou¡
, 
	mph_xmm_idï_cou¡
;

70 
	mph_öt_odï_cou¡
, 
	mph_Â_odï_cou¡
, 
	mph_xmm_odï_cou¡
;

71 
	mph_idï
[
X86_UINST_MAX_IDEPS
];

72 
	mph_odï
[
X86_UINST_MAX_ODEPS
];

73 
	mph_oodï
[
X86_UINST_MAX_ODEPS
];

76 
	mö_„tch_queue
 : 1;

77 
	mö_u›_queue
 : 1;

78 
	mö_iq
 : 1;

79 
	mö_lq
 : 1;

80 
	mö_sq
 : 1;

81 
	mö_¥eq
 : 1;

82 
	mö_evít_queue
 : 1;

83 
	mö_rob
 : 1;

84 
	mö_u›_åa˚_li°
 : 1;

87 
	mªady
;

88 
	missued
;

89 
	mcom∂ëed
;

92 
	mphy_addr
;

95 
	mwhí
;

96 
	missue_åy_whí
;

97 
	missue_whí
;

100 
	m¥ed
;

101 
	mbimod_ödex
, 
	mbimod_¥ed
;

102 
	mtwﬁevñ_bht_ödex
, 
	mtwﬁevñ_pht_row
, 
	mtwﬁevñ_pht_cﬁ
, 
	mtwﬁevñ_¥ed
;

103 
	mchoi˚_ödex
, 
	mchoi˚_¥ed
;

106 
x86_u›_t
 *
x86_u›_¸óã
();

107 
x86_u›_‰ì_if_nŸ_queued
(
x86_u›_t
 *
u›
);

108 
x86_u›_dump
(
x86_u›_t
 *
u›
, 
FILE
 *
f
);

110 
x86_u›_exi°s
(
x86_u›_t
 *
u›
);

111 
x86_u›_cou¡_dïs
(
x86_u›_t
 *
u›
);

113 
	glöked_li°_t
;

114 
x86_u›_li°_dump
(
li°_t
 *
u›_li°
, 
FILE
 *
f
);

115 
x86_u›_löked_li°_dump
(
löked_li°_t
 *
u›_li°
, 
FILE
 *
f
);

	@timing/writeback.c

21 
	~<lib/esim/åa˚.h
>

22 
	~<lib/utû/löked-li°.h
>

24 
	~"c‹e.h
"

25 
	~"˝u.h
"

26 
	~"ªcovî.h
"

27 
	~"ªg-fûe.h
"

28 
	~"thªad.h
"

29 
	~"wrôeback.h
"

37 
	$X86C‹eWrôeback
(
X86C‹e
 *
£lf
)

39 
X86Cpu
 *
˝u
 = 
£lf
->cpu;

40 
X86Thªad
 *
thªad
;

42 
x86_u›_t
 *
u›
;

44 
ªcovî
 = 0;

49 
	`löked_li°_hód
(
£lf
->
evít_queue
);

50 
u›
 = 
	`löked_li°_gë
(
£lf
->
evít_queue
);

51 i‡(!
u›
)

56 i‡(
u›
->
Êags
 & 
X86_UINST_MEM
)

57 
u›
->
whí
 = 
	`asTimög
(
˝u
)->
cy˛e
;

58 i‡(
u›
->
whí
 > 
	`asTimög
(
˝u
)->
cy˛e
)

62 
	`as£π
(
	`x86_u›_exi°s
(
u›
));

63 
	`as£π
(
u›
->
whí
 =
	`asTimög
(
˝u
)->
cy˛e
);

64 
	`as£π
(
u›
->
thªad
->
c‹e
 =
£lf
);

65 
	`as£π
(
u›
->
ªady
);

66 
	`as£π
(!
u›
->
com∂ëed
);

69 
	`löked_li°_ªmove
(
£lf
->
evít_queue
);

70 
u›
->
ö_evít_queue
 = 0;

71 
thªad
 = 
u›
->thread;

75 i‡(
x86_˝u_ªcovî_köd
 =
x86_˝u_ªcovî_köd_wrôeback
 &&

76 (
u›
->
Êags
 & 
X86_UINST_CTRL
Ë&& !u›->
•ecmode
 &&

77 
u›
->
√ù
 !u›->
¥ed_√ù
)

78 
ªcovî
 = 1;

83 i‡(
u›
->
ö_rob
)

84 
	`x86_åa˚
("x86.inst id=%lld core=%d stg=\"wb\"\n",

85 
u›
->
id_ö_c‹e
, 
£lf
->
id
);

88 
u›
->
com∂ëed
 = 1;

89 
	`X86ThªadWrôeU›
(
thªad
, 
u›
);

90 
£lf
->
ªg_fûe_öt_wrôes
 +
u›
->
ph_öt_odï_cou¡
;

91 
£lf
->
ªg_fûe_Â_wrôes
 +
u›
->
ph_Â_odï_cou¡
;

92 
£lf
->
iq_wakeup_ac˚s£s
++;

93 
thªad
->
ªg_fûe_öt_wrôes
 +
u›
->
ph_öt_odï_cou¡
;

94 
thªad
->
ªg_fûe_Â_wrôes
 +
u›
->
ph_Â_odï_cou¡
;

95 
thªad
->
iq_wakeup_ac˚s£s
++;

96 
	`x86_u›_‰ì_if_nŸ_queued
(
u›
);

100 i‡(
ªcovî
)

101 
	`X86ThªadRecovî
(
thªad
);

103 
	}
}

112 
	$X86CpuWrôeback
(
X86Cpu
 *
£lf
)

114 
i
;

116 
£lf
->
°age
 = "writeback";

117 
i
 = 0; i < 
x86_˝u_num_c‹es
; i++)

118 
	`X86C‹eWrôeback
(
£lf
->
c‹es
[
i
]);

119 
	}
}

	@timing/writeback.h

20 #i‚de‡
ARCH_X86_TIMING_WRITEBACK_H


21 
	#ARCH_X86_TIMING_WRITEBACK_H


	)

23 
	~<lib/utû/˛ass.h
>

30 
X86C‹eWrôeback
(
X86C‹e
 *
£lf
);

38 
X86CpuWrôeback
(
X86Cpu
 *
£lf
);

	@/usr/include/assert.h

24 #ifdef 
_ASSERT_H


26 #unde‡
_ASSERT_H


27 #unde‡
as£π


28 #unde‡
__ASSERT_VOID_CAST


30 #ifdef 
__USE_GNU


31 #unde‡
as£π_≥º‹


36 
	#_ASSERT_H
 1

	)

37 
	~<„©uªs.h
>

39 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

40 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

42 
	#__ASSERT_VOID_CAST
 ()

	)

50 #ifdef 
NDEBUG


52 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

60 #ifdef 
__USE_GNU


61 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

66 #i‚de‡
_ASSERT_H_DECLS


67 
	#_ASSERT_H_DECLS


	)

68 
__BEGIN_DECLS


71 
	$__as£π_Áû
 (
__c⁄°
 *
__as£πi⁄
, __c⁄° *
__fûe
,

72 
__löe
, 
__c⁄°
 *
__fun˘i⁄
)

73 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

76 
	$__as£π_≥º‹_Áû
 (
__î∫um
, 
__c⁄°
 *
__fûe
,

77 
__löe
,

78 
__c⁄°
 *
__fun˘i⁄
)

79 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

84 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

85 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

88 
__END_DECLS


91 
	#as£π
(
ex¥
) \

92 ((
ex¥
) \

93 ? 
	`__ASSERT_VOID_CAST
 (0) \

94 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

96 #ifdef 
__USE_GNU


97 
	#as£π_≥º‹
(
î∫um
) \

98 (!(
î∫um
) \

99 ? 
	`__ASSERT_VOID_CAST
 (0) \

100 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

108 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

109 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

111 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

112 
	#__ASSERT_FUNCTION
 
__func__


	)

114 
	#__ASSERT_FUNCTION
 ((
__c⁄°
 *Ë0)

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

89 #i‚de‡
__˝lu•lus


90 
	#__is˘y≥
(
c
, 
ty≥
) \

91 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

92 #ñi‡
deföed
 
__USE_EXTERN_INLINES


93 
	#__is˘y≥_f
(
ty≥
) \

94 
__exã∫_ölöe
 \

95 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

97  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

98 
	}

	)
}

101 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

102 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

104 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

106 
__BEGIN_NAMESPACE_STD


112 
__ex˘y≥
 (
iß um
);

113 
__ex˘y≥
 (
ißÕha
);

114 
__ex˘y≥
 (
is˙ål
);

115 
__ex˘y≥
 (
isdigô
);

116 
__ex˘y≥
 (
i¶owî
);

117 
__ex˘y≥
 (
isgøph
);

118 
__ex˘y≥
 (
i•röt
);

119 
__ex˘y≥
 (
i•un˘
);

120 
__ex˘y≥
 (
is•a˚
);

121 
__ex˘y≥
 (
isuµî
);

122 
__ex˘y≥
 (
isxdigô
);

126 
	$tﬁowî
 (
__c
Ë
__THROW
;

129 
	$touµî
 (
__c
Ë
__THROW
;

131 
__END_NAMESPACE_STD


135 #ifdef 
__USE_ISOC99


136 
__BEGIN_NAMESPACE_C99


138 
	`__ex˘y≥
 (
isbœnk
);

140 
__END_NAMESPACE_C99


143 #ifde‡
__USE_GNU


145 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

148 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


152 
	$ißscii
 (
__c
Ë
__THROW
;

156 
	$tﬂscii
 (
__c
Ë
__THROW
;

160 
	`__ex˘y≥
 (
_touµî
);

161 
	`__ex˘y≥
 (
_tﬁowî
);

165 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

166 (
__exãnsi⁄__
 \

167 ({ 
__ªs
; \

168 i‡( (
c
) > 1) \

170 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

172 
__c
 = (
c
); \

173 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

176 
__ªs
 = 
f
 
¨gs
; \

179 
__ªs
 = (
a
)[(Ë(
c
)]; \

180 
__ªs
; 
	}
}))

	)

182 #i‡!
deföed
 
__NO_CTYPE


183 #ifde‡
__is˘y≥_f


184 
	$__is˘y≥_f
 (
Ænum
)

185 
	$__is˘y≥_f
 (
Æpha
)

186 
	$__is˘y≥_f
 (
˙ål
)

187 
	$__is˘y≥_f
 (
digô
)

188 
	$__is˘y≥_f
 (
lowî
)

189 
	$__is˘y≥_f
 (
gøph
)

190 
	$__is˘y≥_f
 (
¥öt
)

191 
	$__is˘y≥_f
 (
pun˘
)

192 
	$__is˘y≥_f
 (
•a˚
)

193 
	$__is˘y≥_f
 (
uµî
)

194 
	$__is˘y≥_f
 (
xdigô
)

195 #ifde‡
__USE_ISOC99


196 
	$__is˘y≥_f
 (
bœnk
)

198 #ñi‡
deföed
 
__is˘y≥


199 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

200 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

201 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

202 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

203 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

204 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

205 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

206 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

207 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

208 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

209 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

210 #ifde‡
__USE_ISOC99


211 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

215 #ifde‡
__USE_EXTERN_INLINES


216 
__exã∫_ölöe
 

217 
	`__NTH
 (
	$tﬁowî
 (
__c
))

219  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

220 
	}
}

222 
__exã∫_ölöe
 

223 
__NTH
 (
	$touµî
 (
__c
))

225  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

226 
	}
}

229 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


230 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

231 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

234 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

236 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

238 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

239 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

245 #ifde‡
__USE_XOPEN2K8


259 
	~<xloˇÀ.h
>

263 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

264 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

266 
	#__ex˘y≥_l
(
«me
) \

267 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

273 
__ex˘y≥_l
 (
iß um_l
);

274 
__ex˘y≥_l
 (
ißÕha_l
);

275 
__ex˘y≥_l
 (
is˙ål_l
);

276 
__ex˘y≥_l
 (
isdigô_l
);

277 
__ex˘y≥_l
 (
i¶owî_l
);

278 
__ex˘y≥_l
 (
isgøph_l
);

279 
__ex˘y≥_l
 (
i•röt_l
);

280 
__ex˘y≥_l
 (
i•un˘_l
);

281 
__ex˘y≥_l
 (
is•a˚_l
);

282 
__ex˘y≥_l
 (
isuµî_l
);

283 
__ex˘y≥_l
 (
isxdigô_l
);

285 
__ex˘y≥_l
 (
isbœnk_l
);

289 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

290 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

293 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

296 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


297 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

299 
	#__touµî_l
(
c
, 
loˇÀ
) \

300 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

301 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

302 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

306 #i‚de‡
__NO_CTYPE


307 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

308 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

309 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

310 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

311 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

312 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

313 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

314 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

315 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

316 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

317 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

319 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

321 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


322 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

323 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

326 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

327 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

328 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

329 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

330 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

331 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

332 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

333 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

334 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

335 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

336 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

338 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

340 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


341 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

342 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

349 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


38 
	~<bôs/ty≥s.h
>

39 
	#__√ed_time•ec


	)

40 
	~<time.h
>

41 
	~<bôs/°©.h
>

43 
	#S_IFMT
 
__S_IFMT


	)

44 
	#S_IFDIR
 
__S_IFDIR


	)

45 
	#S_IFCHR
 
__S_IFCHR


	)

46 
	#S_IFBLK
 
__S_IFBLK


	)

47 
	#S_IFREG
 
__S_IFREG


	)

48 #ifde‡
__S_IFIFO


49 
	#S_IFIFO
 
__S_IFIFO


	)

51 #ifde‡
__S_IFLNK


52 
	#S_IFLNK
 
__S_IFLNK


	)

54 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


55 
	#S_IFSOCK
 
__S_IFSOCK


	)

60 
	#S_ISUID
 
__S_ISUID


	)

61 
	#S_ISGID
 
__S_ISGID


	)

63 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


65 
	#S_ISVTX
 
__S_ISVTX


	)

68 
	#S_IRUSR
 
__S_IREAD


	)

69 
	#S_IWUSR
 
__S_IWRITE


	)

70 
	#S_IXUSR
 
__S_IEXEC


	)

72 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

74 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

75 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

76 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

78 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

80 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

81 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

82 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

84 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

87 #ifdef 
__USE_MISC


88 #i‚de‡
R_OK


91 
	#R_OK
 4

	)

92 
	#W_OK
 2

	)

93 
	#X_OK
 1

	)

94 
	#F_OK
 0

	)

99 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


100 
	#SEEK_SET
 0

	)

101 
	#SEEK_CUR
 1

	)

102 
	#SEEK_END
 2

	)

110 
f˙é
 (
__fd
, 
__cmd
, ...);

118 #i‚de‡
__USE_FILE_OFFSET64


119 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

121 #ifde‡
__REDIRECT


122 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

123 
	`__n⁄nuŒ
 ((1));

125 
	#›í
 
›í64


	)

128 #ifde‡
__USE_LARGEFILE64


129 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

132 #ifde‡
__USE_ATFILE


142 #i‚de‡
__USE_FILE_OFFSET64


143 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

144 
	`__n⁄nuŒ
 ((2));

146 #ifde‡
__REDIRECT


147 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

148 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

150 
	#›í©
 
›í©64


	)

153 #ifde‡
__USE_LARGEFILE64


154 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

155 
	`__n⁄nuŒ
 ((2));

164 #i‚de‡
__USE_FILE_OFFSET64


165 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

167 #ifde‡
__REDIRECT


168 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

169 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

171 
	#¸ót
 
¸ót64


	)

174 #ifde‡
__USE_LARGEFILE64


175 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

178 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

179 && !
deföed
 
__USE_POSIX
))

188 
	#F_ULOCK
 0

	)

189 
	#F_LOCK
 1

	)

190 
	#F_TLOCK
 2

	)

191 
	#F_TEST
 3

	)

193 #i‚de‡
__USE_FILE_OFFSET64


194 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

196 #ifde‡
__REDIRECT


197 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

199 
	#lockf
 
lockf64


	)

202 #ifde‡
__USE_LARGEFILE64


203 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

207 #ifde‡
__USE_XOPEN2K


210 #i‚de‡
__USE_FILE_OFFSET64


211 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

212 
__advi£
Ë
__THROW
;

214 #ifde‡
__REDIRECT_NTH


215 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

216 
__off64_t
 
__Àn
, 
__advi£
),

217 
posix_Ádvi£64
);

219 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

222 #ifde‡
__USE_LARGEFILE64


223 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

224 
__advi£
Ë
__THROW
;

232 #i‚de‡
__USE_FILE_OFFSET64


233 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

235 #ifde‡
__REDIRECT


236 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

237 
__off64_t
 
__Àn
),

238 
posix_ÁŒoˇã64
);

240 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

243 #ifde‡
__USE_LARGEFILE64


244 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

250 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
 \

251 && 
deföed
 
__va_¨g_∑ck_Àn


252 
	~<bôs/f˙é2.h
>

255 
__END_DECLS


	@/usr/include/poll.h

1 
	~<sys/pﬁl.h
>

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	~<bôs/±hªadty≥s.h
>

29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/w‹dsize.h
>

36 
	mPTHREAD_CREATE_JOINABLE
,

37 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

38 
	mPTHREAD_CREATE_DETACHED


39 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

46 
	mPTHREAD_MUTEX_TIMED_NP
,

47 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

48 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

49 
	mPTHREAD_MUTEX_ADAPTIVE_NP


50 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


52 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

53 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

54 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

55 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


57 #ifde‡
__USE_GNU


59 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


64 #ifde‡
__USE_XOPEN2K


68 
	mPTHREAD_MUTEX_STALLED
,

69 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

70 
	mPTHREAD_MUTEX_ROBUST
,

71 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


76 #ifde‡
__USE_UNIX98


80 
	mPTHREAD_PRIO_NONE
,

81 
	mPTHREAD_PRIO_INHERIT
,

82 
	mPTHREAD_PRIO_PROTECT


88 #i‡
__WORDSIZE
 == 64

89 
	#PTHREAD_MUTEX_INITIALIZER
 \

90 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

91 #ifde‡
__USE_GNU


92 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 0 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

114 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


117 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

120 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 
	#PTHREAD_RWLOCK_INITIALIZER
 \

125 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 #ifde‡
__USE_GNU


127 #i‡
__WORDSIZE
 == 64

128 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

130 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

132 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


133 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

134 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

135 0, 0, 0, 0 } }

	)

137 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

138 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

139 0 } }

	)

149 
	mPTHREAD_INHERIT_SCHED
,

150 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

151 
	mPTHREAD_EXPLICIT_SCHED


152 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

159 
	mPTHREAD_SCOPE_SYSTEM
,

160 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

161 
	mPTHREAD_SCOPE_PROCESS


162 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

169 
	mPTHREAD_PROCESS_PRIVATE
,

170 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

171 
	mPTHREAD_PROCESS_SHARED


172 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

178 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

182 
	s_±hªad_˛ónup_buf„r


184 (*
	m__routöe
) (*);

185 *
	m__¨g
;

186 
	m__ˇn˚…y≥
;

187 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

193 
	mPTHREAD_CANCEL_ENABLE
,

194 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

195 
	mPTHREAD_CANCEL_DISABLE


196 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

200 
	mPTHREAD_CANCEL_DEFERRED
,

201 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

202 
	mPTHREAD_CANCEL_ASYNCHRONOUS


203 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

205 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

209 
	#PTHREAD_ONCE_INIT
 0

	)

212 #ifde‡
__USE_XOPEN2K


216 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

220 
__BEGIN_DECLS


225 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

226 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

227 *(*
__°¨t_routöe
) (*),

228 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

234 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

242 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

244 #ifde‡
__USE_GNU


247 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

255 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

256 
__c⁄°
 
time•ec
 *
__ab°ime
);

263 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

267 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

270 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

278 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1));

285 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

286 *
__dëach°©e
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

290 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

291 
__dëach°©e
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

297 
size_t
 *
__gu¨dsize
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

302 
size_t
 
__gu¨dsize
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


308 
__©å
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

313 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

314 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


315 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


319 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


328 
__©å
, *
__ª°ri˘
 
__öhîô
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

333 
__öhîô
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

339 *
__ª°ri˘
 
__sc›e
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

343 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

347 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


348 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

349 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

355 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

356 *
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

360 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


361 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

367 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

368 
size_t
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1));

371 #ifde‡
__USE_XOPEN2K


373 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

374 **
__ª°ri˘
 
__°ackaddr
,

375 
size_t
 *
__ª°ri˘
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

381 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

382 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

385 #ifde‡
__USE_GNU


388 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

389 
size_t
 
__˝u£tsize
,

390 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

395 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

404 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

405 
__THROW
 
	`__n⁄nuŒ
 ((2));

413 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

414 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

415 
__THROW
 
	`__n⁄nuŒ
 ((3));

418 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

419 *
__ª°ri˘
 
__pﬁicy
,

420 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

424 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

425 
__THROW
;

428 #ifde‡
__USE_GNU


430 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

431 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

435 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, 
__c⁄°
 *
__«me
)

436 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 #ifde‡
__USE_UNIX98


442 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

445 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

448 #ifde‡
__USE_GNU


453 
	$±hªad_yõld
 (Ë
__THROW
;

458 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

459 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

460 
__THROW
 
	`__n⁄nuŒ
 ((3));

463 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

464 
˝u_£t_t
 *
__˝u£t
)

465 
__THROW
 
	`__n⁄nuŒ
 ((3));

478 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

479 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

490 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

494 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

497 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

502 
	`±hªad_ã°ˇn˚l
 ();

511 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

512 
__mask_was_ßved
;

513 } 
__ˇn˚l_jmp_buf
[1];

514 *
__∑d
[4];

515 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

518 #i‚de‡
__˛ónup_f˘_©åibuã


519 
	#__˛ónup_f˘_©åibuã


	)

524 
	s__±hªad_˛ónup_‰ame


526 (*
__ˇn˚l_routöe
) (*);

527 *
__ˇn˚l_¨g
;

528 
__do_ô
;

529 
__ˇn˚l_ty≥
;

532 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


533 #ifde‡
__˝lu•lus


535 ˛as†
	c__±hªad_˛ónup_˛ass


537 (*
__ˇn˚l_routöe
) (*);

538 *
__ˇn˚l_¨g
;

539 
__do_ô
;

540 
__ˇn˚l_ty≥
;

542 
public
:

543 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

544 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

545 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

546 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

547 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

548 &
__ˇn˚l_ty≥
); 
	}
}

549 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

559 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

561 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

565 
	#±hªad_˛ónup_p›
(
execuã
) \

566 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

567 } 0)

	)

569 #ifde‡
__USE_GNU


573 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

575 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

576 
__˛‰ame
.
	`__de„r
 ()

	)

581 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

582 
__˛‰ame
.
	`__ª°‹e
 (); \

583 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

584 } 0)

	)

591 
__exã∫_ölöe
 

592 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

594 i‡(
__‰ame
->
__do_ô
)

595 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

596 
	}
}

605 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

607 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

608 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

609 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

610 .
__do_ô
 = 1 };

	)

614 
	#±hªad_˛ónup_p›
(
execuã
) \

615 
__˛‰ame
.
__do_ô
 = (
execuã
); \

616 } 0)

	)

618 #ifde‡
__USE_GNU


622 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

624 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

625 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

626 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

627 .
__do_ô
 = 1 }; \

628 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

629 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

634 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

635 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

636 
__˛‰ame
.
__do_ô
 = (
execuã
); \

637 } 0)

	)

648 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

650 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

651 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

652 *
__ˇn˚l_¨g
 = (
¨g
); \

653 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

654 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

655 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

657 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

658 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

662 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 dÿ{

	)

664 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

665 
__˛ónup_f˘_©åibuã
;

669 
	#±hªad_˛ónup_p›
(
execuã
) \

672 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

673 i‡(
execuã
) \

674 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

675 } 0)

	)

676 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

677 
__˛ónup_f˘_©åibuã
;

679 #ifde‡
__USE_GNU


683 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

685 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

686 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

687 *
__ˇn˚l_¨g
 = (
¨g
); \

688 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

689 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

690 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

692 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

693 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

697 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

698 dÿ{

	)

699 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

700 
__˛ónup_f˘_©åibuã
;

705 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

708 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

709 i‡(
execuã
) \

710 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

711 
	}
} 0)

	)

712 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

713 
__˛ónup_f˘_©åibuã
;

717 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

718 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

719 #i‚de‡
SHARED


720 
	`__©åibuã__
 ((
__wók__
))

726 
__jmp_buf_èg
;

727 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

733 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

734 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

735 
__THROW
 
	`__n⁄nuŒ
 ((1));

738 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

739 
__THROW
 
	`__n⁄nuŒ
 ((1));

742 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

743 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

746 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

747 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

749 #ifde‡
__USE_XOPEN2K


751 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

752 
__c⁄°
 
time•ec
 *
__ª°ri˘


753 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

757 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

758 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

762 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

763 
__ª°ri˘
 
__muãx
,

764 *
__ª°ri˘
 
__¥io˚ûög
)

765 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

769 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

770 
__¥io˚ûög
,

771 *
__ª°ri˘
 
__ﬁd_˚ûög
)

772 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

775 #ifde‡
__USE_XOPEN2K8


777 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

778 
__THROW
 
	`__n⁄nuŒ
 ((1));

779 #ifde‡
__USE_GNU


780 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1));

794 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

795 
__THROW
 
	`__n⁄nuŒ
 ((1));

798 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

799 
__ª°ri˘
 
__©å
,

800 *
__ª°ri˘
 
__psh¨ed
)

801 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

804 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

805 
__psh¨ed
)

806 
__THROW
 
	`__n⁄nuŒ
 ((1));

808 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


810 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


811 
__©å
, *
__ª°ri˘
 
__köd
)

812 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

817 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

822 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

823 
__ª°ri˘
 
__©å
,

824 *
__ª°ri˘
 
__¥Ÿocﬁ
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

829 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

830 
__¥Ÿocﬁ
)

831 
__THROW
 
	`__n⁄nuŒ
 ((1));

834 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

835 
__ª°ri˘
 
__©å
,

836 *
__ª°ri˘
 
__¥io˚ûög
)

837 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

840 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

841 
__¥io˚ûög
)

842 
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifde‡
__USE_XOPEN2K


846 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

847 *
__robu°√ss
)

848 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

849 #ifde‡
__USE_GNU


850 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

851 *
__robu°√ss
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__robu°√ss
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #ifde‡
__USE_GNU


860 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

861 
__robu°√ss
)

862 
__THROW
 
	`__n⁄nuŒ
 ((1));

867 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


872 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

873 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


874 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

881 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

882 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

885 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

886 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

888 #ifde‡
__USE_XOPEN2K


890 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

891 
__c⁄°
 
time•ec
 *
__ª°ri˘


892 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

896 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

897 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

900 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

901 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

903 #ifde‡
__USE_XOPEN2K


905 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

906 
__c⁄°
 
time•ec
 *
__ª°ri˘


907 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

911 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

912 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

922 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1));

926 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

927 
__ª°ri˘
 
__©å
,

928 *
__ª°ri˘
 
__psh¨ed
)

929 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

932 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

933 
__psh¨ed
)

934 
__THROW
 
	`__n⁄nuŒ
 ((1));

937 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

938 
__ª°ri˘
 
__©å
,

939 *
__ª°ri˘
 
__¥ef
)

940 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

943 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

944 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

952 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

953 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


954 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

961 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

962 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

966 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

974 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

975 
	`__n⁄nuŒ
 ((1, 2));

984 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

985 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

986 
__c⁄°
 
time•ec
 *
__ª°ri˘


987 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

992 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

993 
__THROW
 
	`__n⁄nuŒ
 ((1));

996 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1001 
__ª°ri˘
 
__©å
,

1002 *
__ª°ri˘
 
__psh¨ed
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1006 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1007 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1009 #ifde‡
__USE_XOPEN2K


1011 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1012 
__ª°ri˘
 
__©å
,

1013 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1014 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1017 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1018 
__˛ockid_t
 
__˛ock_id
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 #ifde‡
__USE_XOPEN2K


1028 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1040 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1041 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1045 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1052 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1053 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1054 
__©å
, 
__cou¡
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1058 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1059 
__THROW
 
	`__n⁄nuŒ
 ((1));

1062 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1063 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1068 
__THROW
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1072 
__THROW
 
	`__n⁄nuŒ
 ((1));

1075 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1076 
__ª°ri˘
 
__©å
,

1077 *
__ª°ri˘
 
__psh¨ed
)

1078 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1081 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1082 
__psh¨ed
)

1083 
__THROW
 
	`__n⁄nuŒ
 ((1));

1095 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1096 (*
__de°r_fun˘i⁄
) (*))

1097 
__THROW
 
	`__n⁄nuŒ
 ((1));

1100 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1103 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1106 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1107 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1110 #ifde‡
__USE_XOPEN2K


1112 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1113 
__˛ockid_t
 *
__˛ock_id
)

1114 
__THROW
 
	`__n⁄nuŒ
 ((2));

1129 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1130 (*
__∑ª¡
) (),

1131 (*
__chûd
Ë()Ë
__THROW
;

1134 #ifde‡
__USE_EXTERN_INLINES


1136 
__exã∫_ölöe
 

1137 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1139  
__thªad1
 =
__thªad2
;

1140 
	}
}

1143 
	g__END_DECLS


	@/usr/include/sched.h

21 #i‚def 
_SCHED_H


22 
	#_SCHED_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

32 
	#__√ed_time_t


	)

33 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

73 #ifde‡
__USE_POSIX199309


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

79 
	~<bôs/sigöfo.h
>

84 (*
	t__sigh™dÀr_t
) ();

89 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

90 
__THROW
;

91 #ifde‡
__USE_GNU


92 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

99 
__BEGIN_NAMESPACE_STD


100 #ifde‡
__USE_BSD


101 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

102 
__THROW
;

105 #ifde‡
__REDIRECT_NTH


106 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

107 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

108 
__sysv_sig«l
);

110 
	#sig«l
 
__sysv_sig«l


	)

113 
__END_NAMESPACE_STD


115 #ifde‡
__USE_XOPEN


118 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

119 
__THROW
;

125 #ifde‡
__USE_POSIX


126 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

129 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


133 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

136 
__BEGIN_NAMESPACE_STD


138 
	$øi£
 (
__sig
Ë
__THROW
;

139 
__END_NAMESPACE_STD


141 #ifde‡
__USE_SVID


143 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

144 
__THROW
;

145 
	$gsig«l
 (
__sig
Ë
__THROW
;

148 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


150 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 #ifde‡
__USE_XOPEN2K


155 
	`psigöfo
 (
__c⁄°
 
sigöfo_t
 *
__pöfo
, __c⁄° *
__s
);

168 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

170 #ifde‡
__FAVOR_BSD


173 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

175 #ifde‡
__USE_XOPEN


176 #ifde‡
__GNUC__


177 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

180 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

186 #ifde‡
__USE_BSD


193 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

196 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

202 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

206 #ifde‡
__USE_MISC


207 
	#NSIG
 
_NSIG


	)

210 #ifde‡
__USE_GNU


211 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

215 #ifde‡
__USE_BSD


216 
__sigh™dÀr_t
 
	tsig_t
;

219 #ifde‡
__USE_POSIX


222 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

231 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

234 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

235 
__THROW
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__USE_GNU


239 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

242 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

243 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

247 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

252 
	~<bôs/siga˘i⁄.h
>

255 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

256 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

263 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

266 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

267 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

270 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

277 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

278 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__USE_POSIX199309


285 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

286 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

293 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

294 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

295 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

296 
	`__n⁄nuŒ
 ((1));

300 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

301 
__THROW
;

306 #ifde‡
__USE_BSD


310 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

311 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

314 
	ssigvec


316 
__sigh™dÀr_t
 
sv_h™dÀr
;

317 
sv_mask
;

319 
sv_Êags
;

320 
	#sv_⁄°ack
 
sv_Êags


	)

324 
	#SV_ONSTACK
 (1 << 0)

	)

325 
	#SV_INTERRUPT
 (1 << 1)

	)

326 
	#SV_RESETHAND
 (1 << 2)

	)

334 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

335 
sigvec
 *
__ovec
Ë
__THROW
;

339 
	~<bôs/sigc⁄ãxt.h
>

342 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

347 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


348 
	#__√ed_size_t


	)

349 
	~<°ddef.h
>

354 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

356 
	~<bôs/sig°ack.h
>

357 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


359 
	~<sys/uc⁄ãxt.h
>

365 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

366 
__THROW
 
__©åibuã_dïªˇãd__
;

370 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

371 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

375 #ifde‡
__USE_XOPEN_EXTENDED


379 
	$sighﬁd
 (
__sig
Ë
__THROW
;

382 
	$sigªl£
 (
__sig
Ë
__THROW
;

385 
	$sigign‹e
 (
__sig
Ë
__THROW
;

388 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

391 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


394 
	~<bôs/±hªadty≥s.h
>

395 
	~<bôs/sigthªad.h
>

402 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

404 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

408 
__END_DECLS


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

144 #ifde‡
__USE_GNU


145 
	#SEEK_DATA
 3

	)

146 
	#SEEK_HOLE
 4

	)

150 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


152 
	#P_tmpdú
 "/tmp"

	)

165 
	~<bôs/°dio_lim.h
>

169 
_IO_FILE
 *
°dö
;

170 
_IO_FILE
 *
°dout
;

171 
_IO_FILE
 *
°dîr
;

173 
	#°dö
 
°dö


	)

174 
	#°dout
 
°dout


	)

175 
	#°dîr
 
°dîr


	)

177 
__BEGIN_NAMESPACE_STD


179 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

181 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

182 
__END_NAMESPACE_STD


184 #ifde‡
__USE_ATFILE


186 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

187 
__c⁄°
 *
__√w
Ë
__THROW
;

190 
__BEGIN_NAMESPACE_STD


195 #i‚de‡
__USE_FILE_OFFSET64


196 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

198 #ifde‡
__REDIRECT


199 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

201 
	#tmpfûe
 
tmpfûe64


	)

205 #ifde‡
__USE_LARGEFILE64


206 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

210 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

211 
__END_NAMESPACE_STD


213 #ifde‡
__USE_MISC


216 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

220 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


228 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

229 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

233 
__BEGIN_NAMESPACE_STD


238 
	`f˛o£
 (
FILE
 *
__°ªam
);

243 
	`fÊush
 (
FILE
 *
__°ªam
);

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_MISC


253 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

256 #ifde‡
__USE_GNU


263 
	`f˛o£Æl
 ();

267 
__BEGIN_NAMESPACE_STD


268 #i‚de‡
__USE_FILE_OFFSET64


273 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

274 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

279 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

280 
__c⁄°
 *
__ª°ri˘
 
__modes
,

281 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

283 #ifde‡
__REDIRECT


284 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

285 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

286 
__wur
;

287 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

288 
__c⁄°
 *
__ª°ri˘
 
__modes
,

289 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

290 
__wur
;

292 
	#f›í
 
f›í64


	)

293 
	#‰e›í
 
‰e›í64


	)

296 
__END_NAMESPACE_STD


297 #ifde‡
__USE_LARGEFILE64


298 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

299 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

300 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

301 
__c⁄°
 *
__ª°ri˘
 
__modes
,

302 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

305 #ifdef 
__USE_POSIX


307 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

310 #ifdef 
__USE_GNU


313 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

314 
__c⁄°
 *
__ª°ri˘
 
__modes
,

315 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

318 #ifde‡
__USE_XOPEN2K8


320 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

321 
__THROW
 
__wur
;

326 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

330 
__BEGIN_NAMESPACE_STD


333 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

337 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

338 
__modes
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifdef 
__USE_BSD


344 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

345 
size_t
 
__size
Ë
__THROW
;

348 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

352 
__BEGIN_NAMESPACE_STD


357 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

358 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

363 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

365 
	$•rötf
 (*
__ª°ri˘
 
__s
,

366 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

372 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

373 
_G_va_li°
 
__¨g
);

378 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

380 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

381 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

382 
__END_NAMESPACE_STD


384 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


385 
__BEGIN_NAMESPACE_C99


387 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

388 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

389 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

391 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

392 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

393 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

394 
__END_NAMESPACE_C99


397 #ifde‡
__USE_GNU


400 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

401 
_G_va_li°
 
__¨g
)

402 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

403 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

404 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

405 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

406 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

407 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

408 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

411 #ifde‡
__USE_XOPEN2K8


418 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

419 
_G_va_li°
 
__¨g
)

420 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

421 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

422 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

426 
__BEGIN_NAMESPACE_STD


431 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

432 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

439 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

440 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

442 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

443 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

444 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

445 #ifde‡
__REDIRECT


449 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

450 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

451 
__isoc99_fsˇnf
Ë
__wur
;

452 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

453 
__isoc99_sˇnf
Ë
__wur
;

454 
	`__REDIRECT_NTH
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

455 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

456 
__isoc99_ssˇnf
);

458 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

459 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

460 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

461 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

462 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

463 
	#fsˇnf
 
__isoc99_fsˇnf


	)

464 
	#sˇnf
 
__isoc99_sˇnf


	)

465 
	#ssˇnf
 
__isoc99_ssˇnf


	)

469 
__END_NAMESPACE_STD


471 #ifdef 
__USE_ISOC99


472 
__BEGIN_NAMESPACE_C99


477 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

478 
_G_va_li°
 
__¨g
)

479 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

485 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

486 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

489 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

490 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

491 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

493 #i‡!
deföed
 
__USE_GNU
 \

494 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

495 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

496 #ifde‡
__REDIRECT


500 
	`__REDIRECT
 (
vfsˇnf
,

501 (
FILE
 *
__ª°ri˘
 
__s
,

502 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

503 
__isoc99_vfsˇnf
)

504 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

505 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

506 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

507 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

508 
	`__REDIRECT_NTH
 (
vssˇnf
,

509 (
__c⁄°
 *
__ª°ri˘
 
__s
,

510 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

511 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

512 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

514 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

515 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

516 
_G_va_li°
 
__¨g
Ë
__wur
;

517 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

518 
_G_va_li°
 
__¨g
Ë
__wur
;

519 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

520 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

521 
_G_va_li°
 
__¨g
Ë
__THROW
;

522 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

523 
	#vsˇnf
 
__isoc99_vsˇnf


	)

524 
	#vssˇnf
 
__isoc99_vssˇnf


	)

528 
__END_NAMESPACE_C99


532 
__BEGIN_NAMESPACE_STD


537 
	`fgëc
 (
FILE
 *
__°ªam
);

538 
	`gëc
 (
FILE
 *
__°ªam
);

544 
	`gëch¨
 ();

545 
__END_NAMESPACE_STD


549 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

551 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


556 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

557 
	`gëch¨_u∆ocked
 ();

560 #ifde‡
__USE_MISC


567 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

571 
__BEGIN_NAMESPACE_STD


579 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

586 
	`putch¨
 (
__c
);

587 
__END_NAMESPACE_STD


591 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

593 #ifde‡
__USE_MISC


600 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


608 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

609 
	`putch¨_u∆ocked
 (
__c
);

613 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

614 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

616 
	`gëw
 (
FILE
 *
__°ªam
);

619 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

623 
__BEGIN_NAMESPACE_STD


628 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

629 
__wur
;

636 *
	$gës
 (*
__s
Ë
__wur
;

637 
__END_NAMESPACE_STD


639 #ifde‡
__USE_GNU


646 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

647 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

651 #ifdef 
__USE_XOPEN2K8


662 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

663 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

664 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

665 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

675 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

676 
size_t
 *
__ª°ri˘
 
__n
,

677 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

681 
__BEGIN_NAMESPACE_STD


686 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

692 
	`puts
 (
__c⁄°
 *
__s
);

699 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

706 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

707 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

712 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

713 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

714 
__END_NAMESPACE_STD


716 #ifde‡
__USE_GNU


723 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

724 
FILE
 *
__ª°ri˘
 
__°ªam
);

727 #ifde‡
__USE_MISC


734 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

735 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

736 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

737 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

741 
__BEGIN_NAMESPACE_STD


746 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

751 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

756 
	`ªwöd
 (
FILE
 *
__°ªam
);

757 
__END_NAMESPACE_STD


764 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


765 #i‚de‡
__USE_FILE_OFFSET64


770 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

775 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

777 #ifde‡
__REDIRECT


778 
	`__REDIRECT
 (
f£eko
,

779 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

780 
f£eko64
);

781 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

783 
	#f£eko
 
f£eko64


	)

784 
	#·ñlo
 
·ñlo64


	)

789 
__BEGIN_NAMESPACE_STD


790 #i‚de‡
__USE_FILE_OFFSET64


795 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

800 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

802 #ifde‡
__REDIRECT


803 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

804 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

805 
	`__REDIRECT
 (
f£ços
,

806 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

808 
	#fgëpos
 
fgëpos64


	)

809 
	#f£ços
 
f£ços64


	)

812 
__END_NAMESPACE_STD


814 #ifde‡
__USE_LARGEFILE64


815 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

816 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

817 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

818 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

821 
__BEGIN_NAMESPACE_STD


823 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

825 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

827 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

828 
__END_NAMESPACE_STD


830 #ifde‡
__USE_MISC


832 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

833 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

838 
__BEGIN_NAMESPACE_STD


843 
	`≥º‹
 (
__c⁄°
 *
__s
);

844 
__END_NAMESPACE_STD


850 
	~<bôs/sys_îæi°.h
>

853 #ifdef 
__USE_POSIX


855 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

858 #ifde‡
__USE_MISC


860 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

864 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

865 
deföed
 
__USE_MISC
)

870 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

876 
	`p˛o£
 (
FILE
 *
__°ªam
);

880 #ifdef 
__USE_POSIX


882 *
	$˘îmid
 (*
__s
Ë
__THROW
;

886 #ifde‡
__USE_XOPEN


888 *
	`cu£rid
 (*
__s
);

892 #ifdef 
__USE_GNU


893 
ob°ack
;

896 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

897 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

898 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

899 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

901 
_G_va_li°
 
__¨gs
)

902 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

906 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


910 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

914 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

917 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

920 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


924 
	#__√ed_gë›t


	)

925 
	~<gë›t.h
>

930 #ifde‡
__USE_EXTERN_INLINES


931 
	~<bôs/°dio.h
>

933 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


934 
	~<bôs/°dio2.h
>

936 #ifde‡
__LDBL_COMPAT


937 
	~<bôs/°dio-ldbl.h
>

940 
__END_DECLS


	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@/usr/include/syscall.h

1 
	~<sys/sysˇŒ.h
>

	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

315 #ifde‡
__USE_GNU


316 
	#SEEK_DATA
 3

	)

317 
	#SEEK_HOLE
 4

	)

321 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


323 
	#L_SET
 
SEEK_SET


	)

324 
	#L_INCR
 
SEEK_CUR


	)

325 
	#L_XTND
 
SEEK_END


	)

334 #i‚de‡
__USE_FILE_OFFSET64


335 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

337 #ifde‡
__REDIRECT_NTH


338 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

339 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

340 
l£ek64
);

342 
	#l£ek
 
l£ek64


	)

345 #ifde‡
__USE_LARGEFILE64


346 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

347 
__THROW
;

354 
	`˛o£
 (
__fd
);

361 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

367 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

369 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


370 #i‚de‡
__USE_FILE_OFFSET64


377 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

378 
__off_t
 
__off£t
Ë
__wur
;

385 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

386 
__off_t
 
__off£t
Ë
__wur
;

388 #ifde‡
__REDIRECT


389 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

390 
__off64_t
 
__off£t
),

391 
¥ód64
Ë
__wur
;

392 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

393 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

394 
pwrôe64
Ë
__wur
;

396 
	#¥ód
 
¥ód64


	)

397 
	#pwrôe
 
pwrôe64


	)

401 #ifde‡
__USE_LARGEFILE64


405 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

406 
__off64_t
 
__off£t
Ë
__wur
;

409 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

410 
__off64_t
 
__off£t
Ë
__wur
;

418 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

420 #ifde‡
__USE_GNU


423 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

433 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

445 
	`¶ìp
 (
__£c⁄ds
);

447 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

448 || 
deföed
 
__USE_BSD


453 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

454 
__THROW
;

461 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

470 
	`∑u£
 ();

474 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

475 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

477 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


479 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

484 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

485 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

489 #ifde‡
__USE_ATFILE


492 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

493 
__gid_t
 
__group
, 
__Êag
)

494 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

498 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


502 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

512 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

514 #ifdef 
__USE_GNU


518 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

521 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

522 || 
deföed
 
__USE_BSD


526 *
	$gëwd
 (*
__buf
)

527 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

532 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

535 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

537 #ifde‡
__USE_GNU


540 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

544 **
__ívú⁄
;

545 #ifde‡
__USE_GNU


546 **
ívú⁄
;

552 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

553 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

555 #ifde‡
__USE_XOPEN2K8


558 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

559 
__THROW
 
	`__n⁄nuŒ
 ((2));

564 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

575 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

580 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

585 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

586 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

588 #ifde‡
__USE_GNU


591 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

592 *
__c⁄°
 
__ívp
[])

593 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

597 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


599 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

604 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

610 
	~<bôs/c⁄‚ame.h
>

613 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

614 
__THROW
 
	`__n⁄nuŒ
 ((1));

617 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

620 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

622 #ifdef 
__USE_POSIX2


624 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

629 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

632 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

636 #i‚de‡
__FAVOR_BSD


637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

639 #ifde‡
__REDIRECT_NTH


640 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

642 
	#gëpgΩ
 
__gëpgid


	)

647 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


649 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

656 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

658 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


669 #i‚de‡
__FAVOR_BSD


673 
	$£çgΩ
 (Ë
__THROW
;

678 #ifde‡
__REDIRECT_NTH


679 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

681 
	#£çgΩ
 
£çgid


	)

690 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

692 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


694 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

698 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

701 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

704 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

707 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

712 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

714 #ifdef 
__USE_GNU


716 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

723 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


728 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

731 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


733 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

740 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

742 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


745 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

748 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


750 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

753 #ifde‡
__USE_GNU


756 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

757 
__THROW
;

761 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

762 
__THROW
;

766 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

767 
__THROW
;

771 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

772 
__THROW
;

779 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

781 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

782 || 
deföed
 
__USE_BSD


787 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

793 *
	$ây«me
 (
__fd
Ë
__THROW
;

797 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

802 
	$ißây
 (
__fd
Ë
__THROW
;

804 #i‡
deföed
 
__USE_BSD
 \

805 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

808 
	$ây¶Ÿ
 (Ë
__THROW
;

813 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

814 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

816 #ifde‡
__USE_ATFILE


819 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

820 
__c⁄°
 *
__to
, 
__Êags
)

821 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

824 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


826 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

827 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

832 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

833 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

834 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

837 #ifde‡
__USE_ATFILE


839 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

840 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

843 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

844 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

845 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

849 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_ATFILE


853 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

854 
__THROW
 
	`__n⁄nuŒ
 ((2));

858 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

862 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

865 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

872 *
	`gëlogö
 ();

873 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


880 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

883 #ifdef 
__USE_BSD


885 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

889 #ifdef 
__USE_POSIX2


893 
	#__√ed_gë›t


	)

894 
	~<gë›t.h
>

898 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


902 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

906 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

909 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

910 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

914 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

920 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

922 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

929 
	$vh™gup
 (Ë
__THROW
;

932 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

940 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

941 
size_t
 
__off£t
, 
__sˇÀ
)

942 
__THROW
 
	`__n⁄nuŒ
 ((1));

948 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

952 *
	$gëu£rshñl
 (Ë
__THROW
;

953 
	$ídu£rshñl
 (Ë
__THROW
;

954 
	$£tu£rshñl
 (Ë
__THROW
;

960 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

964 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

967 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

971 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

975 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


980 
	`fsync
 (
__fd
);

984 #ifde‡
__USE_GNU


987 
	$syncfs
 (
__fd
Ë
__THROW
;

991 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


994 
	`gëho°id
 ();

997 
	$sync
 (Ë
__THROW
;

1000 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


1003 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

1008 
	$gëdèbÀsize
 (Ë
__THROW
;

1014 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1017 #i‚de‡
__USE_FILE_OFFSET64


1018 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1021 #ifde‡
__REDIRECT_NTH


1022 
	`__REDIRECT_NTH
 (
åunˇã
,

1023 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1024 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1026 
	#åunˇã
 
åunˇã64


	)

1029 #ifde‡
__USE_LARGEFILE64


1030 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1031 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1036 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1039 #i‚de‡
__USE_FILE_OFFSET64


1040 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1042 #ifde‡
__REDIRECT_NTH


1043 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1044 
·runˇã64
Ë
__wur
;

1046 
	#·runˇã
 
·runˇã64


	)

1049 #ifde‡
__USE_LARGEFILE64


1050 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1056 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1057 || 
deföed
 
__USE_MISC


1061 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1067 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1071 #ifde‡
__USE_MISC


1082 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1087 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1099 
	#F_ULOCK
 0

	)

1100 
	#F_LOCK
 1

	)

1101 
	#F_TLOCK
 2

	)

1102 
	#F_TEST
 3

	)

1104 #i‚de‡
__USE_FILE_OFFSET64


1105 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1107 #ifde‡
__REDIRECT


1108 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1109 
lockf64
Ë
__wur
;

1111 
	#lockf
 
lockf64


	)

1114 #ifde‡
__USE_LARGEFILE64


1115 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1120 #ifde‡
__USE_GNU


1125 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1126 (
__exãnsi⁄__
 \

1127 ({ 
__ªsu…
; \

1128 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1129 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1130 
__ªsu…
; 
	}
}))

	)

1133 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1136 
fd©async
 (
__fûdes
);

1142 #ifdef 
__USE_XOPEN


1144 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1145 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1149 
	$í¸y±
 (*
__libc_block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1156 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1157 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1163 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


1165 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1170 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1171 
	~<bôs/uni°d.h
>

1174 
__END_DECLS


	@/usr/include/utime.h

23 #i‚def 
_UTIME_H


24 
	#_UTIME_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


33 
	#__√ed_time_t


	)

34 
	~<time.h
>

38 
	sutimbuf


40 
__time_t
 
	ma˘ime
;

41 
__time_t
 
	mmodtime
;

46 
	$utime
 (
__c⁄°
 *
__fûe
,

47 
__c⁄°
 
utimbuf
 *
__fûe_times
)

48 
__THROW
 
	`__n⁄nuŒ
 ((1));

50 
__END_DECLS


	@/usr/include/zlib.h

31 #i‚de‡
ZLIB_H


32 
	#ZLIB_H


	)

34 
	~"zc⁄f.h
"

36 #ifde‡
__˝lu•lus


40 
	#ZLIB_VERSION
 "1.2.3.4"

	)

41 
	#ZLIB_VERNUM
 0x1234

	)

42 
	#ZLIB_VER_MAJOR
 1

	)

43 
	#ZLIB_VER_MINOR
 2

	)

44 
	#ZLIB_VER_REVISION
 3

	)

80 
voidpf
 (*
	tÆloc_func
Ë
	tOF
((
	tvoidpf
 
	t›aque
, 
	tuI¡
 
	tôems
, uI¡ 
	tsize
));

81 (*
‰ì_func
Ë
	tOF
((
	tvoidpf
 
	t›aque
, voidp‡
	taddªss
));

83 
öã∫Æ_°©e
;

85 
	sz_°ªam_s
 {

86 
Byãf
 *
√xt_ö
;

87 
uI¡
 
avaû_ö
;

88 
uL⁄g
 
tŸÆ_ö
;

90 
Byãf
 *
√xt_out
;

91 
uI¡
 
avaû_out
;

92 
uL⁄g
 
tŸÆ_out
;

94 *
msg
;

95 
öã∫Æ_°©e
 
FAR
 *
°©e
;

97 
Æloc_func
 
zÆloc
;

98 
‰ì_func
 
z‰ì
;

99 
voidpf
 
›aque
;

101 
d©a_ty≥
;

102 
uL⁄g
 
adÀr
;

103 
uL⁄g
 
ª£rved
;

104 } 
	tz_°ªam
;

106 
z_°ªam
 
	tFAR
 *
	tz_°ªamp
;

112 
	sgz_hódî_s
 {

113 
ãxt
;

114 
uL⁄g
 
time
;

115 
xÊags
;

116 
os
;

117 
Byãf
 *
exåa
;

118 
uI¡
 
exåa_Àn
;

119 
uI¡
 
exåa_max
;

120 
Byãf
 *
«me
;

121 
uI¡
 
«me_max
;

122 
Byãf
 *
commít
;

123 
uI¡
 
comm_max
;

124 
h¸c
;

125 
d⁄e
;

127 } 
	tgz_hódî
;

129 
gz_hódî
 
	tFAR
 *
	tgz_hódîp
;

165 
	#Z_NO_FLUSH
 0

	)

166 
	#Z_PARTIAL_FLUSH
 1

	)

167 
	#Z_SYNC_FLUSH
 2

	)

168 
	#Z_FULL_FLUSH
 3

	)

169 
	#Z_FINISH
 4

	)

170 
	#Z_BLOCK
 5

	)

171 
	#Z_TREES
 6

	)

174 
	#Z_OK
 0

	)

175 
	#Z_STREAM_END
 1

	)

176 
	#Z_NEED_DICT
 2

	)

177 
	#Z_ERRNO
 (-1)

	)

178 
	#Z_STREAM_ERROR
 (-2)

	)

179 
	#Z_DATA_ERROR
 (-3)

	)

180 
	#Z_MEM_ERROR
 (-4)

	)

181 
	#Z_BUF_ERROR
 (-5)

	)

182 
	#Z_VERSION_ERROR
 (-6)

	)

187 
	#Z_NO_COMPRESSION
 0

	)

188 
	#Z_BEST_SPEED
 1

	)

189 
	#Z_BEST_COMPRESSION
 9

	)

190 
	#Z_DEFAULT_COMPRESSION
 (-1)

	)

193 
	#Z_FILTERED
 1

	)

194 
	#Z_HUFFMAN_ONLY
 2

	)

195 
	#Z_RLE
 3

	)

196 
	#Z_FIXED
 4

	)

197 
	#Z_DEFAULT_STRATEGY
 0

	)

200 
	#Z_BINARY
 0

	)

201 
	#Z_TEXT
 1

	)

202 
	#Z_ASCII
 
Z_TEXT


	)

203 
	#Z_UNKNOWN
 2

	)

206 
	#Z_DEFLATED
 8

	)

209 
	#Z_NULL
 0

	)

211 
	#zlib_vîsi⁄
 
	`zlibVîsi⁄
()

	)

216 
ZEXTERN
 c⁄° * 
ZEXPORT
 
zlibVîsi⁄
 
OF
(());

246 
ZEXTERN
 
ZEXPORT
 
deÊ©e
 
OF
((
z_°ªamp
 
°rm
, 
Êush
));

351 
ZEXTERN
 
ZEXPORT
 
deÊ©eEnd
 
OF
((
z_°ªamp
 
°rm
));

390 
ZEXTERN
 
ZEXPORT
 
öÊ©e
 
OF
((
z_°ªamp
 
°rm
, 
Êush
));

498 
ZEXTERN
 
ZEXPORT
 
öÊ©eEnd
 
OF
((
z_°ªamp
 
°rm
));

574 
ZEXTERN
 
ZEXPORT
 
deÊ©eSëDi˘i⁄¨y
 
OF
((
z_°ªamp
 
°rm
,

575 c⁄° 
Byãf
 *
di˘i⁄¨y
,

576 
uI¡
 
di˘Lígth
));

613 
ZEXTERN
 
ZEXPORT
 
deÊ©eC›y
 
OF
((
z_°ªamp
 
de°
,

614 
z_°ªamp
 
sour˚
));

631 
ZEXTERN
 
ZEXPORT
 
deÊ©eRe£t
 
OF
((
z_°ªamp
 
°rm
));

642 
ZEXTERN
 
ZEXPORT
 
deÊ©eP¨ams
 
OF
((
z_°ªamp
 
°rm
,

643 
Àvñ
,

644 
°øãgy
));

663 
ZEXTERN
 
ZEXPORT
 
deÊ©eTu√
 
OF
((
z_°ªamp
 
°rm
,

664 
good_Àngth
,

665 
max_œzy
,

666 
ni˚_Àngth
,

667 
max_chaö
));

680 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
deÊ©eBound
 
OF
((
z_°ªamp
 
°rm
,

681 
uL⁄g
 
sour˚Lí
));

690 
ZEXTERN
 
ZEXPORT
 
deÊ©ePrime
 
OF
((
z_°ªamp
 
°rm
,

691 
bôs
,

692 
vÆue
));

706 
ZEXTERN
 
ZEXPORT
 
deÊ©eSëHódî
 
OF
((
z_°ªamp
 
°rm
,

707 
gz_hódîp
 
hód
));

777 
ZEXTERN
 
ZEXPORT
 
öÊ©eSëDi˘i⁄¨y
 
OF
((
z_°ªamp
 
°rm
,

778 c⁄° 
Byãf
 *
di˘i⁄¨y
,

779 
uI¡
 
di˘Lígth
));

799 
ZEXTERN
 
ZEXPORT
 
öÊ©eSync
 
OF
((
z_°ªamp
 
°rm
));

814 
ZEXTERN
 
ZEXPORT
 
öÊ©eC›y
 
OF
((
z_°ªamp
 
de°
,

815 
z_°ªamp
 
sour˚
));

830 
ZEXTERN
 
ZEXPORT
 
öÊ©eRe£t
 
OF
((
z_°ªamp
 
°rm
));

840 
ZEXTERN
 
ZEXPORT
 
öÊ©eRe£t2
 
OF
((
z_°ªamp
 
°rm
,

841 
wödowBôs
));

852 
ZEXTERN
 
ZEXPORT
 
öÊ©ePrime
 
OF
((
z_°ªamp
 
°rm
,

853 
bôs
,

854 
vÆue
));

873 
ZEXTERN
 
ZEXPORT
 
öÊ©eM¨k
 
OF
((
z_°ªamp
 
°rm
));

901 
ZEXTERN
 
ZEXPORT
 
öÊ©eGëHódî
 
OF
((
z_°ªamp
 
°rm
,

902 
gz_hódîp
 
hód
));

963 (*
ö_func
Ë
	tOF
((
	tFAR
 *, FAR * FAR *));

964 (*
out_func
Ë
	tOF
((
	tFAR
 *, FAR *, ));

966 
ZEXTERN
 
ZEXPORT
 
öÊ©eBack
 
OF
((
z_°ªamp
 
°rm
,

967 
ö_func
 
ö
, 
FAR
 *
ö_desc
,

968 
out_func
 
out
, 
FAR
 *
out_desc
));

1035 
ZEXTERN
 
ZEXPORT
 
öÊ©eBackEnd
 
OF
((
z_°ªamp
 
°rm
));

1043 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
zlibCompûeFœgs
 
OF
(());

1095 
ZEXTERN
 
ZEXPORT
 
com¥ess
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1096 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
));

1110 
ZEXTERN
 
ZEXPORT
 
com¥ess2
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1111 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
,

1112 
Àvñ
));

1126 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
com¥essBound
 
OF
((uL⁄g 
sour˚Lí
));

1133 
ZEXTERN
 
ZEXPORT
 
uncom¥ess
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1134 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
));

1152 
voidp
 
	tgzFûe
;

1172 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gzd›í
 
OF
((
fd
, c⁄° *
mode
));

1185 
ZEXTERN
 
ZEXPORT
 
gz£ç¨ams
 
OF
((
gzFûe
 
fûe
, 
Àvñ
, 
°øãgy
));

1193 
ZEXTERN
 
ZEXPORT
 
gzªad
 
OF
((
gzFûe
 
fûe
, 
voidp
 
buf
, 
Àn
));

1201 
ZEXTERN
 
ZEXPORT
 
gzwrôe
 
OF
((
gzFûe
 
fûe
,

1202 
voidpc
 
buf
, 
Àn
));

1209 
ZEXTERN
 
ZEXPORTVA
 
gz¥ötf
 
OF
((
gzFûe
 
fûe
, c⁄° *
f‹m©
, ...));

1222 
ZEXTERN
 
ZEXPORT
 
gzputs
 
OF
((
gzFûe
 
fûe
, c⁄° *
s
));

1229 
ZEXTERN
 * 
ZEXPORT
 
gzgës
 
OF
((
gzFûe
 
fûe
, *
buf
, 
Àn
));

1238 
ZEXTERN
 
ZEXPORT
 
gzputc
 
OF
((
gzFûe
 
fûe
, 
c
));

1244 
ZEXTERN
 
ZEXPORT
 
gzgëc
 
OF
((
gzFûe
 
fûe
));

1250 
ZEXTERN
 
ZEXPORT
 
gzungëc
 
OF
((
c
, 
gzFûe
 
fûe
));

1260 
ZEXTERN
 
ZEXPORT
 
gzÊush
 
OF
((
gzFûe
 
fûe
, 
Êush
));

1289 
ZEXTERN
 
ZEXPORT
 
gzªwöd
 
OF
((
gzFûe
 
fûe
));

1306 
ZEXTERN
 
ZEXPORT
 
gzeof
 
OF
((
gzFûe
 
fûe
));

1312 
ZEXTERN
 
ZEXPORT
 
gzdúe˘
 
OF
((
gzFûe
 
fûe
));

1318 
ZEXTERN
 
ZEXPORT
 
gz˛o£
 
OF
((
gzFûe
 
fûe
));

1326 
ZEXTERN
 c⁄° * 
ZEXPORT
 
gzîr‹
 
OF
((
gzFûe
 
fûe
, *
î∫um
));

1338 
ZEXTERN
 
ZEXPORT
 
gz˛óªº
 
OF
((
gzFûe
 
fûe
));

1353 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32
 
OF
((uL⁄g 
adÀr
, c⁄° 
Byãf
 *
buf
, 
uI¡
 
Àn
));

1379 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32
 
OF
((uL⁄g 
¸c
, c⁄° 
Byãf
 *
buf
, 
uI¡
 
Àn
));

1411 
ZEXTERN
 
ZEXPORT
 
deÊ©eInô_
 
OF
((
z_°ªamp
 
°rm
, 
Àvñ
,

1412 c⁄° *
vîsi⁄
, 
°ªam_size
));

1413 
ZEXTERN
 
ZEXPORT
 
öÊ©eInô_
 
OF
((
z_°ªamp
 
°rm
,

1414 c⁄° *
vîsi⁄
, 
°ªam_size
));

1415 
ZEXTERN
 
ZEXPORT
 
deÊ©eInô2_
 
OF
((
z_°ªamp
 
°rm
, 
Àvñ
, 
mëhod
,

1416 
wödowBôs
, 
memLevñ
,

1417 
°øãgy
, c⁄° *
vîsi⁄
,

1418 
°ªam_size
));

1419 
ZEXTERN
 
ZEXPORT
 
öÊ©eInô2_
 
OF
((
z_°ªamp
 
°rm
, 
wödowBôs
,

1420 c⁄° *
vîsi⁄
, 
°ªam_size
));

1421 
ZEXTERN
 
ZEXPORT
 
öÊ©eBackInô_
 
OF
((
z_°ªamp
 
°rm
, 
wödowBôs
,

1422 
FAR
 *
wödow
,

1423 c⁄° *
vîsi⁄
,

1424 
°ªam_size
));

1425 
	#deÊ©eInô
(
°rm
, 
Àvñ
) \

1426 
	`deÊ©eInô_
((
°rm
), (
Àvñ
), 
ZLIB_VERSION
, (
z_°ªam
))

	)

1427 
	#öÊ©eInô
(
°rm
) \

1428 
	`öÊ©eInô_
((
°rm
), 
ZLIB_VERSION
, (
z_°ªam
))

	)

1429 
	#deÊ©eInô2
(
°rm
, 
Àvñ
, 
mëhod
, 
wödowBôs
, 
memLevñ
, 
°øãgy
) \

1430 
	`deÊ©eInô2_
((
°rm
),(
Àvñ
),(
mëhod
),(
wödowBôs
),(
memLevñ
),\

1431 (
°øãgy
), 
ZLIB_VERSION
, (
z_°ªam
))

	)

1432 
	#öÊ©eInô2
(
°rm
, 
wödowBôs
) \

1433 
	`öÊ©eInô2_
((
°rm
), (
wödowBôs
), 
ZLIB_VERSION
, (
z_°ªam
))

	)

1434 
	#öÊ©eBackInô
(
°rm
, 
wödowBôs
, 
wödow
) \

1435 
	`öÊ©eBackInô_
((
°rm
), (
wödowBôs
), (
wödow
), \

1436 
ZLIB_VERSION
, (
z_°ªam
))

	)

1438 #i‡
deföed
(
_LARGEFILE64_SOURCE
)

1439 
	#z_off64_t
 
off64_t


	)

1441 #i‡
_FILE_OFFSET_BITS
 == 64

1442 
	#z_off64_t
 
off_t


	)

1446 #i‡
deföed
(
_LARGEFILE64_SOURCE
Ë|| 
_FILE_OFFSET_BITS
 == 64

1447 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í64
 
OF
((const *, const *));

1448 
ZEXTERN
 
z_off64_t
 
ZEXPORT
 
gz£ek64
 
OF
((
gzFûe
, z_off64_t, ));

1449 
ZEXTERN
 
z_off64_t
 
ZEXPORT
 
gzãŒ64
 
OF
((
gzFûe
));

1450 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off64_t
));

1451 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off64_t
));

1454 #i‡!
deföed
(
ZLIB_INTERNAL
Ë&& 
_FILE_OFFSET_BITS
 == 64

1455 
	#gz›í
 
gz›í64


	)

1456 
	#gz£ek
 
gz£ek64


	)

1457 
	#gzãŒ
 
gzãŒ64


	)

1458 
	#adÀr32_comböe
 
adÀr32_comböe64


	)

1459 
	#¸c32_comböe
 
¸c32_comböe64


	)

1460 #i‚de‡
_LARGEFILE64_SOURCE


1461 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í64
 
OF
((const *, const *));

1462 
ZEXTERN
 
off_t
 
ZEXPORT
 
gz£ek64
 
OF
((
gzFûe
, off_t, ));

1463 
ZEXTERN
 
off_t
 
ZEXPORT
 
gzãŒ64
 
OF
((
gzFûe
));

1464 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe64
 
OF
((uL⁄g, uL⁄g, 
off_t
));

1465 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe64
 
OF
((uL⁄g, uL⁄g, 
off_t
));

1468 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í
 
OF
((const *, const *));

1469 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gz£ek
 
OF
((
gzFûe
, z_off_t, ));

1470 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzãŒ
 
OF
((
gzFûe
));

1471 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1472 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1475 #i‡!
deföed
(
ZUTIL_H
Ë&& !deföed(
NO_DUMMY_DECL
)

1476 
	söã∫Æ_°©e
 {
dummy
;};

1479 
ZEXTERN
 c⁄° * 
ZEXPORT
 
zEº‹
 
OF
(());

1480 
ZEXTERN
 
ZEXPORT
 
öÊ©eSyncPoöt
 
OF
((
z_°ªamp
));

1481 
ZEXTERN
 c⁄° 
uL⁄gf
 * 
ZEXPORT
 
gë_¸c_èbÀ
 
OF
(());

1482 
ZEXTERN
 
ZEXPORT
 
öÊ©eUndîmöe
 
OF
((
z_°ªamp
, ));

1484 #ifde‡
__˝lu•lus


	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_POSIX


101 #unde‡
__USE_POSIX2


102 #unde‡
__USE_POSIX199309


103 #unde‡
__USE_POSIX199506


104 #unde‡
__USE_XOPEN


105 #unde‡
__USE_XOPEN_EXTENDED


106 #unde‡
__USE_UNIX98


107 #unde‡
__USE_XOPEN2K


108 #unde‡
__USE_XOPEN2KXSI


109 #unde‡
__USE_XOPEN2K8


110 #unde‡
__USE_XOPEN2K8XSI


111 #unde‡
__USE_LARGEFILE


112 #unde‡
__USE_LARGEFILE64


113 #unde‡
__USE_FILE_OFFSET64


114 #unde‡
__USE_BSD


115 #unde‡
__USE_SVID


116 #unde‡
__USE_MISC


117 #unde‡
__USE_ATFILE


118 #unde‡
__USE_GNU


119 #unde‡
__USE_REENTRANT


120 #unde‡
__USE_FORTIFY_LEVEL


121 #unde‡
__FAVOR_BSD


122 #unde‡
__KERNEL_STRICT_NAMES


126 #i‚de‡
_LOOSE_KERNEL_NAMES


127 
	#__KERNEL_STRICT_NAMES


	)

131 
	#__USE_ANSI
 1

	)

140 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


141 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

142 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

144 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

149 #i‡
deföed
 
_BSD_SOURCE
 && \

150 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

151 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

152 
	#__FAVOR_BSD
 1

	)

156 #ifde‡
_GNU_SOURCE


157 #unde‡
_ISOC95_SOURCE


158 
	#_ISOC95_SOURCE
 1

	)

159 #unde‡
_ISOC99_SOURCE


160 
	#_ISOC99_SOURCE
 1

	)

161 #unde‡
_POSIX_SOURCE


162 
	#_POSIX_SOURCE
 1

	)

163 #unde‡
_POSIX_C_SOURCE


164 
	#_POSIX_C_SOURCE
 200809L

	)

165 #unde‡
_XOPEN_SOURCE


166 
	#_XOPEN_SOURCE
 700

	)

167 #unde‡
_XOPEN_SOURCE_EXTENDED


168 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

169 #unde‡
_LARGEFILE64_SOURCE


170 
	#_LARGEFILE64_SOURCE
 1

	)

171 #unde‡
_BSD_SOURCE


172 
	#_BSD_SOURCE
 1

	)

173 #unde‡
_SVID_SOURCE


174 
	#_SVID_SOURCE
 1

	)

175 #unde‡
_ATFILE_SOURCE


176 
	#_ATFILE_SOURCE
 1

	)

181 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

182 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

183 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

184 
	#_BSD_SOURCE
 1

	)

185 
	#_SVID_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

194 
	#__USE_ISOC99
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

200 
	#__USE_ISOC95
 1

	)

205 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

206 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

207 
	#_POSIX_SOURCE
 1

	)

208 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

209 
	#_POSIX_C_SOURCE
 2

	)

210 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

211 
	#_POSIX_C_SOURCE
 199506L

	)

212 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

213 
	#_POSIX_C_SOURCE
 200112L

	)

215 
	#_POSIX_C_SOURCE
 200809L

	)

217 
	#__USE_POSIX_IMPLICITLY
 1

	)

220 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


221 
	#__USE_POSIX
 1

	)

224 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


225 
	#__USE_POSIX2
 1

	)

228 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

229 
	#__USE_POSIX199309
 1

	)

232 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

233 
	#__USE_POSIX199506
 1

	)

236 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

237 
	#__USE_XOPEN2K
 1

	)

238 #unde‡
__USE_ISOC95


239 
	#__USE_ISOC95
 1

	)

240 #unde‡
__USE_ISOC99


241 
	#__USE_ISOC99
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

245 
	#__USE_XOPEN2K8
 1

	)

246 #unde‡
_ATFILE_SOURCE


247 
	#_ATFILE_SOURCE
 1

	)

250 #ifdef 
_XOPEN_SOURCE


251 
	#__USE_XOPEN
 1

	)

252 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

253 
	#__USE_XOPEN_EXTENDED
 1

	)

254 
	#__USE_UNIX98
 1

	)

255 #unde‡
_LARGEFILE_SOURCE


256 
	#_LARGEFILE_SOURCE
 1

	)

257 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

258 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

259 
	#__USE_XOPEN2K8
 1

	)

260 
	#__USE_XOPEN2K8XSI
 1

	)

262 
	#__USE_XOPEN2K
 1

	)

263 
	#__USE_XOPEN2KXSI
 1

	)

264 #unde‡
__USE_ISOC95


265 
	#__USE_ISOC95
 1

	)

266 #unde‡
__USE_ISOC99


267 
	#__USE_ISOC99
 1

	)

270 #ifde‡
_XOPEN_SOURCE_EXTENDED


271 
	#__USE_XOPEN_EXTENDED
 1

	)

276 #ifde‡
_LARGEFILE_SOURCE


277 
	#__USE_LARGEFILE
 1

	)

280 #ifde‡
_LARGEFILE64_SOURCE


281 
	#__USE_LARGEFILE64
 1

	)

284 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

285 
	#__USE_FILE_OFFSET64
 1

	)

288 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


289 
	#__USE_MISC
 1

	)

292 #ifdef 
_BSD_SOURCE


293 
	#__USE_BSD
 1

	)

296 #ifdef 
_SVID_SOURCE


297 
	#__USE_SVID
 1

	)

300 #ifdef 
_ATFILE_SOURCE


301 
	#__USE_ATFILE
 1

	)

304 #ifdef 
_GNU_SOURCE


305 
	#__USE_GNU
 1

	)

308 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


309 
	#__USE_REENTRANT
 1

	)

312 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

313 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

314 #i‡
_FORTIFY_SOURCE
 > 1

315 
	#__USE_FORTIFY_LEVEL
 2

	)

317 
	#__USE_FORTIFY_LEVEL
 1

	)

320 
	#__USE_FORTIFY_LEVEL
 0

	)

324 
	~<bôs/¥edefs.h
>

327 
	#__STDC_ISO_10646__
 200009L

	)

335 #unde‡
__GNU_LIBRARY__


336 
	#__GNU_LIBRARY__
 6

	)

340 
	#__GLIBC__
 2

	)

341 
	#__GLIBC_MINOR__
 15

	)

343 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

344 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

347 #i‡
deföed
 
__GNUC__
 \

348 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

349 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

350 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

351 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

355 #i‚de‡
__ASSEMBLER__


356 #i‚de‡
_SYS_CDEFS_H


357 
	~<sys/cdefs.h
>

362 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


363 
	#__USE_LARGEFILE
 1

	)

364 
	#__USE_LARGEFILE64
 1

	)

370 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

371 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

372 && 
deföed
 
	g__exã∫_ölöe


373 
	#__USE_EXTERN_INLINES
 1

	)

378 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

379 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

380 && 
deföed
 
	g__exã∫_ölöe


381 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

389 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
);

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

148 
	#_IO_FLAGS2_NOCLOSE
 32

	)

149 
	#_IO_FLAGS2_CLOEXEC
 64

	)

153 
	#_IO_SKIPWS
 01

	)

154 
	#_IO_LEFT
 02

	)

155 
	#_IO_RIGHT
 04

	)

156 
	#_IO_INTERNAL
 010

	)

157 
	#_IO_DEC
 020

	)

158 
	#_IO_OCT
 040

	)

159 
	#_IO_HEX
 0100

	)

160 
	#_IO_SHOWBASE
 0200

	)

161 
	#_IO_SHOWPOINT
 0400

	)

162 
	#_IO_UPPERCASE
 01000

	)

163 
	#_IO_SHOWPOS
 02000

	)

164 
	#_IO_SCIENTIFIC
 04000

	)

165 
	#_IO_FIXED
 010000

	)

166 
	#_IO_UNITBUF
 020000

	)

167 
	#_IO_STDIO
 040000

	)

168 
	#_IO_DONT_CLOSE
 0100000

	)

169 
	#_IO_BOOLALPHA
 0200000

	)

172 
_IO_jump_t
; 
	g_IO_FILE
;

175 #ifde‡
_IO_MTSAFE_IO


176 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

177 
	~<bôs/°dio-lock.h
>

182 
	t_IO_lock_t
;

188 
	s_IO_m¨kî
 {

189 
_IO_m¨kî
 *
	m_√xt
;

190 
_IO_FILE
 *
	m_sbuf
;

194 
	m_pos
;

196 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

197 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

198 
	mpublic
:

199 
°ªamm¨kî
(
°ªambuf
 *
sb
);

200 ~
°ªamm¨kî
();

201 
ßvög
(Ë{  
	m_•os
 == -2; }

202 
dñè
(
°ªamm¨kî
&);

203 
dñè
();

208 
	e__codecvt_ªsu…


210 
	m__codecvt_ok
,

211 
	m__codecvt_∑πül
,

212 
	m__codecvt_îr‹
,

213 
	m__codecvt_noc⁄v


216 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


219 
	s_IO_codecvt


221 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

222 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

223 
	m__mb°©e_t
 *,

224 c⁄° 
	mwch¨_t
 *,

225 c⁄° 
	mwch¨_t
 *,

226 c⁄° 
	mwch¨_t
 **, *,

228 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

229 
	m__mb°©e_t
 *, *,

231 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

232 
	m__mb°©e_t
 *,

234 c⁄° **, 
	mwch¨_t
 *,

235 
	mwch¨_t
 *, wchar_t **);

236 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

237 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

238 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

239 c⁄° *, c⁄° *, 
	m_IO_size_t
);

240 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

242 
_IO_ic⁄v_t
 
	m__cd_ö
;

243 
_IO_ic⁄v_t
 
	m__cd_out
;

247 
	s_IO_wide_d©a


249 
wch¨_t
 *
	m_IO_ªad_±r
;

250 
wch¨_t
 *
	m_IO_ªad_íd
;

251 
wch¨_t
 *
	m_IO_ªad_ba£
;

252 
wch¨_t
 *
	m_IO_wrôe_ba£
;

253 
wch¨_t
 *
	m_IO_wrôe_±r
;

254 
wch¨_t
 *
	m_IO_wrôe_íd
;

255 
wch¨_t
 *
	m_IO_buf_ba£
;

256 
wch¨_t
 *
	m_IO_buf_íd
;

258 
wch¨_t
 *
	m_IO_ßve_ba£
;

259 
wch¨_t
 *
	m_IO_backup_ba£
;

261 
wch¨_t
 *
	m_IO_ßve_íd
;

263 
__mb°©e_t
 
	m_IO_°©e
;

264 
__mb°©e_t
 
	m_IO_œ°_°©e
;

265 
_IO_codecvt
 
	m_codecvt
;

267 
wch¨_t
 
	m_sh‹tbuf
[1];

269 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

273 
	s_IO_FILE
 {

274 
	m_Êags
;

275 
	#_IO_fûe_Êags
 
_Êags


	)

279 * 
	m_IO_ªad_±r
;

280 * 
	m_IO_ªad_íd
;

281 * 
	m_IO_ªad_ba£
;

282 * 
	m_IO_wrôe_ba£
;

283 * 
	m_IO_wrôe_±r
;

284 * 
	m_IO_wrôe_íd
;

285 * 
	m_IO_buf_ba£
;

286 * 
	m_IO_buf_íd
;

288 *
	m_IO_ßve_ba£
;

289 *
	m_IO_backup_ba£
;

290 *
	m_IO_ßve_íd
;

292 
_IO_m¨kî
 *
	m_m¨kîs
;

294 
_IO_FILE
 *
	m_chaö
;

296 
	m_fûío
;

298 
	m_blksize
;

300 
	m_Êags2
;

302 
_IO_off_t
 
	m_ﬁd_off£t
;

304 
	#__HAVE_COLUMN


	)

306 
	m_cur_cﬁumn
;

307 sig√d 
	m_vèbÀ_off£t
;

308 
	m_sh‹tbuf
[1];

312 
_IO_lock_t
 *
	m_lock
;

313 #ifde‡
_IO_USE_OLD_IO_FILE


316 
	s_IO_FILE_com∂ëe


318 
_IO_FILE
 
	m_fûe
;

320 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

321 
_IO_off64_t
 
	m_off£t
;

322 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


324 
_IO_codecvt
 *
	m_codecvt
;

325 
_IO_wide_d©a
 *
	m_wide_d©a
;

326 
_IO_FILE
 *
	m_‰ìªs_li°
;

327 *
	m_‰ìªs_buf
;

328 
size_t
 
	m_‰ìªs_size
;

330 *
	m__∑d1
;

331 *
	m__∑d2
;

332 *
	m__∑d3
;

333 *
	m__∑d4
;

334 
size_t
 
	m__∑d5
;

336 
	m_mode
;

338 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

342 #i‚de‡
__˝lu•lus


343 
_IO_FILE
 
	t_IO_FILE
;

346 
	g_IO_FILE_∂us
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

349 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

350 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

351 #i‚de‡
_LIBC


352 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

353 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

354 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

356 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

357 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

358 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

366 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

374 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

375 
	tsize_t
 
	t__n
);

383 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

386 
	t__io_˛o£_‚
 (*
	t__cookõ
);

389 #ifde‡
_GNU_SOURCE


391 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

392 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

393 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

394 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

399 
__io_ªad_‚
 *
	mªad
;

400 
__io_wrôe_‚
 *
	mwrôe
;

401 
__io_£ek_‚
 *
	m£ek
;

402 
__io_˛o£_‚
 *
	m˛o£
;

403 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

404 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

406 
	g_IO_cookõ_fûe
;

409 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

410 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

414 #ifde‡
__˝lu•lus


418 
__undîÊow
 (
_IO_FILE
 *);

419 
__uÊow
 (
_IO_FILE
 *);

420 
__ovîÊow
 (
_IO_FILE
 *, );

421 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


422 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

423 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

424 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

427 #i‡ 
__GNUC__
 >= 3

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

430 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

433 
	#_IO_gëc_u∆ocked
(
_Â
) \

434 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

435 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

436 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

437 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

438 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

439 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

440 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

441 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

442 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

443 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

445 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


446 
	#_IO_gëwc_u∆ocked
(
_Â
) \

447 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

448 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

449 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

450 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

451 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

452 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

453 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

454 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

455 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

456 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

459 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

460 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

462 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

463 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

464 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

467 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

470 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

471 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

473 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

474 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

477 #ifde‡
_IO_MTSAFE_IO


478 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

479 
	#_IO_Êockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

481 
	#_IO_fu∆ockfûe
(
_Â
) \

482 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

484 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

485 
	#_IO_Êockfûe
(
_Â
Ë

	)

486 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

487 
	#_IO_·rylockfûe
(
_Â
Ë

	)

488 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

489 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

492 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

493 
_IO_va_li°
, *
__ª°ri˘
);

494 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

495 
_IO_va_li°
);

496 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

497 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

499 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

500 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

502 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

504 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


505 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

506 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

507 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

508 #i‡
__GNUC__
 >= 2

511 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


512 
	~<shlib-com∑t.h
>

513 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

514 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

515 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

516 c⁄° 
_IO_°dö_u£d
;

517 
wók_exã∫
 (
_IO_°dö_u£d
);

520 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


521 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

525 
	#_IO_fwide
(
__Â
, 
__mode
) \

526 ({ 
__ªsu…
 = (
__mode
); \

527 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

529 i‡((
__Â
)->
_mode
 == 0) \

531 (
__Â
)->
_mode
 = -1; \

532 
__ªsu…
 = (
__Â
)->
_mode
; \

534 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

535 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

537 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

538 
__ªsu…
; })

	)

541 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

542 
_IO_va_li°
, *
__ª°ri˘
);

543 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

544 
_IO_va_li°
);

545 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

546 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

549 #ifde‡
__LDBL_COMPAT


550 
	~<bôs/libio-ldbl.h
>

553 #ifde‡
__˝lu•lus


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/zconf.h

8 #i‚de‡
ZCONF_H


9 
	#ZCONF_H


	)

17 #ifde‡
Z_PREFIX


20 
	#_di°_code
 
z__di°_code


	)

21 
	#_Àngth_code
 
z__Àngth_code


	)

22 
	#_å_Æign
 
z__å_Æign


	)

23 
	#_å_Êush_block
 
z__å_Êush_block


	)

24 
	#_å_öô
 
z__å_öô


	)

25 
	#_å_°‹ed_block
 
z__å_°‹ed_block


	)

26 
	#_å_èŒy
 
z__å_èŒy


	)

27 
	#adÀr32
 
z_adÀr32


	)

28 
	#adÀr32_comböe
 
z_adÀr32_comböe


	)

29 
	#com¥ess
 
z_com¥ess


	)

30 
	#com¥ess2
 
z_com¥ess2


	)

31 
	#com¥essBound
 
z_com¥essBound


	)

32 
	#¸c32
 
z_¸c32


	)

33 
	#¸c32_comböe
 
z_¸c32_comböe


	)

34 
	#deÊ©e
 
z_deÊ©e


	)

35 
	#deÊ©eBound
 
z_deÊ©eBound


	)

36 
	#deÊ©eC›y
 
z_deÊ©eC›y


	)

37 
	#deÊ©eEnd
 
z_deÊ©eEnd


	)

38 
	#deÊ©eInô2_
 
z_deÊ©eInô2_


	)

39 
	#deÊ©eInô_
 
z_deÊ©eInô_


	)

40 
	#deÊ©eP¨ams
 
z_deÊ©eP¨ams


	)

41 
	#deÊ©ePrime
 
z_deÊ©ePrime


	)

42 
	#deÊ©eRe£t
 
z_deÊ©eRe£t


	)

43 
	#deÊ©eSëDi˘i⁄¨y
 
z_deÊ©eSëDi˘i⁄¨y


	)

44 
	#deÊ©eSëHódî
 
z_deÊ©eSëHódî


	)

45 
	#deÊ©eTu√
 
z_deÊ©eTu√


	)

46 
	#deÊ©e_c›yright
 
z_deÊ©e_c›yright


	)

47 
	#gë_¸c_èbÀ
 
z_gë_¸c_èbÀ


	)

48 
	#gz˛óªº
 
z_gz˛óªº


	)

49 
	#gz˛o£
 
z_gz˛o£


	)

50 
	#gzdúe˘
 
z_gzdúe˘


	)

51 
	#gzd›í
 
z_gzd›í


	)

52 
	#gzeof
 
z_gzeof


	)

53 
	#gzîr‹
 
z_gzîr‹


	)

54 
	#gzÊush
 
z_gzÊush


	)

55 
	#gzgëc
 
z_gzgëc


	)

56 
	#gzgës
 
z_gzgës


	)

57 
	#gz›í
 
z_gz›í


	)

58 
	#gz¥ötf
 
z_gz¥ötf


	)

59 
	#gzputc
 
z_gzputc


	)

60 
	#gzputs
 
z_gzputs


	)

61 
	#gzªad
 
z_gzªad


	)

62 
	#gzªwöd
 
z_gzªwöd


	)

63 
	#gz£ek
 
z_gz£ek


	)

64 
	#gz£ç¨ams
 
z_gz£ç¨ams


	)

65 
	#gzãŒ
 
z_gzãŒ


	)

66 
	#gzungëc
 
z_gzungëc


	)

67 
	#gzwrôe
 
z_gzwrôe


	)

68 
	#öÊ©e
 
z_öÊ©e


	)

69 
	#öÊ©eBack
 
z_öÊ©eBack


	)

70 
	#öÊ©eBackEnd
 
z_öÊ©eBackEnd


	)

71 
	#öÊ©eBackInô_
 
z_öÊ©eBackInô_


	)

72 
	#öÊ©eC›y
 
z_öÊ©eC›y


	)

73 
	#öÊ©eEnd
 
z_öÊ©eEnd


	)

74 
	#öÊ©eGëHódî
 
z_öÊ©eGëHódî


	)

75 
	#öÊ©eInô2_
 
z_öÊ©eInô2_


	)

76 
	#öÊ©eInô_
 
z_öÊ©eInô_


	)

77 
	#öÊ©ePrime
 
z_öÊ©ePrime


	)

78 
	#öÊ©eRe£t
 
z_öÊ©eRe£t


	)

79 
	#öÊ©eSëDi˘i⁄¨y
 
z_öÊ©eSëDi˘i⁄¨y


	)

80 
	#öÊ©eSync
 
z_öÊ©eSync


	)

81 
	#öÊ©eSyncPoöt
 
z_öÊ©eSyncPoöt


	)

82 
	#öÊ©e_c›yright
 
z_öÊ©e_c›yright


	)

83 
	#öÊ©e_Á°
 
z_öÊ©e_Á°


	)

84 
	#öÊ©e_èbÀ
 
z_öÊ©e_èbÀ


	)

85 
	#uncom¥ess
 
z_uncom¥ess


	)

86 
	#zEº‹
 
z_zEº‹


	)

87 
	#z_îrmsg
 
z_z_îrmsg


	)

88 
	#zˇŒoc
 
z_zˇŒoc


	)

89 
	#zc‰ì
 
z_zc‰ì


	)

90 
	#zlibCompûeFœgs
 
z_zlibCompûeFœgs


	)

91 
	#zlibVîsi⁄
 
z_zlibVîsi⁄


	)

94 
	#Byã
 
z_Byã


	)

95 
	#Byãf
 
z_Byãf


	)

96 
	#Æloc_func
 
z_Æloc_func


	)

97 
	#ch¨f
 
z_ch¨f


	)

98 
	#‰ì_func
 
z_‰ì_func


	)

99 
	#gzFûe
 
z_gzFûe


	)

100 
	#gz_hódî
 
z_gz_hódî


	)

101 
	#gz_hódîp
 
z_gz_hódîp


	)

102 
	#ö_func
 
z_ö_func


	)

103 
	#ötf
 
z_ötf


	)

104 
	#out_func
 
z_out_func


	)

105 
	#uI¡
 
z_uI¡


	)

106 
	#uI¡f
 
z_uI¡f


	)

107 
	#uL⁄g
 
z_uL⁄g


	)

108 
	#uL⁄gf
 
z_uL⁄gf


	)

109 
	#voidp
 
z_voidp


	)

110 
	#voidp
 
z_voidp


	)

111 
	#voidpc
 
z_voidpc


	)

112 
	#voidpc
 
z_voidpc


	)

113 
	#voidpf
 
z_voidpf


	)

114 
	#voidpf
 
z_voidpf


	)

115 
	#z_°ªam
 
z_z_°ªam


	)

116 
	#z_°ªamp
 
z_z_°ªamp


	)

119 
	#gz_hódî_s
 
z_gz_hódî_s


	)

120 
	#öã∫Æ_°©e
 
z_öã∫Æ_°©e


	)

121 
	#z_°ªam_s
 
z_z_°ªam_s


	)

125 #i‡
deföed
(
__MSDOS__
Ë&& !deföed(
MSDOS
)

126 
	#MSDOS


	)

128 #i‡(
deföed
(
OS_2
Ë|| deföed(
__OS2__
)Ë&& !deföed(
OS2
)

129 
	#OS2


	)

131 #i‡
deföed
(
_WINDOWS
Ë&& !deföed(
WINDOWS
)

132 
	#WINDOWS


	)

134 #i‡
deföed
(
_WIN32
Ë|| deföed(
_WIN32_WCE
Ë|| deföed(
__WIN32__
)

135 #i‚de‡
WIN32


136 
	#WIN32


	)

139 #i‡(
deföed
(
MSDOS
Ë|| deföed(
OS2
Ë|| deföed(
WINDOWS
)Ë&& !deföed(
WIN32
)

140 #i‡!
deföed
(
__GNUC__
Ë&& !deföed(
__FLAT__
Ë&& !deföed(
__386__
)

141 #i‚de‡
SYS16BIT


142 
	#SYS16BIT


	)

151 #ifde‡
SYS16BIT


152 
	#MAXSEG_64K


	)

154 #ifde‡
MSDOS


155 
	#UNALIGNED_OK


	)

158 #ifde‡
__STDC_VERSION__


159 #i‚de‡
STDC


160 
	#STDC


	)

162 #i‡
__STDC_VERSION__
 >= 199901L

163 #i‚de‡
STDC99


164 
	#STDC99


	)

168 #i‡!
deföed
(
STDC
Ë&& (deföed(
__STDC__
Ë|| deföed(
__˝lu•lus
))

169 
	#STDC


	)

171 #i‡!
deföed
(
STDC
Ë&& (deföed(
__GNUC__
Ë|| deföed(
__BORLANDC__
))

172 
	#STDC


	)

174 #i‡!
deföed
(
STDC
Ë&& (deföed(
MSDOS
Ë|| deföed(
WINDOWS
Ë|| deföed(
WIN32
))

175 
	#STDC


	)

177 #i‡!
deföed
(
STDC
Ë&& (deföed(
OS2
Ë|| deföed(
__HOS_AIX__
))

178 
	#STDC


	)

181 #i‡
deföed
(
__OS400__
Ë&& !deföed(
STDC
)

182 
	#STDC


	)

185 #i‚de‡
STDC


187 c⁄°

	)

192 #i‡
deföed
(
__MWERKS__
)||deföed(
≠∂ec
)||deföed(
THINK_C
)||deföed(
__SC__
)

193 
	#NO_DUMMY_DECL


	)

197 #i‚de‡
MAX_MEM_LEVEL


198 #ifde‡
MAXSEG_64K


199 
	#MAX_MEM_LEVEL
 8

	)

201 
	#MAX_MEM_LEVEL
 9

	)

210 #i‚de‡
MAX_WBITS


211 
	#MAX_WBITS
 15

	)

229 #i‚de‡
OF


230 #ifde‡
STDC


231 
	#OF
(
¨gs
Ë
	)
args

233 
	#OF
(
¨gs
Ë()

	)

243 #ifde‡
SYS16BIT


244 #i‡
deföed
(
M_I86SM
Ë|| deföed(
M_I86MM
)

246 
	#SMALL_MEDIUM


	)

247 #ifde‡
_MSC_VER


248 
	#FAR
 
_Ár


	)

250 
	#FAR
 
Ár


	)

253 #i‡(
deföed
(
__SMALL__
Ë|| deföed(
__MEDIUM__
))

255 
	#SMALL_MEDIUM


	)

256 #ifde‡
__BORLANDC__


257 
	#FAR
 
_Ár


	)

259 
	#FAR
 
Ár


	)

264 #i‡
deföed
(
WINDOWS
Ë|| deföed(
WIN32
)

268 #ifde‡
ZLIB_DLL


269 #i‡
deföed
(
WIN32
Ë&& (!deföed(
__BORLANDC__
) || (__BORLANDC__ >= 0x500))

270 #ifde‡
ZLIB_INTERNAL


271 
	#ZEXTERN
 
	`__de˛•ec
(
dŒexp‹t
)

	)

273 
	#ZEXTERN
 
	`__de˛•ec
(
dŒimp‹t
)

	)

281 #ifde‡
ZLIB_WINAPI


282 #ifde‡
FAR


283 #unde‡
FAR


285 
	~<wödows.h
>

288 
	#ZEXPORT
 
WINAPI


	)

289 #ifde‡
WIN32


290 
	#ZEXPORTVA
 
WINAPIV


	)

292 
	#ZEXPORTVA
 
FAR
 
CDECL


	)

297 #i‡
deföed
 (
__BEOS__
)

298 #ifde‡
ZLIB_DLL


299 #ifde‡
ZLIB_INTERNAL


300 
	#ZEXPORT
 
	`__de˛•ec
(
dŒexp‹t
)

	)

301 
	#ZEXPORTVA
 
	`__de˛•ec
(
dŒexp‹t
)

	)

303 
	#ZEXPORT
 
	`__de˛•ec
(
dŒimp‹t
)

	)

304 
	#ZEXPORTVA
 
	`__de˛•ec
(
dŒimp‹t
)

	)

309 #ifde‡
HAVE_VISIBILITY_PRAGMA


310 
	#ZEXTERN
 
	`__©åibuã__
((
	`visibûôy
 ("deÁu…"))Ë

	)

313 #i‚de‡
ZEXTERN


314 
	#ZEXTERN
 

	)

316 #i‚de‡
ZEXPORT


317 
	#ZEXPORT


	)

319 #i‚de‡
ZEXPORTVA


320 
	#ZEXPORTVA


	)

323 #i‚de‡
FAR


324 
	#FAR


	)

327 #i‡!
deföed
(
__MACTYPES__
)

328 
	tByã
;

330 
	tuI¡
;

331 
	tuL⁄g
;

333 #ifde‡
SMALL_MEDIUM


335 
	#Byãf
 
Byã
 
FAR


	)

337 
Byã
 
	tFAR
 
	tByãf
;

339 
	tFAR
 
	tch¨f
;

340 
	tFAR
 
	tötf
;

341 
uI¡
 
	tFAR
 
	tuI¡f
;

342 
uL⁄g
 
	tFAR
 
	tuL⁄gf
;

344 #ifde‡
STDC


345 c⁄° *
	tvoidpc
;

346 
	tFAR
 *
	tvoidpf
;

347 *
	tvoidp
;

349 
Byã
 c⁄° *
	tvoidpc
;

350 
Byã
 
	tFAR
 *
	tvoidpf
;

351 
Byã
 *
	tvoidp
;

354 
	~"zlibdefs.h
"

356 #ifde‡
_LARGEFILE64_SOURCE


357 
	~<sys/ty≥s.h
>

360 #i‚de‡
SEEK_SET


361 
	#SEEK_SET
 0

	)

362 
	#SEEK_CUR
 1

	)

363 
	#SEEK_END
 2

	)

365 #i‚de‡
z_off_t


366 
	#z_off_t
 

	)

369 #i‡
deföed
(
__OS400__
)

370 
	#NO_v¢¥ötf


	)

373 #i‡
deföed
(
__MVS__
)

374 
	#NO_v¢¥ötf


	)

378 #i‡
deföed
(
__MVS__
)

379 #¥agm®
m≠
(
deÊ©eInô_
,"DEIN")

380 #¥agm®
m≠
(
deÊ©eInô2_
,"DEIN2")

381 #¥agm®
m≠
(
deÊ©eEnd
,"DEEND")

382 #¥agm®
m≠
(
deÊ©eBound
,"DEBND")

383 #¥agm®
m≠
(
öÊ©eInô_
,"ININ")

384 #¥agm®
m≠
(
öÊ©eInô2_
,"ININ2")

385 #¥agm®
m≠
(
öÊ©eEnd
,"INEND")

386 #¥agm®
m≠
(
öÊ©eSync
,"INSY")

387 #¥agm®
m≠
(
öÊ©eSëDi˘i⁄¨y
,"INSEDI")

388 #¥agm®
m≠
(
com¥essBound
,"CMBND")

389 #¥agm®
m≠
(
öÊ©e_èbÀ
,"INTABL")

390 #¥agm®
m≠
(
öÊ©e_Á°
,"INFA")

391 #¥agm®
m≠
(
öÊ©e_c›yright
,"INCOPY")

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/zlibdefs.h

6 
	~<sys/ty≥s.h
>

7 
	~<uni°d.h
>

8 #ifde‡
VMS


9 
	~<unixio.h
>

11 #i‚de‡
z_off_t


12 
	#z_off_t
 
off_t


	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

60 
	m__GCONV_SWAP
 = 0x0004

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

68 
	g__gc⁄v_å™s_d©a
;

72 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 
	t__c⁄°
 **, __const *,

74 **, 
	tsize_t
 *, , );

77 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

80 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

81 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

85 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

86 
	t__gc⁄v_°ï_d©a
 *, *,

87 
	t__c⁄°
 *,

88 
	t__c⁄°
 **,

89 
	t__c⁄°
 *, **,

90 
	tsize_t
 *);

93 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

94 
	t__c⁄°
 *,

98 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

99 
	tsize_t
 *);

102 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

103 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

105 
	s__gc⁄v_å™s_d©a


108 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

109 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

110 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

111 *
__d©a
;

112 
__gc⁄v_å™s_d©a
 *
__√xt
;

117 
	s__gc⁄v_°ï


119 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

120 
__c⁄°
 *
__mod«me
;

122 
__cou¡î
;

124 *
__‰om_«me
;

125 *
__to_«me
;

127 
__gc⁄v_f˘
 
__f˘
;

128 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

129 
__gc⁄v_öô_f˘
 
__öô_f˘
;

130 
__gc⁄v_íd_f˘
 
__íd_f˘
;

134 
__mö_√eded_‰om
;

135 
__max_√eded_‰om
;

136 
__mö_√eded_to
;

137 
__max_√eded_to
;

140 
__°©eful
;

142 *
__d©a
;

147 
	s__gc⁄v_°ï_d©a


149 *
__outbuf
;

150 *
__outbu„nd
;

154 
__Êags
;

158 
__övoˇti⁄_cou¡î
;

162 
__öã∫Æ_u£
;

164 
__mb°©e_t
 *
__°©ï
;

165 
__mb°©e_t
 
__°©e
;

169 
__gc⁄v_å™s_d©a
 *
__å™s
;

174 
	s__gc⁄v_öfo


176 
size_t
 
__n°ïs
;

177 
__gc⁄v_°ï
 *
__°ïs
;

178 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

179 } *
	t__gc⁄v_t
;

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

323 
__THROW
 
__©åibuã_puª__
;

326 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

331 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

332 
__THROW
;

335 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

336 
__END_NAMESPACE_STD


338 #ifde‡
__USE_GNU


341 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

342 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

343 
__THROW
;

347 
__BEGIN_NAMESPACE_STD


350 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

354 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

358 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

362 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

363 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

364 
mb°©e_t
 *
__p
Ë
__THROW
;

367 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

368 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

371 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

372 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

373 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

375 
__END_NAMESPACE_STD


377 #ifde‡
__USE_EXTERN_INLINES


383 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

384 
__exã∫_ölöe
 
wöt_t


385 
	`__NTH
 (
	$btowc
 (
__c
))

386 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

387 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

389 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

390 
__exã∫_ölöe
 

391 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

393 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

395 
__exã∫_ölöe
 
size_t


396 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

397 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

398 {  (
__ps
 !
NULL


399 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

402 
__BEGIN_NAMESPACE_STD


405 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

406 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

407 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

411 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

412 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
__END_NAMESPACE_STD


417 #ifdef 
__USE_XOPEN2K8


420 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

421 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

422 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

426 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

427 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

428 
size_t
 
__nwc
, size_à
__Àn
,

429 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

434 #ifde‡
__USE_XOPEN


436 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

440 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

444 
__BEGIN_NAMESPACE_STD


447 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

448 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

449 
__END_NAMESPACE_STD


451 #ifde‡
__USE_ISOC99


452 
__BEGIN_NAMESPACE_C99


454 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

455 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

456 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

457 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

458 
__END_NAMESPACE_C99


462 
__BEGIN_NAMESPACE_STD


465 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

466 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

470 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

471 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

472 
__THROW
;

473 
__END_NAMESPACE_STD


475 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

476 
__BEGIN_NAMESPACE_C99


479 
__exãnsi⁄__


480 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

481 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

482 
__THROW
;

486 
__exãnsi⁄__


487 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

488 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

489 
__ba£
Ë
__THROW
;

490 
__END_NAMESPACE_C99


493 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


496 
__exãnsi⁄__


497 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

498 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

499 
__THROW
;

503 
__exãnsi⁄__


504 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

505 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

506 
__ba£
Ë
__THROW
;

509 #ifde‡
__USE_GNU


523 
	~<xloˇÀ.h
>

527 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

528 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

529 
__loˇÀ_t
 
__loc
Ë
__THROW
;

531 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

532 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

533 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

535 
__exãnsi⁄__


536 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

537 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

538 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

540 
__exãnsi⁄__


541 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

542 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

543 
__ba£
, 
__loˇÀ_t
 
__loc
)

544 
__THROW
;

546 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

547 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

548 
__THROW
;

550 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

551 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

552 
__THROW
;

554 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

555 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

556 
__loˇÀ_t
 
__loc
Ë
__THROW
;

560 #ifde‡
__USE_XOPEN2K8


563 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

564 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

569 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

570 
__THROW
;

577 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

580 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


581 
__BEGIN_NAMESPACE_STD


584 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

591 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

592 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

598 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

602 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

603 
__THROW
 ;

609 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

610 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

611 
__gnuc_va_li°
 
__¨g
)

617 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

618 
__gnuc_va_li°
 
__¨g
)

622 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

623 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

625 
__THROW
 ;

632 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

633 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

639 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

643 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

644 
__THROW
 ;

646 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

647 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

648 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

649 #ifde‡
__REDIRECT


653 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

654 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

655 
__isoc99_fwsˇnf
)

657 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_wsˇnf
)

660 
	`__REDIRECT_NTH
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

661 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

662 ...), 
__isoc99_swsˇnf
)

665 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

666 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

667 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

669 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

670 
__THROW
;

671 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

672 
	#wsˇnf
 
__isoc99_wsˇnf


	)

673 
	#swsˇnf
 
__isoc99_swsˇnf


	)

677 
__END_NAMESPACE_STD


680 #ifde‡
__USE_ISOC99


681 
__BEGIN_NAMESPACE_C99


686 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

687 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

688 
__gnuc_va_li°
 
__¨g
)

694 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

695 
__gnuc_va_li°
 
__¨g
)

698 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

699 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

700 
__gnuc_va_li°
 
__¨g
)

701 
__THROW
 ;

703 #i‡!
deföed
 
__USE_GNU
 \

704 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

705 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

706 #ifde‡
__REDIRECT


707 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

708 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

709 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

711 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

714 
	`__REDIRECT_NTH
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

715 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

716 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

719 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

720 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

721 
__gnuc_va_li°
 
__¨g
);

722 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

723 
__gnuc_va_li°
 
__¨g
);

724 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

725 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

727 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

728 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

729 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

733 
__END_NAMESPACE_C99


737 
__BEGIN_NAMESPACE_STD


742 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

743 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwch¨
 ();

756 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

757 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

771 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

772 
__FILE
 *
__ª°ri˘
 
__°ªam
);

778 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

779 
__FILE
 *
__ª°ri˘
 
__°ªam
);

786 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

787 
__END_NAMESPACE_STD


790 #ifde‡
__USE_GNU


798 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

799 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

807 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

815 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

824 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

834 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

835 
__FILE
 *
__ª°ri˘
 
__°ªam
);

843 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

844 
__FILE
 *
__ª°ri˘
 
__°ªam
);

848 
__BEGIN_NAMESPACE_C99


852 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

853 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

854 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

855 
__END_NAMESPACE_C99


857 #ifde‡
__USE_GNU


858 
	~<xloˇÀ.h
>

862 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

863 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

864 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

865 
__loˇÀ_t
 
__loc
Ë
__THROW
;

874 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


875 
	#__√ed_iswxxx


	)

876 
	~<w˘y≥.h
>

880 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


881 
	~<bôs/wch¨2.h
>

884 #ifde‡
__LDBL_COMPAT


885 
	~<bôs/wch¨-ldbl.h
>

888 
__END_DECLS


896 #unde‡
__√ed_mb°©e_t


897 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@
1
.
1
/usr/include
107
1847
asm/asm.c
asm/asm.h
asm/inst.c
asm/inst.h
emu/checkpoint.c
emu/checkpoint.h
emu/context.c
emu/context.h
emu/emu.c
emu/emu.h
emu/file-desc.c
emu/file-desc.h
emu/isa.c
emu/isa.h
emu/loader.c
emu/loader.h
emu/machine-ctrl.c
emu/machine-fp.c
emu/machine-rot.c
emu/machine-sse.c
emu/machine-sse2.c
emu/machine-sse3.c
emu/machine-sse4.c
emu/machine-std.c
emu/machine-str.c
emu/machine.c
emu/machine.h
emu/regs.c
emu/regs.h
emu/signal.c
emu/signal.h
emu/syscall.c
emu/syscall.h
emu/uinst.c
emu/uinst.h
timing/bpred.c
timing/bpred.h
timing/commit.c
timing/commit.h
timing/core.c
timing/core.h
timing/cpu.c
timing/cpu.h
timing/decode.c
timing/decode.h
timing/dispatch.c
timing/dispatch.h
timing/event-queue.c
timing/event-queue.h
timing/fetch-queue.c
timing/fetch-queue.h
timing/fetch.c
timing/fetch.h
timing/fu.c
timing/fu.h
timing/inst-queue.c
timing/inst-queue.h
timing/issue.c
timing/issue.h
timing/load-store-queue.c
timing/load-store-queue.h
timing/mem-config.c
timing/mem-config.h
timing/recover.c
timing/recover.h
timing/reg-file.c
timing/reg-file.h
timing/rob.c
timing/rob.h
timing/sched.c
timing/sched.h
timing/thread.c
timing/thread.h
timing/trace-cache.c
timing/trace-cache.h
timing/uop-queue.c
timing/uop-queue.h
timing/uop.c
timing/uop.h
timing/writeback.c
timing/writeback.h
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/poll.h
/usr/include/pthread.h
/usr/include/sched.h
/usr/include/signal.h
/usr/include/stdio.h
/usr/include/string.h
/usr/include/syscall.h
/usr/include/unistd.h
/usr/include/utime.h
/usr/include/zlib.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/time.h
/usr/include/xlocale.h
/usr/include/zconf.h
/usr/include/_G_config.h
/usr/include/zlibdefs.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
